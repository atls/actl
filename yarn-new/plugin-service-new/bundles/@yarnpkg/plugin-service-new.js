/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-service-new",
factory: function (require) {
"use strict";
var plugin = (() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
    get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
  }) : x)(function(x) {
    if (typeof require !== "undefined")
      return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + x + '" is not supported');
  });
  var __commonJS = (cb2, mod) => function __require2() {
    return mod || (0, cb2[__getOwnPropNames(cb2)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key2 of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key2) && key2 !== except)
          __defProp(to, key2, { get: () => from[key2], enumerable: !(desc = __getOwnPropDesc(from, key2)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // ../../../.yarn/cache/object-assign-npm-4.1.1-1004ad6dec-fcc6e4ea8c.zip/node_modules/object-assign/index.js
  var require_object_assign = __commonJS({
    "../../../.yarn/cache/object-assign-npm-4.1.1-1004ad6dec-fcc6e4ea8c.zip/node_modules/object-assign/index.js"(exports2, module2) {
      "use strict";
      var getOwnPropertySymbols = Object.getOwnPropertySymbols;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      var propIsEnumerable = Object.prototype.propertyIsEnumerable;
      function toObject(val) {
        if (val === null || val === void 0) {
          throw new TypeError("Object.assign cannot be called with null or undefined");
        }
        return Object(val);
      }
      function shouldUseNative() {
        try {
          if (!Object.assign) {
            return false;
          }
          var test1 = new String("abc");
          test1[5] = "de";
          if (Object.getOwnPropertyNames(test1)[0] === "5") {
            return false;
          }
          var test2 = {};
          for (var i2 = 0; i2 < 10; i2++) {
            test2["_" + String.fromCharCode(i2)] = i2;
          }
          var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
          });
          if (order2.join("") !== "0123456789") {
            return false;
          }
          var test3 = {};
          "abcdefghijklmnopqrst".split("").forEach(function(letter) {
            test3[letter] = letter;
          });
          if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
            return false;
          }
          return true;
        } catch (err2) {
          return false;
        }
      }
      module2.exports = shouldUseNative() ? Object.assign : function(target, source) {
        var from;
        var to = toObject(target);
        var symbols;
        for (var s = 1; s < arguments.length; s++) {
          from = Object(arguments[s]);
          for (var key2 in from) {
            if (hasOwnProperty.call(from, key2)) {
              to[key2] = from[key2];
            }
          }
          if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for (var i2 = 0; i2 < symbols.length; i2++) {
              if (propIsEnumerable.call(from, symbols[i2])) {
                to[symbols[i2]] = from[symbols[i2]];
              }
            }
          }
        }
        return to;
      };
    }
  });

  // ../../../.yarn/cache/react-npm-16.14.0-932446ec69-ee04c82f5e.zip/node_modules/react/cjs/react.production.min.js
  var require_react_production_min = __commonJS({
    "../../../.yarn/cache/react-npm-16.14.0-932446ec69-ee04c82f5e.zip/node_modules/react/cjs/react.production.min.js"(exports2) {
      "use strict";
      var l = require_object_assign();
      var n = "function" === typeof Symbol && Symbol.for;
      var p = n ? Symbol.for("react.element") : 60103;
      var q = n ? Symbol.for("react.portal") : 60106;
      var r = n ? Symbol.for("react.fragment") : 60107;
      var t = n ? Symbol.for("react.strict_mode") : 60108;
      var u = n ? Symbol.for("react.profiler") : 60114;
      var v = n ? Symbol.for("react.provider") : 60109;
      var w = n ? Symbol.for("react.context") : 60110;
      var x = n ? Symbol.for("react.forward_ref") : 60112;
      var y = n ? Symbol.for("react.suspense") : 60113;
      var z = n ? Symbol.for("react.memo") : 60115;
      var A = n ? Symbol.for("react.lazy") : 60116;
      var B = "function" === typeof Symbol && Symbol.iterator;
      function C(a) {
        for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)
          b += "&args[]=" + encodeURIComponent(arguments[c]);
        return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
      }
      var D = { isMounted: function() {
        return false;
      }, enqueueForceUpdate: function() {
      }, enqueueReplaceState: function() {
      }, enqueueSetState: function() {
      } };
      var E = {};
      function F(a, b, c) {
        this.props = a;
        this.context = b;
        this.refs = E;
        this.updater = c || D;
      }
      F.prototype.isReactComponent = {};
      F.prototype.setState = function(a, b) {
        if ("object" !== typeof a && "function" !== typeof a && null != a)
          throw Error(C(85));
        this.updater.enqueueSetState(this, a, b, "setState");
      };
      F.prototype.forceUpdate = function(a) {
        this.updater.enqueueForceUpdate(this, a, "forceUpdate");
      };
      function G() {
      }
      G.prototype = F.prototype;
      function H(a, b, c) {
        this.props = a;
        this.context = b;
        this.refs = E;
        this.updater = c || D;
      }
      var I = H.prototype = new G();
      I.constructor = H;
      l(I, F.prototype);
      I.isPureReactComponent = true;
      var J = { current: null };
      var K = Object.prototype.hasOwnProperty;
      var L = { key: true, ref: true, __self: true, __source: true };
      function M(a, b, c) {
        var e, d = {}, g = null, k = null;
        if (null != b)
          for (e in void 0 !== b.ref && (k = b.ref), void 0 !== b.key && (g = "" + b.key), b)
            K.call(b, e) && !L.hasOwnProperty(e) && (d[e] = b[e]);
        var f = arguments.length - 2;
        if (1 === f)
          d.children = c;
        else if (1 < f) {
          for (var h = Array(f), m = 0; m < f; m++)
            h[m] = arguments[m + 2];
          d.children = h;
        }
        if (a && a.defaultProps)
          for (e in f = a.defaultProps, f)
            void 0 === d[e] && (d[e] = f[e]);
        return { $$typeof: p, type: a, key: g, ref: k, props: d, _owner: J.current };
      }
      function N(a, b) {
        return { $$typeof: p, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner };
      }
      function O(a) {
        return "object" === typeof a && null !== a && a.$$typeof === p;
      }
      function escape(a) {
        var b = { "=": "=0", ":": "=2" };
        return "$" + ("" + a).replace(/[=:]/g, function(a2) {
          return b[a2];
        });
      }
      var P = /\/+/g;
      var Q = [];
      function R(a, b, c, e) {
        if (Q.length) {
          var d = Q.pop();
          d.result = a;
          d.keyPrefix = b;
          d.func = c;
          d.context = e;
          d.count = 0;
          return d;
        }
        return { result: a, keyPrefix: b, func: c, context: e, count: 0 };
      }
      function S(a) {
        a.result = null;
        a.keyPrefix = null;
        a.func = null;
        a.context = null;
        a.count = 0;
        10 > Q.length && Q.push(a);
      }
      function T(a, b, c, e) {
        var d = typeof a;
        if ("undefined" === d || "boolean" === d)
          a = null;
        var g = false;
        if (null === a)
          g = true;
        else
          switch (d) {
            case "string":
            case "number":
              g = true;
              break;
            case "object":
              switch (a.$$typeof) {
                case p:
                case q:
                  g = true;
              }
          }
        if (g)
          return c(e, a, "" === b ? "." + U(a, 0) : b), 1;
        g = 0;
        b = "" === b ? "." : b + ":";
        if (Array.isArray(a))
          for (var k = 0; k < a.length; k++) {
            d = a[k];
            var f = b + U(d, k);
            g += T(d, f, c, e);
          }
        else if (null === a || "object" !== typeof a ? f = null : (f = B && a[B] || a["@@iterator"], f = "function" === typeof f ? f : null), "function" === typeof f)
          for (a = f.call(a), k = 0; !(d = a.next()).done; )
            d = d.value, f = b + U(d, k++), g += T(d, f, c, e);
        else if ("object" === d)
          throw c = "" + a, Error(C(31, "[object Object]" === c ? "object with keys {" + Object.keys(a).join(", ") + "}" : c, ""));
        return g;
      }
      function V(a, b, c) {
        return null == a ? 0 : T(a, "", b, c);
      }
      function U(a, b) {
        return "object" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);
      }
      function W(a, b) {
        a.func.call(a.context, b, a.count++);
      }
      function aa(a, b, c) {
        var e = a.result, d = a.keyPrefix;
        a = a.func.call(a.context, b, a.count++);
        Array.isArray(a) ? X(a, e, c, function(a2) {
          return a2;
        }) : null != a && (O(a) && (a = N(a, d + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(P, "$&/") + "/") + c)), e.push(a));
      }
      function X(a, b, c, e, d) {
        var g = "";
        null != c && (g = ("" + c).replace(P, "$&/") + "/");
        b = R(b, g, e, d);
        V(a, aa, b);
        S(b);
      }
      var Y = { current: null };
      function Z() {
        var a = Y.current;
        if (null === a)
          throw Error(C(321));
        return a;
      }
      var ba = { ReactCurrentDispatcher: Y, ReactCurrentBatchConfig: { suspense: null }, ReactCurrentOwner: J, IsSomeRendererActing: { current: false }, assign: l };
      exports2.Children = { map: function(a, b, c) {
        if (null == a)
          return a;
        var e = [];
        X(a, e, null, b, c);
        return e;
      }, forEach: function(a, b, c) {
        if (null == a)
          return a;
        b = R(null, null, b, c);
        V(a, W, b);
        S(b);
      }, count: function(a) {
        return V(a, function() {
          return null;
        }, null);
      }, toArray: function(a) {
        var b = [];
        X(a, b, null, function(a2) {
          return a2;
        });
        return b;
      }, only: function(a) {
        if (!O(a))
          throw Error(C(143));
        return a;
      } };
      exports2.Component = F;
      exports2.Fragment = r;
      exports2.Profiler = u;
      exports2.PureComponent = H;
      exports2.StrictMode = t;
      exports2.Suspense = y;
      exports2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ba;
      exports2.cloneElement = function(a, b, c) {
        if (null === a || void 0 === a)
          throw Error(C(267, a));
        var e = l({}, a.props), d = a.key, g = a.ref, k = a._owner;
        if (null != b) {
          void 0 !== b.ref && (g = b.ref, k = J.current);
          void 0 !== b.key && (d = "" + b.key);
          if (a.type && a.type.defaultProps)
            var f = a.type.defaultProps;
          for (h in b)
            K.call(b, h) && !L.hasOwnProperty(h) && (e[h] = void 0 === b[h] && void 0 !== f ? f[h] : b[h]);
        }
        var h = arguments.length - 2;
        if (1 === h)
          e.children = c;
        else if (1 < h) {
          f = Array(h);
          for (var m = 0; m < h; m++)
            f[m] = arguments[m + 2];
          e.children = f;
        }
        return {
          $$typeof: p,
          type: a.type,
          key: d,
          ref: g,
          props: e,
          _owner: k
        };
      };
      exports2.createContext = function(a, b) {
        void 0 === b && (b = null);
        a = { $$typeof: w, _calculateChangedBits: b, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null };
        a.Provider = { $$typeof: v, _context: a };
        return a.Consumer = a;
      };
      exports2.createElement = M;
      exports2.createFactory = function(a) {
        var b = M.bind(null, a);
        b.type = a;
        return b;
      };
      exports2.createRef = function() {
        return { current: null };
      };
      exports2.forwardRef = function(a) {
        return { $$typeof: x, render: a };
      };
      exports2.isValidElement = O;
      exports2.lazy = function(a) {
        return { $$typeof: A, _ctor: a, _status: -1, _result: null };
      };
      exports2.memo = function(a, b) {
        return { $$typeof: z, type: a, compare: void 0 === b ? null : b };
      };
      exports2.useCallback = function(a, b) {
        return Z().useCallback(a, b);
      };
      exports2.useContext = function(a, b) {
        return Z().useContext(a, b);
      };
      exports2.useDebugValue = function() {
      };
      exports2.useEffect = function(a, b) {
        return Z().useEffect(a, b);
      };
      exports2.useImperativeHandle = function(a, b, c) {
        return Z().useImperativeHandle(a, b, c);
      };
      exports2.useLayoutEffect = function(a, b) {
        return Z().useLayoutEffect(a, b);
      };
      exports2.useMemo = function(a, b) {
        return Z().useMemo(a, b);
      };
      exports2.useReducer = function(a, b, c) {
        return Z().useReducer(a, b, c);
      };
      exports2.useRef = function(a) {
        return Z().useRef(a);
      };
      exports2.useState = function(a) {
        return Z().useState(a);
      };
      exports2.version = "16.14.0";
    }
  });

  // ../../../.yarn/cache/prop-types-npm-15.7.2-d7a04f2274-1d2b646255.zip/node_modules/prop-types/lib/ReactPropTypesSecret.js
  var require_ReactPropTypesSecret = __commonJS({
    "../../../.yarn/cache/prop-types-npm-15.7.2-d7a04f2274-1d2b646255.zip/node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports2, module2) {
      "use strict";
      var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
      module2.exports = ReactPropTypesSecret;
    }
  });

  // ../../../.yarn/cache/prop-types-npm-15.7.2-d7a04f2274-1d2b646255.zip/node_modules/prop-types/checkPropTypes.js
  var require_checkPropTypes = __commonJS({
    "../../../.yarn/cache/prop-types-npm-15.7.2-d7a04f2274-1d2b646255.zip/node_modules/prop-types/checkPropTypes.js"(exports2, module2) {
      "use strict";
      var printWarning = function() {
      };
      if (process.env.NODE_ENV !== "production") {
        ReactPropTypesSecret = require_ReactPropTypesSecret();
        loggedTypeFailures = {};
        has = Function.call.bind(Object.prototype.hasOwnProperty);
        printWarning = function(text) {
          var message = "Warning: " + text;
          if (typeof console !== "undefined") {
            console.error(message);
          }
          try {
            throw new Error(message);
          } catch (x) {
          }
        };
      }
      var ReactPropTypesSecret;
      var loggedTypeFailures;
      var has;
      function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
        if (process.env.NODE_ENV !== "production") {
          for (var typeSpecName in typeSpecs) {
            if (has(typeSpecs, typeSpecName)) {
              var error;
              try {
                if (typeof typeSpecs[typeSpecName] !== "function") {
                  var err2 = Error(
                    (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`."
                  );
                  err2.name = "Invariant Violation";
                  throw err2;
                }
                error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
              } catch (ex) {
                error = ex;
              }
              if (error && !(error instanceof Error)) {
                printWarning(
                  (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
                );
              }
              if (error instanceof Error && !(error.message in loggedTypeFailures)) {
                loggedTypeFailures[error.message] = true;
                var stack = getStack ? getStack() : "";
                printWarning(
                  "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
                );
              }
            }
          }
        }
      }
      checkPropTypes.resetWarningCache = function() {
        if (process.env.NODE_ENV !== "production") {
          loggedTypeFailures = {};
        }
      };
      module2.exports = checkPropTypes;
    }
  });

  // ../../../.yarn/cache/react-npm-16.14.0-932446ec69-ee04c82f5e.zip/node_modules/react/cjs/react.development.js
  var require_react_development = __commonJS({
    "../../../.yarn/cache/react-npm-16.14.0-932446ec69-ee04c82f5e.zip/node_modules/react/cjs/react.development.js"(exports2) {
      "use strict";
      if (process.env.NODE_ENV !== "production") {
        (function() {
          "use strict";
          var _assign = require_object_assign();
          var checkPropTypes = require_checkPropTypes();
          var ReactVersion = "16.14.0";
          var hasSymbol = typeof Symbol === "function" && Symbol.for;
          var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
          var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
          var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
          var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
          var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
          var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
          var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
          var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
          var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
          var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
          var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
          var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
          var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
          var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
          var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
          var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
          var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
          var MAYBE_ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = "@@iterator";
          function getIteratorFn(maybeIterable) {
            if (maybeIterable === null || typeof maybeIterable !== "object") {
              return null;
            }
            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
            if (typeof maybeIterator === "function") {
              return maybeIterator;
            }
            return null;
          }
          var ReactCurrentDispatcher = {
            current: null
          };
          var ReactCurrentBatchConfig = {
            suspense: null
          };
          var ReactCurrentOwner = {
            current: null
          };
          var BEFORE_SLASH_RE = /^(.*)[\\\/]/;
          function describeComponentFrame(name, source, ownerName) {
            var sourceInfo = "";
            if (source) {
              var path = source.fileName;
              var fileName = path.replace(BEFORE_SLASH_RE, "");
              {
                if (/^index\./.test(fileName)) {
                  var match = path.match(BEFORE_SLASH_RE);
                  if (match) {
                    var pathBeforeSlash = match[1];
                    if (pathBeforeSlash) {
                      var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, "");
                      fileName = folderName + "/" + fileName;
                    }
                  }
                }
              }
              sourceInfo = " (at " + fileName + ":" + source.lineNumber + ")";
            } else if (ownerName) {
              sourceInfo = " (created by " + ownerName + ")";
            }
            return "\n    in " + (name || "Unknown") + sourceInfo;
          }
          var Resolved = 1;
          function refineResolvedLazyComponent(lazyComponent) {
            return lazyComponent._status === Resolved ? lazyComponent._result : null;
          }
          function getWrappedName(outerType, innerType, wrapperName) {
            var functionName = innerType.displayName || innerType.name || "";
            return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
          }
          function getComponentName(type2) {
            if (type2 == null) {
              return null;
            }
            {
              if (typeof type2.tag === "number") {
                error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
              }
            }
            if (typeof type2 === "function") {
              return type2.displayName || type2.name || null;
            }
            if (typeof type2 === "string") {
              return type2;
            }
            switch (type2) {
              case REACT_FRAGMENT_TYPE:
                return "Fragment";
              case REACT_PORTAL_TYPE:
                return "Portal";
              case REACT_PROFILER_TYPE:
                return "Profiler";
              case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
              case REACT_SUSPENSE_TYPE:
                return "Suspense";
              case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            }
            if (typeof type2 === "object") {
              switch (type2.$$typeof) {
                case REACT_CONTEXT_TYPE:
                  return "Context.Consumer";
                case REACT_PROVIDER_TYPE:
                  return "Context.Provider";
                case REACT_FORWARD_REF_TYPE:
                  return getWrappedName(type2, type2.render, "ForwardRef");
                case REACT_MEMO_TYPE:
                  return getComponentName(type2.type);
                case REACT_BLOCK_TYPE:
                  return getComponentName(type2.render);
                case REACT_LAZY_TYPE: {
                  var thenable = type2;
                  var resolvedThenable = refineResolvedLazyComponent(thenable);
                  if (resolvedThenable) {
                    return getComponentName(resolvedThenable);
                  }
                  break;
                }
              }
            }
            return null;
          }
          var ReactDebugCurrentFrame = {};
          var currentlyValidatingElement = null;
          function setCurrentlyValidatingElement(element) {
            {
              currentlyValidatingElement = element;
            }
          }
          {
            ReactDebugCurrentFrame.getCurrentStack = null;
            ReactDebugCurrentFrame.getStackAddendum = function() {
              var stack = "";
              if (currentlyValidatingElement) {
                var name = getComponentName(currentlyValidatingElement.type);
                var owner = currentlyValidatingElement._owner;
                stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));
              }
              var impl = ReactDebugCurrentFrame.getCurrentStack;
              if (impl) {
                stack += impl() || "";
              }
              return stack;
            };
          }
          var IsSomeRendererActing = {
            current: false
          };
          var ReactSharedInternals = {
            ReactCurrentDispatcher,
            ReactCurrentBatchConfig,
            ReactCurrentOwner,
            IsSomeRendererActing,
            assign: _assign
          };
          {
            _assign(ReactSharedInternals, {
              ReactDebugCurrentFrame,
              ReactComponentTreeHook: {}
            });
          }
          function warn(format) {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format, args);
            }
          }
          function error(format) {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
          function printWarning(level2, format, args) {
            {
              var hasExistingStack = args.length > 0 && typeof args[args.length - 1] === "string" && args[args.length - 1].indexOf("\n    in") === 0;
              if (!hasExistingStack) {
                var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
                var stack = ReactDebugCurrentFrame2.getStackAddendum();
                if (stack !== "") {
                  format += "%s";
                  args = args.concat([stack]);
                }
              }
              var argsWithFormat = args.map(function(item) {
                return "" + item;
              });
              argsWithFormat.unshift("Warning: " + format);
              Function.prototype.apply.call(console[level2], console, argsWithFormat);
              try {
                var argIndex = 0;
                var message = "Warning: " + format.replace(/%s/g, function() {
                  return args[argIndex++];
                });
                throw new Error(message);
              } catch (x) {
              }
            }
          }
          var didWarnStateUpdateForUnmountedComponent = {};
          function warnNoop(publicInstance, callerName) {
            {
              var _constructor = publicInstance.constructor;
              var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
              var warningKey = componentName + "." + callerName;
              if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
                return;
              }
              error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
              didWarnStateUpdateForUnmountedComponent[warningKey] = true;
            }
          }
          var ReactNoopUpdateQueue = {
            isMounted: function(publicInstance) {
              return false;
            },
            enqueueForceUpdate: function(publicInstance, callback, callerName) {
              warnNoop(publicInstance, "forceUpdate");
            },
            enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
              warnNoop(publicInstance, "replaceState");
            },
            enqueueSetState: function(publicInstance, partialState, callback, callerName) {
              warnNoop(publicInstance, "setState");
            }
          };
          var emptyObject = {};
          {
            Object.freeze(emptyObject);
          }
          function Component(props, context, updater) {
            this.props = props;
            this.context = context;
            this.refs = emptyObject;
            this.updater = updater || ReactNoopUpdateQueue;
          }
          Component.prototype.isReactComponent = {};
          Component.prototype.setState = function(partialState, callback) {
            if (!(typeof partialState === "object" || typeof partialState === "function" || partialState == null)) {
              {
                throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
              }
            }
            this.updater.enqueueSetState(this, partialState, callback, "setState");
          };
          Component.prototype.forceUpdate = function(callback) {
            this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
          };
          {
            var deprecatedAPIs = {
              isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
              replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
            };
            var defineDeprecationWarning = function(methodName, info) {
              Object.defineProperty(Component.prototype, methodName, {
                get: function() {
                  warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                  return void 0;
                }
              });
            };
            for (var fnName in deprecatedAPIs) {
              if (deprecatedAPIs.hasOwnProperty(fnName)) {
                defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
              }
            }
          }
          function ComponentDummy() {
          }
          ComponentDummy.prototype = Component.prototype;
          function PureComponent(props, context, updater) {
            this.props = props;
            this.context = context;
            this.refs = emptyObject;
            this.updater = updater || ReactNoopUpdateQueue;
          }
          var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
          pureComponentPrototype.constructor = PureComponent;
          _assign(pureComponentPrototype, Component.prototype);
          pureComponentPrototype.isPureReactComponent = true;
          function createRef() {
            var refObject = {
              current: null
            };
            {
              Object.seal(refObject);
            }
            return refObject;
          }
          var hasOwnProperty = Object.prototype.hasOwnProperty;
          var RESERVED_PROPS = {
            key: true,
            ref: true,
            __self: true,
            __source: true
          };
          var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
          {
            didWarnAboutStringRefs = {};
          }
          function hasValidRef(config) {
            {
              if (hasOwnProperty.call(config, "ref")) {
                var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.ref !== void 0;
          }
          function hasValidKey(config) {
            {
              if (hasOwnProperty.call(config, "key")) {
                var getter = Object.getOwnPropertyDescriptor(config, "key").get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.key !== void 0;
          }
          function defineKeyPropWarningGetter(props, displayName) {
            var warnAboutAccessingKey = function() {
              {
                if (!specialPropKeyWarningShown) {
                  specialPropKeyWarningShown = true;
                  error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://fb.me/react-special-props)", displayName);
                }
              }
            };
            warnAboutAccessingKey.isReactWarning = true;
            Object.defineProperty(props, "key", {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }
          function defineRefPropWarningGetter(props, displayName) {
            var warnAboutAccessingRef = function() {
              {
                if (!specialPropRefWarningShown) {
                  specialPropRefWarningShown = true;
                  error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://fb.me/react-special-props)", displayName);
                }
              }
            };
            warnAboutAccessingRef.isReactWarning = true;
            Object.defineProperty(props, "ref", {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }
          function warnIfStringRefCannotBeAutoConverted(config) {
            {
              if (typeof config.ref === "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
                var componentName = getComponentName(ReactCurrentOwner.current.type);
                if (!didWarnAboutStringRefs[componentName]) {
                  error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://fb.me/react-strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);
                  didWarnAboutStringRefs[componentName] = true;
                }
              }
            }
          }
          var ReactElement = function(type2, key2, ref, self2, source, owner, props) {
            var element = {
              $$typeof: REACT_ELEMENT_TYPE,
              type: type2,
              key: key2,
              ref,
              props,
              _owner: owner
            };
            {
              element._store = {};
              Object.defineProperty(element._store, "validated", {
                configurable: false,
                enumerable: false,
                writable: true,
                value: false
              });
              Object.defineProperty(element, "_self", {
                configurable: false,
                enumerable: false,
                writable: false,
                value: self2
              });
              Object.defineProperty(element, "_source", {
                configurable: false,
                enumerable: false,
                writable: false,
                value: source
              });
              if (Object.freeze) {
                Object.freeze(element.props);
                Object.freeze(element);
              }
            }
            return element;
          };
          function createElement(type2, config, children) {
            var propName;
            var props = {};
            var key2 = null;
            var ref = null;
            var self2 = null;
            var source = null;
            if (config != null) {
              if (hasValidRef(config)) {
                ref = config.ref;
                {
                  warnIfStringRefCannotBeAutoConverted(config);
                }
              }
              if (hasValidKey(config)) {
                key2 = "" + config.key;
              }
              self2 = config.__self === void 0 ? null : config.__self;
              source = config.__source === void 0 ? null : config.__source;
              for (propName in config) {
                if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                  props[propName] = config[propName];
                }
              }
            }
            var childrenLength = arguments.length - 2;
            if (childrenLength === 1) {
              props.children = children;
            } else if (childrenLength > 1) {
              var childArray = Array(childrenLength);
              for (var i2 = 0; i2 < childrenLength; i2++) {
                childArray[i2] = arguments[i2 + 2];
              }
              {
                if (Object.freeze) {
                  Object.freeze(childArray);
                }
              }
              props.children = childArray;
            }
            if (type2 && type2.defaultProps) {
              var defaultProps = type2.defaultProps;
              for (propName in defaultProps) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps[propName];
                }
              }
            }
            {
              if (key2 || ref) {
                var displayName = typeof type2 === "function" ? type2.displayName || type2.name || "Unknown" : type2;
                if (key2) {
                  defineKeyPropWarningGetter(props, displayName);
                }
                if (ref) {
                  defineRefPropWarningGetter(props, displayName);
                }
              }
            }
            return ReactElement(type2, key2, ref, self2, source, ReactCurrentOwner.current, props);
          }
          function cloneAndReplaceKey(oldElement, newKey) {
            var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
            return newElement;
          }
          function cloneElement(element, config, children) {
            if (!!(element === null || element === void 0)) {
              {
                throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
              }
            }
            var propName;
            var props = _assign({}, element.props);
            var key2 = element.key;
            var ref = element.ref;
            var self2 = element._self;
            var source = element._source;
            var owner = element._owner;
            if (config != null) {
              if (hasValidRef(config)) {
                ref = config.ref;
                owner = ReactCurrentOwner.current;
              }
              if (hasValidKey(config)) {
                key2 = "" + config.key;
              }
              var defaultProps;
              if (element.type && element.type.defaultProps) {
                defaultProps = element.type.defaultProps;
              }
              for (propName in config) {
                if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                  if (config[propName] === void 0 && defaultProps !== void 0) {
                    props[propName] = defaultProps[propName];
                  } else {
                    props[propName] = config[propName];
                  }
                }
              }
            }
            var childrenLength = arguments.length - 2;
            if (childrenLength === 1) {
              props.children = children;
            } else if (childrenLength > 1) {
              var childArray = Array(childrenLength);
              for (var i2 = 0; i2 < childrenLength; i2++) {
                childArray[i2] = arguments[i2 + 2];
              }
              props.children = childArray;
            }
            return ReactElement(element.type, key2, ref, self2, source, owner, props);
          }
          function isValidElement(object) {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
          var SEPARATOR = ".";
          var SUBSEPARATOR = ":";
          function escape(key2) {
            var escapeRegex = /[=:]/g;
            var escaperLookup = {
              "=": "=0",
              ":": "=2"
            };
            var escapedString = ("" + key2).replace(escapeRegex, function(match) {
              return escaperLookup[match];
            });
            return "$" + escapedString;
          }
          var didWarnAboutMaps = false;
          var userProvidedKeyEscapeRegex = /\/+/g;
          function escapeUserProvidedKey(text) {
            return ("" + text).replace(userProvidedKeyEscapeRegex, "$&/");
          }
          var POOL_SIZE = 10;
          var traverseContextPool = [];
          function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
            if (traverseContextPool.length) {
              var traverseContext = traverseContextPool.pop();
              traverseContext.result = mapResult;
              traverseContext.keyPrefix = keyPrefix;
              traverseContext.func = mapFunction;
              traverseContext.context = mapContext;
              traverseContext.count = 0;
              return traverseContext;
            } else {
              return {
                result: mapResult,
                keyPrefix,
                func: mapFunction,
                context: mapContext,
                count: 0
              };
            }
          }
          function releaseTraverseContext(traverseContext) {
            traverseContext.result = null;
            traverseContext.keyPrefix = null;
            traverseContext.func = null;
            traverseContext.context = null;
            traverseContext.count = 0;
            if (traverseContextPool.length < POOL_SIZE) {
              traverseContextPool.push(traverseContext);
            }
          }
          function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
            var type2 = typeof children;
            if (type2 === "undefined" || type2 === "boolean") {
              children = null;
            }
            var invokeCallback = false;
            if (children === null) {
              invokeCallback = true;
            } else {
              switch (type2) {
                case "string":
                case "number":
                  invokeCallback = true;
                  break;
                case "object":
                  switch (children.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                      invokeCallback = true;
                  }
              }
            }
            if (invokeCallback) {
              callback(
                traverseContext,
                children,
                nameSoFar === "" ? SEPARATOR + getComponentKey(children, 0) : nameSoFar
              );
              return 1;
            }
            var child;
            var nextName;
            var subtreeCount = 0;
            var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
            if (Array.isArray(children)) {
              for (var i2 = 0; i2 < children.length; i2++) {
                child = children[i2];
                nextName = nextNamePrefix + getComponentKey(child, i2);
                subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
              }
            } else {
              var iteratorFn = getIteratorFn(children);
              if (typeof iteratorFn === "function") {
                {
                  if (iteratorFn === children.entries) {
                    if (!didWarnAboutMaps) {
                      warn("Using Maps as children is deprecated and will be removed in a future major release. Consider converting children to an array of keyed ReactElements instead.");
                    }
                    didWarnAboutMaps = true;
                  }
                }
                var iterator = iteratorFn.call(children);
                var step;
                var ii = 0;
                while (!(step = iterator.next()).done) {
                  child = step.value;
                  nextName = nextNamePrefix + getComponentKey(child, ii++);
                  subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
                }
              } else if (type2 === "object") {
                var addendum = "";
                {
                  addendum = " If you meant to render a collection of children, use an array instead." + ReactDebugCurrentFrame.getStackAddendum();
                }
                var childrenString = "" + children;
                {
                  {
                    throw Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + ")." + addendum);
                  }
                }
              }
            }
            return subtreeCount;
          }
          function traverseAllChildren(children, callback, traverseContext) {
            if (children == null) {
              return 0;
            }
            return traverseAllChildrenImpl(children, "", callback, traverseContext);
          }
          function getComponentKey(component, index) {
            if (typeof component === "object" && component !== null && component.key != null) {
              return escape(component.key);
            }
            return index.toString(36);
          }
          function forEachSingleChild(bookKeeping, child, name) {
            var func2 = bookKeeping.func, context = bookKeeping.context;
            func2.call(context, child, bookKeeping.count++);
          }
          function forEachChildren(children, forEachFunc, forEachContext) {
            if (children == null) {
              return children;
            }
            var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
            traverseAllChildren(children, forEachSingleChild, traverseContext);
            releaseTraverseContext(traverseContext);
          }
          function mapSingleChildIntoContext(bookKeeping, child, childKey) {
            var result = bookKeeping.result, keyPrefix = bookKeeping.keyPrefix, func2 = bookKeeping.func, context = bookKeeping.context;
            var mappedChild = func2.call(context, child, bookKeeping.count++);
            if (Array.isArray(mappedChild)) {
              mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function(c) {
                return c;
              });
            } else if (mappedChild != null) {
              if (isValidElement(mappedChild)) {
                mappedChild = cloneAndReplaceKey(
                  mappedChild,
                  keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + "/" : "") + childKey
                );
              }
              result.push(mappedChild);
            }
          }
          function mapIntoWithKeyPrefixInternal(children, array, prefix2, func2, context) {
            var escapedPrefix = "";
            if (prefix2 != null) {
              escapedPrefix = escapeUserProvidedKey(prefix2) + "/";
            }
            var traverseContext = getPooledTraverseContext(array, escapedPrefix, func2, context);
            traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
            releaseTraverseContext(traverseContext);
          }
          function mapChildren(children, func2, context) {
            if (children == null) {
              return children;
            }
            var result = [];
            mapIntoWithKeyPrefixInternal(children, result, null, func2, context);
            return result;
          }
          function countChildren(children) {
            return traverseAllChildren(children, function() {
              return null;
            }, null);
          }
          function toArray(children) {
            var result = [];
            mapIntoWithKeyPrefixInternal(children, result, null, function(child) {
              return child;
            });
            return result;
          }
          function onlyChild(children) {
            if (!isValidElement(children)) {
              {
                throw Error("React.Children.only expected to receive a single React element child.");
              }
            }
            return children;
          }
          function createContext(defaultValue, calculateChangedBits) {
            if (calculateChangedBits === void 0) {
              calculateChangedBits = null;
            } else {
              {
                if (calculateChangedBits !== null && typeof calculateChangedBits !== "function") {
                  error("createContext: Expected the optional second argument to be a function. Instead received: %s", calculateChangedBits);
                }
              }
            }
            var context = {
              $$typeof: REACT_CONTEXT_TYPE,
              _calculateChangedBits: calculateChangedBits,
              _currentValue: defaultValue,
              _currentValue2: defaultValue,
              _threadCount: 0,
              Provider: null,
              Consumer: null
            };
            context.Provider = {
              $$typeof: REACT_PROVIDER_TYPE,
              _context: context
            };
            var hasWarnedAboutUsingNestedContextConsumers = false;
            var hasWarnedAboutUsingConsumerProvider = false;
            {
              var Consumer = {
                $$typeof: REACT_CONTEXT_TYPE,
                _context: context,
                _calculateChangedBits: context._calculateChangedBits
              };
              Object.defineProperties(Consumer, {
                Provider: {
                  get: function() {
                    if (!hasWarnedAboutUsingConsumerProvider) {
                      hasWarnedAboutUsingConsumerProvider = true;
                      error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                    }
                    return context.Provider;
                  },
                  set: function(_Provider) {
                    context.Provider = _Provider;
                  }
                },
                _currentValue: {
                  get: function() {
                    return context._currentValue;
                  },
                  set: function(_currentValue) {
                    context._currentValue = _currentValue;
                  }
                },
                _currentValue2: {
                  get: function() {
                    return context._currentValue2;
                  },
                  set: function(_currentValue2) {
                    context._currentValue2 = _currentValue2;
                  }
                },
                _threadCount: {
                  get: function() {
                    return context._threadCount;
                  },
                  set: function(_threadCount) {
                    context._threadCount = _threadCount;
                  }
                },
                Consumer: {
                  get: function() {
                    if (!hasWarnedAboutUsingNestedContextConsumers) {
                      hasWarnedAboutUsingNestedContextConsumers = true;
                      error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                    }
                    return context.Consumer;
                  }
                }
              });
              context.Consumer = Consumer;
            }
            {
              context._currentRenderer = null;
              context._currentRenderer2 = null;
            }
            return context;
          }
          function lazy(ctor) {
            var lazyType = {
              $$typeof: REACT_LAZY_TYPE,
              _ctor: ctor,
              _status: -1,
              _result: null
            };
            {
              var defaultProps;
              var propTypes;
              Object.defineProperties(lazyType, {
                defaultProps: {
                  configurable: true,
                  get: function() {
                    return defaultProps;
                  },
                  set: function(newDefaultProps) {
                    error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    defaultProps = newDefaultProps;
                    Object.defineProperty(lazyType, "defaultProps", {
                      enumerable: true
                    });
                  }
                },
                propTypes: {
                  configurable: true,
                  get: function() {
                    return propTypes;
                  },
                  set: function(newPropTypes) {
                    error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    propTypes = newPropTypes;
                    Object.defineProperty(lazyType, "propTypes", {
                      enumerable: true
                    });
                  }
                }
              });
            }
            return lazyType;
          }
          function forwardRef(render2) {
            {
              if (render2 != null && render2.$$typeof === REACT_MEMO_TYPE) {
                error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
              } else if (typeof render2 !== "function") {
                error("forwardRef requires a render function but was given %s.", render2 === null ? "null" : typeof render2);
              } else {
                if (render2.length !== 0 && render2.length !== 2) {
                  error("forwardRef render functions accept exactly two parameters: props and ref. %s", render2.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
                }
              }
              if (render2 != null) {
                if (render2.defaultProps != null || render2.propTypes != null) {
                  error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
                }
              }
            }
            return {
              $$typeof: REACT_FORWARD_REF_TYPE,
              render: render2
            };
          }
          function isValidElementType(type2) {
            return typeof type2 === "string" || typeof type2 === "function" || type2 === REACT_FRAGMENT_TYPE || type2 === REACT_CONCURRENT_MODE_TYPE || type2 === REACT_PROFILER_TYPE || type2 === REACT_STRICT_MODE_TYPE || type2 === REACT_SUSPENSE_TYPE || type2 === REACT_SUSPENSE_LIST_TYPE || typeof type2 === "object" && type2 !== null && (type2.$$typeof === REACT_LAZY_TYPE || type2.$$typeof === REACT_MEMO_TYPE || type2.$$typeof === REACT_PROVIDER_TYPE || type2.$$typeof === REACT_CONTEXT_TYPE || type2.$$typeof === REACT_FORWARD_REF_TYPE || type2.$$typeof === REACT_FUNDAMENTAL_TYPE || type2.$$typeof === REACT_RESPONDER_TYPE || type2.$$typeof === REACT_SCOPE_TYPE || type2.$$typeof === REACT_BLOCK_TYPE);
          }
          function memo(type2, compare) {
            {
              if (!isValidElementType(type2)) {
                error("memo: The first argument must be a component. Instead received: %s", type2 === null ? "null" : typeof type2);
              }
            }
            return {
              $$typeof: REACT_MEMO_TYPE,
              type: type2,
              compare: compare === void 0 ? null : compare
            };
          }
          function resolveDispatcher() {
            var dispatcher = ReactCurrentDispatcher.current;
            if (!(dispatcher !== null)) {
              {
                throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.");
              }
            }
            return dispatcher;
          }
          function useContext(Context, unstable_observedBits) {
            var dispatcher = resolveDispatcher();
            {
              if (unstable_observedBits !== void 0) {
                error("useContext() second argument is reserved for future use in React. Passing it is not supported. You passed: %s.%s", unstable_observedBits, typeof unstable_observedBits === "number" && Array.isArray(arguments[2]) ? "\n\nDid you call array.map(useContext)? Calling Hooks inside a loop is not supported. Learn more at https://fb.me/rules-of-hooks" : "");
              }
              if (Context._context !== void 0) {
                var realContext = Context._context;
                if (realContext.Consumer === Context) {
                  error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
                } else if (realContext.Provider === Context) {
                  error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
                }
              }
            }
            return dispatcher.useContext(Context, unstable_observedBits);
          }
          function useState(initialState) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useState(initialState);
          }
          function useReducer(reducer, initialArg, init) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useReducer(reducer, initialArg, init);
          }
          function useRef(initialValue) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useRef(initialValue);
          }
          function useEffect(create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useEffect(create, deps);
          }
          function useLayoutEffect(create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useLayoutEffect(create, deps);
          }
          function useCallback(callback, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useCallback(callback, deps);
          }
          function useMemo2(create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useMemo(create, deps);
          }
          function useImperativeHandle(ref, create, deps) {
            var dispatcher = resolveDispatcher();
            return dispatcher.useImperativeHandle(ref, create, deps);
          }
          function useDebugValue(value, formatterFn) {
            {
              var dispatcher = resolveDispatcher();
              return dispatcher.useDebugValue(value, formatterFn);
            }
          }
          var propTypesMisspellWarningShown;
          {
            propTypesMisspellWarningShown = false;
          }
          function getDeclarationErrorAddendum() {
            if (ReactCurrentOwner.current) {
              var name = getComponentName(ReactCurrentOwner.current.type);
              if (name) {
                return "\n\nCheck the render method of `" + name + "`.";
              }
            }
            return "";
          }
          function getSourceInfoErrorAddendum(source) {
            if (source !== void 0) {
              var fileName = source.fileName.replace(/^.*[\\\/]/, "");
              var lineNumber = source.lineNumber;
              return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
            }
            return "";
          }
          function getSourceInfoErrorAddendumForProps(elementProps) {
            if (elementProps !== null && elementProps !== void 0) {
              return getSourceInfoErrorAddendum(elementProps.__source);
            }
            return "";
          }
          var ownerHasKeyUseWarning = {};
          function getCurrentComponentErrorInfo(parentType) {
            var info = getDeclarationErrorAddendum();
            if (!info) {
              var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
              if (parentName) {
                info = "\n\nCheck the top-level render call using <" + parentName + ">.";
              }
            }
            return info;
          }
          function validateExplicitKey(element, parentType) {
            if (!element._store || element._store.validated || element.key != null) {
              return;
            }
            element._store.validated = true;
            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
            var childOwner = "";
            if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
              childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
            }
            setCurrentlyValidatingElement(element);
            {
              error('Each child in a list should have a unique "key" prop.%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);
            }
            setCurrentlyValidatingElement(null);
          }
          function validateChildKeys(node, parentType) {
            if (typeof node !== "object") {
              return;
            }
            if (Array.isArray(node)) {
              for (var i2 = 0; i2 < node.length; i2++) {
                var child = node[i2];
                if (isValidElement(child)) {
                  validateExplicitKey(child, parentType);
                }
              }
            } else if (isValidElement(node)) {
              if (node._store) {
                node._store.validated = true;
              }
            } else if (node) {
              var iteratorFn = getIteratorFn(node);
              if (typeof iteratorFn === "function") {
                if (iteratorFn !== node.entries) {
                  var iterator = iteratorFn.call(node);
                  var step;
                  while (!(step = iterator.next()).done) {
                    if (isValidElement(step.value)) {
                      validateExplicitKey(step.value, parentType);
                    }
                  }
                }
              }
            }
          }
          function validatePropTypes(element) {
            {
              var type2 = element.type;
              if (type2 === null || type2 === void 0 || typeof type2 === "string") {
                return;
              }
              var name = getComponentName(type2);
              var propTypes;
              if (typeof type2 === "function") {
                propTypes = type2.propTypes;
              } else if (typeof type2 === "object" && (type2.$$typeof === REACT_FORWARD_REF_TYPE || type2.$$typeof === REACT_MEMO_TYPE)) {
                propTypes = type2.propTypes;
              } else {
                return;
              }
              if (propTypes) {
                setCurrentlyValidatingElement(element);
                checkPropTypes(propTypes, element.props, "prop", name, ReactDebugCurrentFrame.getStackAddendum);
                setCurrentlyValidatingElement(null);
              } else if (type2.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
                propTypesMisspellWarningShown = true;
                error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", name || "Unknown");
              }
              if (typeof type2.getDefaultProps === "function" && !type2.getDefaultProps.isReactClassApproved) {
                error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
              }
            }
          }
          function validateFragmentProps(fragment) {
            {
              setCurrentlyValidatingElement(fragment);
              var keys = Object.keys(fragment.props);
              for (var i2 = 0; i2 < keys.length; i2++) {
                var key2 = keys[i2];
                if (key2 !== "children" && key2 !== "key") {
                  error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key2);
                  break;
                }
              }
              if (fragment.ref !== null) {
                error("Invalid attribute `ref` supplied to `React.Fragment`.");
              }
              setCurrentlyValidatingElement(null);
            }
          }
          function createElementWithValidation(type2, props, children) {
            var validType = isValidElementType(type2);
            if (!validType) {
              var info = "";
              if (type2 === void 0 || typeof type2 === "object" && type2 !== null && Object.keys(type2).length === 0) {
                info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
              }
              var sourceInfo = getSourceInfoErrorAddendumForProps(props);
              if (sourceInfo) {
                info += sourceInfo;
              } else {
                info += getDeclarationErrorAddendum();
              }
              var typeString;
              if (type2 === null) {
                typeString = "null";
              } else if (Array.isArray(type2)) {
                typeString = "array";
              } else if (type2 !== void 0 && type2.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentName(type2.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
              } else {
                typeString = typeof type2;
              }
              {
                error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
              }
            }
            var element = createElement.apply(this, arguments);
            if (element == null) {
              return element;
            }
            if (validType) {
              for (var i2 = 2; i2 < arguments.length; i2++) {
                validateChildKeys(arguments[i2], type2);
              }
            }
            if (type2 === REACT_FRAGMENT_TYPE) {
              validateFragmentProps(element);
            } else {
              validatePropTypes(element);
            }
            return element;
          }
          var didWarnAboutDeprecatedCreateFactory = false;
          function createFactoryWithValidation(type2) {
            var validatedFactory = createElementWithValidation.bind(null, type2);
            validatedFactory.type = type2;
            {
              if (!didWarnAboutDeprecatedCreateFactory) {
                didWarnAboutDeprecatedCreateFactory = true;
                warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
              }
              Object.defineProperty(validatedFactory, "type", {
                enumerable: false,
                get: function() {
                  warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                  Object.defineProperty(this, "type", {
                    value: type2
                  });
                  return type2;
                }
              });
            }
            return validatedFactory;
          }
          function cloneElementWithValidation(element, props, children) {
            var newElement = cloneElement.apply(this, arguments);
            for (var i2 = 2; i2 < arguments.length; i2++) {
              validateChildKeys(arguments[i2], newElement.type);
            }
            validatePropTypes(newElement);
            return newElement;
          }
          {
            try {
              var frozenObject = Object.freeze({});
              var testMap = /* @__PURE__ */ new Map([[frozenObject, null]]);
              var testSet = /* @__PURE__ */ new Set([frozenObject]);
              testMap.set(0, 0);
              testSet.add(0);
            } catch (e) {
            }
          }
          var createElement$1 = createElementWithValidation;
          var cloneElement$1 = cloneElementWithValidation;
          var createFactory = createFactoryWithValidation;
          var Children = {
            map: mapChildren,
            forEach: forEachChildren,
            count: countChildren,
            toArray,
            only: onlyChild
          };
          exports2.Children = Children;
          exports2.Component = Component;
          exports2.Fragment = REACT_FRAGMENT_TYPE;
          exports2.Profiler = REACT_PROFILER_TYPE;
          exports2.PureComponent = PureComponent;
          exports2.StrictMode = REACT_STRICT_MODE_TYPE;
          exports2.Suspense = REACT_SUSPENSE_TYPE;
          exports2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
          exports2.cloneElement = cloneElement$1;
          exports2.createContext = createContext;
          exports2.createElement = createElement$1;
          exports2.createFactory = createFactory;
          exports2.createRef = createRef;
          exports2.forwardRef = forwardRef;
          exports2.isValidElement = isValidElement;
          exports2.lazy = lazy;
          exports2.memo = memo;
          exports2.useCallback = useCallback;
          exports2.useContext = useContext;
          exports2.useDebugValue = useDebugValue;
          exports2.useEffect = useEffect;
          exports2.useImperativeHandle = useImperativeHandle;
          exports2.useLayoutEffect = useLayoutEffect;
          exports2.useMemo = useMemo2;
          exports2.useReducer = useReducer;
          exports2.useRef = useRef;
          exports2.useState = useState;
          exports2.version = ReactVersion;
        })();
      }
    }
  });

  // ../../../.yarn/cache/react-npm-16.14.0-932446ec69-ee04c82f5e.zip/node_modules/react/index.js
  var require_react = __commonJS({
    "../../../.yarn/cache/react-npm-16.14.0-932446ec69-ee04c82f5e.zip/node_modules/react/index.js"(exports2, module2) {
      "use strict";
      if (process.env.NODE_ENV === "production") {
        module2.exports = require_react_production_min();
      } else {
        module2.exports = require_react_development();
      }
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/isObject.js
  var require_isObject = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/isObject.js"(exports2, module2) {
      function isObject(value) {
        var type2 = typeof value;
        return value != null && (type2 == "object" || type2 == "function");
      }
      module2.exports = isObject;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_freeGlobal.js
  var require_freeGlobal = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_freeGlobal.js"(exports2, module2) {
      var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
      module2.exports = freeGlobal;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_root.js
  var require_root = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_root.js"(exports2, module2) {
      var freeGlobal = require_freeGlobal();
      var freeSelf = typeof self == "object" && self && self.Object === Object && self;
      var root = freeGlobal || freeSelf || Function("return this")();
      module2.exports = root;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/now.js
  var require_now = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/now.js"(exports2, module2) {
      var root = require_root();
      var now = function() {
        return root.Date.now();
      };
      module2.exports = now;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_trimmedEndIndex.js
  var require_trimmedEndIndex = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_trimmedEndIndex.js"(exports2, module2) {
      var reWhitespace = /\s/;
      function trimmedEndIndex(string) {
        var index = string.length;
        while (index-- && reWhitespace.test(string.charAt(index))) {
        }
        return index;
      }
      module2.exports = trimmedEndIndex;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseTrim.js
  var require_baseTrim = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseTrim.js"(exports2, module2) {
      var trimmedEndIndex = require_trimmedEndIndex();
      var reTrimStart = /^\s+/;
      function baseTrim(string) {
        return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
      }
      module2.exports = baseTrim;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_Symbol.js
  var require_Symbol = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_Symbol.js"(exports2, module2) {
      var root = require_root();
      var Symbol2 = root.Symbol;
      module2.exports = Symbol2;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_getRawTag.js
  var require_getRawTag = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_getRawTag.js"(exports2, module2) {
      var Symbol2 = require_Symbol();
      var objectProto = Object.prototype;
      var hasOwnProperty = objectProto.hasOwnProperty;
      var nativeObjectToString = objectProto.toString;
      var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
      function getRawTag(value) {
        var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
        try {
          value[symToStringTag] = void 0;
          var unmasked = true;
        } catch (e) {
        }
        var result = nativeObjectToString.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag] = tag;
          } else {
            delete value[symToStringTag];
          }
        }
        return result;
      }
      module2.exports = getRawTag;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_objectToString.js
  var require_objectToString = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_objectToString.js"(exports2, module2) {
      var objectProto = Object.prototype;
      var nativeObjectToString = objectProto.toString;
      function objectToString(value) {
        return nativeObjectToString.call(value);
      }
      module2.exports = objectToString;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseGetTag.js
  var require_baseGetTag = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/_baseGetTag.js"(exports2, module2) {
      var Symbol2 = require_Symbol();
      var getRawTag = require_getRawTag();
      var objectToString = require_objectToString();
      var nullTag = "[object Null]";
      var undefinedTag = "[object Undefined]";
      var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
      function baseGetTag(value) {
        if (value == null) {
          return value === void 0 ? undefinedTag : nullTag;
        }
        return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
      }
      module2.exports = baseGetTag;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/isObjectLike.js
  var require_isObjectLike = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/isObjectLike.js"(exports2, module2) {
      function isObjectLike(value) {
        return value != null && typeof value == "object";
      }
      module2.exports = isObjectLike;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/isSymbol.js
  var require_isSymbol = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/isSymbol.js"(exports2, module2) {
      var baseGetTag = require_baseGetTag();
      var isObjectLike = require_isObjectLike();
      var symbolTag = "[object Symbol]";
      function isSymbol(value) {
        return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
      }
      module2.exports = isSymbol;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/toNumber.js
  var require_toNumber = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/toNumber.js"(exports2, module2) {
      var baseTrim = require_baseTrim();
      var isObject = require_isObject();
      var isSymbol = require_isSymbol();
      var NAN = 0 / 0;
      var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
      var reIsBinary = /^0b[01]+$/i;
      var reIsOctal = /^0o[0-7]+$/i;
      var freeParseInt = parseInt;
      function toNumber(value) {
        if (typeof value == "number") {
          return value;
        }
        if (isSymbol(value)) {
          return NAN;
        }
        if (isObject(value)) {
          var other = typeof value.valueOf == "function" ? value.valueOf() : value;
          value = isObject(other) ? other + "" : other;
        }
        if (typeof value != "string") {
          return value === 0 ? value : +value;
        }
        value = baseTrim(value);
        var isBinary = reIsBinary.test(value);
        return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
      }
      module2.exports = toNumber;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/debounce.js
  var require_debounce = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/debounce.js"(exports2, module2) {
      var isObject = require_isObject();
      var now = require_now();
      var toNumber = require_toNumber();
      var FUNC_ERROR_TEXT = "Expected a function";
      var nativeMax = Math.max;
      var nativeMin = Math.min;
      function debounce(func2, wait, options) {
        var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
        if (typeof func2 != "function") {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        wait = toNumber(wait) || 0;
        if (isObject(options)) {
          leading = !!options.leading;
          maxing = "maxWait" in options;
          maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
          trailing = "trailing" in options ? !!options.trailing : trailing;
        }
        function invokeFunc(time) {
          var args = lastArgs, thisArg = lastThis;
          lastArgs = lastThis = void 0;
          lastInvokeTime = time;
          result = func2.apply(thisArg, args);
          return result;
        }
        function leadingEdge(time) {
          lastInvokeTime = time;
          timerId = setTimeout(timerExpired, wait);
          return leading ? invokeFunc(time) : result;
        }
        function remainingWait(time) {
          var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
          return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
        }
        function shouldInvoke(time) {
          var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
          return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
        }
        function timerExpired() {
          var time = now();
          if (shouldInvoke(time)) {
            return trailingEdge(time);
          }
          timerId = setTimeout(timerExpired, remainingWait(time));
        }
        function trailingEdge(time) {
          timerId = void 0;
          if (trailing && lastArgs) {
            return invokeFunc(time);
          }
          lastArgs = lastThis = void 0;
          return result;
        }
        function cancel() {
          if (timerId !== void 0) {
            clearTimeout(timerId);
          }
          lastInvokeTime = 0;
          lastArgs = lastCallTime = lastThis = timerId = void 0;
        }
        function flush() {
          return timerId === void 0 ? result : trailingEdge(now());
        }
        function debounced() {
          var time = now(), isInvoking = shouldInvoke(time);
          lastArgs = arguments;
          lastThis = this;
          lastCallTime = time;
          if (isInvoking) {
            if (timerId === void 0) {
              return leadingEdge(lastCallTime);
            }
            if (maxing) {
              clearTimeout(timerId);
              timerId = setTimeout(timerExpired, wait);
              return invokeFunc(lastCallTime);
            }
          }
          if (timerId === void 0) {
            timerId = setTimeout(timerExpired, wait);
          }
          return result;
        }
        debounced.cancel = cancel;
        debounced.flush = flush;
        return debounced;
      }
      module2.exports = debounce;
    }
  });

  // ../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/throttle.js
  var require_throttle = __commonJS({
    "../../../.yarn/cache/lodash-npm-4.17.21-6382451519-c08619c038.zip/node_modules/lodash/throttle.js"(exports2, module2) {
      var debounce = require_debounce();
      var isObject = require_isObject();
      var FUNC_ERROR_TEXT = "Expected a function";
      function throttle(func2, wait, options) {
        var leading = true, trailing = true;
        if (typeof func2 != "function") {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        if (isObject(options)) {
          leading = "leading" in options ? !!options.leading : leading;
          trailing = "trailing" in options ? !!options.trailing : trailing;
        }
        return debounce(func2, wait, {
          "leading": leading,
          "maxWait": wait,
          "trailing": trailing
        });
      }
      module2.exports = throttle;
    }
  });

  // ../../../.yarn/cache/ansi-escapes-npm-4.3.2-3ad173702f-8661034456.zip/node_modules/ansi-escapes/index.js
  var require_ansi_escapes = __commonJS({
    "../../../.yarn/cache/ansi-escapes-npm-4.3.2-3ad173702f-8661034456.zip/node_modules/ansi-escapes/index.js"(exports2, module2) {
      "use strict";
      var ansiEscapes = module2.exports;
      module2.exports.default = ansiEscapes;
      var ESC = "\x1B[";
      var OSC = "\x1B]";
      var BEL = "\x07";
      var SEP = ";";
      var isTerminalApp = process.env.TERM_PROGRAM === "Apple_Terminal";
      ansiEscapes.cursorTo = (x, y) => {
        if (typeof x !== "number") {
          throw new TypeError("The `x` argument is required");
        }
        if (typeof y !== "number") {
          return ESC + (x + 1) + "G";
        }
        return ESC + (y + 1) + ";" + (x + 1) + "H";
      };
      ansiEscapes.cursorMove = (x, y) => {
        if (typeof x !== "number") {
          throw new TypeError("The `x` argument is required");
        }
        let ret = "";
        if (x < 0) {
          ret += ESC + -x + "D";
        } else if (x > 0) {
          ret += ESC + x + "C";
        }
        if (y < 0) {
          ret += ESC + -y + "A";
        } else if (y > 0) {
          ret += ESC + y + "B";
        }
        return ret;
      };
      ansiEscapes.cursorUp = (count = 1) => ESC + count + "A";
      ansiEscapes.cursorDown = (count = 1) => ESC + count + "B";
      ansiEscapes.cursorForward = (count = 1) => ESC + count + "C";
      ansiEscapes.cursorBackward = (count = 1) => ESC + count + "D";
      ansiEscapes.cursorLeft = ESC + "G";
      ansiEscapes.cursorSavePosition = isTerminalApp ? "\x1B7" : ESC + "s";
      ansiEscapes.cursorRestorePosition = isTerminalApp ? "\x1B8" : ESC + "u";
      ansiEscapes.cursorGetPosition = ESC + "6n";
      ansiEscapes.cursorNextLine = ESC + "E";
      ansiEscapes.cursorPrevLine = ESC + "F";
      ansiEscapes.cursorHide = ESC + "?25l";
      ansiEscapes.cursorShow = ESC + "?25h";
      ansiEscapes.eraseLines = (count) => {
        let clear = "";
        for (let i2 = 0; i2 < count; i2++) {
          clear += ansiEscapes.eraseLine + (i2 < count - 1 ? ansiEscapes.cursorUp() : "");
        }
        if (count) {
          clear += ansiEscapes.cursorLeft;
        }
        return clear;
      };
      ansiEscapes.eraseEndLine = ESC + "K";
      ansiEscapes.eraseStartLine = ESC + "1K";
      ansiEscapes.eraseLine = ESC + "2K";
      ansiEscapes.eraseDown = ESC + "J";
      ansiEscapes.eraseUp = ESC + "1J";
      ansiEscapes.eraseScreen = ESC + "2J";
      ansiEscapes.scrollUp = ESC + "S";
      ansiEscapes.scrollDown = ESC + "T";
      ansiEscapes.clearScreen = "\x1Bc";
      ansiEscapes.clearTerminal = process.platform === "win32" ? `${ansiEscapes.eraseScreen}${ESC}0f` : `${ansiEscapes.eraseScreen}${ESC}3J${ESC}H`;
      ansiEscapes.beep = BEL;
      ansiEscapes.link = (text, url) => {
        return [
          OSC,
          "8",
          SEP,
          SEP,
          url,
          BEL,
          text,
          OSC,
          "8",
          SEP,
          SEP,
          BEL
        ].join("");
      };
      ansiEscapes.image = (buffer2, options = {}) => {
        let ret = `${OSC}1337;File=inline=1`;
        if (options.width) {
          ret += `;width=${options.width}`;
        }
        if (options.height) {
          ret += `;height=${options.height}`;
        }
        if (options.preserveAspectRatio === false) {
          ret += ";preserveAspectRatio=0";
        }
        return ret + ":" + buffer2.toString("base64") + BEL;
      };
      ansiEscapes.iTerm = {
        setCwd: (cwd = process.cwd()) => `${OSC}50;CurrentDir=${cwd}${BEL}`,
        annotation: (message, options = {}) => {
          let ret = `${OSC}1337;`;
          const hasX = typeof options.x !== "undefined";
          const hasY = typeof options.y !== "undefined";
          if ((hasX || hasY) && !(hasX && hasY && typeof options.length !== "undefined")) {
            throw new Error("`x`, `y` and `length` must be defined when `x` or `y` is defined");
          }
          message = message.replace(/\|/g, "");
          ret += options.isHidden ? "AddHiddenAnnotation=" : "AddAnnotation=";
          if (options.length > 0) {
            ret += (hasX ? [message, options.length, options.x, options.y] : [options.length, message]).join("|");
          } else {
            ret += message;
          }
          return ret + BEL;
        }
      };
    }
  });

  // ../../../.yarn/cache/mimic-fn-npm-2.1.0-4fbeb3abb4-d2421a3444.zip/node_modules/mimic-fn/index.js
  var require_mimic_fn = __commonJS({
    "../../../.yarn/cache/mimic-fn-npm-2.1.0-4fbeb3abb4-d2421a3444.zip/node_modules/mimic-fn/index.js"(exports2, module2) {
      "use strict";
      var mimicFn = (to, from) => {
        for (const prop of Reflect.ownKeys(from)) {
          Object.defineProperty(to, prop, Object.getOwnPropertyDescriptor(from, prop));
        }
        return to;
      };
      module2.exports = mimicFn;
      module2.exports.default = mimicFn;
    }
  });

  // ../../../.yarn/cache/onetime-npm-5.1.2-3ed148fa42-e9fd0695a0.zip/node_modules/onetime/index.js
  var require_onetime = __commonJS({
    "../../../.yarn/cache/onetime-npm-5.1.2-3ed148fa42-e9fd0695a0.zip/node_modules/onetime/index.js"(exports2, module2) {
      "use strict";
      var mimicFn = require_mimic_fn();
      var calledFunctions = /* @__PURE__ */ new WeakMap();
      var onetime = (function_, options = {}) => {
        if (typeof function_ !== "function") {
          throw new TypeError("Expected a function");
        }
        let returnValue;
        let callCount = 0;
        const functionName = function_.displayName || function_.name || "<anonymous>";
        const onetime2 = function(...arguments_) {
          calledFunctions.set(onetime2, ++callCount);
          if (callCount === 1) {
            returnValue = function_.apply(this, arguments_);
            function_ = null;
          } else if (options.throw === true) {
            throw new Error(`Function \`${functionName}\` can only be called once`);
          }
          return returnValue;
        };
        mimicFn(onetime2, function_);
        calledFunctions.set(onetime2, callCount);
        return onetime2;
      };
      module2.exports = onetime;
      module2.exports.default = onetime;
      module2.exports.callCount = (function_) => {
        if (!calledFunctions.has(function_)) {
          throw new Error(`The given function \`${function_.name}\` is not wrapped by the \`onetime\` package`);
        }
        return calledFunctions.get(function_);
      };
    }
  });

  // ../../../.yarn/cache/signal-exit-npm-3.0.3-5a2d797648-f0169d3f12.zip/node_modules/signal-exit/signals.js
  var require_signals = __commonJS({
    "../../../.yarn/cache/signal-exit-npm-3.0.3-5a2d797648-f0169d3f12.zip/node_modules/signal-exit/signals.js"(exports2, module2) {
      module2.exports = [
        "SIGABRT",
        "SIGALRM",
        "SIGHUP",
        "SIGINT",
        "SIGTERM"
      ];
      if (process.platform !== "win32") {
        module2.exports.push(
          "SIGVTALRM",
          "SIGXCPU",
          "SIGXFSZ",
          "SIGUSR2",
          "SIGTRAP",
          "SIGSYS",
          "SIGQUIT",
          "SIGIOT"
        );
      }
      if (process.platform === "linux") {
        module2.exports.push(
          "SIGIO",
          "SIGPOLL",
          "SIGPWR",
          "SIGSTKFLT",
          "SIGUNUSED"
        );
      }
    }
  });

  // ../../../.yarn/cache/signal-exit-npm-3.0.3-5a2d797648-f0169d3f12.zip/node_modules/signal-exit/index.js
  var require_signal_exit = __commonJS({
    "../../../.yarn/cache/signal-exit-npm-3.0.3-5a2d797648-f0169d3f12.zip/node_modules/signal-exit/index.js"(exports2, module2) {
      var assert2 = __require("assert");
      var signals = require_signals();
      var isWin = /^win/i.test(process.platform);
      var EE = __require("events");
      if (typeof EE !== "function") {
        EE = EE.EventEmitter;
      }
      var emitter;
      if (process.__signal_exit_emitter__) {
        emitter = process.__signal_exit_emitter__;
      } else {
        emitter = process.__signal_exit_emitter__ = new EE();
        emitter.count = 0;
        emitter.emitted = {};
      }
      if (!emitter.infinite) {
        emitter.setMaxListeners(Infinity);
        emitter.infinite = true;
      }
      module2.exports = function(cb2, opts) {
        assert2.equal(typeof cb2, "function", "a callback must be provided for exit handler");
        if (loaded === false) {
          load();
        }
        var ev = "exit";
        if (opts && opts.alwaysLast) {
          ev = "afterexit";
        }
        var remove = function() {
          emitter.removeListener(ev, cb2);
          if (emitter.listeners("exit").length === 0 && emitter.listeners("afterexit").length === 0) {
            unload();
          }
        };
        emitter.on(ev, cb2);
        return remove;
      };
      module2.exports.unload = unload;
      function unload() {
        if (!loaded) {
          return;
        }
        loaded = false;
        signals.forEach(function(sig) {
          try {
            process.removeListener(sig, sigListeners[sig]);
          } catch (er) {
          }
        });
        process.emit = originalProcessEmit;
        process.reallyExit = originalProcessReallyExit;
        emitter.count -= 1;
      }
      function emit(event, code, signal) {
        if (emitter.emitted[event]) {
          return;
        }
        emitter.emitted[event] = true;
        emitter.emit(event, code, signal);
      }
      var sigListeners = {};
      signals.forEach(function(sig) {
        sigListeners[sig] = function listener() {
          var listeners = process.listeners(sig);
          if (listeners.length === emitter.count) {
            unload();
            emit("exit", null, sig);
            emit("afterexit", null, sig);
            if (isWin && sig === "SIGHUP") {
              sig = "SIGINT";
            }
            process.kill(process.pid, sig);
          }
        };
      });
      module2.exports.signals = function() {
        return signals;
      };
      module2.exports.load = load;
      var loaded = false;
      function load() {
        if (loaded) {
          return;
        }
        loaded = true;
        emitter.count += 1;
        signals = signals.filter(function(sig) {
          try {
            process.on(sig, sigListeners[sig]);
            return true;
          } catch (er) {
            return false;
          }
        });
        process.emit = processEmit;
        process.reallyExit = processReallyExit;
      }
      var originalProcessReallyExit = process.reallyExit;
      function processReallyExit(code) {
        process.exitCode = code || 0;
        emit("exit", process.exitCode, null);
        emit("afterexit", process.exitCode, null);
        originalProcessReallyExit.call(process, process.exitCode);
      }
      var originalProcessEmit = process.emit;
      function processEmit(ev, arg2) {
        if (ev === "exit") {
          if (arg2 !== void 0) {
            process.exitCode = arg2;
          }
          var ret = originalProcessEmit.apply(this, arguments);
          emit("exit", process.exitCode, null);
          emit("afterexit", process.exitCode, null);
          return ret;
        } else {
          return originalProcessEmit.apply(this, arguments);
        }
      }
    }
  });

  // ../../../.yarn/cache/restore-cursor-npm-3.1.0-52c5a4c98f-f877dd8741.zip/node_modules/restore-cursor/index.js
  var require_restore_cursor = __commonJS({
    "../../../.yarn/cache/restore-cursor-npm-3.1.0-52c5a4c98f-f877dd8741.zip/node_modules/restore-cursor/index.js"(exports2, module2) {
      "use strict";
      var onetime = require_onetime();
      var signalExit = require_signal_exit();
      module2.exports = onetime(() => {
        signalExit(() => {
          process.stderr.write("\x1B[?25h");
        }, { alwaysLast: true });
      });
    }
  });

  // ../../../.yarn/cache/cli-cursor-npm-3.1.0-fee1e46b5e-2692784c6c.zip/node_modules/cli-cursor/index.js
  var require_cli_cursor = __commonJS({
    "../../../.yarn/cache/cli-cursor-npm-3.1.0-fee1e46b5e-2692784c6c.zip/node_modules/cli-cursor/index.js"(exports2) {
      "use strict";
      var restoreCursor = require_restore_cursor();
      var isHidden = false;
      exports2.show = (writableStream = process.stderr) => {
        if (!writableStream.isTTY) {
          return;
        }
        isHidden = false;
        writableStream.write("\x1B[?25h");
      };
      exports2.hide = (writableStream = process.stderr) => {
        if (!writableStream.isTTY) {
          return;
        }
        restoreCursor();
        isHidden = true;
        writableStream.write("\x1B[?25l");
      };
      exports2.toggle = (force, writableStream) => {
        if (force !== void 0) {
          isHidden = force;
        }
        if (isHidden) {
          exports2.show(writableStream);
        } else {
          exports2.hide(writableStream);
        }
      };
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/log-update.js
  var require_log_update = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/log-update.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var ansi_escapes_1 = __importDefault(require_ansi_escapes());
      var cli_cursor_1 = __importDefault(require_cli_cursor());
      var create = (stream, { showCursor = false } = {}) => {
        let previousLineCount = 0;
        let previousOutput = "";
        let hasHiddenCursor = false;
        const render2 = (str) => {
          if (!showCursor && !hasHiddenCursor) {
            cli_cursor_1.default.hide();
            hasHiddenCursor = true;
          }
          const output = str + "\n";
          if (output === previousOutput) {
            return;
          }
          previousOutput = output;
          stream.write(ansi_escapes_1.default.eraseLines(previousLineCount) + output);
          previousLineCount = output.split("\n").length;
        };
        render2.clear = () => {
          stream.write(ansi_escapes_1.default.eraseLines(previousLineCount));
          previousOutput = "";
          previousLineCount = 0;
        };
        render2.done = () => {
          previousOutput = "";
          previousLineCount = 0;
          if (!showCursor) {
            cli_cursor_1.default.show();
            hasHiddenCursor = false;
          }
        };
        return render2;
      };
      exports2.default = { create };
    }
  });

  // ../../../.yarn/cache/ci-info-npm-2.0.0-78012236a1-3b374666a8.zip/node_modules/ci-info/vendors.json
  var require_vendors = __commonJS({
    "../../../.yarn/cache/ci-info-npm-2.0.0-78012236a1-3b374666a8.zip/node_modules/ci-info/vendors.json"(exports2, module2) {
      module2.exports = [
        {
          name: "AppVeyor",
          constant: "APPVEYOR",
          env: "APPVEYOR",
          pr: "APPVEYOR_PULL_REQUEST_NUMBER"
        },
        {
          name: "Azure Pipelines",
          constant: "AZURE_PIPELINES",
          env: "SYSTEM_TEAMFOUNDATIONCOLLECTIONURI",
          pr: "SYSTEM_PULLREQUEST_PULLREQUESTID"
        },
        {
          name: "Bamboo",
          constant: "BAMBOO",
          env: "bamboo_planKey"
        },
        {
          name: "Bitbucket Pipelines",
          constant: "BITBUCKET",
          env: "BITBUCKET_COMMIT",
          pr: "BITBUCKET_PR_ID"
        },
        {
          name: "Bitrise",
          constant: "BITRISE",
          env: "BITRISE_IO",
          pr: "BITRISE_PULL_REQUEST"
        },
        {
          name: "Buddy",
          constant: "BUDDY",
          env: "BUDDY_WORKSPACE_ID",
          pr: "BUDDY_EXECUTION_PULL_REQUEST_ID"
        },
        {
          name: "Buildkite",
          constant: "BUILDKITE",
          env: "BUILDKITE",
          pr: { env: "BUILDKITE_PULL_REQUEST", ne: "false" }
        },
        {
          name: "CircleCI",
          constant: "CIRCLE",
          env: "CIRCLECI",
          pr: "CIRCLE_PULL_REQUEST"
        },
        {
          name: "Cirrus CI",
          constant: "CIRRUS",
          env: "CIRRUS_CI",
          pr: "CIRRUS_PR"
        },
        {
          name: "AWS CodeBuild",
          constant: "CODEBUILD",
          env: "CODEBUILD_BUILD_ARN"
        },
        {
          name: "Codeship",
          constant: "CODESHIP",
          env: { CI_NAME: "codeship" }
        },
        {
          name: "Drone",
          constant: "DRONE",
          env: "DRONE",
          pr: { DRONE_BUILD_EVENT: "pull_request" }
        },
        {
          name: "dsari",
          constant: "DSARI",
          env: "DSARI"
        },
        {
          name: "GitLab CI",
          constant: "GITLAB",
          env: "GITLAB_CI"
        },
        {
          name: "GoCD",
          constant: "GOCD",
          env: "GO_PIPELINE_LABEL"
        },
        {
          name: "Hudson",
          constant: "HUDSON",
          env: "HUDSON_URL"
        },
        {
          name: "Jenkins",
          constant: "JENKINS",
          env: ["JENKINS_URL", "BUILD_ID"],
          pr: { any: ["ghprbPullId", "CHANGE_ID"] }
        },
        {
          name: "Magnum CI",
          constant: "MAGNUM",
          env: "MAGNUM"
        },
        {
          name: "Netlify CI",
          constant: "NETLIFY",
          env: "NETLIFY_BUILD_BASE",
          pr: { env: "PULL_REQUEST", ne: "false" }
        },
        {
          name: "Sail CI",
          constant: "SAIL",
          env: "SAILCI",
          pr: "SAIL_PULL_REQUEST_NUMBER"
        },
        {
          name: "Semaphore",
          constant: "SEMAPHORE",
          env: "SEMAPHORE",
          pr: "PULL_REQUEST_NUMBER"
        },
        {
          name: "Shippable",
          constant: "SHIPPABLE",
          env: "SHIPPABLE",
          pr: { IS_PULL_REQUEST: "true" }
        },
        {
          name: "Solano CI",
          constant: "SOLANO",
          env: "TDDIUM",
          pr: "TDDIUM_PR_ID"
        },
        {
          name: "Strider CD",
          constant: "STRIDER",
          env: "STRIDER"
        },
        {
          name: "TaskCluster",
          constant: "TASKCLUSTER",
          env: ["TASK_ID", "RUN_ID"]
        },
        {
          name: "TeamCity",
          constant: "TEAMCITY",
          env: "TEAMCITY_VERSION"
        },
        {
          name: "Travis CI",
          constant: "TRAVIS",
          env: "TRAVIS",
          pr: { env: "TRAVIS_PULL_REQUEST", ne: "false" }
        }
      ];
    }
  });

  // ../../../.yarn/cache/ci-info-npm-2.0.0-78012236a1-3b374666a8.zip/node_modules/ci-info/index.js
  var require_ci_info = __commonJS({
    "../../../.yarn/cache/ci-info-npm-2.0.0-78012236a1-3b374666a8.zip/node_modules/ci-info/index.js"(exports2) {
      "use strict";
      var vendors = require_vendors();
      var env = process.env;
      Object.defineProperty(exports2, "_vendors", {
        value: vendors.map(function(v) {
          return v.constant;
        })
      });
      exports2.name = null;
      exports2.isPR = null;
      vendors.forEach(function(vendor) {
        var envs = Array.isArray(vendor.env) ? vendor.env : [vendor.env];
        var isCI = envs.every(function(obj) {
          return checkEnv(obj);
        });
        exports2[vendor.constant] = isCI;
        if (isCI) {
          exports2.name = vendor.name;
          switch (typeof vendor.pr) {
            case "string":
              exports2.isPR = !!env[vendor.pr];
              break;
            case "object":
              if ("env" in vendor.pr) {
                exports2.isPR = vendor.pr.env in env && env[vendor.pr.env] !== vendor.pr.ne;
              } else if ("any" in vendor.pr) {
                exports2.isPR = vendor.pr.any.some(function(key2) {
                  return !!env[key2];
                });
              } else {
                exports2.isPR = checkEnv(vendor.pr);
              }
              break;
            default:
              exports2.isPR = null;
          }
        }
      });
      exports2.isCI = !!(env.CI || env.CONTINUOUS_INTEGRATION || env.BUILD_NUMBER || env.RUN_ID || exports2.name || false);
      function checkEnv(obj) {
        if (typeof obj === "string")
          return !!env[obj];
        return Object.keys(obj).every(function(k) {
          return env[k] === obj[k];
        });
      }
    }
  });

  // ../../../.yarn/cache/is-ci-npm-2.0.0-8662a0f445-77b8690575.zip/node_modules/is-ci/index.js
  var require_is_ci = __commonJS({
    "../../../.yarn/cache/is-ci-npm-2.0.0-8662a0f445-77b8690575.zip/node_modules/is-ci/index.js"(exports2, module2) {
      "use strict";
      module2.exports = require_ci_info().isCI;
    }
  });

  // ../../../.yarn/cache/auto-bind-npm-4.0.0-1cda90694b-00cad71cce.zip/node_modules/auto-bind/index.js
  var require_auto_bind = __commonJS({
    "../../../.yarn/cache/auto-bind-npm-4.0.0-1cda90694b-00cad71cce.zip/node_modules/auto-bind/index.js"(exports2, module2) {
      "use strict";
      var getAllProperties = (object) => {
        const properties = /* @__PURE__ */ new Set();
        do {
          for (const key2 of Reflect.ownKeys(object)) {
            properties.add([object, key2]);
          }
        } while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);
        return properties;
      };
      module2.exports = (self2, { include, exclude } = {}) => {
        const filter = (key2) => {
          const match = (pattern) => typeof pattern === "string" ? key2 === pattern : pattern.test(key2);
          if (include) {
            return include.some(match);
          }
          if (exclude) {
            return !exclude.some(match);
          }
          return true;
        };
        for (const [object, key2] of getAllProperties(self2.constructor.prototype)) {
          if (key2 === "constructor" || !filter(key2)) {
            continue;
          }
          const descriptor = Reflect.getOwnPropertyDescriptor(object, key2);
          if (descriptor && typeof descriptor.value === "function") {
            self2[key2] = self2[key2].bind(self2);
          }
        }
        return self2;
      };
    }
  });

  // ../../../.yarn/cache/scheduler-npm-0.18.0-ee0cc1e577-5e6da4509a.zip/node_modules/scheduler/cjs/scheduler.production.min.js
  var require_scheduler_production_min = __commonJS({
    "../../../.yarn/cache/scheduler-npm-0.18.0-ee0cc1e577-5e6da4509a.zip/node_modules/scheduler/cjs/scheduler.production.min.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      var f;
      var g;
      var h;
      var k;
      var l;
      if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
        p = null, q = null, t = function() {
          if (null !== p)
            try {
              var a = exports2.unstable_now();
              p(true, a);
              p = null;
            } catch (b) {
              throw setTimeout(t, 0), b;
            }
        }, u = Date.now();
        exports2.unstable_now = function() {
          return Date.now() - u;
        };
        f = function(a) {
          null !== p ? setTimeout(f, 0, a) : (p = a, setTimeout(t, 0));
        };
        g = function(a, b) {
          q = setTimeout(a, b);
        };
        h = function() {
          clearTimeout(q);
        };
        k = function() {
          return false;
        };
        l = exports2.unstable_forceFrameRate = function() {
        };
      } else {
        w = window.performance, x = window.Date, y = window.setTimeout, z = window.clearTimeout;
        if ("undefined" !== typeof console) {
          A = window.cancelAnimationFrame;
          "function" !== typeof window.requestAnimationFrame && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");
          "function" !== typeof A && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");
        }
        if ("object" === typeof w && "function" === typeof w.now)
          exports2.unstable_now = function() {
            return w.now();
          };
        else {
          B = x.now();
          exports2.unstable_now = function() {
            return x.now() - B;
          };
        }
        C = false, D = null, E = -1, F = 5, G = 0;
        k = function() {
          return exports2.unstable_now() >= G;
        };
        l = function() {
        };
        exports2.unstable_forceFrameRate = function(a) {
          0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported") : F = 0 < a ? Math.floor(1e3 / a) : 5;
        };
        H = new MessageChannel(), I = H.port2;
        H.port1.onmessage = function() {
          if (null !== D) {
            var a = exports2.unstable_now();
            G = a + F;
            try {
              D(true, a) ? I.postMessage(null) : (C = false, D = null);
            } catch (b) {
              throw I.postMessage(null), b;
            }
          } else
            C = false;
        };
        f = function(a) {
          D = a;
          C || (C = true, I.postMessage(null));
        };
        g = function(a, b) {
          E = y(function() {
            a(exports2.unstable_now());
          }, b);
        };
        h = function() {
          z(E);
          E = -1;
        };
      }
      var p;
      var q;
      var t;
      var u;
      var w;
      var x;
      var y;
      var z;
      var A;
      var B;
      var C;
      var D;
      var E;
      var F;
      var G;
      var H;
      var I;
      function J(a, b) {
        var c = a.length;
        a.push(b);
        a:
          for (; ; ) {
            var d = Math.floor((c - 1) / 2), e = a[d];
            if (void 0 !== e && 0 < K(e, b))
              a[d] = b, a[c] = e, c = d;
            else
              break a;
          }
      }
      function L(a) {
        a = a[0];
        return void 0 === a ? null : a;
      }
      function M(a) {
        var b = a[0];
        if (void 0 !== b) {
          var c = a.pop();
          if (c !== b) {
            a[0] = c;
            a:
              for (var d = 0, e = a.length; d < e; ) {
                var m = 2 * (d + 1) - 1, n = a[m], v = m + 1, r = a[v];
                if (void 0 !== n && 0 > K(n, c))
                  void 0 !== r && 0 > K(r, n) ? (a[d] = r, a[v] = c, d = v) : (a[d] = n, a[m] = c, d = m);
                else if (void 0 !== r && 0 > K(r, c))
                  a[d] = r, a[v] = c, d = v;
                else
                  break a;
              }
          }
          return b;
        }
        return null;
      }
      function K(a, b) {
        var c = a.sortIndex - b.sortIndex;
        return 0 !== c ? c : a.id - b.id;
      }
      var N = [];
      var O = [];
      var P = 1;
      var Q = null;
      var R = 3;
      var S = false;
      var T = false;
      var U = false;
      function V(a) {
        for (var b = L(O); null !== b; ) {
          if (null === b.callback)
            M(O);
          else if (b.startTime <= a)
            M(O), b.sortIndex = b.expirationTime, J(N, b);
          else
            break;
          b = L(O);
        }
      }
      function W(a) {
        U = false;
        V(a);
        if (!T)
          if (null !== L(N))
            T = true, f(X);
          else {
            var b = L(O);
            null !== b && g(W, b.startTime - a);
          }
      }
      function X(a, b) {
        T = false;
        U && (U = false, h());
        S = true;
        var c = R;
        try {
          V(b);
          for (Q = L(N); null !== Q && (!(Q.expirationTime > b) || a && !k()); ) {
            var d = Q.callback;
            if (null !== d) {
              Q.callback = null;
              R = Q.priorityLevel;
              var e = d(Q.expirationTime <= b);
              b = exports2.unstable_now();
              "function" === typeof e ? Q.callback = e : Q === L(N) && M(N);
              V(b);
            } else
              M(N);
            Q = L(N);
          }
          if (null !== Q)
            var m = true;
          else {
            var n = L(O);
            null !== n && g(W, n.startTime - b);
            m = false;
          }
          return m;
        } finally {
          Q = null, R = c, S = false;
        }
      }
      function Y(a) {
        switch (a) {
          case 1:
            return -1;
          case 2:
            return 250;
          case 5:
            return 1073741823;
          case 4:
            return 1e4;
          default:
            return 5e3;
        }
      }
      var Z = l;
      exports2.unstable_ImmediatePriority = 1;
      exports2.unstable_UserBlockingPriority = 2;
      exports2.unstable_NormalPriority = 3;
      exports2.unstable_IdlePriority = 5;
      exports2.unstable_LowPriority = 4;
      exports2.unstable_runWithPriority = function(a, b) {
        switch (a) {
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
            break;
          default:
            a = 3;
        }
        var c = R;
        R = a;
        try {
          return b();
        } finally {
          R = c;
        }
      };
      exports2.unstable_next = function(a) {
        switch (R) {
          case 1:
          case 2:
          case 3:
            var b = 3;
            break;
          default:
            b = R;
        }
        var c = R;
        R = b;
        try {
          return a();
        } finally {
          R = c;
        }
      };
      exports2.unstable_scheduleCallback = function(a, b, c) {
        var d = exports2.unstable_now();
        if ("object" === typeof c && null !== c) {
          var e = c.delay;
          e = "number" === typeof e && 0 < e ? d + e : d;
          c = "number" === typeof c.timeout ? c.timeout : Y(a);
        } else
          c = Y(a), e = d;
        c = e + c;
        a = { id: P++, callback: b, priorityLevel: a, startTime: e, expirationTime: c, sortIndex: -1 };
        e > d ? (a.sortIndex = e, J(O, a), null === L(N) && a === L(O) && (U ? h() : U = true, g(W, e - d))) : (a.sortIndex = c, J(N, a), T || S || (T = true, f(X)));
        return a;
      };
      exports2.unstable_cancelCallback = function(a) {
        a.callback = null;
      };
      exports2.unstable_wrapCallback = function(a) {
        var b = R;
        return function() {
          var c = R;
          R = b;
          try {
            return a.apply(this, arguments);
          } finally {
            R = c;
          }
        };
      };
      exports2.unstable_getCurrentPriorityLevel = function() {
        return R;
      };
      exports2.unstable_shouldYield = function() {
        var a = exports2.unstable_now();
        V(a);
        var b = L(N);
        return b !== Q && null !== Q && null !== b && null !== b.callback && b.startTime <= a && b.expirationTime < Q.expirationTime || k();
      };
      exports2.unstable_requestPaint = Z;
      exports2.unstable_continueExecution = function() {
        T || S || (T = true, f(X));
      };
      exports2.unstable_pauseExecution = function() {
      };
      exports2.unstable_getFirstCallbackNode = function() {
        return L(N);
      };
      exports2.unstable_Profiling = null;
    }
  });

  // ../../../.yarn/cache/scheduler-npm-0.18.0-ee0cc1e577-5e6da4509a.zip/node_modules/scheduler/cjs/scheduler.development.js
  var require_scheduler_development = __commonJS({
    "../../../.yarn/cache/scheduler-npm-0.18.0-ee0cc1e577-5e6da4509a.zip/node_modules/scheduler/cjs/scheduler.development.js"(exports2) {
      "use strict";
      if (process.env.NODE_ENV !== "production") {
        (function() {
          "use strict";
          Object.defineProperty(exports2, "__esModule", { value: true });
          var enableSchedulerDebugging = false;
          var enableIsInputPending = false;
          var enableProfiling = true;
          var requestHostCallback;
          var requestHostTimeout;
          var cancelHostTimeout;
          var shouldYieldToHost;
          var requestPaint;
          if (typeof window === "undefined" || typeof MessageChannel !== "function") {
            var _callback = null;
            var _timeoutID = null;
            var _flushCallback = function() {
              if (_callback !== null) {
                try {
                  var currentTime = exports2.unstable_now();
                  var hasRemainingTime = true;
                  _callback(hasRemainingTime, currentTime);
                  _callback = null;
                } catch (e) {
                  setTimeout(_flushCallback, 0);
                  throw e;
                }
              }
            };
            var initialTime = Date.now();
            exports2.unstable_now = function() {
              return Date.now() - initialTime;
            };
            requestHostCallback = function(cb2) {
              if (_callback !== null) {
                setTimeout(requestHostCallback, 0, cb2);
              } else {
                _callback = cb2;
                setTimeout(_flushCallback, 0);
              }
            };
            requestHostTimeout = function(cb2, ms) {
              _timeoutID = setTimeout(cb2, ms);
            };
            cancelHostTimeout = function() {
              clearTimeout(_timeoutID);
            };
            shouldYieldToHost = function() {
              return false;
            };
            requestPaint = exports2.unstable_forceFrameRate = function() {
            };
          } else {
            var performance2 = window.performance;
            var _Date = window.Date;
            var _setTimeout = window.setTimeout;
            var _clearTimeout = window.clearTimeout;
            if (typeof console !== "undefined") {
              var requestAnimationFrame2 = window.requestAnimationFrame;
              var cancelAnimationFrame2 = window.cancelAnimationFrame;
              if (typeof requestAnimationFrame2 !== "function") {
                console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");
              }
              if (typeof cancelAnimationFrame2 !== "function") {
                console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");
              }
            }
            if (typeof performance2 === "object" && typeof performance2.now === "function") {
              exports2.unstable_now = function() {
                return performance2.now();
              };
            } else {
              var _initialTime = _Date.now();
              exports2.unstable_now = function() {
                return _Date.now() - _initialTime;
              };
            }
            var isMessageLoopRunning = false;
            var scheduledHostCallback = null;
            var taskTimeoutID = -1;
            var yieldInterval = 5;
            var deadline = 0;
            var maxYieldInterval = 300;
            var needsPaint = false;
            if (enableIsInputPending && navigator !== void 0 && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0) {
              var scheduling = navigator.scheduling;
              shouldYieldToHost = function() {
                var currentTime = exports2.unstable_now();
                if (currentTime >= deadline) {
                  if (needsPaint || scheduling.isInputPending()) {
                    return true;
                  }
                  return currentTime >= maxYieldInterval;
                } else {
                  return false;
                }
              };
              requestPaint = function() {
                needsPaint = true;
              };
            } else {
              shouldYieldToHost = function() {
                return exports2.unstable_now() >= deadline;
              };
              requestPaint = function() {
              };
            }
            exports2.unstable_forceFrameRate = function(fps) {
              if (fps < 0 || fps > 125) {
                console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported");
                return;
              }
              if (fps > 0) {
                yieldInterval = Math.floor(1e3 / fps);
              } else {
                yieldInterval = 5;
              }
            };
            var performWorkUntilDeadline = function() {
              if (scheduledHostCallback !== null) {
                var currentTime = exports2.unstable_now();
                deadline = currentTime + yieldInterval;
                var hasTimeRemaining = true;
                try {
                  var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
                  if (!hasMoreWork) {
                    isMessageLoopRunning = false;
                    scheduledHostCallback = null;
                  } else {
                    port.postMessage(null);
                  }
                } catch (error) {
                  port.postMessage(null);
                  throw error;
                }
              } else {
                isMessageLoopRunning = false;
              }
              needsPaint = false;
            };
            var channel = new MessageChannel();
            var port = channel.port2;
            channel.port1.onmessage = performWorkUntilDeadline;
            requestHostCallback = function(callback) {
              scheduledHostCallback = callback;
              if (!isMessageLoopRunning) {
                isMessageLoopRunning = true;
                port.postMessage(null);
              }
            };
            requestHostTimeout = function(callback, ms) {
              taskTimeoutID = _setTimeout(function() {
                callback(exports2.unstable_now());
              }, ms);
            };
            cancelHostTimeout = function() {
              _clearTimeout(taskTimeoutID);
              taskTimeoutID = -1;
            };
          }
          function push(heap, node) {
            var index = heap.length;
            heap.push(node);
            siftUp(heap, node, index);
          }
          function peek(heap) {
            var first = heap[0];
            return first === void 0 ? null : first;
          }
          function pop(heap) {
            var first = heap[0];
            if (first !== void 0) {
              var last = heap.pop();
              if (last !== first) {
                heap[0] = last;
                siftDown(heap, last, 0);
              }
              return first;
            } else {
              return null;
            }
          }
          function siftUp(heap, node, i2) {
            var index = i2;
            while (true) {
              var parentIndex = Math.floor((index - 1) / 2);
              var parent = heap[parentIndex];
              if (parent !== void 0 && compare(parent, node) > 0) {
                heap[parentIndex] = node;
                heap[index] = parent;
                index = parentIndex;
              } else {
                return;
              }
            }
          }
          function siftDown(heap, node, i2) {
            var index = i2;
            var length = heap.length;
            while (index < length) {
              var leftIndex = (index + 1) * 2 - 1;
              var left = heap[leftIndex];
              var rightIndex = leftIndex + 1;
              var right = heap[rightIndex];
              if (left !== void 0 && compare(left, node) < 0) {
                if (right !== void 0 && compare(right, left) < 0) {
                  heap[index] = right;
                  heap[rightIndex] = node;
                  index = rightIndex;
                } else {
                  heap[index] = left;
                  heap[leftIndex] = node;
                  index = leftIndex;
                }
              } else if (right !== void 0 && compare(right, node) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                return;
              }
            }
          }
          function compare(a, b) {
            var diff = a.sortIndex - b.sortIndex;
            return diff !== 0 ? diff : a.id - b.id;
          }
          var NoPriority = 0;
          var ImmediatePriority = 1;
          var UserBlockingPriority = 2;
          var NormalPriority = 3;
          var LowPriority = 4;
          var IdlePriority = 5;
          var runIdCounter = 0;
          var mainThreadIdCounter = 0;
          var profilingStateSize = 4;
          var sharedProfilingBuffer = enableProfiling ? typeof SharedArrayBuffer === "function" ? new SharedArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : typeof ArrayBuffer === "function" ? new ArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : null : null;
          var profilingState = enableProfiling && sharedProfilingBuffer !== null ? new Int32Array(sharedProfilingBuffer) : [];
          var PRIORITY = 0;
          var CURRENT_TASK_ID = 1;
          var CURRENT_RUN_ID = 2;
          var QUEUE_SIZE = 3;
          if (enableProfiling) {
            profilingState[PRIORITY] = NoPriority;
            profilingState[QUEUE_SIZE] = 0;
            profilingState[CURRENT_TASK_ID] = 0;
          }
          var INITIAL_EVENT_LOG_SIZE = 131072;
          var MAX_EVENT_LOG_SIZE = 524288;
          var eventLogSize = 0;
          var eventLogBuffer = null;
          var eventLog = null;
          var eventLogIndex = 0;
          var TaskStartEvent = 1;
          var TaskCompleteEvent = 2;
          var TaskErrorEvent = 3;
          var TaskCancelEvent = 4;
          var TaskRunEvent = 5;
          var TaskYieldEvent = 6;
          var SchedulerSuspendEvent = 7;
          var SchedulerResumeEvent = 8;
          function logEvent(entries) {
            if (eventLog !== null) {
              var offset = eventLogIndex;
              eventLogIndex += entries.length;
              if (eventLogIndex + 1 > eventLogSize) {
                eventLogSize *= 2;
                if (eventLogSize > MAX_EVENT_LOG_SIZE) {
                  console.error("Scheduler Profiling: Event log exceeded maximum size. Don't forget to call `stopLoggingProfilingEvents()`.");
                  stopLoggingProfilingEvents();
                  return;
                }
                var newEventLog = new Int32Array(eventLogSize * 4);
                newEventLog.set(eventLog);
                eventLogBuffer = newEventLog.buffer;
                eventLog = newEventLog;
              }
              eventLog.set(entries, offset);
            }
          }
          function startLoggingProfilingEvents() {
            eventLogSize = INITIAL_EVENT_LOG_SIZE;
            eventLogBuffer = new ArrayBuffer(eventLogSize * 4);
            eventLog = new Int32Array(eventLogBuffer);
            eventLogIndex = 0;
          }
          function stopLoggingProfilingEvents() {
            var buffer2 = eventLogBuffer;
            eventLogSize = 0;
            eventLogBuffer = null;
            eventLog = null;
            eventLogIndex = 0;
            return buffer2;
          }
          function markTaskStart(task, ms) {
            if (enableProfiling) {
              profilingState[QUEUE_SIZE]++;
              if (eventLog !== null) {
                logEvent([TaskStartEvent, ms * 1e3, task.id, task.priorityLevel]);
              }
            }
          }
          function markTaskCompleted(task, ms) {
            if (enableProfiling) {
              profilingState[PRIORITY] = NoPriority;
              profilingState[CURRENT_TASK_ID] = 0;
              profilingState[QUEUE_SIZE]--;
              if (eventLog !== null) {
                logEvent([TaskCompleteEvent, ms * 1e3, task.id]);
              }
            }
          }
          function markTaskCanceled(task, ms) {
            if (enableProfiling) {
              profilingState[QUEUE_SIZE]--;
              if (eventLog !== null) {
                logEvent([TaskCancelEvent, ms * 1e3, task.id]);
              }
            }
          }
          function markTaskErrored(task, ms) {
            if (enableProfiling) {
              profilingState[PRIORITY] = NoPriority;
              profilingState[CURRENT_TASK_ID] = 0;
              profilingState[QUEUE_SIZE]--;
              if (eventLog !== null) {
                logEvent([TaskErrorEvent, ms * 1e3, task.id]);
              }
            }
          }
          function markTaskRun(task, ms) {
            if (enableProfiling) {
              runIdCounter++;
              profilingState[PRIORITY] = task.priorityLevel;
              profilingState[CURRENT_TASK_ID] = task.id;
              profilingState[CURRENT_RUN_ID] = runIdCounter;
              if (eventLog !== null) {
                logEvent([TaskRunEvent, ms * 1e3, task.id, runIdCounter]);
              }
            }
          }
          function markTaskYield(task, ms) {
            if (enableProfiling) {
              profilingState[PRIORITY] = NoPriority;
              profilingState[CURRENT_TASK_ID] = 0;
              profilingState[CURRENT_RUN_ID] = 0;
              if (eventLog !== null) {
                logEvent([TaskYieldEvent, ms * 1e3, task.id, runIdCounter]);
              }
            }
          }
          function markSchedulerSuspended(ms) {
            if (enableProfiling) {
              mainThreadIdCounter++;
              if (eventLog !== null) {
                logEvent([SchedulerSuspendEvent, ms * 1e3, mainThreadIdCounter]);
              }
            }
          }
          function markSchedulerUnsuspended(ms) {
            if (enableProfiling) {
              if (eventLog !== null) {
                logEvent([SchedulerResumeEvent, ms * 1e3, mainThreadIdCounter]);
              }
            }
          }
          var maxSigned31BitInt = 1073741823;
          var IMMEDIATE_PRIORITY_TIMEOUT = -1;
          var USER_BLOCKING_PRIORITY = 250;
          var NORMAL_PRIORITY_TIMEOUT = 5e3;
          var LOW_PRIORITY_TIMEOUT = 1e4;
          var IDLE_PRIORITY = maxSigned31BitInt;
          var taskQueue = [];
          var timerQueue = [];
          var taskIdCounter = 1;
          var isSchedulerPaused = false;
          var currentTask = null;
          var currentPriorityLevel = NormalPriority;
          var isPerformingWork = false;
          var isHostCallbackScheduled = false;
          var isHostTimeoutScheduled = false;
          function advanceTimers(currentTime) {
            var timer = peek(timerQueue);
            while (timer !== null) {
              if (timer.callback === null) {
                pop(timerQueue);
              } else if (timer.startTime <= currentTime) {
                pop(timerQueue);
                timer.sortIndex = timer.expirationTime;
                push(taskQueue, timer);
                if (enableProfiling) {
                  markTaskStart(timer, currentTime);
                  timer.isQueued = true;
                }
              } else {
                return;
              }
              timer = peek(timerQueue);
            }
          }
          function handleTimeout(currentTime) {
            isHostTimeoutScheduled = false;
            advanceTimers(currentTime);
            if (!isHostCallbackScheduled) {
              if (peek(taskQueue) !== null) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
              } else {
                var firstTimer = peek(timerQueue);
                if (firstTimer !== null) {
                  requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
                }
              }
            }
          }
          function flushWork(hasTimeRemaining, initialTime2) {
            if (enableProfiling) {
              markSchedulerUnsuspended(initialTime2);
            }
            isHostCallbackScheduled = false;
            if (isHostTimeoutScheduled) {
              isHostTimeoutScheduled = false;
              cancelHostTimeout();
            }
            isPerformingWork = true;
            var previousPriorityLevel = currentPriorityLevel;
            try {
              if (enableProfiling) {
                try {
                  return workLoop(hasTimeRemaining, initialTime2);
                } catch (error) {
                  if (currentTask !== null) {
                    var currentTime = exports2.unstable_now();
                    markTaskErrored(currentTask, currentTime);
                    currentTask.isQueued = false;
                  }
                  throw error;
                }
              } else {
                return workLoop(hasTimeRemaining, initialTime2);
              }
            } finally {
              currentTask = null;
              currentPriorityLevel = previousPriorityLevel;
              isPerformingWork = false;
              if (enableProfiling) {
                var _currentTime = exports2.unstable_now();
                markSchedulerSuspended(_currentTime);
              }
            }
          }
          function workLoop(hasTimeRemaining, initialTime2) {
            var currentTime = initialTime2;
            advanceTimers(currentTime);
            currentTask = peek(taskQueue);
            while (currentTask !== null && !(enableSchedulerDebugging && isSchedulerPaused)) {
              if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
                break;
              }
              var callback = currentTask.callback;
              if (callback !== null) {
                currentTask.callback = null;
                currentPriorityLevel = currentTask.priorityLevel;
                var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
                markTaskRun(currentTask, currentTime);
                var continuationCallback = callback(didUserCallbackTimeout);
                currentTime = exports2.unstable_now();
                if (typeof continuationCallback === "function") {
                  currentTask.callback = continuationCallback;
                  markTaskYield(currentTask, currentTime);
                } else {
                  if (enableProfiling) {
                    markTaskCompleted(currentTask, currentTime);
                    currentTask.isQueued = false;
                  }
                  if (currentTask === peek(taskQueue)) {
                    pop(taskQueue);
                  }
                }
                advanceTimers(currentTime);
              } else {
                pop(taskQueue);
              }
              currentTask = peek(taskQueue);
            }
            if (currentTask !== null) {
              return true;
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
              return false;
            }
          }
          function unstable_runWithPriority(priorityLevel, eventHandler) {
            switch (priorityLevel) {
              case ImmediatePriority:
              case UserBlockingPriority:
              case NormalPriority:
              case LowPriority:
              case IdlePriority:
                break;
              default:
                priorityLevel = NormalPriority;
            }
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = priorityLevel;
            try {
              return eventHandler();
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          }
          function unstable_next(eventHandler) {
            var priorityLevel;
            switch (currentPriorityLevel) {
              case ImmediatePriority:
              case UserBlockingPriority:
              case NormalPriority:
                priorityLevel = NormalPriority;
                break;
              default:
                priorityLevel = currentPriorityLevel;
                break;
            }
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = priorityLevel;
            try {
              return eventHandler();
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          }
          function unstable_wrapCallback(callback) {
            var parentPriorityLevel = currentPriorityLevel;
            return function() {
              var previousPriorityLevel = currentPriorityLevel;
              currentPriorityLevel = parentPriorityLevel;
              try {
                return callback.apply(this, arguments);
              } finally {
                currentPriorityLevel = previousPriorityLevel;
              }
            };
          }
          function timeoutForPriorityLevel(priorityLevel) {
            switch (priorityLevel) {
              case ImmediatePriority:
                return IMMEDIATE_PRIORITY_TIMEOUT;
              case UserBlockingPriority:
                return USER_BLOCKING_PRIORITY;
              case IdlePriority:
                return IDLE_PRIORITY;
              case LowPriority:
                return LOW_PRIORITY_TIMEOUT;
              case NormalPriority:
              default:
                return NORMAL_PRIORITY_TIMEOUT;
            }
          }
          function unstable_scheduleCallback(priorityLevel, callback, options) {
            var currentTime = exports2.unstable_now();
            var startTime;
            var timeout;
            if (typeof options === "object" && options !== null) {
              var delay = options.delay;
              if (typeof delay === "number" && delay > 0) {
                startTime = currentTime + delay;
              } else {
                startTime = currentTime;
              }
              timeout = typeof options.timeout === "number" ? options.timeout : timeoutForPriorityLevel(priorityLevel);
            } else {
              timeout = timeoutForPriorityLevel(priorityLevel);
              startTime = currentTime;
            }
            var expirationTime = startTime + timeout;
            var newTask = {
              id: taskIdCounter++,
              callback,
              priorityLevel,
              startTime,
              expirationTime,
              sortIndex: -1
            };
            if (enableProfiling) {
              newTask.isQueued = false;
            }
            if (startTime > currentTime) {
              newTask.sortIndex = startTime;
              push(timerQueue, newTask);
              if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
                if (isHostTimeoutScheduled) {
                  cancelHostTimeout();
                } else {
                  isHostTimeoutScheduled = true;
                }
                requestHostTimeout(handleTimeout, startTime - currentTime);
              }
            } else {
              newTask.sortIndex = expirationTime;
              push(taskQueue, newTask);
              if (enableProfiling) {
                markTaskStart(newTask, currentTime);
                newTask.isQueued = true;
              }
              if (!isHostCallbackScheduled && !isPerformingWork) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
              }
            }
            return newTask;
          }
          function unstable_pauseExecution() {
            isSchedulerPaused = true;
          }
          function unstable_continueExecution() {
            isSchedulerPaused = false;
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          function unstable_getFirstCallbackNode() {
            return peek(taskQueue);
          }
          function unstable_cancelCallback(task) {
            if (enableProfiling) {
              if (task.isQueued) {
                var currentTime = exports2.unstable_now();
                markTaskCanceled(task, currentTime);
                task.isQueued = false;
              }
            }
            task.callback = null;
          }
          function unstable_getCurrentPriorityLevel() {
            return currentPriorityLevel;
          }
          function unstable_shouldYield() {
            var currentTime = exports2.unstable_now();
            advanceTimers(currentTime);
            var firstTask = peek(taskQueue);
            return firstTask !== currentTask && currentTask !== null && firstTask !== null && firstTask.callback !== null && firstTask.startTime <= currentTime && firstTask.expirationTime < currentTask.expirationTime || shouldYieldToHost();
          }
          var unstable_requestPaint = requestPaint;
          var unstable_Profiling = enableProfiling ? {
            startLoggingProfilingEvents,
            stopLoggingProfilingEvents,
            sharedProfilingBuffer
          } : null;
          exports2.unstable_ImmediatePriority = ImmediatePriority;
          exports2.unstable_UserBlockingPriority = UserBlockingPriority;
          exports2.unstable_NormalPriority = NormalPriority;
          exports2.unstable_IdlePriority = IdlePriority;
          exports2.unstable_LowPriority = LowPriority;
          exports2.unstable_runWithPriority = unstable_runWithPriority;
          exports2.unstable_next = unstable_next;
          exports2.unstable_scheduleCallback = unstable_scheduleCallback;
          exports2.unstable_cancelCallback = unstable_cancelCallback;
          exports2.unstable_wrapCallback = unstable_wrapCallback;
          exports2.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
          exports2.unstable_shouldYield = unstable_shouldYield;
          exports2.unstable_requestPaint = unstable_requestPaint;
          exports2.unstable_continueExecution = unstable_continueExecution;
          exports2.unstable_pauseExecution = unstable_pauseExecution;
          exports2.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
          exports2.unstable_Profiling = unstable_Profiling;
        })();
      }
    }
  });

  // ../../../.yarn/cache/scheduler-npm-0.18.0-ee0cc1e577-5e6da4509a.zip/node_modules/scheduler/index.js
  var require_scheduler = __commonJS({
    "../../../.yarn/cache/scheduler-npm-0.18.0-ee0cc1e577-5e6da4509a.zip/node_modules/scheduler/index.js"(exports2, module2) {
      "use strict";
      if (process.env.NODE_ENV === "production") {
        module2.exports = require_scheduler_production_min();
      } else {
        module2.exports = require_scheduler_development();
      }
    }
  });

  // ../../../.yarn/__virtual__/react-reconciler-virtual-70b71e3ad2/0/cache/react-reconciler-npm-0.24.0-eaeed763d0-f544f94e10.zip/node_modules/react-reconciler/cjs/react-reconciler.production.min.js
  var require_react_reconciler_production_min = __commonJS({
    "../../../.yarn/__virtual__/react-reconciler-virtual-70b71e3ad2/0/cache/react-reconciler-npm-0.24.0-eaeed763d0-f544f94e10.zip/node_modules/react-reconciler/cjs/react-reconciler.production.min.js"(exports2, module2) {
      module2.exports = function $$$reconciler($$$hostConfig) {
        "use strict";
        var aa = require_object_assign(), ba = require_react(), m = require_scheduler();
        function n(a) {
          for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)
            b += "&args[]=" + encodeURIComponent(arguments[c]);
          return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
        }
        var q = ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        q.hasOwnProperty("ReactCurrentDispatcher") || (q.ReactCurrentDispatcher = { current: null });
        q.hasOwnProperty("ReactCurrentBatchConfig") || (q.ReactCurrentBatchConfig = { suspense: null });
        var u = "function" === typeof Symbol && Symbol.for, ca = u ? Symbol.for("react.element") : 60103, da = u ? Symbol.for("react.portal") : 60106, ea = u ? Symbol.for("react.fragment") : 60107, fa = u ? Symbol.for("react.strict_mode") : 60108, ha = u ? Symbol.for("react.profiler") : 60114, ia = u ? Symbol.for("react.provider") : 60109, ja = u ? Symbol.for("react.context") : 60110, ka = u ? Symbol.for("react.concurrent_mode") : 60111, la = u ? Symbol.for("react.forward_ref") : 60112, ma = u ? Symbol.for("react.suspense") : 60113, na = u ? Symbol.for("react.suspense_list") : 60120, oa = u ? Symbol.for("react.memo") : 60115, pa = u ? Symbol.for("react.lazy") : 60116;
        u && Symbol.for("react.fundamental");
        u && Symbol.for("react.responder");
        u && Symbol.for("react.scope");
        var qa = "function" === typeof Symbol && Symbol.iterator;
        function ra(a) {
          if (null === a || "object" !== typeof a)
            return null;
          a = qa && a[qa] || a["@@iterator"];
          return "function" === typeof a ? a : null;
        }
        function sa(a) {
          if (-1 === a._status) {
            a._status = 0;
            var b = a._ctor;
            b = b();
            a._result = b;
            b.then(function(b2) {
              0 === a._status && (b2 = b2.default, a._status = 1, a._result = b2);
            }, function(b2) {
              0 === a._status && (a._status = 2, a._result = b2);
            });
          }
        }
        function ta(a) {
          if (null == a)
            return null;
          if ("function" === typeof a)
            return a.displayName || a.name || null;
          if ("string" === typeof a)
            return a;
          switch (a) {
            case ea:
              return "Fragment";
            case da:
              return "Portal";
            case ha:
              return "Profiler";
            case fa:
              return "StrictMode";
            case ma:
              return "Suspense";
            case na:
              return "SuspenseList";
          }
          if ("object" === typeof a)
            switch (a.$$typeof) {
              case ja:
                return "Context.Consumer";
              case ia:
                return "Context.Provider";
              case la:
                var b = a.render;
                b = b.displayName || b.name || "";
                return a.displayName || ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");
              case oa:
                return ta(a.type);
              case pa:
                if (a = 1 === a._status ? a._result : null)
                  return ta(a);
            }
          return null;
        }
        function ua(a) {
          var b = a, c = a;
          if (a.alternate)
            for (; b.return; )
              b = b.return;
          else {
            a = b;
            do
              b = a, 0 !== (b.effectTag & 1026) && (c = b.return), a = b.return;
            while (a);
          }
          return 3 === b.tag ? c : null;
        }
        function va(a) {
          if (ua(a) !== a)
            throw Error(n(188));
        }
        function wa(a) {
          var b = a.alternate;
          if (!b) {
            b = ua(a);
            if (null === b)
              throw Error(n(188));
            return b !== a ? null : a;
          }
          for (var c = a, d = b; ; ) {
            var e = c.return;
            if (null === e)
              break;
            var f = e.alternate;
            if (null === f) {
              d = e.return;
              if (null !== d) {
                c = d;
                continue;
              }
              break;
            }
            if (e.child === f.child) {
              for (f = e.child; f; ) {
                if (f === c)
                  return va(e), a;
                if (f === d)
                  return va(e), b;
                f = f.sibling;
              }
              throw Error(n(188));
            }
            if (c.return !== d.return)
              c = e, d = f;
            else {
              for (var g = false, l = e.child; l; ) {
                if (l === c) {
                  g = true;
                  c = e;
                  d = f;
                  break;
                }
                if (l === d) {
                  g = true;
                  d = e;
                  c = f;
                  break;
                }
                l = l.sibling;
              }
              if (!g) {
                for (l = f.child; l; ) {
                  if (l === c) {
                    g = true;
                    c = f;
                    d = e;
                    break;
                  }
                  if (l === d) {
                    g = true;
                    d = f;
                    c = e;
                    break;
                  }
                  l = l.sibling;
                }
                if (!g)
                  throw Error(n(189));
              }
            }
            if (c.alternate !== d)
              throw Error(n(190));
          }
          if (3 !== c.tag)
            throw Error(n(188));
          return c.stateNode.current === c ? a : b;
        }
        function xa(a) {
          a = wa(a);
          if (!a)
            return null;
          for (var b = a; ; ) {
            if (5 === b.tag || 6 === b.tag)
              return b;
            if (b.child)
              b.child.return = b, b = b.child;
            else {
              if (b === a)
                break;
              for (; !b.sibling; ) {
                if (!b.return || b.return === a)
                  return null;
                b = b.return;
              }
              b.sibling.return = b.return;
              b = b.sibling;
            }
          }
          return null;
        }
        function ya(a) {
          a = wa(a);
          if (!a)
            return null;
          for (var b = a; ; ) {
            if (5 === b.tag || 6 === b.tag)
              return b;
            if (b.child && 4 !== b.tag)
              b.child.return = b, b = b.child;
            else {
              if (b === a)
                break;
              for (; !b.sibling; ) {
                if (!b.return || b.return === a)
                  return null;
                b = b.return;
              }
              b.sibling.return = b.return;
              b = b.sibling;
            }
          }
          return null;
        }
        var za = $$$hostConfig.getPublicInstance, Aa = $$$hostConfig.getRootHostContext, Ba = $$$hostConfig.getChildHostContext, Ca = $$$hostConfig.prepareForCommit, Da = $$$hostConfig.resetAfterCommit, Ea = $$$hostConfig.createInstance, Fa = $$$hostConfig.appendInitialChild, Ga = $$$hostConfig.finalizeInitialChildren, Ia = $$$hostConfig.prepareUpdate, Ja = $$$hostConfig.shouldSetTextContent, Ka = $$$hostConfig.shouldDeprioritizeSubtree, La = $$$hostConfig.createTextInstance, Ma = $$$hostConfig.setTimeout, Na = $$$hostConfig.clearTimeout, Oa = $$$hostConfig.noTimeout, Pa = $$$hostConfig.isPrimaryRenderer, Qa = $$$hostConfig.supportsMutation, Ra = $$$hostConfig.supportsPersistence, Sa = $$$hostConfig.supportsHydration, Ta = $$$hostConfig.appendChild, Ua = $$$hostConfig.appendChildToContainer, Va = $$$hostConfig.commitTextUpdate, Wa = $$$hostConfig.commitMount, Xa = $$$hostConfig.commitUpdate, Ya = $$$hostConfig.insertBefore, Za = $$$hostConfig.insertInContainerBefore, $a = $$$hostConfig.removeChild, ab = $$$hostConfig.removeChildFromContainer, bb = $$$hostConfig.resetTextContent, cb2 = $$$hostConfig.hideInstance, db = $$$hostConfig.hideTextInstance, eb = $$$hostConfig.unhideInstance, fb = $$$hostConfig.unhideTextInstance, gb = $$$hostConfig.cloneInstance, hb = $$$hostConfig.createContainerChildSet, ib = $$$hostConfig.appendChildToContainerChildSet, kb = $$$hostConfig.finalizeContainerChildren, lb = $$$hostConfig.replaceContainerChildren, mb = $$$hostConfig.cloneHiddenInstance, nb = $$$hostConfig.cloneHiddenTextInstance, ob = $$$hostConfig.canHydrateInstance, pb = $$$hostConfig.canHydrateTextInstance, qb = $$$hostConfig.isSuspenseInstancePending, rb = $$$hostConfig.isSuspenseInstanceFallback, sb = $$$hostConfig.getNextHydratableSibling, tb = $$$hostConfig.getFirstHydratableChild, ub = $$$hostConfig.hydrateInstance, vb = $$$hostConfig.hydrateTextInstance, wb = $$$hostConfig.getNextHydratableInstanceAfterSuspenseInstance, xb = $$$hostConfig.commitHydratedContainer, yb = $$$hostConfig.commitHydratedSuspenseInstance, zb = /^(.*)[\\\/]/;
        function Ab(a) {
          var b = "";
          do {
            a:
              switch (a.tag) {
                case 3:
                case 4:
                case 6:
                case 7:
                case 10:
                case 9:
                  var c = "";
                  break a;
                default:
                  var d = a._debugOwner, e = a._debugSource, f = ta(a.type);
                  c = null;
                  d && (c = ta(d.type));
                  d = f;
                  f = "";
                  e ? f = " (at " + e.fileName.replace(zb, "") + ":" + e.lineNumber + ")" : c && (f = " (created by " + c + ")");
                  c = "\n    in " + (d || "Unknown") + f;
              }
            b += c;
            a = a.return;
          } while (a);
          return b;
        }
        /* @__PURE__ */ new Set();
        var Bb = [], Cb = -1;
        function y(a) {
          0 > Cb || (a.current = Bb[Cb], Bb[Cb] = null, Cb--);
        }
        function z(a, b) {
          Cb++;
          Bb[Cb] = a.current;
          a.current = b;
        }
        var Db = {}, A = { current: Db }, B = { current: false }, Eb = Db;
        function Fb(a, b) {
          var c = a.type.contextTypes;
          if (!c)
            return Db;
          var d = a.stateNode;
          if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
            return d.__reactInternalMemoizedMaskedChildContext;
          var e = {}, f;
          for (f in c)
            e[f] = b[f];
          d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
          return e;
        }
        function C(a) {
          a = a.childContextTypes;
          return null !== a && void 0 !== a;
        }
        function Gb(a) {
          y(B, a);
          y(A, a);
        }
        function Hb(a) {
          y(B, a);
          y(A, a);
        }
        function Ib(a, b, c) {
          if (A.current !== Db)
            throw Error(n(168));
          z(A, b, a);
          z(B, c, a);
        }
        function Jb(a, b, c) {
          var d = a.stateNode;
          a = b.childContextTypes;
          if ("function" !== typeof d.getChildContext)
            return c;
          d = d.getChildContext();
          for (var e in d)
            if (!(e in a))
              throw Error(n(108, ta(b) || "Unknown", e));
          return aa({}, c, {}, d);
        }
        function Kb(a) {
          var b = a.stateNode;
          b = b && b.__reactInternalMemoizedMergedChildContext || Db;
          Eb = A.current;
          z(A, b, a);
          z(B, B.current, a);
          return true;
        }
        function Lb(a, b, c) {
          var d = a.stateNode;
          if (!d)
            throw Error(n(169));
          c ? (b = Jb(a, b, Eb), d.__reactInternalMemoizedMergedChildContext = b, y(B, a), y(A, a), z(A, b, a)) : y(B, a);
          z(B, c, a);
        }
        var Mb = m.unstable_runWithPriority, Nb = m.unstable_scheduleCallback, Ob = m.unstable_cancelCallback, Pb = m.unstable_shouldYield, Qb = m.unstable_requestPaint, Rb = m.unstable_now, Ub = m.unstable_getCurrentPriorityLevel, Vb = m.unstable_ImmediatePriority, Wb = m.unstable_UserBlockingPriority, Xb = m.unstable_NormalPriority, Yb = m.unstable_LowPriority, Zb = m.unstable_IdlePriority, $b = {}, ac = void 0 !== Qb ? Qb : function() {
        }, bc = null, cc = null, dc = false, ec = Rb(), E = 1e4 > ec ? Rb : function() {
          return Rb() - ec;
        };
        function fc() {
          switch (Ub()) {
            case Vb:
              return 99;
            case Wb:
              return 98;
            case Xb:
              return 97;
            case Yb:
              return 96;
            case Zb:
              return 95;
            default:
              throw Error(n(332));
          }
        }
        function gc(a) {
          switch (a) {
            case 99:
              return Vb;
            case 98:
              return Wb;
            case 97:
              return Xb;
            case 96:
              return Yb;
            case 95:
              return Zb;
            default:
              throw Error(n(332));
          }
        }
        function hc(a, b) {
          a = gc(a);
          return Mb(a, b);
        }
        function ic(a, b, c) {
          a = gc(a);
          return Nb(a, b, c);
        }
        function jc(a) {
          null === bc ? (bc = [a], cc = Nb(Vb, kc)) : bc.push(a);
          return $b;
        }
        function F() {
          if (null !== cc) {
            var a = cc;
            cc = null;
            Ob(a);
          }
          kc();
        }
        function kc() {
          if (!dc && null !== bc) {
            dc = true;
            var a = 0;
            try {
              var b = bc;
              hc(99, function() {
                for (; a < b.length; a++) {
                  var c = b[a];
                  do
                    c = c(true);
                  while (null !== c);
                }
              });
              bc = null;
            } catch (c) {
              throw null !== bc && (bc = bc.slice(a + 1)), Nb(Vb, F), c;
            } finally {
              dc = false;
            }
          }
        }
        var lc = 3;
        function mc(a, b, c) {
          c /= 10;
          return 1073741821 - (((1073741821 - a + b / 10) / c | 0) + 1) * c;
        }
        function nc(a, b) {
          return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
        }
        var oc = "function" === typeof Object.is ? Object.is : nc, pc = Object.prototype.hasOwnProperty;
        function qc(a, b) {
          if (oc(a, b))
            return true;
          if ("object" !== typeof a || null === a || "object" !== typeof b || null === b)
            return false;
          var c = Object.keys(a), d = Object.keys(b);
          if (c.length !== d.length)
            return false;
          for (d = 0; d < c.length; d++)
            if (!pc.call(b, c[d]) || !oc(a[c[d]], b[c[d]]))
              return false;
          return true;
        }
        function rc(a, b) {
          if (a && a.defaultProps) {
            b = aa({}, b);
            a = a.defaultProps;
            for (var c in a)
              void 0 === b[c] && (b[c] = a[c]);
          }
          return b;
        }
        var sc = { current: null }, tc = null, uc = null, vc = null;
        function wc() {
          vc = uc = tc = null;
        }
        function xc(a, b) {
          var c = a.type._context;
          Pa ? (z(sc, c._currentValue, a), c._currentValue = b) : (z(sc, c._currentValue2, a), c._currentValue2 = b);
        }
        function yc(a) {
          var b = sc.current;
          y(sc, a);
          a = a.type._context;
          Pa ? a._currentValue = b : a._currentValue2 = b;
        }
        function zc(a, b) {
          for (; null !== a; ) {
            var c = a.alternate;
            if (a.childExpirationTime < b)
              a.childExpirationTime = b, null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);
            else if (null !== c && c.childExpirationTime < b)
              c.childExpirationTime = b;
            else
              break;
            a = a.return;
          }
        }
        function Ac(a, b) {
          tc = a;
          vc = uc = null;
          a = a.dependencies;
          null !== a && null !== a.firstContext && (a.expirationTime >= b && (Bc = true), a.firstContext = null);
        }
        function Cc(a, b) {
          if (vc !== a && false !== b && 0 !== b) {
            if ("number" !== typeof b || 1073741823 === b)
              vc = a, b = 1073741823;
            b = { context: a, observedBits: b, next: null };
            if (null === uc) {
              if (null === tc)
                throw Error(n(308));
              uc = b;
              tc.dependencies = { expirationTime: 0, firstContext: b, responders: null };
            } else
              uc = uc.next = b;
          }
          return Pa ? a._currentValue : a._currentValue2;
        }
        var Dc = false;
        function Ec(a) {
          return { baseState: a, firstUpdate: null, lastUpdate: null, firstCapturedUpdate: null, lastCapturedUpdate: null, firstEffect: null, lastEffect: null, firstCapturedEffect: null, lastCapturedEffect: null };
        }
        function Fc(a) {
          return { baseState: a.baseState, firstUpdate: a.firstUpdate, lastUpdate: a.lastUpdate, firstCapturedUpdate: null, lastCapturedUpdate: null, firstEffect: null, lastEffect: null, firstCapturedEffect: null, lastCapturedEffect: null };
        }
        function Gc(a, b) {
          return { expirationTime: a, suspenseConfig: b, tag: 0, payload: null, callback: null, next: null, nextEffect: null };
        }
        function Hc(a, b) {
          null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);
        }
        function Ic(a, b) {
          var c = a.alternate;
          if (null === c) {
            var d = a.updateQueue;
            var e = null;
            null === d && (d = a.updateQueue = Ec(a.memoizedState));
          } else
            d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = Ec(a.memoizedState), e = c.updateQueue = Ec(c.memoizedState)) : d = a.updateQueue = Fc(e) : null === e && (e = c.updateQueue = Fc(d));
          null === e || d === e ? Hc(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (Hc(d, b), Hc(e, b)) : (Hc(d, b), e.lastUpdate = b);
        }
        function Jc(a, b) {
          var c = a.updateQueue;
          c = null === c ? a.updateQueue = Ec(a.memoizedState) : Kc(a, c);
          null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);
        }
        function Kc(a, b) {
          var c = a.alternate;
          null !== c && b === c.updateQueue && (b = a.updateQueue = Fc(b));
          return b;
        }
        function Lc(a, b, c, d, e, f) {
          switch (c.tag) {
            case 1:
              return a = c.payload, "function" === typeof a ? a.call(f, d, e) : a;
            case 3:
              a.effectTag = a.effectTag & -4097 | 64;
            case 0:
              a = c.payload;
              e = "function" === typeof a ? a.call(f, d, e) : a;
              if (null === e || void 0 === e)
                break;
              return aa({}, d, e);
            case 2:
              Dc = true;
          }
          return d;
        }
        function Nc(a, b, c, d, e) {
          Dc = false;
          b = Kc(a, b);
          for (var f = b.baseState, g = null, l = 0, h = b.firstUpdate, k = f; null !== h; ) {
            var p = h.expirationTime;
            p < e ? (null === g && (g = h, f = k), l < p && (l = p)) : (Oc(p, h.suspenseConfig), k = Lc(a, b, h, k, c, d), null !== h.callback && (a.effectTag |= 32, h.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = h : (b.lastEffect.nextEffect = h, b.lastEffect = h)));
            h = h.next;
          }
          p = null;
          for (h = b.firstCapturedUpdate; null !== h; ) {
            var D = h.expirationTime;
            D < e ? (null === p && (p = h, null === g && (f = k)), l < D && (l = D)) : (k = Lc(a, b, h, k, c, d), null !== h.callback && (a.effectTag |= 32, h.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = h : (b.lastCapturedEffect.nextEffect = h, b.lastCapturedEffect = h)));
            h = h.next;
          }
          null === g && (b.lastUpdate = null);
          null === p ? b.lastCapturedUpdate = null : a.effectTag |= 32;
          null === g && null === p && (f = k);
          b.baseState = f;
          b.firstUpdate = g;
          b.firstCapturedUpdate = p;
          Pc(l);
          a.expirationTime = l;
          a.memoizedState = k;
        }
        function Qc(a, b, c) {
          null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);
          Rc(b.firstEffect, c);
          b.firstEffect = b.lastEffect = null;
          Rc(b.firstCapturedEffect, c);
          b.firstCapturedEffect = b.lastCapturedEffect = null;
        }
        function Rc(a, b) {
          for (; null !== a; ) {
            var c = a.callback;
            if (null !== c) {
              a.callback = null;
              var d = b;
              if ("function" !== typeof c)
                throw Error(n(191, c));
              c.call(d);
            }
            a = a.nextEffect;
          }
        }
        var Sc = q.ReactCurrentBatchConfig, Tc = new ba.Component().refs;
        function Uc(a, b, c, d) {
          b = a.memoizedState;
          c = c(d, b);
          c = null === c || void 0 === c ? b : aa({}, b, c);
          a.memoizedState = c;
          d = a.updateQueue;
          null !== d && 0 === a.expirationTime && (d.baseState = c);
        }
        var Xc = { isMounted: function(a) {
          return (a = a._reactInternalFiber) ? ua(a) === a : false;
        }, enqueueSetState: function(a, b, c) {
          a = a._reactInternalFiber;
          var d = G(), e = Sc.suspense;
          d = Vc(d, a, e);
          e = Gc(d, e);
          e.payload = b;
          void 0 !== c && null !== c && (e.callback = c);
          Ic(a, e);
          Wc(a, d);
        }, enqueueReplaceState: function(a, b, c) {
          a = a._reactInternalFiber;
          var d = G(), e = Sc.suspense;
          d = Vc(d, a, e);
          e = Gc(d, e);
          e.tag = 1;
          e.payload = b;
          void 0 !== c && null !== c && (e.callback = c);
          Ic(a, e);
          Wc(a, d);
        }, enqueueForceUpdate: function(a, b) {
          a = a._reactInternalFiber;
          var c = G(), d = Sc.suspense;
          c = Vc(c, a, d);
          d = Gc(c, d);
          d.tag = 2;
          void 0 !== b && null !== b && (d.callback = b);
          Ic(a, d);
          Wc(a, c);
        } };
        function Yc(a, b, c, d, e, f, g) {
          a = a.stateNode;
          return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !qc(c, d) || !qc(e, f) : true;
        }
        function Zc(a, b, c) {
          var d = false, e = Db;
          var f = b.contextType;
          "object" === typeof f && null !== f ? f = Cc(f) : (e = C(b) ? Eb : A.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Fb(a, e) : Db);
          b = new b(c, f);
          a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
          b.updater = Xc;
          a.stateNode = b;
          b._reactInternalFiber = a;
          d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);
          return b;
        }
        function $c(a, b, c, d) {
          a = b.state;
          "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
          "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
          b.state !== a && Xc.enqueueReplaceState(b, b.state, null);
        }
        function ad(a, b, c, d) {
          var e = a.stateNode;
          e.props = c;
          e.state = a.memoizedState;
          e.refs = Tc;
          var f = b.contextType;
          "object" === typeof f && null !== f ? e.context = Cc(f) : (f = C(b) ? Eb : A.current, e.context = Fb(a, f));
          f = a.updateQueue;
          null !== f && (Nc(a, f, c, e, d), e.state = a.memoizedState);
          f = b.getDerivedStateFromProps;
          "function" === typeof f && (Uc(a, b, f, c), e.state = a.memoizedState);
          "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && Xc.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (Nc(a, f, c, e, d), e.state = a.memoizedState));
          "function" === typeof e.componentDidMount && (a.effectTag |= 4);
        }
        var bd = Array.isArray;
        function cd(a, b, c) {
          a = c.ref;
          if (null !== a && "function" !== typeof a && "object" !== typeof a) {
            if (c._owner) {
              c = c._owner;
              if (c) {
                if (1 !== c.tag)
                  throw Error(n(309));
                var d = c.stateNode;
              }
              if (!d)
                throw Error(n(147, a));
              var e = "" + a;
              if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === e)
                return b.ref;
              b = function(b2) {
                var a2 = d.refs;
                a2 === Tc && (a2 = d.refs = {});
                null === b2 ? delete a2[e] : a2[e] = b2;
              };
              b._stringRef = e;
              return b;
            }
            if ("string" !== typeof a)
              throw Error(n(284));
            if (!c._owner)
              throw Error(n(290, a));
          }
          return a;
        }
        function dd(a, b) {
          if ("textarea" !== a.type)
            throw Error(n(31, "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b, ""));
        }
        function ed(a) {
          function b(b2, c2) {
            if (a) {
              var d2 = b2.lastEffect;
              null !== d2 ? (d2.nextEffect = c2, b2.lastEffect = c2) : b2.firstEffect = b2.lastEffect = c2;
              c2.nextEffect = null;
              c2.effectTag = 8;
            }
          }
          function c(c2, d2) {
            if (!a)
              return null;
            for (; null !== d2; )
              b(c2, d2), d2 = d2.sibling;
            return null;
          }
          function d(b2, a2) {
            for (b2 = /* @__PURE__ */ new Map(); null !== a2; )
              null !== a2.key ? b2.set(a2.key, a2) : b2.set(a2.index, a2), a2 = a2.sibling;
            return b2;
          }
          function e(b2, a2, c2) {
            b2 = fd(b2, a2, c2);
            b2.index = 0;
            b2.sibling = null;
            return b2;
          }
          function f(b2, c2, d2) {
            b2.index = d2;
            if (!a)
              return c2;
            d2 = b2.alternate;
            if (null !== d2)
              return d2 = d2.index, d2 < c2 ? (b2.effectTag = 2, c2) : d2;
            b2.effectTag = 2;
            return c2;
          }
          function g(b2) {
            a && null === b2.alternate && (b2.effectTag = 2);
            return b2;
          }
          function l(b2, a2, c2, d2) {
            if (null === a2 || 6 !== a2.tag)
              return a2 = gd(c2, b2.mode, d2), a2.return = b2, a2;
            a2 = e(a2, c2, d2);
            a2.return = b2;
            return a2;
          }
          function h(b2, a2, c2, d2) {
            if (null !== a2 && a2.elementType === c2.type)
              return d2 = e(a2, c2.props, d2), d2.ref = cd(b2, a2, c2), d2.return = b2, d2;
            d2 = hd(c2.type, c2.key, c2.props, null, b2.mode, d2);
            d2.ref = cd(b2, a2, c2);
            d2.return = b2;
            return d2;
          }
          function k(b2, a2, c2, d2) {
            if (null === a2 || 4 !== a2.tag || a2.stateNode.containerInfo !== c2.containerInfo || a2.stateNode.implementation !== c2.implementation)
              return a2 = id(c2, b2.mode, d2), a2.return = b2, a2;
            a2 = e(a2, c2.children || [], d2);
            a2.return = b2;
            return a2;
          }
          function p(b2, a2, c2, d2, f2) {
            if (null === a2 || 7 !== a2.tag)
              return a2 = jd(c2, b2.mode, d2, f2), a2.return = b2, a2;
            a2 = e(a2, c2, d2);
            a2.return = b2;
            return a2;
          }
          function D(b2, a2, c2) {
            if ("string" === typeof a2 || "number" === typeof a2)
              return a2 = gd("" + a2, b2.mode, c2), a2.return = b2, a2;
            if ("object" === typeof a2 && null !== a2) {
              switch (a2.$$typeof) {
                case ca:
                  return c2 = hd(a2.type, a2.key, a2.props, null, b2.mode, c2), c2.ref = cd(b2, null, a2), c2.return = b2, c2;
                case da:
                  return a2 = id(a2, b2.mode, c2), a2.return = b2, a2;
              }
              if (bd(a2) || ra(a2))
                return a2 = jd(a2, b2.mode, c2, null), a2.return = b2, a2;
              dd(b2, a2);
            }
            return null;
          }
          function x(b2, a2, c2, d2) {
            var e2 = null !== a2 ? a2.key : null;
            if ("string" === typeof c2 || "number" === typeof c2)
              return null !== e2 ? null : l(b2, a2, "" + c2, d2);
            if ("object" === typeof c2 && null !== c2) {
              switch (c2.$$typeof) {
                case ca:
                  return c2.key === e2 ? c2.type === ea ? p(b2, a2, c2.props.children, d2, e2) : h(b2, a2, c2, d2) : null;
                case da:
                  return c2.key === e2 ? k(b2, a2, c2, d2) : null;
              }
              if (bd(c2) || ra(c2))
                return null !== e2 ? null : p(b2, a2, c2, d2, null);
              dd(b2, c2);
            }
            return null;
          }
          function K(b2, a2, c2, d2, e2) {
            if ("string" === typeof d2 || "number" === typeof d2)
              return b2 = b2.get(c2) || null, l(a2, b2, "" + d2, e2);
            if ("object" === typeof d2 && null !== d2) {
              switch (d2.$$typeof) {
                case ca:
                  return b2 = b2.get(null === d2.key ? c2 : d2.key) || null, d2.type === ea ? p(a2, b2, d2.props.children, e2, d2.key) : h(a2, b2, d2, e2);
                case da:
                  return b2 = b2.get(null === d2.key ? c2 : d2.key) || null, k(a2, b2, d2, e2);
              }
              if (bd(d2) || ra(d2))
                return b2 = b2.get(c2) || null, p(a2, b2, d2, e2, null);
              dd(a2, d2);
            }
            return null;
          }
          function Ha(e2, g2, h2, l2) {
            for (var k2 = null, w = null, t = g2, r = g2 = 0, p2 = null; null !== t && r < h2.length; r++) {
              t.index > r ? (p2 = t, t = null) : p2 = t.sibling;
              var v = x(e2, t, h2[r], l2);
              if (null === v) {
                null === t && (t = p2);
                break;
              }
              a && t && null === v.alternate && b(e2, t);
              g2 = f(v, g2, r);
              null === w ? k2 = v : w.sibling = v;
              w = v;
              t = p2;
            }
            if (r === h2.length)
              return c(e2, t), k2;
            if (null === t) {
              for (; r < h2.length; r++)
                t = D(e2, h2[r], l2), null !== t && (g2 = f(t, g2, r), null === w ? k2 = t : w.sibling = t, w = t);
              return k2;
            }
            for (t = d(e2, t); r < h2.length; r++)
              p2 = K(t, e2, r, h2[r], l2), null !== p2 && (a && null !== p2.alternate && t.delete(null === p2.key ? r : p2.key), g2 = f(p2, g2, r), null === w ? k2 = p2 : w.sibling = p2, w = p2);
            a && t.forEach(function(a2) {
              return b(e2, a2);
            });
            return k2;
          }
          function O(e2, g2, h2, l2) {
            var k2 = ra(h2);
            if ("function" !== typeof k2)
              throw Error(n(150));
            h2 = k2.call(h2);
            if (null == h2)
              throw Error(n(151));
            for (var t = k2 = null, r = g2, w = g2 = 0, p2 = null, v = h2.next(); null !== r && !v.done; w++, v = h2.next()) {
              r.index > w ? (p2 = r, r = null) : p2 = r.sibling;
              var N = x(e2, r, v.value, l2);
              if (null === N) {
                null === r && (r = p2);
                break;
              }
              a && r && null === N.alternate && b(e2, r);
              g2 = f(N, g2, w);
              null === t ? k2 = N : t.sibling = N;
              t = N;
              r = p2;
            }
            if (v.done)
              return c(e2, r), k2;
            if (null === r) {
              for (; !v.done; w++, v = h2.next())
                v = D(e2, v.value, l2), null !== v && (g2 = f(v, g2, w), null === t ? k2 = v : t.sibling = v, t = v);
              return k2;
            }
            for (r = d(e2, r); !v.done; w++, v = h2.next())
              v = K(r, e2, w, v.value, l2), null !== v && (a && null !== v.alternate && r.delete(null === v.key ? w : v.key), g2 = f(v, g2, w), null === t ? k2 = v : t.sibling = v, t = v);
            a && r.forEach(function(a2) {
              return b(e2, a2);
            });
            return k2;
          }
          return function(a2, d2, f2, h2) {
            var k2 = "object" === typeof f2 && null !== f2 && f2.type === ea && null === f2.key;
            k2 && (f2 = f2.props.children);
            var l2 = "object" === typeof f2 && null !== f2;
            if (l2)
              switch (f2.$$typeof) {
                case ca:
                  a: {
                    l2 = f2.key;
                    for (k2 = d2; null !== k2; ) {
                      if (k2.key === l2)
                        if (7 === k2.tag ? f2.type === ea : k2.elementType === f2.type) {
                          c(a2, k2.sibling);
                          d2 = e(k2, f2.type === ea ? f2.props.children : f2.props, h2);
                          d2.ref = cd(a2, k2, f2);
                          d2.return = a2;
                          a2 = d2;
                          break a;
                        } else {
                          c(
                            a2,
                            k2
                          );
                          break;
                        }
                      else
                        b(a2, k2);
                      k2 = k2.sibling;
                    }
                    f2.type === ea ? (d2 = jd(f2.props.children, a2.mode, h2, f2.key), d2.return = a2, a2 = d2) : (h2 = hd(f2.type, f2.key, f2.props, null, a2.mode, h2), h2.ref = cd(a2, d2, f2), h2.return = a2, a2 = h2);
                  }
                  return g(a2);
                case da:
                  a: {
                    for (k2 = f2.key; null !== d2; ) {
                      if (d2.key === k2)
                        if (4 === d2.tag && d2.stateNode.containerInfo === f2.containerInfo && d2.stateNode.implementation === f2.implementation) {
                          c(a2, d2.sibling);
                          d2 = e(d2, f2.children || [], h2);
                          d2.return = a2;
                          a2 = d2;
                          break a;
                        } else {
                          c(a2, d2);
                          break;
                        }
                      else
                        b(a2, d2);
                      d2 = d2.sibling;
                    }
                    d2 = id(f2, a2.mode, h2);
                    d2.return = a2;
                    a2 = d2;
                  }
                  return g(a2);
              }
            if ("string" === typeof f2 || "number" === typeof f2)
              return f2 = "" + f2, null !== d2 && 6 === d2.tag ? (c(a2, d2.sibling), d2 = e(d2, f2, h2), d2.return = a2, a2 = d2) : (c(a2, d2), d2 = gd(f2, a2.mode, h2), d2.return = a2, a2 = d2), g(a2);
            if (bd(f2))
              return Ha(a2, d2, f2, h2);
            if (ra(f2))
              return O(a2, d2, f2, h2);
            l2 && dd(a2, f2);
            if ("undefined" === typeof f2 && !k2)
              switch (a2.tag) {
                case 1:
                case 0:
                  throw a2 = a2.type, Error(n(152, a2.displayName || a2.name || "Component"));
              }
            return c(a2, d2);
          };
        }
        var kd = ed(true), ld = ed(false), md = {}, H = { current: md }, nd = { current: md }, od = { current: md };
        function pd(a) {
          if (a === md)
            throw Error(n(174));
          return a;
        }
        function qd(a, b) {
          z(od, b, a);
          z(nd, a, a);
          z(H, md, a);
          b = Aa(b);
          y(H, a);
          z(H, b, a);
        }
        function rd(a) {
          y(H, a);
          y(nd, a);
          y(od, a);
        }
        function sd(a) {
          var b = pd(od.current), c = pd(H.current);
          b = Ba(c, a.type, b);
          c !== b && (z(nd, a, a), z(H, b, a));
        }
        function td(a) {
          nd.current === a && (y(H, a), y(nd, a));
        }
        var I = { current: 0 };
        function ud(a) {
          for (var b = a; null !== b; ) {
            if (13 === b.tag) {
              var c = b.memoizedState;
              if (null !== c && (c = c.dehydrated, null === c || qb(c) || rb(c)))
                return b;
            } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
              if (0 !== (b.effectTag & 64))
                return b;
            } else if (null !== b.child) {
              b.child.return = b;
              b = b.child;
              continue;
            }
            if (b === a)
              break;
            for (; null === b.sibling; ) {
              if (null === b.return || b.return === a)
                return null;
              b = b.return;
            }
            b.sibling.return = b.return;
            b = b.sibling;
          }
          return null;
        }
        function vd(a, b) {
          return { responder: a, props: b };
        }
        var wd = q.ReactCurrentDispatcher, J = q.ReactCurrentBatchConfig, xd = 0, yd = null, L = null, zd = null, Ad = null, M = null, Bd = null, Cd = 0, Dd = null, Ed = 0, Fd = false, Gd = null, Hd = 0;
        function P() {
          throw Error(n(321));
        }
        function Id(a, b) {
          if (null === b)
            return false;
          for (var c = 0; c < b.length && c < a.length; c++)
            if (!oc(a[c], b[c]))
              return false;
          return true;
        }
        function Jd(a, b, c, d, e, f) {
          xd = f;
          yd = b;
          zd = null !== a ? a.memoizedState : null;
          wd.current = null === zd ? Kd : Ld;
          b = c(d, e);
          if (Fd) {
            do
              Fd = false, Hd += 1, zd = null !== a ? a.memoizedState : null, Bd = Ad, Dd = M = L = null, wd.current = Ld, b = c(d, e);
            while (Fd);
            Gd = null;
            Hd = 0;
          }
          wd.current = Md;
          a = yd;
          a.memoizedState = Ad;
          a.expirationTime = Cd;
          a.updateQueue = Dd;
          a.effectTag |= Ed;
          a = null !== L && null !== L.next;
          xd = 0;
          Bd = M = Ad = zd = L = yd = null;
          Cd = 0;
          Dd = null;
          Ed = 0;
          if (a)
            throw Error(n(300));
          return b;
        }
        function Nd() {
          wd.current = Md;
          xd = 0;
          Bd = M = Ad = zd = L = yd = null;
          Cd = 0;
          Dd = null;
          Ed = 0;
          Fd = false;
          Gd = null;
          Hd = 0;
        }
        function Od() {
          var a = { memoizedState: null, baseState: null, queue: null, baseUpdate: null, next: null };
          null === M ? Ad = M = a : M = M.next = a;
          return M;
        }
        function Pd() {
          if (null !== Bd)
            M = Bd, Bd = M.next, L = zd, zd = null !== L ? L.next : null;
          else {
            if (null === zd)
              throw Error(n(310));
            L = zd;
            var a = { memoizedState: L.memoizedState, baseState: L.baseState, queue: L.queue, baseUpdate: L.baseUpdate, next: null };
            M = null === M ? Ad = a : M.next = a;
            zd = L.next;
          }
          return M;
        }
        function Qd(a, b) {
          return "function" === typeof b ? b(a) : b;
        }
        function Rd(a) {
          var b = Pd(), c = b.queue;
          if (null === c)
            throw Error(n(311));
          c.lastRenderedReducer = a;
          if (0 < Hd) {
            var d = c.dispatch;
            if (null !== Gd) {
              var e = Gd.get(c);
              if (void 0 !== e) {
                Gd.delete(c);
                var f = b.memoizedState;
                do
                  f = a(f, e.action), e = e.next;
                while (null !== e);
                oc(f, b.memoizedState) || (Bc = true);
                b.memoizedState = f;
                b.baseUpdate === c.last && (b.baseState = f);
                c.lastRenderedState = f;
                return [f, d];
              }
            }
            return [b.memoizedState, d];
          }
          d = c.last;
          var g = b.baseUpdate;
          f = b.baseState;
          null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;
          if (null !== d) {
            var l = e = null, h = d, k = false;
            do {
              var p = h.expirationTime;
              p < xd ? (k || (k = true, l = g, e = f), p > Cd && (Cd = p, Pc(Cd))) : (Oc(p, h.suspenseConfig), f = h.eagerReducer === a ? h.eagerState : a(f, h.action));
              g = h;
              h = h.next;
            } while (null !== h && h !== d);
            k || (l = g, e = f);
            oc(f, b.memoizedState) || (Bc = true);
            b.memoizedState = f;
            b.baseUpdate = l;
            b.baseState = e;
            c.lastRenderedState = f;
          }
          return [b.memoizedState, c.dispatch];
        }
        function Sd(a) {
          var b = Od();
          "function" === typeof a && (a = a());
          b.memoizedState = b.baseState = a;
          a = b.queue = { last: null, dispatch: null, lastRenderedReducer: Qd, lastRenderedState: a };
          a = a.dispatch = Td.bind(null, yd, a);
          return [b.memoizedState, a];
        }
        function Ud(a) {
          return Rd(Qd, a);
        }
        function Vd(a, b, c, d) {
          a = { tag: a, create: b, destroy: c, deps: d, next: null };
          null === Dd ? (Dd = { lastEffect: null }, Dd.lastEffect = a.next = a) : (b = Dd.lastEffect, null === b ? Dd.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, Dd.lastEffect = a));
          return a;
        }
        function Wd(a, b, c, d) {
          var e = Od();
          Ed |= a;
          e.memoizedState = Vd(b, c, void 0, void 0 === d ? null : d);
        }
        function Xd(a, b, c, d) {
          var e = Pd();
          d = void 0 === d ? null : d;
          var f = void 0;
          if (null !== L) {
            var g = L.memoizedState;
            f = g.destroy;
            if (null !== d && Id(d, g.deps)) {
              Vd(0, c, f, d);
              return;
            }
          }
          Ed |= a;
          e.memoizedState = Vd(b, c, f, d);
        }
        function Yd(a, b) {
          return Wd(516, 192, a, b);
        }
        function Zd(a, b) {
          return Xd(516, 192, a, b);
        }
        function $d(a, b) {
          if ("function" === typeof b)
            return a = a(), b(a), function() {
              b(null);
            };
          if (null !== b && void 0 !== b)
            return a = a(), b.current = a, function() {
              b.current = null;
            };
        }
        function ae() {
        }
        function be(a, b) {
          Od().memoizedState = [a, void 0 === b ? null : b];
          return a;
        }
        function ce(a, b) {
          var c = Pd();
          b = void 0 === b ? null : b;
          var d = c.memoizedState;
          if (null !== d && null !== b && Id(b, d[1]))
            return d[0];
          c.memoizedState = [a, b];
          return a;
        }
        function Td(a, b, c) {
          if (!(25 > Hd))
            throw Error(n(301));
          var d = a.alternate;
          if (a === yd || null !== d && d === yd)
            if (Fd = true, a = { expirationTime: xd, suspenseConfig: null, action: c, eagerReducer: null, eagerState: null, next: null }, null === Gd && (Gd = /* @__PURE__ */ new Map()), c = Gd.get(b), void 0 === c)
              Gd.set(b, a);
            else {
              for (b = c; null !== b.next; )
                b = b.next;
              b.next = a;
            }
          else {
            var e = G(), f = Sc.suspense;
            e = Vc(e, a, f);
            f = { expirationTime: e, suspenseConfig: f, action: c, eagerReducer: null, eagerState: null, next: null };
            var g = b.last;
            if (null === g)
              f.next = f;
            else {
              var l = g.next;
              null !== l && (f.next = l);
              g.next = f;
            }
            b.last = f;
            if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.lastRenderedReducer, null !== d))
              try {
                var h = b.lastRenderedState, k = d(h, c);
                f.eagerReducer = d;
                f.eagerState = k;
                if (oc(k, h))
                  return;
              } catch (p) {
              } finally {
              }
            Wc(a, e);
          }
        }
        var Md = { readContext: Cc, useCallback: P, useContext: P, useEffect: P, useImperativeHandle: P, useLayoutEffect: P, useMemo: P, useReducer: P, useRef: P, useState: P, useDebugValue: P, useResponder: P, useDeferredValue: P, useTransition: P }, Kd = { readContext: Cc, useCallback: be, useContext: Cc, useEffect: Yd, useImperativeHandle: function(a, b, c) {
          c = null !== c && void 0 !== c ? c.concat([a]) : null;
          return Wd(4, 36, $d.bind(null, b, a), c);
        }, useLayoutEffect: function(a, b) {
          return Wd(4, 36, a, b);
        }, useMemo: function(a, b) {
          var c = Od();
          b = void 0 === b ? null : b;
          a = a();
          c.memoizedState = [a, b];
          return a;
        }, useReducer: function(a, b, c) {
          var d = Od();
          b = void 0 !== c ? c(b) : b;
          d.memoizedState = d.baseState = b;
          a = d.queue = { last: null, dispatch: null, lastRenderedReducer: a, lastRenderedState: b };
          a = a.dispatch = Td.bind(null, yd, a);
          return [d.memoizedState, a];
        }, useRef: function(a) {
          var b = Od();
          a = { current: a };
          return b.memoizedState = a;
        }, useState: Sd, useDebugValue: ae, useResponder: vd, useDeferredValue: function(a, b) {
          var c = Sd(a), d = c[0], e = c[1];
          Yd(function() {
            m.unstable_next(function() {
              var c2 = J.suspense;
              J.suspense = void 0 === b ? null : b;
              try {
                e(a);
              } finally {
                J.suspense = c2;
              }
            });
          }, [a, b]);
          return d;
        }, useTransition: function(a) {
          var b = Sd(false), c = b[0], d = b[1];
          return [be(function(b2) {
            d(true);
            m.unstable_next(function() {
              var c2 = J.suspense;
              J.suspense = void 0 === a ? null : a;
              try {
                d(false), b2();
              } finally {
                J.suspense = c2;
              }
            });
          }, [a, c]), c];
        } }, Ld = { readContext: Cc, useCallback: ce, useContext: Cc, useEffect: Zd, useImperativeHandle: function(a, b, c) {
          c = null !== c && void 0 !== c ? c.concat([a]) : null;
          return Xd(4, 36, $d.bind(null, b, a), c);
        }, useLayoutEffect: function(a, b) {
          return Xd(4, 36, a, b);
        }, useMemo: function(a, b) {
          var c = Pd();
          b = void 0 === b ? null : b;
          var d = c.memoizedState;
          if (null !== d && null !== b && Id(b, d[1]))
            return d[0];
          a = a();
          c.memoizedState = [a, b];
          return a;
        }, useReducer: Rd, useRef: function() {
          return Pd().memoizedState;
        }, useState: Ud, useDebugValue: ae, useResponder: vd, useDeferredValue: function(a, b) {
          var c = Ud(a), d = c[0], e = c[1];
          Zd(function() {
            m.unstable_next(function() {
              var c2 = J.suspense;
              J.suspense = void 0 === b ? null : b;
              try {
                e(a);
              } finally {
                J.suspense = c2;
              }
            });
          }, [a, b]);
          return d;
        }, useTransition: function(a) {
          var b = Ud(false), c = b[0], d = b[1];
          return [ce(function(b2) {
            d(true);
            m.unstable_next(function() {
              var c2 = J.suspense;
              J.suspense = void 0 === a ? null : a;
              try {
                d(false), b2();
              } finally {
                J.suspense = c2;
              }
            });
          }, [a, c]), c];
        } }, de = null, ee = null, fe = false;
        function ge(a, b) {
          var c = he(5, null, null, 0);
          c.elementType = "DELETED";
          c.type = "DELETED";
          c.stateNode = b;
          c.return = a;
          c.effectTag = 8;
          null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;
        }
        function ie(a, b) {
          switch (a.tag) {
            case 5:
              return b = ob(b, a.type, a.pendingProps), null !== b ? (a.stateNode = b, true) : false;
            case 6:
              return b = pb(b, a.pendingProps), null !== b ? (a.stateNode = b, true) : false;
            case 13:
              return false;
            default:
              return false;
          }
        }
        function je(a) {
          if (fe) {
            var b = ee;
            if (b) {
              var c = b;
              if (!ie(a, b)) {
                b = sb(c);
                if (!b || !ie(a, b)) {
                  a.effectTag = a.effectTag & -1025 | 2;
                  fe = false;
                  de = a;
                  return;
                }
                ge(de, c);
              }
              de = a;
              ee = tb(b);
            } else
              a.effectTag = a.effectTag & -1025 | 2, fe = false, de = a;
          }
        }
        function ke(a) {
          for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag; )
            a = a.return;
          de = a;
        }
        function ne(a) {
          if (!Sa || a !== de)
            return false;
          if (!fe)
            return ke(a), fe = true, false;
          var b = a.type;
          if (5 !== a.tag || "head" !== b && "body" !== b && !Ja(b, a.memoizedProps))
            for (b = ee; b; )
              ge(a, b), b = sb(b);
          ke(a);
          if (13 === a.tag) {
            if (!Sa)
              throw Error(n(316));
            a = a.memoizedState;
            a = null !== a ? a.dehydrated : null;
            if (!a)
              throw Error(n(317));
            ee = wb(a);
          } else
            ee = de ? sb(a.stateNode) : null;
          return true;
        }
        function oe() {
          Sa && (ee = de = null, fe = false);
        }
        var pe = q.ReactCurrentOwner, Bc = false;
        function Q(a, b, c, d) {
          b.child = null === a ? ld(b, null, c, d) : kd(b, a.child, c, d);
        }
        function qe(a, b, c, d, e) {
          c = c.render;
          var f = b.ref;
          Ac(b, e);
          d = Jd(a, b, c, d, f, e);
          if (null !== a && !Bc)
            return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), re(a, b, e);
          b.effectTag |= 1;
          Q(a, b, d, e);
          return b.child;
        }
        function se(a, b, c, d, e, f) {
          if (null === a) {
            var g = c.type;
            if ("function" === typeof g && !te(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps)
              return b.tag = 15, b.type = g, ue(a, b, g, d, e, f);
            a = hd(c.type, null, d, null, b.mode, f);
            a.ref = b.ref;
            a.return = b;
            return b.child = a;
          }
          g = a.child;
          if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : qc, c(e, d) && a.ref === b.ref))
            return re(a, b, f);
          b.effectTag |= 1;
          a = fd(g, d, f);
          a.ref = b.ref;
          a.return = b;
          return b.child = a;
        }
        function ue(a, b, c, d, e, f) {
          return null !== a && qc(a.memoizedProps, d) && a.ref === b.ref && (Bc = false, e < f) ? re(a, b, f) : ve(a, b, c, d, f);
        }
        function we(a, b) {
          var c = b.ref;
          if (null === a && null !== c || null !== a && a.ref !== c)
            b.effectTag |= 128;
        }
        function ve(a, b, c, d, e) {
          var f = C(c) ? Eb : A.current;
          f = Fb(b, f);
          Ac(b, e);
          c = Jd(a, b, c, d, f, e);
          if (null !== a && !Bc)
            return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), re(a, b, e);
          b.effectTag |= 1;
          Q(a, b, c, e);
          return b.child;
        }
        function xe(a, b, c, d, e) {
          if (C(c)) {
            var f = true;
            Kb(b);
          } else
            f = false;
          Ac(b, e);
          if (null === b.stateNode)
            null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), Zc(b, c, d, e), ad(b, c, d, e), d = true;
          else if (null === a) {
            var g = b.stateNode, l = b.memoizedProps;
            g.props = l;
            var h = g.context, k = c.contextType;
            "object" === typeof k && null !== k ? k = Cc(k) : (k = C(c) ? Eb : A.current, k = Fb(b, k));
            var p = c.getDerivedStateFromProps, D = "function" === typeof p || "function" === typeof g.getSnapshotBeforeUpdate;
            D || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (l !== d || h !== k) && $c(b, g, d, k);
            Dc = false;
            var x = b.memoizedState;
            h = g.state = x;
            var K = b.updateQueue;
            null !== K && (Nc(b, K, d, g, e), h = b.memoizedState);
            l !== d || x !== h || B.current || Dc ? ("function" === typeof p && (Uc(b, c, p, d), h = b.memoizedState), (l = Dc || Yc(b, c, l, d, x, h, k)) ? (D || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.effectTag |= 4)) : ("function" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = h), g.props = d, g.state = h, g.context = k, d = l) : ("function" === typeof g.componentDidMount && (b.effectTag |= 4), d = false);
          } else
            g = b.stateNode, l = b.memoizedProps, g.props = b.type === b.elementType ? l : rc(b.type, l), h = g.context, k = c.contextType, "object" === typeof k && null !== k ? k = Cc(k) : (k = C(c) ? Eb : A.current, k = Fb(b, k)), p = c.getDerivedStateFromProps, (D = "function" === typeof p || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (l !== d || h !== k) && $c(b, g, d, k), Dc = false, h = b.memoizedState, x = g.state = h, K = b.updateQueue, null !== K && (Nc(b, K, d, g, e), x = b.memoizedState), l !== d || h !== x || B.current || Dc ? ("function" === typeof p && (Uc(b, c, p, d), x = b.memoizedState), (p = Dc || Yc(b, c, l, d, h, x, k)) ? (D || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, x, k), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, x, k)), "function" === typeof g.componentDidUpdate && (b.effectTag |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : ("function" !== typeof g.componentDidUpdate || l === a.memoizedProps && h === a.memoizedState || (b.effectTag |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || l === a.memoizedProps && h === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = x), g.props = d, g.state = x, g.context = k, d = p) : ("function" !== typeof g.componentDidUpdate || l === a.memoizedProps && h === a.memoizedState || (b.effectTag |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || l === a.memoizedProps && h === a.memoizedState || (b.effectTag |= 256), d = false);
          return ye(a, b, c, d, f, e);
        }
        function ye(a, b, c, d, e, f) {
          we(a, b);
          var g = 0 !== (b.effectTag & 64);
          if (!d && !g)
            return e && Lb(b, c, false), re(a, b, f);
          d = b.stateNode;
          pe.current = b;
          var l = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
          b.effectTag |= 1;
          null !== a && g ? (b.child = kd(b, a.child, null, f), b.child = kd(b, null, l, f)) : Q(a, b, l, f);
          b.memoizedState = d.state;
          e && Lb(b, c, true);
          return b.child;
        }
        function ze(a) {
          var b = a.stateNode;
          b.pendingContext ? Ib(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Ib(a, b.context, false);
          qd(a, b.containerInfo);
        }
        var Ae = { dehydrated: null, retryTime: 0 };
        function Be(a, b, c) {
          var d = b.mode, e = b.pendingProps, f = I.current, g = false, l;
          (l = 0 !== (b.effectTag & 64)) || (l = 0 !== (f & 2) && (null === a || null !== a.memoizedState));
          l ? (g = true, b.effectTag &= -65) : null !== a && null === a.memoizedState || void 0 === e.fallback || true === e.unstable_avoidThisFallback || (f |= 1);
          z(I, f & 1, b);
          if (null === a) {
            void 0 !== e.fallback && je(b);
            if (g) {
              g = e.fallback;
              e = jd(null, d, 0, null);
              e.return = b;
              if (0 === (b.mode & 2))
                for (a = null !== b.memoizedState ? b.child.child : b.child, e.child = a; null !== a; )
                  a.return = e, a = a.sibling;
              c = jd(g, d, c, null);
              c.return = b;
              e.sibling = c;
              b.memoizedState = Ae;
              b.child = e;
              return c;
            }
            d = e.children;
            b.memoizedState = null;
            return b.child = ld(b, null, d, c);
          }
          if (null !== a.memoizedState) {
            a = a.child;
            d = a.sibling;
            if (g) {
              e = e.fallback;
              c = fd(a, a.pendingProps, 0);
              c.return = b;
              if (0 === (b.mode & 2) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== a.child))
                for (c.child = g; null !== g; )
                  g.return = c, g = g.sibling;
              d = fd(d, e, d.expirationTime);
              d.return = b;
              c.sibling = d;
              c.childExpirationTime = 0;
              b.memoizedState = Ae;
              b.child = c;
              return d;
            }
            c = kd(b, a.child, e.children, c);
            b.memoizedState = null;
            return b.child = c;
          }
          a = a.child;
          if (g) {
            g = e.fallback;
            e = jd(null, d, 0, null);
            e.return = b;
            e.child = a;
            null !== a && (a.return = e);
            if (0 === (b.mode & 2))
              for (a = null !== b.memoizedState ? b.child.child : b.child, e.child = a; null !== a; )
                a.return = e, a = a.sibling;
            c = jd(g, d, c, null);
            c.return = b;
            e.sibling = c;
            c.effectTag |= 2;
            e.childExpirationTime = 0;
            b.memoizedState = Ae;
            b.child = e;
            return c;
          }
          b.memoizedState = null;
          return b.child = kd(b, a, e.children, c);
        }
        function Ce(a, b) {
          a.expirationTime < b && (a.expirationTime = b);
          var c = a.alternate;
          null !== c && c.expirationTime < b && (c.expirationTime = b);
          zc(a.return, b);
        }
        function De(a, b, c, d, e, f) {
          var g = a.memoizedState;
          null === g ? a.memoizedState = { isBackwards: b, rendering: null, last: d, tail: c, tailExpiration: 0, tailMode: e, lastEffect: f } : (g.isBackwards = b, g.rendering = null, g.last = d, g.tail = c, g.tailExpiration = 0, g.tailMode = e, g.lastEffect = f);
        }
        function Ee(a, b, c) {
          var d = b.pendingProps, e = d.revealOrder, f = d.tail;
          Q(a, b, d.children, c);
          d = I.current;
          if (0 !== (d & 2))
            d = d & 1 | 2, b.effectTag |= 64;
          else {
            if (null !== a && 0 !== (a.effectTag & 64))
              a:
                for (a = b.child; null !== a; ) {
                  if (13 === a.tag)
                    null !== a.memoizedState && Ce(a, c);
                  else if (19 === a.tag)
                    Ce(a, c);
                  else if (null !== a.child) {
                    a.child.return = a;
                    a = a.child;
                    continue;
                  }
                  if (a === b)
                    break a;
                  for (; null === a.sibling; ) {
                    if (null === a.return || a.return === b)
                      break a;
                    a = a.return;
                  }
                  a.sibling.return = a.return;
                  a = a.sibling;
                }
            d &= 1;
          }
          z(I, d, b);
          if (0 === (b.mode & 2))
            b.memoizedState = null;
          else
            switch (e) {
              case "forwards":
                c = b.child;
                for (e = null; null !== c; )
                  a = c.alternate, null !== a && null === ud(a) && (e = c), c = c.sibling;
                c = e;
                null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
                De(b, false, e, c, f, b.lastEffect);
                break;
              case "backwards":
                c = null;
                e = b.child;
                for (b.child = null; null !== e; ) {
                  a = e.alternate;
                  if (null !== a && null === ud(a)) {
                    b.child = e;
                    break;
                  }
                  a = e.sibling;
                  e.sibling = c;
                  c = e;
                  e = a;
                }
                De(b, true, c, null, f, b.lastEffect);
                break;
              case "together":
                De(b, false, null, null, void 0, b.lastEffect);
                break;
              default:
                b.memoizedState = null;
            }
          return b.child;
        }
        function re(a, b, c) {
          null !== a && (b.dependencies = a.dependencies);
          var d = b.expirationTime;
          0 !== d && Pc(d);
          if (b.childExpirationTime < c)
            return null;
          if (null !== a && b.child !== a.child)
            throw Error(n(153));
          if (null !== b.child) {
            a = b.child;
            c = fd(a, a.pendingProps, a.expirationTime);
            b.child = c;
            for (c.return = b; null !== a.sibling; )
              a = a.sibling, c = c.sibling = fd(a, a.pendingProps, a.expirationTime), c.return = b;
            c.sibling = null;
          }
          return b.child;
        }
        function Fe(a) {
          a.effectTag |= 4;
        }
        var Ge, He, Ie, Je;
        if (Qa)
          Ge = function(a, b) {
            for (var c = b.child; null !== c; ) {
              if (5 === c.tag || 6 === c.tag)
                Fa(a, c.stateNode);
              else if (4 !== c.tag && null !== c.child) {
                c.child.return = c;
                c = c.child;
                continue;
              }
              if (c === b)
                break;
              for (; null === c.sibling; ) {
                if (null === c.return || c.return === b)
                  return;
                c = c.return;
              }
              c.sibling.return = c.return;
              c = c.sibling;
            }
          }, He = function() {
          }, Ie = function(a, b, c, d, e) {
            a = a.memoizedProps;
            if (a !== d) {
              var f = b.stateNode, g = pd(H.current);
              c = Ia(f, c, a, d, e, g);
              (b.updateQueue = c) && Fe(b);
            }
          }, Je = function(a, b, c, d) {
            c !== d && Fe(b);
          };
        else if (Ra) {
          Ge = function(a, b, c, d) {
            for (var e = b.child; null !== e; ) {
              if (5 === e.tag) {
                var f = e.stateNode;
                c && d && (f = mb(f, e.type, e.memoizedProps, e));
                Fa(a, f);
              } else if (6 === e.tag)
                f = e.stateNode, c && d && (f = nb(f, e.memoizedProps, e)), Fa(a, f);
              else if (4 !== e.tag) {
                if (13 === e.tag && 0 !== (e.effectTag & 4) && (f = null !== e.memoizedState)) {
                  var g = e.child;
                  if (null !== g && (null !== g.child && (g.child.return = g, Ge(a, g, true, f)), f = g.sibling, null !== f)) {
                    f.return = e;
                    e = f;
                    continue;
                  }
                }
                if (null !== e.child) {
                  e.child.return = e;
                  e = e.child;
                  continue;
                }
              }
              if (e === b)
                break;
              for (; null === e.sibling; ) {
                if (null === e.return || e.return === b)
                  return;
                e = e.return;
              }
              e.sibling.return = e.return;
              e = e.sibling;
            }
          };
          var Ke = function(a, b, c, d) {
            for (var e = b.child; null !== e; ) {
              if (5 === e.tag) {
                var f = e.stateNode;
                c && d && (f = mb(f, e.type, e.memoizedProps, e));
                ib(a, f);
              } else if (6 === e.tag)
                f = e.stateNode, c && d && (f = nb(f, e.memoizedProps, e)), ib(a, f);
              else if (4 !== e.tag) {
                if (13 === e.tag && 0 !== (e.effectTag & 4) && (f = null !== e.memoizedState)) {
                  var g = e.child;
                  if (null !== g && (null !== g.child && (g.child.return = g, Ke(a, g, true, f)), f = g.sibling, null !== f)) {
                    f.return = e;
                    e = f;
                    continue;
                  }
                }
                if (null !== e.child) {
                  e.child.return = e;
                  e = e.child;
                  continue;
                }
              }
              if (e === b)
                break;
              for (; null === e.sibling; ) {
                if (null === e.return || e.return === b)
                  return;
                e = e.return;
              }
              e.sibling.return = e.return;
              e = e.sibling;
            }
          };
          He = function(a) {
            var b = a.stateNode;
            if (null !== a.firstEffect) {
              var c = b.containerInfo, d = hb(c);
              Ke(d, a, false, false);
              b.pendingChildren = d;
              Fe(a);
              kb(c, d);
            }
          };
          Ie = function(a, b, c, d, e) {
            var f = a.stateNode, g = a.memoizedProps;
            if ((a = null === b.firstEffect) && g === d)
              b.stateNode = f;
            else {
              var l = b.stateNode, h = pd(H.current), k = null;
              g !== d && (k = Ia(l, c, g, d, e, h));
              a && null === k ? b.stateNode = f : (f = gb(f, k, c, g, d, b, a, l), Ga(f, c, d, e, h) && Fe(b), b.stateNode = f, a ? Fe(b) : Ge(f, b, false, false));
            }
          };
          Je = function(a, b, c, d) {
            c !== d && (a = pd(od.current), c = pd(H.current), b.stateNode = La(d, a, c, b), Fe(b));
          };
        } else
          He = function() {
          }, Ie = function() {
          }, Je = function() {
          };
        function Le(a, b) {
          switch (a.tailMode) {
            case "hidden":
              b = a.tail;
              for (var c = null; null !== b; )
                null !== b.alternate && (c = b), b = b.sibling;
              null === c ? a.tail = null : c.sibling = null;
              break;
            case "collapsed":
              c = a.tail;
              for (var d = null; null !== c; )
                null !== c.alternate && (d = c), c = c.sibling;
              null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
          }
        }
        function Me(a) {
          switch (a.tag) {
            case 1:
              C(a.type) && Gb(a);
              var b = a.effectTag;
              return b & 4096 ? (a.effectTag = b & -4097 | 64, a) : null;
            case 3:
              rd(a);
              Hb(a);
              b = a.effectTag;
              if (0 !== (b & 64))
                throw Error(n(285));
              a.effectTag = b & -4097 | 64;
              return a;
            case 5:
              return td(a), null;
            case 13:
              return y(I, a), b = a.effectTag, b & 4096 ? (a.effectTag = b & -4097 | 64, a) : null;
            case 19:
              return y(I, a), null;
            case 4:
              return rd(a), null;
            case 10:
              return yc(a), null;
            default:
              return null;
          }
        }
        function Ne(a, b) {
          return { value: a, source: b, stack: Ab(b) };
        }
        var Oe = "function" === typeof WeakSet ? WeakSet : Set;
        function Pe(a, b) {
          var c = b.source, d = b.stack;
          null === d && null !== c && (d = Ab(c));
          null !== c && ta(c.type);
          b = b.value;
          null !== a && 1 === a.tag && ta(a.type);
          try {
            console.error(b);
          } catch (e) {
            setTimeout(function() {
              throw e;
            });
          }
        }
        function Qe(a, b) {
          try {
            b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();
          } catch (c) {
            Re(a, c);
          }
        }
        function Se(a) {
          var b = a.ref;
          if (null !== b)
            if ("function" === typeof b)
              try {
                b(null);
              } catch (c) {
                Re(a, c);
              }
            else
              b.current = null;
        }
        function Te(a, b) {
          switch (b.tag) {
            case 0:
            case 11:
            case 15:
              Ue(2, 0, b);
              break;
            case 1:
              if (b.effectTag & 256 && null !== a) {
                var c = a.memoizedProps, d = a.memoizedState;
                a = b.stateNode;
                b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : rc(b.type, c), d);
                a.__reactInternalSnapshotBeforeUpdate = b;
              }
              break;
            case 3:
            case 5:
            case 6:
            case 4:
            case 17:
              break;
            default:
              throw Error(n(163));
          }
        }
        function Ue(a, b, c) {
          c = c.updateQueue;
          c = null !== c ? c.lastEffect : null;
          if (null !== c) {
            var d = c = c.next;
            do {
              if (0 !== (d.tag & a)) {
                var e = d.destroy;
                d.destroy = void 0;
                void 0 !== e && e();
              }
              0 !== (d.tag & b) && (e = d.create, d.destroy = e());
              d = d.next;
            } while (d !== c);
          }
        }
        function Ve(a, b, c) {
          "function" === typeof We && We(b);
          switch (b.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
              a = b.updateQueue;
              if (null !== a && (a = a.lastEffect, null !== a)) {
                var d = a.next;
                hc(97 < c ? 97 : c, function() {
                  var a2 = d;
                  do {
                    var c2 = a2.destroy;
                    if (void 0 !== c2) {
                      var g = b;
                      try {
                        c2();
                      } catch (l) {
                        Re(g, l);
                      }
                    }
                    a2 = a2.next;
                  } while (a2 !== d);
                });
              }
              break;
            case 1:
              Se(b);
              c = b.stateNode;
              "function" === typeof c.componentWillUnmount && Qe(b, c);
              break;
            case 5:
              Se(b);
              break;
            case 4:
              Qa ? Xe(a, b, c) : Ra && Ye(b);
          }
        }
        function Ze(a, b, c) {
          for (var d = b; ; )
            if (Ve(a, d, c), null === d.child || Qa && 4 === d.tag) {
              if (d === b)
                break;
              for (; null === d.sibling; ) {
                if (null === d.return || d.return === b)
                  return;
                d = d.return;
              }
              d.sibling.return = d.return;
              d = d.sibling;
            } else
              d.child.return = d, d = d.child;
        }
        function $e(a) {
          var b = a.alternate;
          a.return = null;
          a.child = null;
          a.memoizedState = null;
          a.updateQueue = null;
          a.dependencies = null;
          a.alternate = null;
          a.firstEffect = null;
          a.lastEffect = null;
          a.pendingProps = null;
          a.memoizedProps = null;
          null !== b && $e(b);
        }
        function Ye(a) {
          if (Ra) {
            a = a.stateNode.containerInfo;
            var b = hb(a);
            lb(a, b);
          }
        }
        function af(a) {
          return 5 === a.tag || 3 === a.tag || 4 === a.tag;
        }
        function bf(a) {
          if (Qa) {
            a: {
              for (var b = a.return; null !== b; ) {
                if (af(b)) {
                  var c = b;
                  break a;
                }
                b = b.return;
              }
              throw Error(n(160));
            }
            b = c.stateNode;
            switch (c.tag) {
              case 5:
                var d = false;
                break;
              case 3:
                b = b.containerInfo;
                d = true;
                break;
              case 4:
                b = b.containerInfo;
                d = true;
                break;
              default:
                throw Error(n(161));
            }
            c.effectTag & 16 && (bb(b), c.effectTag &= -17);
            a:
              b:
                for (c = a; ; ) {
                  for (; null === c.sibling; ) {
                    if (null === c.return || af(c.return)) {
                      c = null;
                      break a;
                    }
                    c = c.return;
                  }
                  c.sibling.return = c.return;
                  for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag; ) {
                    if (c.effectTag & 2)
                      continue b;
                    if (null === c.child || 4 === c.tag)
                      continue b;
                    else
                      c.child.return = c, c = c.child;
                  }
                  if (!(c.effectTag & 2)) {
                    c = c.stateNode;
                    break a;
                  }
                }
            for (var e = a; ; ) {
              var f = 5 === e.tag || 6 === e.tag;
              if (f)
                f = f ? e.stateNode : e.stateNode.instance, c ? d ? Za(b, f, c) : Ya(b, f, c) : d ? Ua(b, f) : Ta(b, f);
              else if (4 !== e.tag && null !== e.child) {
                e.child.return = e;
                e = e.child;
                continue;
              }
              if (e === a)
                break;
              for (; null === e.sibling; ) {
                if (null === e.return || e.return === a)
                  return;
                e = e.return;
              }
              e.sibling.return = e.return;
              e = e.sibling;
            }
          }
        }
        function Xe(a, b, c) {
          for (var d = b, e = false, f, g; ; ) {
            if (!e) {
              e = d.return;
              a:
                for (; ; ) {
                  if (null === e)
                    throw Error(n(160));
                  f = e.stateNode;
                  switch (e.tag) {
                    case 5:
                      g = false;
                      break a;
                    case 3:
                      f = f.containerInfo;
                      g = true;
                      break a;
                    case 4:
                      f = f.containerInfo;
                      g = true;
                      break a;
                  }
                  e = e.return;
                }
              e = true;
            }
            if (5 === d.tag || 6 === d.tag)
              Ze(a, d, c), g ? ab(f, d.stateNode) : $a(f, d.stateNode);
            else if (4 === d.tag) {
              if (null !== d.child) {
                f = d.stateNode.containerInfo;
                g = true;
                d.child.return = d;
                d = d.child;
                continue;
              }
            } else if (Ve(a, d, c), null !== d.child) {
              d.child.return = d;
              d = d.child;
              continue;
            }
            if (d === b)
              break;
            for (; null === d.sibling; ) {
              if (null === d.return || d.return === b)
                return;
              d = d.return;
              4 === d.tag && (e = false);
            }
            d.sibling.return = d.return;
            d = d.sibling;
          }
        }
        function cf(a, b) {
          if (Qa)
            switch (b.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                Ue(4, 8, b);
                break;
              case 1:
                break;
              case 5:
                var c = b.stateNode;
                if (null != c) {
                  var d = b.memoizedProps;
                  a = null !== a ? a.memoizedProps : d;
                  var e = b.type, f = b.updateQueue;
                  b.updateQueue = null;
                  null !== f && Xa(c, f, e, a, d, b);
                }
                break;
              case 6:
                if (null === b.stateNode)
                  throw Error(n(162));
                c = b.memoizedProps;
                Va(b.stateNode, null !== a ? a.memoizedProps : c, c);
                break;
              case 3:
                Sa && (b = b.stateNode, b.hydrate && (b.hydrate = false, xb(b.containerInfo)));
                break;
              case 12:
                break;
              case 13:
                df(b);
                ef(b);
                break;
              case 19:
                ef(b);
                break;
              case 17:
                break;
              case 20:
                break;
              case 21:
                break;
              default:
                throw Error(n(163));
            }
          else {
            switch (b.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                Ue(4, 8, b);
                return;
              case 12:
                return;
              case 13:
                df(b);
                ef(b);
                return;
              case 19:
                ef(b);
                return;
              case 3:
                Sa && (c = b.stateNode, c.hydrate && (c.hydrate = false, xb(c.containerInfo)));
            }
            a:
              if (Ra)
                switch (b.tag) {
                  case 1:
                  case 5:
                  case 6:
                  case 20:
                    break a;
                  case 3:
                  case 4:
                    b = b.stateNode;
                    lb(b.containerInfo, b.pendingChildren);
                    break a;
                  default:
                    throw Error(n(163));
                }
          }
        }
        function df(a) {
          var b = a;
          if (null === a.memoizedState)
            var c = false;
          else
            c = true, b = a.child, ff = E();
          if (Qa && null !== b) {
            a:
              if (a = b, Qa)
                for (b = a; ; ) {
                  if (5 === b.tag) {
                    var d = b.stateNode;
                    c ? cb2(d) : eb(b.stateNode, b.memoizedProps);
                  } else if (6 === b.tag)
                    d = b.stateNode, c ? db(d) : fb(d, b.memoizedProps);
                  else if (13 === b.tag && null !== b.memoizedState && null === b.memoizedState.dehydrated) {
                    d = b.child.sibling;
                    d.return = b;
                    b = d;
                    continue;
                  } else if (null !== b.child) {
                    b.child.return = b;
                    b = b.child;
                    continue;
                  }
                  if (b === a)
                    break a;
                  for (; null === b.sibling; ) {
                    if (null === b.return || b.return === a)
                      break a;
                    b = b.return;
                  }
                  b.sibling.return = b.return;
                  b = b.sibling;
                }
          }
        }
        function ef(a) {
          var b = a.updateQueue;
          if (null !== b) {
            a.updateQueue = null;
            var c = a.stateNode;
            null === c && (c = a.stateNode = new Oe());
            b.forEach(function(b2) {
              var d = gf.bind(null, a, b2);
              c.has(b2) || (c.add(b2), b2.then(d, d));
            });
          }
        }
        var hf = "function" === typeof WeakMap ? WeakMap : Map;
        function jf(a, b, c) {
          c = Gc(c, null);
          c.tag = 3;
          c.payload = { element: null };
          var d = b.value;
          c.callback = function() {
            kf || (kf = true, lf = d);
            Pe(a, b);
          };
          return c;
        }
        function mf(a, b, c) {
          c = Gc(c, null);
          c.tag = 3;
          var d = a.type.getDerivedStateFromError;
          if ("function" === typeof d) {
            var e = b.value;
            c.payload = function() {
              Pe(a, b);
              return d(e);
            };
          }
          var f = a.stateNode;
          null !== f && "function" === typeof f.componentDidCatch && (c.callback = function() {
            "function" !== typeof d && (null === nf ? nf = /* @__PURE__ */ new Set([this]) : nf.add(this), Pe(a, b));
            var c2 = b.stack;
            this.componentDidCatch(b.value, { componentStack: null !== c2 ? c2 : "" });
          });
          return c;
        }
        var of = Math.ceil, pf = q.ReactCurrentDispatcher, qf = q.ReactCurrentOwner, R = 0, rf = 8, S = 16, sf = 32, tf = 0, uf = 1, vf = 2, wf = 3, xf = 4, yf = 5, T = R, U = null, V = null, W = 0, X = tf, zf = null, Af = 1073741823, Bf = 1073741823, Cf = null, Df = 0, Ef = false, ff = 0, Ff = 500, Y = null, kf = false, lf = null, nf = null, Gf = false, Hf = null, If = 90, Jf = null, Kf = 0, Lf = null, Mf = 0;
        function G() {
          return (T & (S | sf)) !== R ? 1073741821 - (E() / 10 | 0) : 0 !== Mf ? Mf : Mf = 1073741821 - (E() / 10 | 0);
        }
        function Vc(a, b, c) {
          b = b.mode;
          if (0 === (b & 2))
            return 1073741823;
          var d = fc();
          if (0 === (b & 4))
            return 99 === d ? 1073741823 : 1073741822;
          if ((T & S) !== R)
            return W;
          if (null !== c)
            a = mc(a, c.timeoutMs | 0 || 5e3, 250);
          else
            switch (d) {
              case 99:
                a = 1073741823;
                break;
              case 98:
                a = mc(a, 150, 100);
                break;
              case 97:
              case 96:
                a = mc(a, 5e3, 250);
                break;
              case 95:
                a = 2;
                break;
              default:
                throw Error(n(326));
            }
          null !== U && a === W && --a;
          return a;
        }
        function Wc(a, b) {
          if (50 < Kf)
            throw Kf = 0, Lf = null, Error(n(185));
          a = Nf(a, b);
          if (null !== a) {
            var c = fc();
            1073741823 === b ? (T & rf) !== R && (T & (S | sf)) === R ? Of(a) : (Z(a), T === R && F()) : Z(a);
            (T & 4) === R || 98 !== c && 99 !== c || (null === Jf ? Jf = /* @__PURE__ */ new Map([[a, b]]) : (c = Jf.get(a), (void 0 === c || c > b) && Jf.set(a, b)));
          }
        }
        function Nf(a, b) {
          a.expirationTime < b && (a.expirationTime = b);
          var c = a.alternate;
          null !== c && c.expirationTime < b && (c.expirationTime = b);
          var d = a.return, e = null;
          if (null === d && 3 === a.tag)
            e = a.stateNode;
          else
            for (; null !== d; ) {
              c = d.alternate;
              d.childExpirationTime < b && (d.childExpirationTime = b);
              null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);
              if (null === d.return && 3 === d.tag) {
                e = d.stateNode;
                break;
              }
              d = d.return;
            }
          null !== e && (U === e && (Pc(b), X === xf && Pf(e, W)), Qf(e, b));
          return e;
        }
        function Rf(a) {
          var b = a.lastExpiredTime;
          if (0 !== b)
            return b;
          b = a.firstPendingTime;
          if (!Sf(a, b))
            return b;
          b = a.lastPingedTime;
          a = a.nextKnownPendingLevel;
          return b > a ? b : a;
        }
        function Z(a) {
          if (0 !== a.lastExpiredTime)
            a.callbackExpirationTime = 1073741823, a.callbackPriority = 99, a.callbackNode = jc(Of.bind(null, a));
          else {
            var b = Rf(a), c = a.callbackNode;
            if (0 === b)
              null !== c && (a.callbackNode = null, a.callbackExpirationTime = 0, a.callbackPriority = 90);
            else {
              var d = G();
              1073741823 === b ? d = 99 : 1 === b || 2 === b ? d = 95 : (d = 10 * (1073741821 - b) - 10 * (1073741821 - d), d = 0 >= d ? 99 : 250 >= d ? 98 : 5250 >= d ? 97 : 95);
              if (null !== c) {
                var e = a.callbackPriority;
                if (a.callbackExpirationTime === b && e >= d)
                  return;
                c !== $b && Ob(c);
              }
              a.callbackExpirationTime = b;
              a.callbackPriority = d;
              b = 1073741823 === b ? jc(Of.bind(null, a)) : ic(d, Tf.bind(null, a), { timeout: 10 * (1073741821 - b) - E() });
              a.callbackNode = b;
            }
          }
        }
        function Tf(a, b) {
          Mf = 0;
          if (b)
            return b = G(), Uf(a, b), Z(a), null;
          var c = Rf(a);
          if (0 !== c) {
            b = a.callbackNode;
            if ((T & (S | sf)) !== R)
              throw Error(n(327));
            Vf();
            a === U && c === W || Wf(a, c);
            if (null !== V) {
              var d = T;
              T |= S;
              var e = Xf(a);
              do
                try {
                  Yf();
                  break;
                } catch (l) {
                  Zf(a, l);
                }
              while (1);
              wc();
              T = d;
              pf.current = e;
              if (X === uf)
                throw b = zf, Wf(a, c), Pf(a, c), Z(a), b;
              if (null === V)
                switch (e = a.finishedWork = a.current.alternate, a.finishedExpirationTime = c, d = X, U = null, d) {
                  case tf:
                  case uf:
                    throw Error(n(345));
                  case vf:
                    Uf(a, 2 < c ? 2 : c);
                    break;
                  case wf:
                    Pf(a, c);
                    d = a.lastSuspendedTime;
                    c === d && (a.nextKnownPendingLevel = $f(e));
                    if (1073741823 === Af && (e = ff + Ff - E(), 10 < e)) {
                      if (Ef) {
                        var f = a.lastPingedTime;
                        if (0 === f || f >= c) {
                          a.lastPingedTime = c;
                          Wf(a, c);
                          break;
                        }
                      }
                      f = Rf(a);
                      if (0 !== f && f !== c)
                        break;
                      if (0 !== d && d !== c) {
                        a.lastPingedTime = d;
                        break;
                      }
                      a.timeoutHandle = Ma(ag.bind(null, a), e);
                      break;
                    }
                    ag(a);
                    break;
                  case xf:
                    Pf(a, c);
                    d = a.lastSuspendedTime;
                    c === d && (a.nextKnownPendingLevel = $f(e));
                    if (Ef && (e = a.lastPingedTime, 0 === e || e >= c)) {
                      a.lastPingedTime = c;
                      Wf(a, c);
                      break;
                    }
                    e = Rf(a);
                    if (0 !== e && e !== c)
                      break;
                    if (0 !== d && d !== c) {
                      a.lastPingedTime = d;
                      break;
                    }
                    1073741823 !== Bf ? d = 10 * (1073741821 - Bf) - E() : 1073741823 === Af ? d = 0 : (d = 10 * (1073741821 - Af) - 5e3, e = E(), c = 10 * (1073741821 - c) - e, d = e - d, 0 > d && (d = 0), d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * of(d / 1960)) - d, c < d && (d = c));
                    if (10 < d) {
                      a.timeoutHandle = Ma(ag.bind(null, a), d);
                      break;
                    }
                    ag(a);
                    break;
                  case yf:
                    if (1073741823 !== Af && null !== Cf) {
                      f = Af;
                      var g = Cf;
                      d = g.busyMinDurationMs | 0;
                      0 >= d ? d = 0 : (e = g.busyDelayMs | 0, f = E() - (10 * (1073741821 - f) - (g.timeoutMs | 0 || 5e3)), d = f <= e ? 0 : e + d - f);
                      if (10 < d) {
                        Pf(a, c);
                        a.timeoutHandle = Ma(ag.bind(null, a), d);
                        break;
                      }
                    }
                    ag(a);
                    break;
                  default:
                    throw Error(n(329));
                }
              Z(a);
              if (a.callbackNode === b)
                return Tf.bind(null, a);
            }
          }
          return null;
        }
        function Of(a) {
          var b = a.lastExpiredTime;
          b = 0 !== b ? b : 1073741823;
          if (a.finishedExpirationTime === b)
            ag(a);
          else {
            if ((T & (S | sf)) !== R)
              throw Error(n(327));
            Vf();
            a === U && b === W || Wf(a, b);
            if (null !== V) {
              var c = T;
              T |= S;
              var d = Xf(a);
              do
                try {
                  bg();
                  break;
                } catch (e) {
                  Zf(a, e);
                }
              while (1);
              wc();
              T = c;
              pf.current = d;
              if (X === uf)
                throw c = zf, Wf(a, b), Pf(a, b), Z(a), c;
              if (null !== V)
                throw Error(n(261));
              a.finishedWork = a.current.alternate;
              a.finishedExpirationTime = b;
              U = null;
              ag(a);
              Z(a);
            }
          }
          return null;
        }
        function cg(a, b) {
          Uf(a, b);
          Z(a);
          (T & (S | sf)) === R && F();
        }
        function dg() {
          if (null !== Jf) {
            var a = Jf;
            Jf = null;
            a.forEach(function(a2, c) {
              Uf(c, a2);
              Z(c);
            });
            F();
          }
        }
        function eg(a, b) {
          if ((T & (S | sf)) !== R)
            throw Error(n(187));
          var c = T;
          T |= 1;
          try {
            return hc(99, a.bind(null, b));
          } finally {
            T = c, F();
          }
        }
        function Wf(a, b) {
          a.finishedWork = null;
          a.finishedExpirationTime = 0;
          var c = a.timeoutHandle;
          c !== Oa && (a.timeoutHandle = Oa, Na(c));
          if (null !== V)
            for (c = V.return; null !== c; ) {
              var d = c;
              switch (d.tag) {
                case 1:
                  var e = d.type.childContextTypes;
                  null !== e && void 0 !== e && Gb(d);
                  break;
                case 3:
                  rd(d);
                  Hb(d);
                  break;
                case 5:
                  td(d);
                  break;
                case 4:
                  rd(d);
                  break;
                case 13:
                  y(I, d);
                  break;
                case 19:
                  y(I, d);
                  break;
                case 10:
                  yc(d);
              }
              c = c.return;
            }
          U = a;
          V = fd(a.current, null, b);
          W = b;
          X = tf;
          zf = null;
          Bf = Af = 1073741823;
          Cf = null;
          Df = 0;
          Ef = false;
        }
        function Zf(a, b) {
          do {
            try {
              wc();
              Nd();
              if (null === V || null === V.return)
                return X = uf, zf = b, null;
              a: {
                var c = a, d = V.return, e = V, f = b;
                b = W;
                e.effectTag |= 2048;
                e.firstEffect = e.lastEffect = null;
                if (null !== f && "object" === typeof f && "function" === typeof f.then) {
                  var g = f, l = 0 !== (I.current & 1), h = d;
                  do {
                    var k;
                    if (k = 13 === h.tag) {
                      var p = h.memoizedState;
                      if (null !== p)
                        k = null !== p.dehydrated ? true : false;
                      else {
                        var D = h.memoizedProps;
                        k = void 0 === D.fallback ? false : true !== D.unstable_avoidThisFallback ? true : l ? false : true;
                      }
                    }
                    if (k) {
                      var x = h.updateQueue;
                      if (null === x) {
                        var K = /* @__PURE__ */ new Set();
                        K.add(g);
                        h.updateQueue = K;
                      } else
                        x.add(g);
                      if (0 === (h.mode & 2)) {
                        h.effectTag |= 64;
                        e.effectTag &= -2981;
                        if (1 === e.tag)
                          if (null === e.alternate)
                            e.tag = 17;
                          else {
                            var Ha = Gc(1073741823, null);
                            Ha.tag = 2;
                            Ic(e, Ha);
                          }
                        e.expirationTime = 1073741823;
                        break a;
                      }
                      f = void 0;
                      e = b;
                      var O = c.pingCache;
                      null === O ? (O = c.pingCache = new hf(), f = /* @__PURE__ */ new Set(), O.set(g, f)) : (f = O.get(g), void 0 === f && (f = /* @__PURE__ */ new Set(), O.set(g, f)));
                      if (!f.has(e)) {
                        f.add(e);
                        var w = fg.bind(null, c, g, e);
                        g.then(w, w);
                      }
                      h.effectTag |= 4096;
                      h.expirationTime = b;
                      break a;
                    }
                    h = h.return;
                  } while (null !== h);
                  f = Error((ta(e.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + Ab(e));
                }
                X !== yf && (X = vf);
                f = Ne(f, e);
                h = d;
                do {
                  switch (h.tag) {
                    case 3:
                      g = f;
                      h.effectTag |= 4096;
                      h.expirationTime = b;
                      var r = jf(h, g, b);
                      Jc(h, r);
                      break a;
                    case 1:
                      g = f;
                      var t = h.type, N = h.stateNode;
                      if (0 === (h.effectTag & 64) && ("function" === typeof t.getDerivedStateFromError || null !== N && "function" === typeof N.componentDidCatch && (null === nf || !nf.has(N)))) {
                        h.effectTag |= 4096;
                        h.expirationTime = b;
                        var Mc = mf(h, g, b);
                        Jc(h, Mc);
                        break a;
                      }
                  }
                  h = h.return;
                } while (null !== h);
              }
              V = gg(V);
            } catch (Sb) {
              b = Sb;
              continue;
            }
            break;
          } while (1);
        }
        function Xf() {
          var a = pf.current;
          pf.current = Md;
          return null === a ? Md : a;
        }
        function Oc(a, b) {
          a < Af && 2 < a && (Af = a);
          null !== b && a < Bf && 2 < a && (Bf = a, Cf = b);
        }
        function Pc(a) {
          a > Df && (Df = a);
        }
        function bg() {
          for (; null !== V; )
            V = hg(V);
        }
        function Yf() {
          for (; null !== V && !Pb(); )
            V = hg(V);
        }
        function hg(a) {
          var b = ig(a.alternate, a, W);
          a.memoizedProps = a.pendingProps;
          null === b && (b = gg(a));
          qf.current = null;
          return b;
        }
        function gg(a) {
          V = a;
          do {
            var b = V.alternate;
            a = V.return;
            if (0 === (V.effectTag & 2048)) {
              a: {
                var c = b;
                b = V;
                var d = W, e = b.pendingProps;
                switch (b.tag) {
                  case 2:
                    break;
                  case 16:
                    break;
                  case 15:
                  case 0:
                    break;
                  case 1:
                    C(b.type) && Gb(b);
                    break;
                  case 3:
                    rd(b);
                    Hb(b);
                    e = b.stateNode;
                    e.pendingContext && (e.context = e.pendingContext, e.pendingContext = null);
                    (null === c || null === c.child) && ne(b) && Fe(b);
                    He(b);
                    break;
                  case 5:
                    td(b);
                    var f = pd(od.current);
                    d = b.type;
                    if (null !== c && null != b.stateNode)
                      Ie(c, b, d, e, f), c.ref !== b.ref && (b.effectTag |= 128);
                    else if (e) {
                      c = pd(H.current);
                      if (ne(b)) {
                        e = b;
                        if (!Sa)
                          throw Error(n(175));
                        c = ub(e.stateNode, e.type, e.memoizedProps, f, c, e);
                        e.updateQueue = c;
                        c = null !== c ? true : false;
                        c && Fe(b);
                      } else {
                        var g = Ea(d, e, f, c, b);
                        Ge(g, b, false, false);
                        b.stateNode = g;
                        Ga(g, d, e, f, c) && Fe(b);
                      }
                      null !== b.ref && (b.effectTag |= 128);
                    } else if (null === b.stateNode)
                      throw Error(n(166));
                    break;
                  case 6:
                    if (c && null != b.stateNode)
                      Je(c, b, c.memoizedProps, e);
                    else {
                      if ("string" !== typeof e && null === b.stateNode)
                        throw Error(n(166));
                      c = pd(od.current);
                      f = pd(H.current);
                      if (ne(b)) {
                        c = b;
                        if (!Sa)
                          throw Error(n(176));
                        (c = vb(
                          c.stateNode,
                          c.memoizedProps,
                          c
                        )) && Fe(b);
                      } else
                        b.stateNode = La(e, c, f, b);
                    }
                    break;
                  case 11:
                    break;
                  case 13:
                    y(I, b);
                    e = b.memoizedState;
                    if (0 !== (b.effectTag & 64)) {
                      b.expirationTime = d;
                      break a;
                    }
                    e = null !== e;
                    f = false;
                    null === c ? void 0 !== b.memoizedProps.fallback && ne(b) : (d = c.memoizedState, f = null !== d, e || null === d || (d = c.child.sibling, null !== d && (g = b.firstEffect, null !== g ? (b.firstEffect = d, d.nextEffect = g) : (b.firstEffect = b.lastEffect = d, d.nextEffect = null), d.effectTag = 8)));
                    if (e && !f && 0 !== (b.mode & 2))
                      if (null === c && true !== b.memoizedProps.unstable_avoidThisFallback || 0 !== (I.current & 1))
                        X === tf && (X = wf);
                      else {
                        if (X === tf || X === wf)
                          X = xf;
                        0 !== Df && null !== U && (Pf(U, W), Qf(U, Df));
                      }
                    Ra && e && (b.effectTag |= 4);
                    Qa && (e || f) && (b.effectTag |= 4);
                    break;
                  case 7:
                    break;
                  case 8:
                    break;
                  case 12:
                    break;
                  case 4:
                    rd(b);
                    He(b);
                    break;
                  case 10:
                    yc(b);
                    break;
                  case 9:
                    break;
                  case 14:
                    break;
                  case 17:
                    C(b.type) && Gb(b);
                    break;
                  case 19:
                    y(I, b);
                    e = b.memoizedState;
                    if (null === e)
                      break;
                    f = 0 !== (b.effectTag & 64);
                    g = e.rendering;
                    if (null === g)
                      if (f)
                        Le(e, false);
                      else {
                        if (X !== tf || null !== c && 0 !== (c.effectTag & 64))
                          for (c = b.child; null !== c; ) {
                            g = ud(c);
                            if (null !== g) {
                              b.effectTag |= 64;
                              Le(e, false);
                              c = g.updateQueue;
                              null !== c && (b.updateQueue = c, b.effectTag |= 4);
                              null === e.lastEffect && (b.firstEffect = null);
                              b.lastEffect = e.lastEffect;
                              c = d;
                              for (e = b.child; null !== e; )
                                f = e, d = c, f.effectTag &= 2, f.nextEffect = null, f.firstEffect = null, f.lastEffect = null, g = f.alternate, null === g ? (f.childExpirationTime = 0, f.expirationTime = d, f.child = null, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null) : (f.childExpirationTime = g.childExpirationTime, f.expirationTime = g.expirationTime, f.child = g.child, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, d = g.dependencies, f.dependencies = null === d ? null : { expirationTime: d.expirationTime, firstContext: d.firstContext, responders: d.responders }), e = e.sibling;
                              z(I, I.current & 1 | 2, b);
                              b = b.child;
                              break a;
                            }
                            c = c.sibling;
                          }
                      }
                    else {
                      if (!f)
                        if (c = ud(g), null !== c) {
                          if (b.effectTag |= 64, f = true, c = c.updateQueue, null !== c && (b.updateQueue = c, b.effectTag |= 4), Le(e, true), null === e.tail && "hidden" === e.tailMode && !g.alternate) {
                            b = b.lastEffect = e.lastEffect;
                            null !== b && (b.nextEffect = null);
                            break;
                          }
                        } else
                          E() > e.tailExpiration && 1 < d && (b.effectTag |= 64, f = true, Le(e, false), b.expirationTime = b.childExpirationTime = d - 1);
                      e.isBackwards ? (g.sibling = b.child, b.child = g) : (c = e.last, null !== c ? c.sibling = g : b.child = g, e.last = g);
                    }
                    if (null !== e.tail) {
                      0 === e.tailExpiration && (e.tailExpiration = E() + 500);
                      c = e.tail;
                      e.rendering = c;
                      e.tail = c.sibling;
                      e.lastEffect = b.lastEffect;
                      c.sibling = null;
                      e = I.current;
                      e = f ? e & 1 | 2 : e & 1;
                      z(I, e, b);
                      b = c;
                      break a;
                    }
                    break;
                  case 20:
                    break;
                  case 21:
                    break;
                  default:
                    throw Error(n(156, b.tag));
                }
                b = null;
              }
              c = V;
              if (1 === W || 1 !== c.childExpirationTime) {
                e = 0;
                for (f = c.child; null !== f; )
                  d = f.expirationTime, g = f.childExpirationTime, d > e && (e = d), g > e && (e = g), f = f.sibling;
                c.childExpirationTime = e;
              }
              if (null !== b)
                return b;
              null !== a && 0 === (a.effectTag & 2048) && (null === a.firstEffect && (a.firstEffect = V.firstEffect), null !== V.lastEffect && (null !== a.lastEffect && (a.lastEffect.nextEffect = V.firstEffect), a.lastEffect = V.lastEffect), 1 < V.effectTag && (null !== a.lastEffect ? a.lastEffect.nextEffect = V : a.firstEffect = V, a.lastEffect = V));
            } else {
              b = Me(
                V,
                W
              );
              if (null !== b)
                return b.effectTag &= 2047, b;
              null !== a && (a.firstEffect = a.lastEffect = null, a.effectTag |= 2048);
            }
            b = V.sibling;
            if (null !== b)
              return b;
            V = a;
          } while (null !== V);
          X === tf && (X = yf);
          return null;
        }
        function $f(a) {
          var b = a.expirationTime;
          a = a.childExpirationTime;
          return b > a ? b : a;
        }
        function ag(a) {
          var b = fc();
          hc(99, jg.bind(null, a, b));
          return null;
        }
        function jg(a, b) {
          do
            Vf();
          while (null !== Hf);
          if ((T & (S | sf)) !== R)
            throw Error(n(327));
          var c = a.finishedWork, d = a.finishedExpirationTime;
          if (null === c)
            return null;
          a.finishedWork = null;
          a.finishedExpirationTime = 0;
          if (c === a.current)
            throw Error(n(177));
          a.callbackNode = null;
          a.callbackExpirationTime = 0;
          a.callbackPriority = 90;
          a.nextKnownPendingLevel = 0;
          var e = $f(c);
          a.firstPendingTime = e;
          d <= a.lastSuspendedTime ? a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0 : d <= a.firstSuspendedTime && (a.firstSuspendedTime = d - 1);
          d <= a.lastPingedTime && (a.lastPingedTime = 0);
          d <= a.lastExpiredTime && (a.lastExpiredTime = 0);
          a === U && (V = U = null, W = 0);
          1 < c.effectTag ? null !== c.lastEffect ? (c.lastEffect.nextEffect = c, e = c.firstEffect) : e = c : e = c.firstEffect;
          if (null !== e) {
            var f = T;
            T |= sf;
            qf.current = null;
            Ca(a.containerInfo);
            Y = e;
            do
              try {
                kg();
              } catch (jb) {
                if (null === Y)
                  throw Error(n(330));
                Re(Y, jb);
                Y = Y.nextEffect;
              }
            while (null !== Y);
            Y = e;
            do
              try {
                for (var g = a, l = b; null !== Y; ) {
                  var h = Y.effectTag;
                  h & 16 && Qa && bb(Y.stateNode);
                  if (h & 128) {
                    var k = Y.alternate;
                    if (null !== k) {
                      var p = k.ref;
                      null !== p && ("function" === typeof p ? p(null) : p.current = null);
                    }
                  }
                  switch (h & 1038) {
                    case 2:
                      bf(Y);
                      Y.effectTag &= -3;
                      break;
                    case 6:
                      bf(Y);
                      Y.effectTag &= -3;
                      cf(Y.alternate, Y);
                      break;
                    case 1024:
                      Y.effectTag &= -1025;
                      break;
                    case 1028:
                      Y.effectTag &= -1025;
                      cf(Y.alternate, Y);
                      break;
                    case 4:
                      cf(Y.alternate, Y);
                      break;
                    case 8:
                      var D = g, x = Y, K = l;
                      Qa ? Xe(D, x, K) : Ze(D, x, K);
                      $e(x);
                  }
                  Y = Y.nextEffect;
                }
              } catch (jb) {
                if (null === Y)
                  throw Error(n(330));
                Re(Y, jb);
                Y = Y.nextEffect;
              }
            while (null !== Y);
            Da(a.containerInfo);
            a.current = c;
            Y = e;
            do
              try {
                for (h = d; null !== Y; ) {
                  var Ha = Y.effectTag;
                  if (Ha & 36) {
                    var O = Y.alternate;
                    k = Y;
                    p = h;
                    switch (k.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Ue(16, 32, k);
                        break;
                      case 1:
                        var w = k.stateNode;
                        if (k.effectTag & 4)
                          if (null === O)
                            w.componentDidMount();
                          else {
                            var r = k.elementType === k.type ? O.memoizedProps : rc(k.type, O.memoizedProps);
                            w.componentDidUpdate(r, O.memoizedState, w.__reactInternalSnapshotBeforeUpdate);
                          }
                        var t = k.updateQueue;
                        null !== t && Qc(k, t, w, p);
                        break;
                      case 3:
                        var N = k.updateQueue;
                        if (null !== N) {
                          g = null;
                          if (null !== k.child)
                            switch (k.child.tag) {
                              case 5:
                                g = za(k.child.stateNode);
                                break;
                              case 1:
                                g = k.child.stateNode;
                            }
                          Qc(k, N, g, p);
                        }
                        break;
                      case 5:
                        var Mc = k.stateNode;
                        null === O && k.effectTag & 4 && Wa(Mc, k.type, k.memoizedProps, k);
                        break;
                      case 6:
                        break;
                      case 4:
                        break;
                      case 12:
                        break;
                      case 13:
                        if (Sa && null === k.memoizedState) {
                          var Sb = k.alternate;
                          if (null !== Sb) {
                            var le = Sb.memoizedState;
                            if (null !== le) {
                              var me = le.dehydrated;
                              null !== me && yb(me);
                            }
                          }
                        }
                        break;
                      case 19:
                      case 17:
                      case 20:
                      case 21:
                        break;
                      default:
                        throw Error(n(163));
                    }
                  }
                  if (Ha & 128) {
                    k = void 0;
                    var Tb = Y.ref;
                    if (null !== Tb) {
                      var v = Y.stateNode;
                      switch (Y.tag) {
                        case 5:
                          k = za(v);
                          break;
                        default:
                          k = v;
                      }
                      "function" === typeof Tb ? Tb(k) : Tb.current = k;
                    }
                  }
                  Y = Y.nextEffect;
                }
              } catch (jb) {
                if (null === Y)
                  throw Error(n(330));
                Re(Y, jb);
                Y = Y.nextEffect;
              }
            while (null !== Y);
            Y = null;
            ac();
            T = f;
          } else
            a.current = c;
          if (Gf)
            Gf = false, Hf = a, If = b;
          else
            for (Y = e; null !== Y; )
              b = Y.nextEffect, Y.nextEffect = null, Y = b;
          b = a.firstPendingTime;
          0 === b && (nf = null);
          1073741823 === b ? a === Lf ? Kf++ : (Kf = 0, Lf = a) : Kf = 0;
          "function" === typeof lg && lg(c.stateNode, d);
          Z(a);
          if (kf)
            throw kf = false, a = lf, lf = null, a;
          if ((T & rf) !== R)
            return null;
          F();
          return null;
        }
        function kg() {
          for (; null !== Y; ) {
            var a = Y.effectTag;
            0 !== (a & 256) && Te(Y.alternate, Y);
            0 === (a & 512) || Gf || (Gf = true, ic(97, function() {
              Vf();
              return null;
            }));
            Y = Y.nextEffect;
          }
        }
        function Vf() {
          if (90 !== If) {
            var a = 97 < If ? 97 : If;
            If = 90;
            return hc(a, mg);
          }
        }
        function mg() {
          if (null === Hf)
            return false;
          var a = Hf;
          Hf = null;
          if ((T & (S | sf)) !== R)
            throw Error(n(331));
          var b = T;
          T |= sf;
          for (a = a.current.firstEffect; null !== a; ) {
            try {
              var c = a;
              if (0 !== (c.effectTag & 512))
                switch (c.tag) {
                  case 0:
                  case 11:
                  case 15:
                    Ue(128, 0, c), Ue(0, 64, c);
                }
            } catch (d) {
              if (null === a)
                throw Error(n(330));
              Re(a, d);
            }
            c = a.nextEffect;
            a.nextEffect = null;
            a = c;
          }
          T = b;
          F();
          return true;
        }
        function ng(a, b, c) {
          b = Ne(c, b);
          b = jf(a, b, 1073741823);
          Ic(a, b);
          a = Nf(a, 1073741823);
          null !== a && Z(a);
        }
        function Re(a, b) {
          if (3 === a.tag)
            ng(a, a, b);
          else
            for (var c = a.return; null !== c; ) {
              if (3 === c.tag) {
                ng(c, a, b);
                break;
              } else if (1 === c.tag) {
                var d = c.stateNode;
                if ("function" === typeof c.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === nf || !nf.has(d))) {
                  a = Ne(b, a);
                  a = mf(c, a, 1073741823);
                  Ic(c, a);
                  c = Nf(c, 1073741823);
                  null !== c && Z(c);
                  break;
                }
              }
              c = c.return;
            }
        }
        function fg(a, b, c) {
          var d = a.pingCache;
          null !== d && d.delete(b);
          U === a && W === c ? X === xf || X === wf && 1073741823 === Af && E() - ff < Ff ? Wf(a, W) : Ef = true : Sf(a, c) && (b = a.lastPingedTime, 0 !== b && b < c || (a.lastPingedTime = c, a.finishedExpirationTime === c && (a.finishedExpirationTime = 0, a.finishedWork = null), Z(a)));
        }
        function gf(a, b) {
          var c = a.stateNode;
          null !== c && c.delete(b);
          b = 0;
          0 === b && (b = G(), b = Vc(b, a, null));
          a = Nf(a, b);
          null !== a && Z(a);
        }
        var ig;
        ig = function(a, b, c) {
          var d = b.expirationTime;
          if (null !== a) {
            var e = b.pendingProps;
            if (a.memoizedProps !== e || B.current)
              Bc = true;
            else {
              if (d < c) {
                Bc = false;
                switch (b.tag) {
                  case 3:
                    ze(b);
                    oe();
                    break;
                  case 5:
                    sd(b);
                    if (b.mode & 4 && 1 !== c && Ka(b.type, e))
                      return b.expirationTime = b.childExpirationTime = 1, null;
                    break;
                  case 1:
                    C(b.type) && Kb(b);
                    break;
                  case 4:
                    qd(b, b.stateNode.containerInfo);
                    break;
                  case 10:
                    xc(b, b.memoizedProps.value);
                    break;
                  case 13:
                    if (null !== b.memoizedState) {
                      d = b.child.childExpirationTime;
                      if (0 !== d && d >= c)
                        return Be(a, b, c);
                      z(I, I.current & 1, b);
                      b = re(a, b, c);
                      return null !== b ? b.sibling : null;
                    }
                    z(I, I.current & 1, b);
                    break;
                  case 19:
                    d = b.childExpirationTime >= c;
                    if (0 !== (a.effectTag & 64)) {
                      if (d)
                        return Ee(a, b, c);
                      b.effectTag |= 64;
                    }
                    e = b.memoizedState;
                    null !== e && (e.rendering = null, e.tail = null);
                    z(I, I.current, b);
                    if (!d)
                      return null;
                }
                return re(a, b, c);
              }
              Bc = false;
            }
          } else
            Bc = false;
          b.expirationTime = 0;
          switch (b.tag) {
            case 2:
              d = b.type;
              null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);
              a = b.pendingProps;
              e = Fb(b, A.current);
              Ac(b, c);
              e = Jd(null, b, d, a, e, c);
              b.effectTag |= 1;
              if ("object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof) {
                b.tag = 1;
                Nd();
                if (C(d)) {
                  var f = true;
                  Kb(b);
                } else
                  f = false;
                b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;
                var g = d.getDerivedStateFromProps;
                "function" === typeof g && Uc(b, d, g, a);
                e.updater = Xc;
                b.stateNode = e;
                e._reactInternalFiber = b;
                ad(b, d, a, c);
                b = ye(null, b, d, true, f, c);
              } else
                b.tag = 0, Q(null, b, e, c), b = b.child;
              return b;
            case 16:
              e = b.elementType;
              null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);
              a = b.pendingProps;
              sa(e);
              if (1 !== e._status)
                throw e._result;
              e = e._result;
              b.type = e;
              f = b.tag = og(e);
              a = rc(e, a);
              switch (f) {
                case 0:
                  b = ve(null, b, e, a, c);
                  break;
                case 1:
                  b = xe(null, b, e, a, c);
                  break;
                case 11:
                  b = qe(null, b, e, a, c);
                  break;
                case 14:
                  b = se(null, b, e, rc(e.type, a), d, c);
                  break;
                default:
                  throw Error(n(306, e, ""));
              }
              return b;
            case 0:
              return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : rc(d, e), ve(a, b, d, e, c);
            case 1:
              return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : rc(d, e), xe(a, b, d, e, c);
            case 3:
              ze(b);
              d = b.updateQueue;
              if (null === d)
                throw Error(n(282));
              e = b.memoizedState;
              e = null !== e ? e.element : null;
              Nc(b, d, b.pendingProps, null, c);
              d = b.memoizedState.element;
              if (d === e)
                oe(), b = re(a, b, c);
              else {
                if (e = b.stateNode.hydrate)
                  Sa ? (ee = tb(b.stateNode.containerInfo), de = b, e = fe = true) : e = false;
                if (e)
                  for (c = ld(b, null, d, c), b.child = c; c; )
                    c.effectTag = c.effectTag & -3 | 1024, c = c.sibling;
                else
                  Q(a, b, d, c), oe();
                b = b.child;
              }
              return b;
            case 5:
              return sd(b), null === a && je(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, Ja(d, e) ? g = null : null !== f && Ja(d, f) && (b.effectTag |= 16), we(a, b), b.mode & 4 && 1 !== c && Ka(d, e) ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (Q(a, b, g, c), b = b.child), b;
            case 6:
              return null === a && je(b), null;
            case 13:
              return Be(a, b, c);
            case 4:
              return qd(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = kd(b, null, d, c) : Q(a, b, d, c), b.child;
            case 11:
              return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : rc(d, e), qe(a, b, d, e, c);
            case 7:
              return Q(a, b, b.pendingProps, c), b.child;
            case 8:
              return Q(a, b, b.pendingProps.children, c), b.child;
            case 12:
              return Q(a, b, b.pendingProps.children, c), b.child;
            case 10:
              a: {
                d = b.type._context;
                e = b.pendingProps;
                g = b.memoizedProps;
                f = e.value;
                xc(b, f);
                if (null !== g) {
                  var l = g.value;
                  f = oc(l, f) ? 0 : ("function" === typeof d._calculateChangedBits ? d._calculateChangedBits(l, f) : 1073741823) | 0;
                  if (0 === f) {
                    if (g.children === e.children && !B.current) {
                      b = re(a, b, c);
                      break a;
                    }
                  } else
                    for (l = b.child, null !== l && (l.return = b); null !== l; ) {
                      var h = l.dependencies;
                      if (null !== h) {
                        g = l.child;
                        for (var k = h.firstContext; null !== k; ) {
                          if (k.context === d && 0 !== (k.observedBits & f)) {
                            1 === l.tag && (k = Gc(c, null), k.tag = 2, Ic(l, k));
                            l.expirationTime < c && (l.expirationTime = c);
                            k = l.alternate;
                            null !== k && k.expirationTime < c && (k.expirationTime = c);
                            zc(l.return, c);
                            h.expirationTime < c && (h.expirationTime = c);
                            break;
                          }
                          k = k.next;
                        }
                      } else
                        g = 10 === l.tag ? l.type === b.type ? null : l.child : l.child;
                      if (null !== g)
                        g.return = l;
                      else
                        for (g = l; null !== g; ) {
                          if (g === b) {
                            g = null;
                            break;
                          }
                          l = g.sibling;
                          if (null !== l) {
                            l.return = g.return;
                            g = l;
                            break;
                          }
                          g = g.return;
                        }
                      l = g;
                    }
                }
                Q(a, b, e.children, c);
                b = b.child;
              }
              return b;
            case 9:
              return e = b.type, f = b.pendingProps, d = f.children, Ac(b, c), e = Cc(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, Q(a, b, d, c), b.child;
            case 14:
              return e = b.type, f = rc(e, b.pendingProps), f = rc(e.type, f), se(a, b, e, f, d, c);
            case 15:
              return ue(a, b, b.type, b.pendingProps, d, c);
            case 17:
              return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : rc(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, C(d) ? (a = true, Kb(b)) : a = false, Ac(b, c), Zc(b, d, e, c), ad(b, d, e, c), ye(null, b, d, true, a, c);
            case 19:
              return Ee(a, b, c);
          }
          throw Error(n(156, b.tag));
        };
        var lg = null, We = null;
        function pg(a) {
          if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)
            return false;
          var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (b.isDisabled || !b.supportsFiber)
            return true;
          try {
            var c = b.inject(a);
            lg = function(a2) {
              try {
                b.onCommitFiberRoot(c, a2, void 0, 64 === (a2.current.effectTag & 64));
              } catch (e) {
              }
            };
            We = function(a2) {
              try {
                b.onCommitFiberUnmount(c, a2);
              } catch (e) {
              }
            };
          } catch (d) {
          }
          return true;
        }
        function qg(a, b, c, d) {
          this.tag = a;
          this.key = c;
          this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
          this.index = 0;
          this.ref = null;
          this.pendingProps = b;
          this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
          this.mode = d;
          this.effectTag = 0;
          this.lastEffect = this.firstEffect = this.nextEffect = null;
          this.childExpirationTime = this.expirationTime = 0;
          this.alternate = null;
        }
        function he(a, b, c, d) {
          return new qg(a, b, c, d);
        }
        function te(a) {
          a = a.prototype;
          return !(!a || !a.isReactComponent);
        }
        function og(a) {
          if ("function" === typeof a)
            return te(a) ? 1 : 0;
          if (void 0 !== a && null !== a) {
            a = a.$$typeof;
            if (a === la)
              return 11;
            if (a === oa)
              return 14;
          }
          return 2;
        }
        function fd(a, b) {
          var c = a.alternate;
          null === c ? (c = he(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);
          c.childExpirationTime = a.childExpirationTime;
          c.expirationTime = a.expirationTime;
          c.child = a.child;
          c.memoizedProps = a.memoizedProps;
          c.memoizedState = a.memoizedState;
          c.updateQueue = a.updateQueue;
          b = a.dependencies;
          c.dependencies = null === b ? null : {
            expirationTime: b.expirationTime,
            firstContext: b.firstContext,
            responders: b.responders
          };
          c.sibling = a.sibling;
          c.index = a.index;
          c.ref = a.ref;
          return c;
        }
        function hd(a, b, c, d, e, f) {
          var g = 2;
          d = a;
          if ("function" === typeof a)
            te(a) && (g = 1);
          else if ("string" === typeof a)
            g = 5;
          else
            a:
              switch (a) {
                case ea:
                  return jd(c.children, e, f, b);
                case ka:
                  g = 8;
                  e |= 7;
                  break;
                case fa:
                  g = 8;
                  e |= 1;
                  break;
                case ha:
                  return a = he(12, c, b, e | 8), a.elementType = ha, a.type = ha, a.expirationTime = f, a;
                case ma:
                  return a = he(13, c, b, e), a.type = ma, a.elementType = ma, a.expirationTime = f, a;
                case na:
                  return a = he(19, c, b, e), a.elementType = na, a.expirationTime = f, a;
                default:
                  if ("object" === typeof a && null !== a)
                    switch (a.$$typeof) {
                      case ia:
                        g = 10;
                        break a;
                      case ja:
                        g = 9;
                        break a;
                      case la:
                        g = 11;
                        break a;
                      case oa:
                        g = 14;
                        break a;
                      case pa:
                        g = 16;
                        d = null;
                        break a;
                    }
                  throw Error(n(130, null == a ? a : typeof a, ""));
              }
          b = he(g, c, b, e);
          b.elementType = a;
          b.type = d;
          b.expirationTime = f;
          return b;
        }
        function jd(a, b, c, d) {
          a = he(7, a, d, b);
          a.expirationTime = c;
          return a;
        }
        function gd(a, b, c) {
          a = he(6, a, null, b);
          a.expirationTime = c;
          return a;
        }
        function id(a, b, c) {
          b = he(4, null !== a.children ? a.children : [], a.key, b);
          b.expirationTime = c;
          b.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation };
          return b;
        }
        function rg(a, b, c) {
          this.tag = b;
          this.current = null;
          this.containerInfo = a;
          this.pingCache = this.pendingChildren = null;
          this.finishedExpirationTime = 0;
          this.finishedWork = null;
          this.timeoutHandle = Oa;
          this.pendingContext = this.context = null;
          this.hydrate = c;
          this.callbackNode = null;
          this.callbackPriority = 90;
          this.lastExpiredTime = this.lastPingedTime = this.nextKnownPendingLevel = this.lastSuspendedTime = this.firstSuspendedTime = this.firstPendingTime = 0;
        }
        function Sf(a, b) {
          var c = a.firstSuspendedTime;
          a = a.lastSuspendedTime;
          return 0 !== c && c >= b && a <= b;
        }
        function Pf(a, b) {
          var c = a.firstSuspendedTime, d = a.lastSuspendedTime;
          c < b && (a.firstSuspendedTime = b);
          if (d > b || 0 === c)
            a.lastSuspendedTime = b;
          b <= a.lastPingedTime && (a.lastPingedTime = 0);
          b <= a.lastExpiredTime && (a.lastExpiredTime = 0);
        }
        function Qf(a, b) {
          b > a.firstPendingTime && (a.firstPendingTime = b);
          var c = a.firstSuspendedTime;
          0 !== c && (b >= c ? a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0 : b >= a.lastSuspendedTime && (a.lastSuspendedTime = b + 1), b > a.nextKnownPendingLevel && (a.nextKnownPendingLevel = b));
        }
        function Uf(a, b) {
          var c = a.lastExpiredTime;
          if (0 === c || c > b)
            a.lastExpiredTime = b;
        }
        function sg(a) {
          var b = a._reactInternalFiber;
          if (void 0 === b) {
            if ("function" === typeof a.render)
              throw Error(n(188));
            throw Error(n(268, Object.keys(a)));
          }
          a = xa(b);
          return null === a ? null : a.stateNode;
        }
        function tg(a, b) {
          a = a.memoizedState;
          null !== a && null !== a.dehydrated && a.retryTime < b && (a.retryTime = b);
        }
        function ug(a, b) {
          tg(a, b);
          (a = a.alternate) && tg(a, b);
        }
        var vg = { createContainer: function(a, b, c) {
          a = new rg(a, b, c);
          b = he(3, null, null, 2 === b ? 7 : 1 === b ? 3 : 0);
          a.current = b;
          return b.stateNode = a;
        }, updateContainer: function(a, b, c, d) {
          var e = b.current, f = G(), g = Sc.suspense;
          f = Vc(f, e, g);
          a:
            if (c) {
              c = c._reactInternalFiber;
              b: {
                if (ua(c) !== c || 1 !== c.tag)
                  throw Error(n(170));
                var l = c;
                do {
                  switch (l.tag) {
                    case 3:
                      l = l.stateNode.context;
                      break b;
                    case 1:
                      if (C(l.type)) {
                        l = l.stateNode.__reactInternalMemoizedMergedChildContext;
                        break b;
                      }
                  }
                  l = l.return;
                } while (null !== l);
                throw Error(n(171));
              }
              if (1 === c.tag) {
                var h = c.type;
                if (C(h)) {
                  c = Jb(c, h, l);
                  break a;
                }
              }
              c = l;
            } else
              c = Db;
          null === b.context ? b.context = c : b.pendingContext = c;
          b = Gc(f, g);
          b.payload = { element: a };
          d = void 0 === d ? null : d;
          null !== d && (b.callback = d);
          Ic(e, b);
          Wc(e, f);
          return f;
        }, batchedEventUpdates: function(a, b) {
          var c = T;
          T |= 2;
          try {
            return a(b);
          } finally {
            T = c, T === R && F();
          }
        }, batchedUpdates: function(a, b) {
          var c = T;
          T |= 1;
          try {
            return a(b);
          } finally {
            T = c, T === R && F();
          }
        }, unbatchedUpdates: function(a, b) {
          var c = T;
          T &= -2;
          T |= rf;
          try {
            return a(b);
          } finally {
            T = c, T === R && F();
          }
        }, deferredUpdates: function(a) {
          return hc(
            97,
            a
          );
        }, syncUpdates: function(a, b, c, d) {
          return hc(99, a.bind(null, b, c, d));
        }, discreteUpdates: function(a, b, c, d) {
          var e = T;
          T |= 4;
          try {
            return hc(98, a.bind(null, b, c, d));
          } finally {
            T = e, T === R && F();
          }
        }, flushDiscreteUpdates: function() {
          (T & (1 | S | sf)) === R && (dg(), Vf());
        }, flushControlled: function(a) {
          var b = T;
          T |= 1;
          try {
            hc(99, a);
          } finally {
            T = b, T === R && F();
          }
        }, flushSync: eg, flushPassiveEffects: Vf, IsThisRendererActing: { current: false }, getPublicRootInstance: function(a) {
          a = a.current;
          if (!a.child)
            return null;
          switch (a.child.tag) {
            case 5:
              return za(a.child.stateNode);
            default:
              return a.child.stateNode;
          }
        }, attemptSynchronousHydration: function(a) {
          switch (a.tag) {
            case 3:
              var b = a.stateNode;
              b.hydrate && cg(b, b.firstPendingTime);
              break;
            case 13:
              eg(function() {
                return Wc(a, 1073741823);
              }), b = mc(G(), 150, 100), ug(a, b);
          }
        }, attemptUserBlockingHydration: function(a) {
          if (13 === a.tag) {
            var b = mc(G(), 150, 100);
            Wc(a, b);
            ug(a, b);
          }
        }, attemptContinuousHydration: function(a) {
          if (13 === a.tag) {
            G();
            var b = lc++;
            Wc(a, b);
            ug(a, b);
          }
        }, attemptHydrationAtCurrentPriority: function(a) {
          if (13 === a.tag) {
            var b = G();
            b = Vc(b, a, null);
            Wc(a, b);
            ug(a, b);
          }
        }, findHostInstance: sg, findHostInstanceWithWarning: function(a) {
          return sg(a);
        }, findHostInstanceWithNoPortals: function(a) {
          a = ya(a);
          return null === a ? null : 20 === a.tag ? a.stateNode.instance : a.stateNode;
        }, shouldSuspend: function() {
          return false;
        }, injectIntoDevTools: function(a) {
          var b = a.findFiberByHostInstance;
          return pg(aa({}, a, { overrideHookState: null, overrideProps: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: q.ReactCurrentDispatcher, findHostInstanceByFiber: function(a2) {
            a2 = xa(a2);
            return null === a2 ? null : a2.stateNode;
          }, findFiberByHostInstance: function(a2) {
            return b ? b(a2) : null;
          }, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null }));
        } };
        module2.exports = vg.default || vg;
        var $$$renderer = module2.exports;
        module2.exports = $$$reconciler;
        return $$$renderer;
      };
    }
  });

  // ../../../.yarn/cache/scheduler-npm-0.18.0-ee0cc1e577-5e6da4509a.zip/node_modules/scheduler/cjs/scheduler-tracing.production.min.js
  var require_scheduler_tracing_production_min = __commonJS({
    "../../../.yarn/cache/scheduler-npm-0.18.0-ee0cc1e577-5e6da4509a.zip/node_modules/scheduler/cjs/scheduler-tracing.production.min.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      var b = 0;
      exports2.__interactionsRef = null;
      exports2.__subscriberRef = null;
      exports2.unstable_clear = function(a) {
        return a();
      };
      exports2.unstable_getCurrent = function() {
        return null;
      };
      exports2.unstable_getThreadID = function() {
        return ++b;
      };
      exports2.unstable_trace = function(a, d, c) {
        return c();
      };
      exports2.unstable_wrap = function(a) {
        return a;
      };
      exports2.unstable_subscribe = function() {
      };
      exports2.unstable_unsubscribe = function() {
      };
    }
  });

  // ../../../.yarn/cache/scheduler-npm-0.18.0-ee0cc1e577-5e6da4509a.zip/node_modules/scheduler/cjs/scheduler-tracing.development.js
  var require_scheduler_tracing_development = __commonJS({
    "../../../.yarn/cache/scheduler-npm-0.18.0-ee0cc1e577-5e6da4509a.zip/node_modules/scheduler/cjs/scheduler-tracing.development.js"(exports2) {
      "use strict";
      if (process.env.NODE_ENV !== "production") {
        (function() {
          "use strict";
          Object.defineProperty(exports2, "__esModule", { value: true });
          var enableSchedulerTracing = true;
          var DEFAULT_THREAD_ID = 0;
          var interactionIDCounter = 0;
          var threadIDCounter = 0;
          exports2.__interactionsRef = null;
          exports2.__subscriberRef = null;
          if (enableSchedulerTracing) {
            exports2.__interactionsRef = {
              current: /* @__PURE__ */ new Set()
            };
            exports2.__subscriberRef = {
              current: null
            };
          }
          function unstable_clear(callback) {
            if (!enableSchedulerTracing) {
              return callback();
            }
            var prevInteractions = exports2.__interactionsRef.current;
            exports2.__interactionsRef.current = /* @__PURE__ */ new Set();
            try {
              return callback();
            } finally {
              exports2.__interactionsRef.current = prevInteractions;
            }
          }
          function unstable_getCurrent() {
            if (!enableSchedulerTracing) {
              return null;
            } else {
              return exports2.__interactionsRef.current;
            }
          }
          function unstable_getThreadID() {
            return ++threadIDCounter;
          }
          function unstable_trace(name, timestamp, callback) {
            var threadID = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : DEFAULT_THREAD_ID;
            if (!enableSchedulerTracing) {
              return callback();
            }
            var interaction = {
              __count: 1,
              id: interactionIDCounter++,
              name,
              timestamp
            };
            var prevInteractions = exports2.__interactionsRef.current;
            var interactions = new Set(prevInteractions);
            interactions.add(interaction);
            exports2.__interactionsRef.current = interactions;
            var subscriber = exports2.__subscriberRef.current;
            var returnValue;
            try {
              if (subscriber !== null) {
                subscriber.onInteractionTraced(interaction);
              }
            } finally {
              try {
                if (subscriber !== null) {
                  subscriber.onWorkStarted(interactions, threadID);
                }
              } finally {
                try {
                  returnValue = callback();
                } finally {
                  exports2.__interactionsRef.current = prevInteractions;
                  try {
                    if (subscriber !== null) {
                      subscriber.onWorkStopped(interactions, threadID);
                    }
                  } finally {
                    interaction.__count--;
                    if (subscriber !== null && interaction.__count === 0) {
                      subscriber.onInteractionScheduledWorkCompleted(interaction);
                    }
                  }
                }
              }
            }
            return returnValue;
          }
          function unstable_wrap(callback) {
            var threadID = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : DEFAULT_THREAD_ID;
            if (!enableSchedulerTracing) {
              return callback;
            }
            var wrappedInteractions = exports2.__interactionsRef.current;
            var subscriber = exports2.__subscriberRef.current;
            if (subscriber !== null) {
              subscriber.onWorkScheduled(wrappedInteractions, threadID);
            }
            wrappedInteractions.forEach(function(interaction) {
              interaction.__count++;
            });
            var hasRun = false;
            function wrapped() {
              var prevInteractions = exports2.__interactionsRef.current;
              exports2.__interactionsRef.current = wrappedInteractions;
              subscriber = exports2.__subscriberRef.current;
              try {
                var returnValue;
                try {
                  if (subscriber !== null) {
                    subscriber.onWorkStarted(wrappedInteractions, threadID);
                  }
                } finally {
                  try {
                    returnValue = callback.apply(void 0, arguments);
                  } finally {
                    exports2.__interactionsRef.current = prevInteractions;
                    if (subscriber !== null) {
                      subscriber.onWorkStopped(wrappedInteractions, threadID);
                    }
                  }
                }
                return returnValue;
              } finally {
                if (!hasRun) {
                  hasRun = true;
                  wrappedInteractions.forEach(function(interaction) {
                    interaction.__count--;
                    if (subscriber !== null && interaction.__count === 0) {
                      subscriber.onInteractionScheduledWorkCompleted(interaction);
                    }
                  });
                }
              }
            }
            wrapped.cancel = function cancel() {
              subscriber = exports2.__subscriberRef.current;
              try {
                if (subscriber !== null) {
                  subscriber.onWorkCanceled(wrappedInteractions, threadID);
                }
              } finally {
                wrappedInteractions.forEach(function(interaction) {
                  interaction.__count--;
                  if (subscriber && interaction.__count === 0) {
                    subscriber.onInteractionScheduledWorkCompleted(interaction);
                  }
                });
              }
            };
            return wrapped;
          }
          var subscribers = null;
          if (enableSchedulerTracing) {
            subscribers = /* @__PURE__ */ new Set();
          }
          function unstable_subscribe(subscriber) {
            if (enableSchedulerTracing) {
              subscribers.add(subscriber);
              if (subscribers.size === 1) {
                exports2.__subscriberRef.current = {
                  onInteractionScheduledWorkCompleted,
                  onInteractionTraced,
                  onWorkCanceled,
                  onWorkScheduled,
                  onWorkStarted,
                  onWorkStopped
                };
              }
            }
          }
          function unstable_unsubscribe(subscriber) {
            if (enableSchedulerTracing) {
              subscribers.delete(subscriber);
              if (subscribers.size === 0) {
                exports2.__subscriberRef.current = null;
              }
            }
          }
          function onInteractionTraced(interaction) {
            var didCatchError = false;
            var caughtError = null;
            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onInteractionTraced(interaction);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });
            if (didCatchError) {
              throw caughtError;
            }
          }
          function onInteractionScheduledWorkCompleted(interaction) {
            var didCatchError = false;
            var caughtError = null;
            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });
            if (didCatchError) {
              throw caughtError;
            }
          }
          function onWorkScheduled(interactions, threadID) {
            var didCatchError = false;
            var caughtError = null;
            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onWorkScheduled(interactions, threadID);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });
            if (didCatchError) {
              throw caughtError;
            }
          }
          function onWorkStarted(interactions, threadID) {
            var didCatchError = false;
            var caughtError = null;
            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onWorkStarted(interactions, threadID);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });
            if (didCatchError) {
              throw caughtError;
            }
          }
          function onWorkStopped(interactions, threadID) {
            var didCatchError = false;
            var caughtError = null;
            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onWorkStopped(interactions, threadID);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });
            if (didCatchError) {
              throw caughtError;
            }
          }
          function onWorkCanceled(interactions, threadID) {
            var didCatchError = false;
            var caughtError = null;
            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onWorkCanceled(interactions, threadID);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });
            if (didCatchError) {
              throw caughtError;
            }
          }
          exports2.unstable_clear = unstable_clear;
          exports2.unstable_getCurrent = unstable_getCurrent;
          exports2.unstable_getThreadID = unstable_getThreadID;
          exports2.unstable_trace = unstable_trace;
          exports2.unstable_wrap = unstable_wrap;
          exports2.unstable_subscribe = unstable_subscribe;
          exports2.unstable_unsubscribe = unstable_unsubscribe;
        })();
      }
    }
  });

  // ../../../.yarn/cache/scheduler-npm-0.18.0-ee0cc1e577-5e6da4509a.zip/node_modules/scheduler/tracing.js
  var require_tracing = __commonJS({
    "../../../.yarn/cache/scheduler-npm-0.18.0-ee0cc1e577-5e6da4509a.zip/node_modules/scheduler/tracing.js"(exports2, module2) {
      "use strict";
      if (process.env.NODE_ENV === "production") {
        module2.exports = require_scheduler_tracing_production_min();
      } else {
        module2.exports = require_scheduler_tracing_development();
      }
    }
  });

  // ../../../.yarn/__virtual__/react-reconciler-virtual-70b71e3ad2/0/cache/react-reconciler-npm-0.24.0-eaeed763d0-f544f94e10.zip/node_modules/react-reconciler/cjs/react-reconciler.development.js
  var require_react_reconciler_development = __commonJS({
    "../../../.yarn/__virtual__/react-reconciler-virtual-70b71e3ad2/0/cache/react-reconciler-npm-0.24.0-eaeed763d0-f544f94e10.zip/node_modules/react-reconciler/cjs/react-reconciler.development.js"(exports2, module2) {
      "use strict";
      if (process.env.NODE_ENV !== "production") {
        module2.exports = function $$$reconciler($$$hostConfig) {
          "use strict";
          var _assign = require_object_assign();
          var React10 = require_react();
          var checkPropTypes = require_checkPropTypes();
          var Scheduler = require_scheduler();
          var tracing = require_tracing();
          var FunctionComponent = 0;
          var ClassComponent = 1;
          var IndeterminateComponent = 2;
          var HostRoot = 3;
          var HostPortal = 4;
          var HostComponent = 5;
          var HostText = 6;
          var Fragment = 7;
          var Mode = 8;
          var ContextConsumer = 9;
          var ContextProvider = 10;
          var ForwardRef = 11;
          var Profiler = 12;
          var SuspenseComponent = 13;
          var MemoComponent = 14;
          var SimpleMemoComponent = 15;
          var LazyComponent = 16;
          var IncompleteClassComponent = 17;
          var DehydratedFragment = 18;
          var SuspenseListComponent = 19;
          var FundamentalComponent = 20;
          var ScopeComponent = 21;
          var warningWithoutStack = function() {
          };
          {
            warningWithoutStack = function(condition, format) {
              for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                args[_key - 2] = arguments[_key];
              }
              if (format === void 0) {
                throw new Error("`warningWithoutStack(condition, format, ...args)` requires a warning message argument");
              }
              if (args.length > 8) {
                throw new Error("warningWithoutStack() currently supports at most 8 arguments.");
              }
              if (condition) {
                return;
              }
              if (typeof console !== "undefined") {
                var argsWithFormat = args.map(function(item) {
                  return "" + item;
                });
                argsWithFormat.unshift("Warning: " + format);
                Function.prototype.apply.call(console.error, console, argsWithFormat);
              }
              try {
                var argIndex = 0;
                var message = "Warning: " + format.replace(/%s/g, function() {
                  return args[argIndex++];
                });
                throw new Error(message);
              } catch (x) {
              }
            };
          }
          var warningWithoutStack$1 = warningWithoutStack;
          function get(key2) {
            return key2._reactInternalFiber;
          }
          function set(key2, value) {
            key2._reactInternalFiber = value;
          }
          var ReactSharedInternals = React10.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
          if (!ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher")) {
            ReactSharedInternals.ReactCurrentDispatcher = {
              current: null
            };
          }
          if (!ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig")) {
            ReactSharedInternals.ReactCurrentBatchConfig = {
              suspense: null
            };
          }
          var hasSymbol = typeof Symbol === "function" && Symbol.for;
          var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
          var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
          var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
          var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
          var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
          var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
          var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
          var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
          var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
          var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
          var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
          var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
          var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
          var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
          var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
          var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
          var MAYBE_ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = "@@iterator";
          function getIteratorFn(maybeIterable) {
            if (maybeIterable === null || typeof maybeIterable !== "object") {
              return null;
            }
            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
            if (typeof maybeIterator === "function") {
              return maybeIterator;
            }
            return null;
          }
          var warning = warningWithoutStack$1;
          {
            warning = function(condition, format) {
              if (condition) {
                return;
              }
              var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
              var stack = ReactDebugCurrentFrame2.getStackAddendum();
              for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                args[_key - 2] = arguments[_key];
              }
              warningWithoutStack$1.apply(void 0, [false, format + "%s"].concat(args, [stack]));
            };
          }
          var warning$1 = warning;
          var Uninitialized = -1;
          var Pending = 0;
          var Resolved = 1;
          var Rejected = 2;
          function refineResolvedLazyComponent(lazyComponent) {
            return lazyComponent._status === Resolved ? lazyComponent._result : null;
          }
          function initializeLazyComponentType(lazyComponent) {
            if (lazyComponent._status === Uninitialized) {
              lazyComponent._status = Pending;
              var ctor = lazyComponent._ctor;
              var thenable = ctor();
              lazyComponent._result = thenable;
              thenable.then(function(moduleObject) {
                if (lazyComponent._status === Pending) {
                  var defaultExport = moduleObject.default;
                  {
                    if (defaultExport === void 0) {
                      warning$1(false, "lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
                    }
                  }
                  lazyComponent._status = Resolved;
                  lazyComponent._result = defaultExport;
                }
              }, function(error) {
                if (lazyComponent._status === Pending) {
                  lazyComponent._status = Rejected;
                  lazyComponent._result = error;
                }
              });
            }
          }
          function getWrappedName(outerType, innerType, wrapperName) {
            var functionName = innerType.displayName || innerType.name || "";
            return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
          }
          function getComponentName(type2) {
            if (type2 == null) {
              return null;
            }
            {
              if (typeof type2.tag === "number") {
                warningWithoutStack$1(false, "Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
              }
            }
            if (typeof type2 === "function") {
              return type2.displayName || type2.name || null;
            }
            if (typeof type2 === "string") {
              return type2;
            }
            switch (type2) {
              case REACT_FRAGMENT_TYPE:
                return "Fragment";
              case REACT_PORTAL_TYPE:
                return "Portal";
              case REACT_PROFILER_TYPE:
                return "Profiler";
              case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
              case REACT_SUSPENSE_TYPE:
                return "Suspense";
              case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            }
            if (typeof type2 === "object") {
              switch (type2.$$typeof) {
                case REACT_CONTEXT_TYPE:
                  return "Context.Consumer";
                case REACT_PROVIDER_TYPE:
                  return "Context.Provider";
                case REACT_FORWARD_REF_TYPE:
                  return getWrappedName(type2, type2.render, "ForwardRef");
                case REACT_MEMO_TYPE:
                  return getComponentName(type2.type);
                case REACT_LAZY_TYPE: {
                  var thenable = type2;
                  var resolvedThenable = refineResolvedLazyComponent(thenable);
                  if (resolvedThenable) {
                    return getComponentName(resolvedThenable);
                  }
                  break;
                }
              }
            }
            return null;
          }
          var NoEffect = 0;
          var PerformedWork = 1;
          var Placement = 2;
          var Update = 4;
          var PlacementAndUpdate = 6;
          var Deletion = 8;
          var ContentReset = 16;
          var Callback = 32;
          var DidCapture = 64;
          var Ref = 128;
          var Snapshot = 256;
          var Passive = 512;
          var Hydrating = 1024;
          var HydratingAndUpdate = 1028;
          var LifecycleEffectMask = 932;
          var HostEffectMask = 2047;
          var Incomplete = 2048;
          var ShouldCapture = 4096;
          var enableUserTimingAPI = true;
          var debugRenderPhaseSideEffectsForStrictMode = true;
          var replayFailedUnitOfWorkWithInvokeGuardedCallback = true;
          var warnAboutDeprecatedLifecycles = true;
          var enableProfilerTimer = true;
          var enableSchedulerTracing = true;
          var enableSuspenseServerRenderer = false;
          var enableFlareAPI = false;
          var enableFundamentalAPI = false;
          var enableScopeAPI = false;
          var warnAboutUnmockedScheduler = false;
          var flushSuspenseFallbacksInTests = true;
          var enableSuspenseCallback = false;
          var warnAboutDefaultPropsOnFunctionComponents = false;
          var warnAboutStringRefs = false;
          var disableLegacyContext = false;
          var disableSchedulerTimeoutBasedOnReactExpirationTime = false;
          var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
          function getNearestMountedFiber(fiber) {
            var node = fiber;
            var nearestMounted = fiber;
            if (!fiber.alternate) {
              var nextNode = node;
              do {
                node = nextNode;
                if ((node.effectTag & (Placement | Hydrating)) !== NoEffect) {
                  nearestMounted = node.return;
                }
                nextNode = node.return;
              } while (nextNode);
            } else {
              while (node.return) {
                node = node.return;
              }
            }
            if (node.tag === HostRoot) {
              return nearestMounted;
            }
            return null;
          }
          function isFiberMounted(fiber) {
            return getNearestMountedFiber(fiber) === fiber;
          }
          function isMounted(component) {
            {
              var owner = ReactCurrentOwner.current;
              if (owner !== null && owner.tag === ClassComponent) {
                var ownerFiber = owner;
                var instance = ownerFiber.stateNode;
                !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, "%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentName(ownerFiber.type) || "A component") : void 0;
                instance._warnedAboutRefsInRender = true;
              }
            }
            var fiber = get(component);
            if (!fiber) {
              return false;
            }
            return getNearestMountedFiber(fiber) === fiber;
          }
          function assertIsMounted(fiber) {
            if (!(getNearestMountedFiber(fiber) === fiber)) {
              {
                throw Error("Unable to find node on an unmounted component.");
              }
            }
          }
          function findCurrentFiberUsingSlowPath(fiber) {
            var alternate = fiber.alternate;
            if (!alternate) {
              var nearestMounted = getNearestMountedFiber(fiber);
              if (!(nearestMounted !== null)) {
                {
                  throw Error("Unable to find node on an unmounted component.");
                }
              }
              if (nearestMounted !== fiber) {
                return null;
              }
              return fiber;
            }
            var a = fiber;
            var b = alternate;
            while (true) {
              var parentA = a.return;
              if (parentA === null) {
                break;
              }
              var parentB = parentA.alternate;
              if (parentB === null) {
                var nextParent = parentA.return;
                if (nextParent !== null) {
                  a = b = nextParent;
                  continue;
                }
                break;
              }
              if (parentA.child === parentB.child) {
                var child = parentA.child;
                while (child) {
                  if (child === a) {
                    assertIsMounted(parentA);
                    return fiber;
                  }
                  if (child === b) {
                    assertIsMounted(parentA);
                    return alternate;
                  }
                  child = child.sibling;
                }
                {
                  {
                    throw Error("Unable to find node on an unmounted component.");
                  }
                }
              }
              if (a.return !== b.return) {
                a = parentA;
                b = parentB;
              } else {
                var didFindChild = false;
                var _child = parentA.child;
                while (_child) {
                  if (_child === a) {
                    didFindChild = true;
                    a = parentA;
                    b = parentB;
                    break;
                  }
                  if (_child === b) {
                    didFindChild = true;
                    b = parentA;
                    a = parentB;
                    break;
                  }
                  _child = _child.sibling;
                }
                if (!didFindChild) {
                  _child = parentB.child;
                  while (_child) {
                    if (_child === a) {
                      didFindChild = true;
                      a = parentB;
                      b = parentA;
                      break;
                    }
                    if (_child === b) {
                      didFindChild = true;
                      b = parentB;
                      a = parentA;
                      break;
                    }
                    _child = _child.sibling;
                  }
                  if (!didFindChild) {
                    {
                      throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                    }
                  }
                }
              }
              if (!(a.alternate === b)) {
                {
                  throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
            if (!(a.tag === HostRoot)) {
              {
                throw Error("Unable to find node on an unmounted component.");
              }
            }
            if (a.stateNode.current === a) {
              return fiber;
            }
            return alternate;
          }
          function findCurrentHostFiber(parent) {
            var currentParent = findCurrentFiberUsingSlowPath(parent);
            if (!currentParent) {
              return null;
            }
            var node = currentParent;
            while (true) {
              if (node.tag === HostComponent || node.tag === HostText) {
                return node;
              } else if (node.child) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === currentParent) {
                return null;
              }
              while (!node.sibling) {
                if (!node.return || node.return === currentParent) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
            return null;
          }
          function findCurrentHostFiberWithNoPortals(parent) {
            var currentParent = findCurrentFiberUsingSlowPath(parent);
            if (!currentParent) {
              return null;
            }
            var node = currentParent;
            while (true) {
              if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI && node.tag === FundamentalComponent) {
                return node;
              } else if (node.child && node.tag !== HostPortal) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === currentParent) {
                return null;
              }
              while (!node.sibling) {
                if (!node.return || node.return === currentParent) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
            return null;
          }
          var getPublicInstance = $$$hostConfig.getPublicInstance;
          var getRootHostContext = $$$hostConfig.getRootHostContext;
          var getChildHostContext = $$$hostConfig.getChildHostContext;
          var prepareForCommit = $$$hostConfig.prepareForCommit;
          var resetAfterCommit = $$$hostConfig.resetAfterCommit;
          var createInstance = $$$hostConfig.createInstance;
          var appendInitialChild = $$$hostConfig.appendInitialChild;
          var finalizeInitialChildren = $$$hostConfig.finalizeInitialChildren;
          var prepareUpdate = $$$hostConfig.prepareUpdate;
          var shouldSetTextContent = $$$hostConfig.shouldSetTextContent;
          var shouldDeprioritizeSubtree = $$$hostConfig.shouldDeprioritizeSubtree;
          var createTextInstance = $$$hostConfig.createTextInstance;
          var scheduleTimeout = $$$hostConfig.setTimeout;
          var cancelTimeout = $$$hostConfig.clearTimeout;
          var noTimeout = $$$hostConfig.noTimeout;
          var now = $$$hostConfig.now;
          var isPrimaryRenderer = $$$hostConfig.isPrimaryRenderer;
          var warnsIfNotActing = $$$hostConfig.warnsIfNotActing;
          var supportsMutation = $$$hostConfig.supportsMutation;
          var supportsPersistence = $$$hostConfig.supportsPersistence;
          var supportsHydration = $$$hostConfig.supportsHydration;
          var mountResponderInstance = $$$hostConfig.mountResponderInstance;
          var unmountResponderInstance = $$$hostConfig.unmountResponderInstance;
          var getFundamentalComponentInstance = $$$hostConfig.getFundamentalComponentInstance;
          var mountFundamentalComponent = $$$hostConfig.mountFundamentalComponent;
          var shouldUpdateFundamentalComponent = $$$hostConfig.shouldUpdateFundamentalComponent;
          var getInstanceFromNode = $$$hostConfig.getInstanceFromNode;
          var appendChild = $$$hostConfig.appendChild;
          var appendChildToContainer = $$$hostConfig.appendChildToContainer;
          var commitTextUpdate = $$$hostConfig.commitTextUpdate;
          var commitMount = $$$hostConfig.commitMount;
          var commitUpdate = $$$hostConfig.commitUpdate;
          var insertBefore = $$$hostConfig.insertBefore;
          var insertInContainerBefore = $$$hostConfig.insertInContainerBefore;
          var removeChild = $$$hostConfig.removeChild;
          var removeChildFromContainer = $$$hostConfig.removeChildFromContainer;
          var resetTextContent = $$$hostConfig.resetTextContent;
          var hideInstance = $$$hostConfig.hideInstance;
          var hideTextInstance = $$$hostConfig.hideTextInstance;
          var unhideInstance = $$$hostConfig.unhideInstance;
          var unhideTextInstance = $$$hostConfig.unhideTextInstance;
          var updateFundamentalComponent = $$$hostConfig.updateFundamentalComponent;
          var unmountFundamentalComponent = $$$hostConfig.unmountFundamentalComponent;
          var cloneInstance = $$$hostConfig.cloneInstance;
          var createContainerChildSet = $$$hostConfig.createContainerChildSet;
          var appendChildToContainerChildSet = $$$hostConfig.appendChildToContainerChildSet;
          var finalizeContainerChildren = $$$hostConfig.finalizeContainerChildren;
          var replaceContainerChildren = $$$hostConfig.replaceContainerChildren;
          var cloneHiddenInstance = $$$hostConfig.cloneHiddenInstance;
          var cloneHiddenTextInstance = $$$hostConfig.cloneHiddenTextInstance;
          var cloneFundamentalInstance = $$$hostConfig.cloneInstance;
          var canHydrateInstance = $$$hostConfig.canHydrateInstance;
          var canHydrateTextInstance = $$$hostConfig.canHydrateTextInstance;
          var canHydrateSuspenseInstance = $$$hostConfig.canHydrateSuspenseInstance;
          var isSuspenseInstancePending = $$$hostConfig.isSuspenseInstancePending;
          var isSuspenseInstanceFallback = $$$hostConfig.isSuspenseInstanceFallback;
          var registerSuspenseInstanceRetry = $$$hostConfig.registerSuspenseInstanceRetry;
          var getNextHydratableSibling = $$$hostConfig.getNextHydratableSibling;
          var getFirstHydratableChild = $$$hostConfig.getFirstHydratableChild;
          var hydrateInstance = $$$hostConfig.hydrateInstance;
          var hydrateTextInstance = $$$hostConfig.hydrateTextInstance;
          var hydrateSuspenseInstance = $$$hostConfig.hydrateSuspenseInstance;
          var getNextHydratableInstanceAfterSuspenseInstance = $$$hostConfig.getNextHydratableInstanceAfterSuspenseInstance;
          var commitHydratedContainer = $$$hostConfig.commitHydratedContainer;
          var commitHydratedSuspenseInstance = $$$hostConfig.commitHydratedSuspenseInstance;
          var clearSuspenseBoundary = $$$hostConfig.clearSuspenseBoundary;
          var clearSuspenseBoundaryFromContainer = $$$hostConfig.clearSuspenseBoundaryFromContainer;
          var didNotMatchHydratedContainerTextInstance = $$$hostConfig.didNotMatchHydratedContainerTextInstance;
          var didNotMatchHydratedTextInstance = $$$hostConfig.didNotMatchHydratedTextInstance;
          var didNotHydrateContainerInstance = $$$hostConfig.didNotHydrateContainerInstance;
          var didNotHydrateInstance = $$$hostConfig.didNotHydrateInstance;
          var didNotFindHydratableContainerInstance = $$$hostConfig.didNotFindHydratableContainerInstance;
          var didNotFindHydratableContainerTextInstance = $$$hostConfig.didNotFindHydratableContainerTextInstance;
          var didNotFindHydratableContainerSuspenseInstance = $$$hostConfig.didNotFindHydratableContainerSuspenseInstance;
          var didNotFindHydratableInstance = $$$hostConfig.didNotFindHydratableInstance;
          var didNotFindHydratableTextInstance = $$$hostConfig.didNotFindHydratableTextInstance;
          var didNotFindHydratableSuspenseInstance = $$$hostConfig.didNotFindHydratableSuspenseInstance;
          var BEFORE_SLASH_RE = /^(.*)[\\\/]/;
          var describeComponentFrame = function(name, source, ownerName) {
            var sourceInfo = "";
            if (source) {
              var path = source.fileName;
              var fileName = path.replace(BEFORE_SLASH_RE, "");
              {
                if (/^index\./.test(fileName)) {
                  var match = path.match(BEFORE_SLASH_RE);
                  if (match) {
                    var pathBeforeSlash = match[1];
                    if (pathBeforeSlash) {
                      var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, "");
                      fileName = folderName + "/" + fileName;
                    }
                  }
                }
              }
              sourceInfo = " (at " + fileName + ":" + source.lineNumber + ")";
            } else if (ownerName) {
              sourceInfo = " (created by " + ownerName + ")";
            }
            return "\n    in " + (name || "Unknown") + sourceInfo;
          };
          var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
          function describeFiber(fiber) {
            switch (fiber.tag) {
              case HostRoot:
              case HostPortal:
              case HostText:
              case Fragment:
              case ContextProvider:
              case ContextConsumer:
                return "";
              default:
                var owner = fiber._debugOwner;
                var source = fiber._debugSource;
                var name = getComponentName(fiber.type);
                var ownerName = null;
                if (owner) {
                  ownerName = getComponentName(owner.type);
                }
                return describeComponentFrame(name, source, ownerName);
            }
          }
          function getStackByFiberInDevAndProd(workInProgress2) {
            var info = "";
            var node = workInProgress2;
            do {
              info += describeFiber(node);
              node = node.return;
            } while (node);
            return info;
          }
          var current = null;
          var phase = null;
          function getCurrentFiberOwnerNameInDevOrNull() {
            {
              if (current === null) {
                return null;
              }
              var owner = current._debugOwner;
              if (owner !== null && typeof owner !== "undefined") {
                return getComponentName(owner.type);
              }
            }
            return null;
          }
          function getCurrentFiberStackInDev() {
            {
              if (current === null) {
                return "";
              }
              return getStackByFiberInDevAndProd(current);
            }
            return "";
          }
          function resetCurrentFiber() {
            {
              ReactDebugCurrentFrame.getCurrentStack = null;
              current = null;
              phase = null;
            }
          }
          function setCurrentFiber(fiber) {
            {
              ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
              current = fiber;
              phase = null;
            }
          }
          function setCurrentPhase(lifeCyclePhase) {
            {
              phase = lifeCyclePhase;
            }
          }
          var reactEmoji = "\u269B";
          var warningEmoji = "\u26D4";
          var supportsUserTiming = typeof performance !== "undefined" && typeof performance.mark === "function" && typeof performance.clearMarks === "function" && typeof performance.measure === "function" && typeof performance.clearMeasures === "function";
          var currentFiber = null;
          var currentPhase = null;
          var currentPhaseFiber = null;
          var isCommitting = false;
          var hasScheduledUpdateInCurrentCommit = false;
          var hasScheduledUpdateInCurrentPhase = false;
          var commitCountInCurrentWorkLoop = 0;
          var effectCountInCurrentCommit = 0;
          var labelsInCurrentCommit = /* @__PURE__ */ new Set();
          var formatMarkName = function(markName) {
            return reactEmoji + " " + markName;
          };
          var formatLabel = function(label, warning2) {
            var prefix2 = warning2 ? warningEmoji + " " : reactEmoji + " ";
            var suffix = warning2 ? " Warning: " + warning2 : "";
            return "" + prefix2 + label + suffix;
          };
          var beginMark = function(markName) {
            performance.mark(formatMarkName(markName));
          };
          var clearMark = function(markName) {
            performance.clearMarks(formatMarkName(markName));
          };
          var endMark = function(label, markName, warning2) {
            var formattedMarkName = formatMarkName(markName);
            var formattedLabel = formatLabel(label, warning2);
            try {
              performance.measure(formattedLabel, formattedMarkName);
            } catch (err2) {
            }
            performance.clearMarks(formattedMarkName);
            performance.clearMeasures(formattedLabel);
          };
          var getFiberMarkName = function(label, debugID) {
            return label + " (#" + debugID + ")";
          };
          var getFiberLabel = function(componentName, isMounted2, phase2) {
            if (phase2 === null) {
              return componentName + " [" + (isMounted2 ? "update" : "mount") + "]";
            } else {
              return componentName + "." + phase2;
            }
          };
          var beginFiberMark = function(fiber, phase2) {
            var componentName = getComponentName(fiber.type) || "Unknown";
            var debugID = fiber._debugID;
            var isMounted2 = fiber.alternate !== null;
            var label = getFiberLabel(componentName, isMounted2, phase2);
            if (isCommitting && labelsInCurrentCommit.has(label)) {
              return false;
            }
            labelsInCurrentCommit.add(label);
            var markName = getFiberMarkName(label, debugID);
            beginMark(markName);
            return true;
          };
          var clearFiberMark = function(fiber, phase2) {
            var componentName = getComponentName(fiber.type) || "Unknown";
            var debugID = fiber._debugID;
            var isMounted2 = fiber.alternate !== null;
            var label = getFiberLabel(componentName, isMounted2, phase2);
            var markName = getFiberMarkName(label, debugID);
            clearMark(markName);
          };
          var endFiberMark = function(fiber, phase2, warning2) {
            var componentName = getComponentName(fiber.type) || "Unknown";
            var debugID = fiber._debugID;
            var isMounted2 = fiber.alternate !== null;
            var label = getFiberLabel(componentName, isMounted2, phase2);
            var markName = getFiberMarkName(label, debugID);
            endMark(label, markName, warning2);
          };
          var shouldIgnoreFiber = function(fiber) {
            switch (fiber.tag) {
              case HostRoot:
              case HostComponent:
              case HostText:
              case HostPortal:
              case Fragment:
              case ContextProvider:
              case ContextConsumer:
              case Mode:
                return true;
              default:
                return false;
            }
          };
          var clearPendingPhaseMeasurement = function() {
            if (currentPhase !== null && currentPhaseFiber !== null) {
              clearFiberMark(currentPhaseFiber, currentPhase);
            }
            currentPhaseFiber = null;
            currentPhase = null;
            hasScheduledUpdateInCurrentPhase = false;
          };
          var pauseTimers = function() {
            var fiber = currentFiber;
            while (fiber) {
              if (fiber._debugIsCurrentlyTiming) {
                endFiberMark(fiber, null, null);
              }
              fiber = fiber.return;
            }
          };
          var resumeTimersRecursively = function(fiber) {
            if (fiber.return !== null) {
              resumeTimersRecursively(fiber.return);
            }
            if (fiber._debugIsCurrentlyTiming) {
              beginFiberMark(fiber, null);
            }
          };
          var resumeTimers = function() {
            if (currentFiber !== null) {
              resumeTimersRecursively(currentFiber);
            }
          };
          function recordEffect() {
            if (enableUserTimingAPI) {
              effectCountInCurrentCommit++;
            }
          }
          function recordScheduleUpdate() {
            if (enableUserTimingAPI) {
              if (isCommitting) {
                hasScheduledUpdateInCurrentCommit = true;
              }
              if (currentPhase !== null && currentPhase !== "componentWillMount" && currentPhase !== "componentWillReceiveProps") {
                hasScheduledUpdateInCurrentPhase = true;
              }
            }
          }
          function startWorkTimer(fiber) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              currentFiber = fiber;
              if (!beginFiberMark(fiber, null)) {
                return;
              }
              fiber._debugIsCurrentlyTiming = true;
            }
          }
          function cancelWorkTimer(fiber) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              fiber._debugIsCurrentlyTiming = false;
              clearFiberMark(fiber, null);
            }
          }
          function stopWorkTimer(fiber) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              currentFiber = fiber.return;
              if (!fiber._debugIsCurrentlyTiming) {
                return;
              }
              fiber._debugIsCurrentlyTiming = false;
              endFiberMark(fiber, null, null);
            }
          }
          function stopFailedWorkTimer(fiber) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              currentFiber = fiber.return;
              if (!fiber._debugIsCurrentlyTiming) {
                return;
              }
              fiber._debugIsCurrentlyTiming = false;
              var warning2 = fiber.tag === SuspenseComponent ? "Rendering was suspended" : "An error was thrown inside this error boundary";
              endFiberMark(fiber, null, warning2);
            }
          }
          function startPhaseTimer(fiber, phase2) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              clearPendingPhaseMeasurement();
              if (!beginFiberMark(fiber, phase2)) {
                return;
              }
              currentPhaseFiber = fiber;
              currentPhase = phase2;
            }
          }
          function stopPhaseTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              if (currentPhase !== null && currentPhaseFiber !== null) {
                var warning2 = hasScheduledUpdateInCurrentPhase ? "Scheduled a cascading update" : null;
                endFiberMark(currentPhaseFiber, currentPhase, warning2);
              }
              currentPhase = null;
              currentPhaseFiber = null;
            }
          }
          function startWorkLoopTimer(nextUnitOfWork) {
            if (enableUserTimingAPI) {
              currentFiber = nextUnitOfWork;
              if (!supportsUserTiming) {
                return;
              }
              commitCountInCurrentWorkLoop = 0;
              beginMark("(React Tree Reconciliation)");
              resumeTimers();
            }
          }
          function stopWorkLoopTimer(interruptedBy2, didCompleteRoot) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              var warning2 = null;
              if (interruptedBy2 !== null) {
                if (interruptedBy2.tag === HostRoot) {
                  warning2 = "A top-level update interrupted the previous render";
                } else {
                  var componentName = getComponentName(interruptedBy2.type) || "Unknown";
                  warning2 = "An update to " + componentName + " interrupted the previous render";
                }
              } else if (commitCountInCurrentWorkLoop > 1) {
                warning2 = "There were cascading updates";
              }
              commitCountInCurrentWorkLoop = 0;
              var label = didCompleteRoot ? "(React Tree Reconciliation: Completed Root)" : "(React Tree Reconciliation: Yielded)";
              pauseTimers();
              endMark(label, "(React Tree Reconciliation)", warning2);
            }
          }
          function startCommitTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              isCommitting = true;
              hasScheduledUpdateInCurrentCommit = false;
              labelsInCurrentCommit.clear();
              beginMark("(Committing Changes)");
            }
          }
          function stopCommitTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              var warning2 = null;
              if (hasScheduledUpdateInCurrentCommit) {
                warning2 = "Lifecycle hook scheduled a cascading update";
              } else if (commitCountInCurrentWorkLoop > 0) {
                warning2 = "Caused by a cascading update in earlier commit";
              }
              hasScheduledUpdateInCurrentCommit = false;
              commitCountInCurrentWorkLoop++;
              isCommitting = false;
              labelsInCurrentCommit.clear();
              endMark("(Committing Changes)", "(Committing Changes)", warning2);
            }
          }
          function startCommitSnapshotEffectsTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              effectCountInCurrentCommit = 0;
              beginMark("(Committing Snapshot Effects)");
            }
          }
          function stopCommitSnapshotEffectsTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              var count = effectCountInCurrentCommit;
              effectCountInCurrentCommit = 0;
              endMark("(Committing Snapshot Effects: " + count + " Total)", "(Committing Snapshot Effects)", null);
            }
          }
          function startCommitHostEffectsTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              effectCountInCurrentCommit = 0;
              beginMark("(Committing Host Effects)");
            }
          }
          function stopCommitHostEffectsTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              var count = effectCountInCurrentCommit;
              effectCountInCurrentCommit = 0;
              endMark("(Committing Host Effects: " + count + " Total)", "(Committing Host Effects)", null);
            }
          }
          function startCommitLifeCyclesTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              effectCountInCurrentCommit = 0;
              beginMark("(Calling Lifecycle Methods)");
            }
          }
          function stopCommitLifeCyclesTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              var count = effectCountInCurrentCommit;
              effectCountInCurrentCommit = 0;
              endMark("(Calling Lifecycle Methods: " + count + " Total)", "(Calling Lifecycle Methods)", null);
            }
          }
          var valueStack = [];
          var fiberStack;
          {
            fiberStack = [];
          }
          var index = -1;
          function createCursor(defaultValue) {
            return {
              current: defaultValue
            };
          }
          function pop(cursor, fiber) {
            if (index < 0) {
              {
                warningWithoutStack$1(false, "Unexpected pop.");
              }
              return;
            }
            {
              if (fiber !== fiberStack[index]) {
                warningWithoutStack$1(false, "Unexpected Fiber popped.");
              }
            }
            cursor.current = valueStack[index];
            valueStack[index] = null;
            {
              fiberStack[index] = null;
            }
            index--;
          }
          function push(cursor, value, fiber) {
            index++;
            valueStack[index] = cursor.current;
            {
              fiberStack[index] = fiber;
            }
            cursor.current = value;
          }
          var warnedAboutMissingGetChildContext;
          {
            warnedAboutMissingGetChildContext = {};
          }
          var emptyContextObject = {};
          {
            Object.freeze(emptyContextObject);
          }
          var contextStackCursor = createCursor(emptyContextObject);
          var didPerformWorkStackCursor = createCursor(false);
          var previousContext = emptyContextObject;
          function getUnmaskedContext(workInProgress2, Component, didPushOwnContextIfProvider) {
            if (disableLegacyContext) {
              return emptyContextObject;
            } else {
              if (didPushOwnContextIfProvider && isContextProvider(Component)) {
                return previousContext;
              }
              return contextStackCursor.current;
            }
          }
          function cacheContext(workInProgress2, unmaskedContext, maskedContext) {
            if (disableLegacyContext) {
              return;
            } else {
              var instance = workInProgress2.stateNode;
              instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
              instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
            }
          }
          function getMaskedContext(workInProgress2, unmaskedContext) {
            if (disableLegacyContext) {
              return emptyContextObject;
            } else {
              var type2 = workInProgress2.type;
              var contextTypes = type2.contextTypes;
              if (!contextTypes) {
                return emptyContextObject;
              }
              var instance = workInProgress2.stateNode;
              if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
                return instance.__reactInternalMemoizedMaskedChildContext;
              }
              var context = {};
              for (var key2 in contextTypes) {
                context[key2] = unmaskedContext[key2];
              }
              {
                var name = getComponentName(type2) || "Unknown";
                checkPropTypes(contextTypes, context, "context", name, getCurrentFiberStackInDev);
              }
              if (instance) {
                cacheContext(workInProgress2, unmaskedContext, context);
              }
              return context;
            }
          }
          function hasContextChanged() {
            if (disableLegacyContext) {
              return false;
            } else {
              return didPerformWorkStackCursor.current;
            }
          }
          function isContextProvider(type2) {
            if (disableLegacyContext) {
              return false;
            } else {
              var childContextTypes = type2.childContextTypes;
              return childContextTypes !== null && childContextTypes !== void 0;
            }
          }
          function popContext(fiber) {
            if (disableLegacyContext) {
              return;
            } else {
              pop(didPerformWorkStackCursor, fiber);
              pop(contextStackCursor, fiber);
            }
          }
          function popTopLevelContextObject(fiber) {
            if (disableLegacyContext) {
              return;
            } else {
              pop(didPerformWorkStackCursor, fiber);
              pop(contextStackCursor, fiber);
            }
          }
          function pushTopLevelContextObject(fiber, context, didChange) {
            if (disableLegacyContext) {
              return;
            } else {
              if (!(contextStackCursor.current === emptyContextObject)) {
                {
                  throw Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              push(contextStackCursor, context, fiber);
              push(didPerformWorkStackCursor, didChange, fiber);
            }
          }
          function processChildContext(fiber, type2, parentContext) {
            if (disableLegacyContext) {
              return parentContext;
            } else {
              var instance = fiber.stateNode;
              var childContextTypes = type2.childContextTypes;
              if (typeof instance.getChildContext !== "function") {
                {
                  var componentName = getComponentName(type2) || "Unknown";
                  if (!warnedAboutMissingGetChildContext[componentName]) {
                    warnedAboutMissingGetChildContext[componentName] = true;
                    warningWithoutStack$1(false, "%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                  }
                }
                return parentContext;
              }
              var childContext;
              {
                setCurrentPhase("getChildContext");
              }
              startPhaseTimer(fiber, "getChildContext");
              childContext = instance.getChildContext();
              stopPhaseTimer();
              {
                setCurrentPhase(null);
              }
              for (var contextKey in childContext) {
                if (!(contextKey in childContextTypes)) {
                  {
                    throw Error((getComponentName(type2) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
                  }
                }
              }
              {
                var name = getComponentName(type2) || "Unknown";
                checkPropTypes(
                  childContextTypes,
                  childContext,
                  "child context",
                  name,
                  getCurrentFiberStackInDev
                );
              }
              return _assign({}, parentContext, {}, childContext);
            }
          }
          function pushContextProvider(workInProgress2) {
            if (disableLegacyContext) {
              return false;
            } else {
              var instance = workInProgress2.stateNode;
              var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
              previousContext = contextStackCursor.current;
              push(contextStackCursor, memoizedMergedChildContext, workInProgress2);
              push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress2);
              return true;
            }
          }
          function invalidateContextProvider(workInProgress2, type2, didChange) {
            if (disableLegacyContext) {
              return;
            } else {
              var instance = workInProgress2.stateNode;
              if (!instance) {
                {
                  throw Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              if (didChange) {
                var mergedContext = processChildContext(workInProgress2, type2, previousContext);
                instance.__reactInternalMemoizedMergedChildContext = mergedContext;
                pop(didPerformWorkStackCursor, workInProgress2);
                pop(contextStackCursor, workInProgress2);
                push(contextStackCursor, mergedContext, workInProgress2);
                push(didPerformWorkStackCursor, didChange, workInProgress2);
              } else {
                pop(didPerformWorkStackCursor, workInProgress2);
                push(didPerformWorkStackCursor, didChange, workInProgress2);
              }
            }
          }
          function findCurrentUnmaskedContext(fiber) {
            if (disableLegacyContext) {
              return emptyContextObject;
            } else {
              if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {
                {
                  throw Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              var node = fiber;
              do {
                switch (node.tag) {
                  case HostRoot:
                    return node.stateNode.context;
                  case ClassComponent: {
                    var Component = node.type;
                    if (isContextProvider(Component)) {
                      return node.stateNode.__reactInternalMemoizedMergedChildContext;
                    }
                    break;
                  }
                }
                node = node.return;
              } while (node !== null);
              {
                {
                  throw Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
          }
          var BlockingRoot = 1;
          var ConcurrentRoot = 2;
          var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority;
          var Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback;
          var Scheduler_cancelCallback = Scheduler.unstable_cancelCallback;
          var Scheduler_shouldYield = Scheduler.unstable_shouldYield;
          var Scheduler_requestPaint = Scheduler.unstable_requestPaint;
          var Scheduler_now = Scheduler.unstable_now;
          var Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
          var Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority;
          var Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
          var Scheduler_NormalPriority = Scheduler.unstable_NormalPriority;
          var Scheduler_LowPriority = Scheduler.unstable_LowPriority;
          var Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;
          if (enableSchedulerTracing) {
            if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
              {
                throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling");
              }
            }
          }
          var fakeCallbackNode = {};
          var ImmediatePriority = 99;
          var UserBlockingPriority = 98;
          var NormalPriority = 97;
          var LowPriority = 96;
          var IdlePriority = 95;
          var NoPriority = 90;
          var shouldYield = Scheduler_shouldYield;
          var requestPaint = Scheduler_requestPaint !== void 0 ? Scheduler_requestPaint : function() {
          };
          var syncQueue = null;
          var immediateQueueCallbackNode = null;
          var isFlushingSyncQueue = false;
          var initialTimeMs = Scheduler_now();
          var now$1 = initialTimeMs < 1e4 ? Scheduler_now : function() {
            return Scheduler_now() - initialTimeMs;
          };
          function getCurrentPriorityLevel() {
            switch (Scheduler_getCurrentPriorityLevel()) {
              case Scheduler_ImmediatePriority:
                return ImmediatePriority;
              case Scheduler_UserBlockingPriority:
                return UserBlockingPriority;
              case Scheduler_NormalPriority:
                return NormalPriority;
              case Scheduler_LowPriority:
                return LowPriority;
              case Scheduler_IdlePriority:
                return IdlePriority;
              default: {
                {
                  throw Error("Unknown priority level.");
                }
              }
            }
          }
          function reactPriorityToSchedulerPriority(reactPriorityLevel) {
            switch (reactPriorityLevel) {
              case ImmediatePriority:
                return Scheduler_ImmediatePriority;
              case UserBlockingPriority:
                return Scheduler_UserBlockingPriority;
              case NormalPriority:
                return Scheduler_NormalPriority;
              case LowPriority:
                return Scheduler_LowPriority;
              case IdlePriority:
                return Scheduler_IdlePriority;
              default: {
                {
                  throw Error("Unknown priority level.");
                }
              }
            }
          }
          function runWithPriority(reactPriorityLevel, fn) {
            var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
            return Scheduler_runWithPriority(priorityLevel, fn);
          }
          function scheduleCallback(reactPriorityLevel, callback, options) {
            var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
            return Scheduler_scheduleCallback(priorityLevel, callback, options);
          }
          function scheduleSyncCallback(callback) {
            if (syncQueue === null) {
              syncQueue = [callback];
              immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
            } else {
              syncQueue.push(callback);
            }
            return fakeCallbackNode;
          }
          function cancelCallback(callbackNode) {
            if (callbackNode !== fakeCallbackNode) {
              Scheduler_cancelCallback(callbackNode);
            }
          }
          function flushSyncCallbackQueue() {
            if (immediateQueueCallbackNode !== null) {
              var node = immediateQueueCallbackNode;
              immediateQueueCallbackNode = null;
              Scheduler_cancelCallback(node);
            }
            flushSyncCallbackQueueImpl();
          }
          function flushSyncCallbackQueueImpl() {
            if (!isFlushingSyncQueue && syncQueue !== null) {
              isFlushingSyncQueue = true;
              var i2 = 0;
              try {
                var _isSync = true;
                var queue = syncQueue;
                runWithPriority(ImmediatePriority, function() {
                  for (; i2 < queue.length; i2++) {
                    var callback = queue[i2];
                    do {
                      callback = callback(_isSync);
                    } while (callback !== null);
                  }
                });
                syncQueue = null;
              } catch (error) {
                if (syncQueue !== null) {
                  syncQueue = syncQueue.slice(i2 + 1);
                }
                Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
                throw error;
              } finally {
                isFlushingSyncQueue = false;
              }
            }
          }
          var NoMode = 0;
          var StrictMode = 1;
          var BlockingMode = 2;
          var ConcurrentMode = 4;
          var ProfileMode = 8;
          var MAX_SIGNED_31_BIT_INT = 1073741823;
          var NoWork = 0;
          var Never = 1;
          var Idle = 2;
          var ContinuousHydration = 3;
          var Sync = MAX_SIGNED_31_BIT_INT;
          var Batched = Sync - 1;
          var UNIT_SIZE = 10;
          var MAGIC_NUMBER_OFFSET = Batched - 1;
          function msToExpirationTime(ms) {
            return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);
          }
          function expirationTimeToMs(expirationTime) {
            return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;
          }
          function ceiling(num2, precision) {
            return ((num2 / precision | 0) + 1) * precision;
          }
          function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
            return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
          }
          var LOW_PRIORITY_EXPIRATION = 5e3;
          var LOW_PRIORITY_BATCH_SIZE = 250;
          function computeAsyncExpiration(currentTime) {
            return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);
          }
          function computeSuspenseExpiration(currentTime, timeoutMs) {
            return computeExpirationBucket(currentTime, timeoutMs, LOW_PRIORITY_BATCH_SIZE);
          }
          var HIGH_PRIORITY_EXPIRATION = 500;
          var HIGH_PRIORITY_BATCH_SIZE = 100;
          function computeInteractiveExpiration(currentTime) {
            return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);
          }
          function computeContinuousHydrationExpiration(currentTime) {
            return ContinuousHydration++;
          }
          function inferPriorityFromExpirationTime(currentTime, expirationTime) {
            if (expirationTime === Sync) {
              return ImmediatePriority;
            }
            if (expirationTime === Never || expirationTime === Idle) {
              return IdlePriority;
            }
            var msUntil = expirationTimeToMs(expirationTime) - expirationTimeToMs(currentTime);
            if (msUntil <= 0) {
              return ImmediatePriority;
            }
            if (msUntil <= HIGH_PRIORITY_EXPIRATION + HIGH_PRIORITY_BATCH_SIZE) {
              return UserBlockingPriority;
            }
            if (msUntil <= LOW_PRIORITY_EXPIRATION + LOW_PRIORITY_BATCH_SIZE) {
              return NormalPriority;
            }
            return IdlePriority;
          }
          function is(x, y) {
            return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
          }
          var is$1 = typeof Object.is === "function" ? Object.is : is;
          var hasOwnProperty = Object.prototype.hasOwnProperty;
          function shallowEqual(objA, objB) {
            if (is$1(objA, objB)) {
              return true;
            }
            if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
              return false;
            }
            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);
            if (keysA.length !== keysB.length) {
              return false;
            }
            for (var i2 = 0; i2 < keysA.length; i2++) {
              if (!hasOwnProperty.call(objB, keysA[i2]) || !is$1(objA[keysA[i2]], objB[keysA[i2]])) {
                return false;
              }
            }
            return true;
          }
          var lowPriorityWarningWithoutStack = function() {
          };
          {
            var printWarning = function(format) {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              var argIndex = 0;
              var message = "Warning: " + format.replace(/%s/g, function() {
                return args[argIndex++];
              });
              if (typeof console !== "undefined") {
                console.warn(message);
              }
              try {
                throw new Error(message);
              } catch (x) {
              }
            };
            lowPriorityWarningWithoutStack = function(condition, format) {
              if (format === void 0) {
                throw new Error("`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning message argument");
              }
              if (!condition) {
                for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
                  args[_key2 - 2] = arguments[_key2];
                }
                printWarning.apply(void 0, [format].concat(args));
              }
            };
          }
          var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;
          var ReactStrictModeWarnings = {
            recordUnsafeLifecycleWarnings: function(fiber, instance) {
            },
            flushPendingUnsafeLifecycleWarnings: function() {
            },
            recordLegacyContextWarning: function(fiber, instance) {
            },
            flushLegacyContextWarning: function() {
            },
            discardPendingWarnings: function() {
            }
          };
          {
            var findStrictRoot = function(fiber) {
              var maybeStrictRoot = null;
              var node = fiber;
              while (node !== null) {
                if (node.mode & StrictMode) {
                  maybeStrictRoot = node;
                }
                node = node.return;
              }
              return maybeStrictRoot;
            };
            var setToSortedString = function(set2) {
              var array = [];
              set2.forEach(function(value) {
                array.push(value);
              });
              return array.sort().join(", ");
            };
            var pendingComponentWillMountWarnings = [];
            var pendingUNSAFE_ComponentWillMountWarnings = [];
            var pendingComponentWillReceivePropsWarnings = [];
            var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            var pendingComponentWillUpdateWarnings = [];
            var pendingUNSAFE_ComponentWillUpdateWarnings = [];
            var didWarnAboutUnsafeLifecycles = /* @__PURE__ */ new Set();
            ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
              if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
                return;
              }
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                pendingComponentWillMountWarnings.push(fiber);
              }
              if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === "function") {
                pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                pendingComponentWillReceivePropsWarnings.push(fiber);
              }
              if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                pendingComponentWillUpdateWarnings.push(fiber);
              }
              if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === "function") {
                pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
              }
            };
            ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
              var componentWillMountUniqueNames = /* @__PURE__ */ new Set();
              if (pendingComponentWillMountWarnings.length > 0) {
                pendingComponentWillMountWarnings.forEach(function(fiber) {
                  componentWillMountUniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingComponentWillMountWarnings = [];
              }
              var UNSAFE_componentWillMountUniqueNames = /* @__PURE__ */ new Set();
              if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
                pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                  UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingUNSAFE_ComponentWillMountWarnings = [];
              }
              var componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
              if (pendingComponentWillReceivePropsWarnings.length > 0) {
                pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                  componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingComponentWillReceivePropsWarnings = [];
              }
              var UNSAFE_componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
              if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
                pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                  UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
              }
              var componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
              if (pendingComponentWillUpdateWarnings.length > 0) {
                pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                  componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingComponentWillUpdateWarnings = [];
              }
              var UNSAFE_componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
              if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
                pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                  UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutUnsafeLifecycles.add(fiber.type);
                });
                pendingUNSAFE_ComponentWillUpdateWarnings = [];
              }
              if (UNSAFE_componentWillMountUniqueNames.size > 0) {
                var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
                warningWithoutStack$1(false, "Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://fb.me/react-unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
              }
              if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
                var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
                warningWithoutStack$1(false, "Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://fb.me/react-unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n\nPlease update the following components: %s", _sortedNames);
              }
              if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
                var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
                warningWithoutStack$1(false, "Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://fb.me/react-unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
              }
              if (componentWillMountUniqueNames.size > 0) {
                var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
                lowPriorityWarningWithoutStack$1(false, "componentWillMount has been renamed, and is not recommended for use. See https://fb.me/react-unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
              }
              if (componentWillReceivePropsUniqueNames.size > 0) {
                var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
                lowPriorityWarningWithoutStack$1(false, "componentWillReceiveProps has been renamed, and is not recommended for use. See https://fb.me/react-unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
              }
              if (componentWillUpdateUniqueNames.size > 0) {
                var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
                lowPriorityWarningWithoutStack$1(false, "componentWillUpdate has been renamed, and is not recommended for use. See https://fb.me/react-unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
              }
            };
            var pendingLegacyContextWarning = /* @__PURE__ */ new Map();
            var didWarnAboutLegacyContext = /* @__PURE__ */ new Set();
            ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
              var strictRoot = findStrictRoot(fiber);
              if (strictRoot === null) {
                warningWithoutStack$1(false, "Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
                return;
              }
              if (didWarnAboutLegacyContext.has(fiber.type)) {
                return;
              }
              var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
              if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === "function") {
                if (warningsForRoot === void 0) {
                  warningsForRoot = [];
                  pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
                }
                warningsForRoot.push(fiber);
              }
            };
            ReactStrictModeWarnings.flushLegacyContextWarning = function() {
              pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
                var uniqueNames = /* @__PURE__ */ new Set();
                fiberArray.forEach(function(fiber) {
                  uniqueNames.add(getComponentName(fiber.type) || "Component");
                  didWarnAboutLegacyContext.add(fiber.type);
                });
                var sortedNames = setToSortedString(uniqueNames);
                var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);
                warningWithoutStack$1(false, "Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://fb.me/react-legacy-context%s", sortedNames, strictRootComponentStack);
              });
            };
            ReactStrictModeWarnings.discardPendingWarnings = function() {
              pendingComponentWillMountWarnings = [];
              pendingUNSAFE_ComponentWillMountWarnings = [];
              pendingComponentWillReceivePropsWarnings = [];
              pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
              pendingComponentWillUpdateWarnings = [];
              pendingUNSAFE_ComponentWillUpdateWarnings = [];
              pendingLegacyContextWarning = /* @__PURE__ */ new Map();
            };
          }
          var resolveFamily = null;
          var failedBoundaries = null;
          var setRefreshHandler = function(handler) {
            {
              resolveFamily = handler;
            }
          };
          function resolveFunctionForHotReloading(type2) {
            {
              if (resolveFamily === null) {
                return type2;
              }
              var family = resolveFamily(type2);
              if (family === void 0) {
                return type2;
              }
              return family.current;
            }
          }
          function resolveClassForHotReloading(type2) {
            return resolveFunctionForHotReloading(type2);
          }
          function resolveForwardRefForHotReloading(type2) {
            {
              if (resolveFamily === null) {
                return type2;
              }
              var family = resolveFamily(type2);
              if (family === void 0) {
                if (type2 !== null && type2 !== void 0 && typeof type2.render === "function") {
                  var currentRender = resolveFunctionForHotReloading(type2.render);
                  if (type2.render !== currentRender) {
                    var syntheticType = {
                      $$typeof: REACT_FORWARD_REF_TYPE,
                      render: currentRender
                    };
                    if (type2.displayName !== void 0) {
                      syntheticType.displayName = type2.displayName;
                    }
                    return syntheticType;
                  }
                }
                return type2;
              }
              return family.current;
            }
          }
          function isCompatibleFamilyForHotReloading(fiber, element) {
            {
              if (resolveFamily === null) {
                return false;
              }
              var prevType = fiber.elementType;
              var nextType = element.type;
              var needsCompareFamilies = false;
              var $$typeofNextType = typeof nextType === "object" && nextType !== null ? nextType.$$typeof : null;
              switch (fiber.tag) {
                case ClassComponent: {
                  if (typeof nextType === "function") {
                    needsCompareFamilies = true;
                  }
                  break;
                }
                case FunctionComponent: {
                  if (typeof nextType === "function") {
                    needsCompareFamilies = true;
                  } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                    needsCompareFamilies = true;
                  }
                  break;
                }
                case ForwardRef: {
                  if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
                    needsCompareFamilies = true;
                  } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                    needsCompareFamilies = true;
                  }
                  break;
                }
                case MemoComponent:
                case SimpleMemoComponent: {
                  if ($$typeofNextType === REACT_MEMO_TYPE) {
                    needsCompareFamilies = true;
                  } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                    needsCompareFamilies = true;
                  }
                  break;
                }
                default:
                  return false;
              }
              if (needsCompareFamilies) {
                var prevFamily = resolveFamily(prevType);
                if (prevFamily !== void 0 && prevFamily === resolveFamily(nextType)) {
                  return true;
                }
              }
              return false;
            }
          }
          function markFailedErrorBoundaryForHotReloading(fiber) {
            {
              if (resolveFamily === null) {
                return;
              }
              if (typeof WeakSet !== "function") {
                return;
              }
              if (failedBoundaries === null) {
                failedBoundaries = /* @__PURE__ */ new WeakSet();
              }
              failedBoundaries.add(fiber);
            }
          }
          var scheduleRefresh = function(root, update) {
            {
              if (resolveFamily === null) {
                return;
              }
              var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
              flushPassiveEffects();
              flushSync(function() {
                scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
              });
            }
          };
          var scheduleRoot = function(root, element) {
            {
              if (root.context !== emptyContextObject) {
                return;
              }
              flushPassiveEffects();
              syncUpdates(function() {
                updateContainer(element, root, null, null);
              });
            }
          };
          function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
            {
              var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type2 = fiber.type;
              var candidateType = null;
              switch (tag) {
                case FunctionComponent:
                case SimpleMemoComponent:
                case ClassComponent:
                  candidateType = type2;
                  break;
                case ForwardRef:
                  candidateType = type2.render;
                  break;
                default:
                  break;
              }
              if (resolveFamily === null) {
                throw new Error("Expected resolveFamily to be set during hot reload.");
              }
              var needsRender = false;
              var needsRemount = false;
              if (candidateType !== null) {
                var family = resolveFamily(candidateType);
                if (family !== void 0) {
                  if (staleFamilies.has(family)) {
                    needsRemount = true;
                  } else if (updatedFamilies.has(family)) {
                    if (tag === ClassComponent) {
                      needsRemount = true;
                    } else {
                      needsRender = true;
                    }
                  }
                }
              }
              if (failedBoundaries !== null) {
                if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
                  needsRemount = true;
                }
              }
              if (needsRemount) {
                fiber._debugNeedsRemount = true;
              }
              if (needsRemount || needsRender) {
                scheduleWork(fiber, Sync);
              }
              if (child !== null && !needsRemount) {
                scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
              }
              if (sibling !== null) {
                scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
              }
            }
          }
          var findHostInstancesForRefresh = function(root, families) {
            {
              var hostInstances = /* @__PURE__ */ new Set();
              var types = new Set(families.map(function(family) {
                return family.current;
              }));
              findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
              return hostInstances;
            }
          };
          function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
            {
              var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type2 = fiber.type;
              var candidateType = null;
              switch (tag) {
                case FunctionComponent:
                case SimpleMemoComponent:
                case ClassComponent:
                  candidateType = type2;
                  break;
                case ForwardRef:
                  candidateType = type2.render;
                  break;
                default:
                  break;
              }
              var didMatch = false;
              if (candidateType !== null) {
                if (types.has(candidateType)) {
                  didMatch = true;
                }
              }
              if (didMatch) {
                findHostInstancesForFiberShallowly(fiber, hostInstances);
              } else {
                if (child !== null) {
                  findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
                }
              }
              if (sibling !== null) {
                findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
              }
            }
          }
          function findHostInstancesForFiberShallowly(fiber, hostInstances) {
            {
              var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
              if (foundHostInstances) {
                return;
              }
              var node = fiber;
              while (true) {
                switch (node.tag) {
                  case HostComponent:
                    hostInstances.add(node.stateNode);
                    return;
                  case HostPortal:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                  case HostRoot:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                }
                if (node.return === null) {
                  throw new Error("Expected to reach root first.");
                }
                node = node.return;
              }
            }
          }
          function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
            {
              var node = fiber;
              var foundHostInstances = false;
              while (true) {
                if (node.tag === HostComponent) {
                  foundHostInstances = true;
                  hostInstances.add(node.stateNode);
                } else if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
                if (node === fiber) {
                  return foundHostInstances;
                }
                while (node.sibling === null) {
                  if (node.return === null || node.return === fiber) {
                    return foundHostInstances;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
              }
            }
            return false;
          }
          function resolveDefaultProps(Component, baseProps) {
            if (Component && Component.defaultProps) {
              var props = _assign({}, baseProps);
              var defaultProps = Component.defaultProps;
              for (var propName in defaultProps) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps[propName];
                }
              }
              return props;
            }
            return baseProps;
          }
          function readLazyComponentType(lazyComponent) {
            initializeLazyComponentType(lazyComponent);
            if (lazyComponent._status !== Resolved) {
              throw lazyComponent._result;
            }
            return lazyComponent._result;
          }
          var valueCursor = createCursor(null);
          var rendererSigil;
          {
            rendererSigil = {};
          }
          var currentlyRenderingFiber = null;
          var lastContextDependency = null;
          var lastContextWithAllBitsObserved = null;
          var isDisallowedContextReadInDEV = false;
          function resetContextDependencies() {
            currentlyRenderingFiber = null;
            lastContextDependency = null;
            lastContextWithAllBitsObserved = null;
            {
              isDisallowedContextReadInDEV = false;
            }
          }
          function enterDisallowedContextReadInDEV() {
            {
              isDisallowedContextReadInDEV = true;
            }
          }
          function exitDisallowedContextReadInDEV() {
            {
              isDisallowedContextReadInDEV = false;
            }
          }
          function pushProvider(providerFiber, nextValue) {
            var context = providerFiber.type._context;
            if (isPrimaryRenderer) {
              push(valueCursor, context._currentValue, providerFiber);
              context._currentValue = nextValue;
              {
                !(context._currentRenderer === void 0 || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, "Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.") : void 0;
                context._currentRenderer = rendererSigil;
              }
            } else {
              push(valueCursor, context._currentValue2, providerFiber);
              context._currentValue2 = nextValue;
              {
                !(context._currentRenderer2 === void 0 || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, "Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.") : void 0;
                context._currentRenderer2 = rendererSigil;
              }
            }
          }
          function popProvider(providerFiber) {
            var currentValue = valueCursor.current;
            pop(valueCursor, providerFiber);
            var context = providerFiber.type._context;
            if (isPrimaryRenderer) {
              context._currentValue = currentValue;
            } else {
              context._currentValue2 = currentValue;
            }
          }
          function calculateChangedBits(context, newValue, oldValue) {
            if (is$1(oldValue, newValue)) {
              return 0;
            } else {
              var changedBits = typeof context._calculateChangedBits === "function" ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
              {
                !((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits) ? warning$1(false, "calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: %s", changedBits) : void 0;
              }
              return changedBits | 0;
            }
          }
          function scheduleWorkOnParentPath(parent, renderExpirationTime2) {
            var node = parent;
            while (node !== null) {
              var alternate = node.alternate;
              if (node.childExpirationTime < renderExpirationTime2) {
                node.childExpirationTime = renderExpirationTime2;
                if (alternate !== null && alternate.childExpirationTime < renderExpirationTime2) {
                  alternate.childExpirationTime = renderExpirationTime2;
                }
              } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime2) {
                alternate.childExpirationTime = renderExpirationTime2;
              } else {
                break;
              }
              node = node.return;
            }
          }
          function propagateContextChange(workInProgress2, context, changedBits, renderExpirationTime2) {
            var fiber = workInProgress2.child;
            if (fiber !== null) {
              fiber.return = workInProgress2;
            }
            while (fiber !== null) {
              var nextFiber = void 0;
              var list = fiber.dependencies;
              if (list !== null) {
                nextFiber = fiber.child;
                var dependency = list.firstContext;
                while (dependency !== null) {
                  if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
                    if (fiber.tag === ClassComponent) {
                      var update = createUpdate(renderExpirationTime2, null);
                      update.tag = ForceUpdate;
                      enqueueUpdate(fiber, update);
                    }
                    if (fiber.expirationTime < renderExpirationTime2) {
                      fiber.expirationTime = renderExpirationTime2;
                    }
                    var alternate = fiber.alternate;
                    if (alternate !== null && alternate.expirationTime < renderExpirationTime2) {
                      alternate.expirationTime = renderExpirationTime2;
                    }
                    scheduleWorkOnParentPath(fiber.return, renderExpirationTime2);
                    if (list.expirationTime < renderExpirationTime2) {
                      list.expirationTime = renderExpirationTime2;
                    }
                    break;
                  }
                  dependency = dependency.next;
                }
              } else if (fiber.tag === ContextProvider) {
                nextFiber = fiber.type === workInProgress2.type ? null : fiber.child;
              } else if (enableSuspenseServerRenderer && fiber.tag === DehydratedFragment) {
                var parentSuspense = fiber.return;
                if (!(parentSuspense !== null)) {
                  {
                    throw Error("We just came from a parent so we must have had a parent. This is a bug in React.");
                  }
                }
                if (parentSuspense.expirationTime < renderExpirationTime2) {
                  parentSuspense.expirationTime = renderExpirationTime2;
                }
                var _alternate = parentSuspense.alternate;
                if (_alternate !== null && _alternate.expirationTime < renderExpirationTime2) {
                  _alternate.expirationTime = renderExpirationTime2;
                }
                scheduleWorkOnParentPath(parentSuspense, renderExpirationTime2);
                nextFiber = fiber.sibling;
              } else {
                nextFiber = fiber.child;
              }
              if (nextFiber !== null) {
                nextFiber.return = fiber;
              } else {
                nextFiber = fiber;
                while (nextFiber !== null) {
                  if (nextFiber === workInProgress2) {
                    nextFiber = null;
                    break;
                  }
                  var sibling = nextFiber.sibling;
                  if (sibling !== null) {
                    sibling.return = nextFiber.return;
                    nextFiber = sibling;
                    break;
                  }
                  nextFiber = nextFiber.return;
                }
              }
              fiber = nextFiber;
            }
          }
          function prepareToReadContext(workInProgress2, renderExpirationTime2) {
            currentlyRenderingFiber = workInProgress2;
            lastContextDependency = null;
            lastContextWithAllBitsObserved = null;
            var dependencies = workInProgress2.dependencies;
            if (dependencies !== null) {
              var firstContext = dependencies.firstContext;
              if (firstContext !== null) {
                if (dependencies.expirationTime >= renderExpirationTime2) {
                  markWorkInProgressReceivedUpdate();
                }
                dependencies.firstContext = null;
              }
            }
          }
          function readContext(context, observedBits) {
            {
              !!isDisallowedContextReadInDEV ? warning$1(false, "Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().") : void 0;
            }
            if (lastContextWithAllBitsObserved === context) {
            } else if (observedBits === false || observedBits === 0) {
            } else {
              var resolvedObservedBits;
              if (typeof observedBits !== "number" || observedBits === MAX_SIGNED_31_BIT_INT) {
                lastContextWithAllBitsObserved = context;
                resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
              } else {
                resolvedObservedBits = observedBits;
              }
              var contextItem = {
                context,
                observedBits: resolvedObservedBits,
                next: null
              };
              if (lastContextDependency === null) {
                if (!(currentlyRenderingFiber !== null)) {
                  {
                    throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                  }
                }
                lastContextDependency = contextItem;
                currentlyRenderingFiber.dependencies = {
                  expirationTime: NoWork,
                  firstContext: contextItem,
                  responders: null
                };
              } else {
                lastContextDependency = lastContextDependency.next = contextItem;
              }
            }
            return isPrimaryRenderer ? context._currentValue : context._currentValue2;
          }
          var UpdateState = 0;
          var ReplaceState = 1;
          var ForceUpdate = 2;
          var CaptureUpdate = 3;
          var hasForceUpdate = false;
          var didWarnUpdateInsideUpdate;
          var currentlyProcessingQueue;
          {
            didWarnUpdateInsideUpdate = false;
            currentlyProcessingQueue = null;
          }
          function createUpdateQueue(baseState) {
            var queue = {
              baseState,
              firstUpdate: null,
              lastUpdate: null,
              firstCapturedUpdate: null,
              lastCapturedUpdate: null,
              firstEffect: null,
              lastEffect: null,
              firstCapturedEffect: null,
              lastCapturedEffect: null
            };
            return queue;
          }
          function cloneUpdateQueue(currentQueue) {
            var queue = {
              baseState: currentQueue.baseState,
              firstUpdate: currentQueue.firstUpdate,
              lastUpdate: currentQueue.lastUpdate,
              firstCapturedUpdate: null,
              lastCapturedUpdate: null,
              firstEffect: null,
              lastEffect: null,
              firstCapturedEffect: null,
              lastCapturedEffect: null
            };
            return queue;
          }
          function createUpdate(expirationTime, suspenseConfig) {
            var update = {
              expirationTime,
              suspenseConfig,
              tag: UpdateState,
              payload: null,
              callback: null,
              next: null,
              nextEffect: null
            };
            {
              update.priority = getCurrentPriorityLevel();
            }
            return update;
          }
          function appendUpdateToQueue(queue, update) {
            if (queue.lastUpdate === null) {
              queue.firstUpdate = queue.lastUpdate = update;
            } else {
              queue.lastUpdate.next = update;
              queue.lastUpdate = update;
            }
          }
          function enqueueUpdate(fiber, update) {
            var alternate = fiber.alternate;
            var queue1;
            var queue2;
            if (alternate === null) {
              queue1 = fiber.updateQueue;
              queue2 = null;
              if (queue1 === null) {
                queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
              }
            } else {
              queue1 = fiber.updateQueue;
              queue2 = alternate.updateQueue;
              if (queue1 === null) {
                if (queue2 === null) {
                  queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
                  queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
                } else {
                  queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
                }
              } else {
                if (queue2 === null) {
                  queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
                } else {
                }
              }
            }
            if (queue2 === null || queue1 === queue2) {
              appendUpdateToQueue(queue1, update);
            } else {
              if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
                appendUpdateToQueue(queue1, update);
                appendUpdateToQueue(queue2, update);
              } else {
                appendUpdateToQueue(queue1, update);
                queue2.lastUpdate = update;
              }
            }
            {
              if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
                warningWithoutStack$1(false, "An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
                didWarnUpdateInsideUpdate = true;
              }
            }
          }
          function enqueueCapturedUpdate(workInProgress2, update) {
            var workInProgressQueue = workInProgress2.updateQueue;
            if (workInProgressQueue === null) {
              workInProgressQueue = workInProgress2.updateQueue = createUpdateQueue(workInProgress2.memoizedState);
            } else {
              workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress2, workInProgressQueue);
            }
            if (workInProgressQueue.lastCapturedUpdate === null) {
              workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
            } else {
              workInProgressQueue.lastCapturedUpdate.next = update;
              workInProgressQueue.lastCapturedUpdate = update;
            }
          }
          function ensureWorkInProgressQueueIsAClone(workInProgress2, queue) {
            var current2 = workInProgress2.alternate;
            if (current2 !== null) {
              if (queue === current2.updateQueue) {
                queue = workInProgress2.updateQueue = cloneUpdateQueue(queue);
              }
            }
            return queue;
          }
          function getStateFromUpdate(workInProgress2, queue, update, prevState, nextProps, instance) {
            switch (update.tag) {
              case ReplaceState: {
                var payload = update.payload;
                if (typeof payload === "function") {
                  {
                    enterDisallowedContextReadInDEV();
                    if (debugRenderPhaseSideEffectsForStrictMode && workInProgress2.mode & StrictMode) {
                      payload.call(instance, prevState, nextProps);
                    }
                  }
                  var nextState = payload.call(instance, prevState, nextProps);
                  {
                    exitDisallowedContextReadInDEV();
                  }
                  return nextState;
                }
                return payload;
              }
              case CaptureUpdate: {
                workInProgress2.effectTag = workInProgress2.effectTag & ~ShouldCapture | DidCapture;
              }
              case UpdateState: {
                var _payload = update.payload;
                var partialState;
                if (typeof _payload === "function") {
                  {
                    enterDisallowedContextReadInDEV();
                    if (debugRenderPhaseSideEffectsForStrictMode && workInProgress2.mode & StrictMode) {
                      _payload.call(instance, prevState, nextProps);
                    }
                  }
                  partialState = _payload.call(instance, prevState, nextProps);
                  {
                    exitDisallowedContextReadInDEV();
                  }
                } else {
                  partialState = _payload;
                }
                if (partialState === null || partialState === void 0) {
                  return prevState;
                }
                return _assign({}, prevState, partialState);
              }
              case ForceUpdate: {
                hasForceUpdate = true;
                return prevState;
              }
            }
            return prevState;
          }
          function processUpdateQueue(workInProgress2, queue, props, instance, renderExpirationTime2) {
            hasForceUpdate = false;
            queue = ensureWorkInProgressQueueIsAClone(workInProgress2, queue);
            {
              currentlyProcessingQueue = queue;
            }
            var newBaseState = queue.baseState;
            var newFirstUpdate = null;
            var newExpirationTime = NoWork;
            var update = queue.firstUpdate;
            var resultState = newBaseState;
            while (update !== null) {
              var updateExpirationTime = update.expirationTime;
              if (updateExpirationTime < renderExpirationTime2) {
                if (newFirstUpdate === null) {
                  newFirstUpdate = update;
                  newBaseState = resultState;
                }
                if (newExpirationTime < updateExpirationTime) {
                  newExpirationTime = updateExpirationTime;
                }
              } else {
                markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig);
                resultState = getStateFromUpdate(workInProgress2, queue, update, resultState, props, instance);
                var callback = update.callback;
                if (callback !== null) {
                  workInProgress2.effectTag |= Callback;
                  update.nextEffect = null;
                  if (queue.lastEffect === null) {
                    queue.firstEffect = queue.lastEffect = update;
                  } else {
                    queue.lastEffect.nextEffect = update;
                    queue.lastEffect = update;
                  }
                }
              }
              update = update.next;
            }
            var newFirstCapturedUpdate = null;
            update = queue.firstCapturedUpdate;
            while (update !== null) {
              var _updateExpirationTime = update.expirationTime;
              if (_updateExpirationTime < renderExpirationTime2) {
                if (newFirstCapturedUpdate === null) {
                  newFirstCapturedUpdate = update;
                  if (newFirstUpdate === null) {
                    newBaseState = resultState;
                  }
                }
                if (newExpirationTime < _updateExpirationTime) {
                  newExpirationTime = _updateExpirationTime;
                }
              } else {
                resultState = getStateFromUpdate(workInProgress2, queue, update, resultState, props, instance);
                var _callback = update.callback;
                if (_callback !== null) {
                  workInProgress2.effectTag |= Callback;
                  update.nextEffect = null;
                  if (queue.lastCapturedEffect === null) {
                    queue.firstCapturedEffect = queue.lastCapturedEffect = update;
                  } else {
                    queue.lastCapturedEffect.nextEffect = update;
                    queue.lastCapturedEffect = update;
                  }
                }
              }
              update = update.next;
            }
            if (newFirstUpdate === null) {
              queue.lastUpdate = null;
            }
            if (newFirstCapturedUpdate === null) {
              queue.lastCapturedUpdate = null;
            } else {
              workInProgress2.effectTag |= Callback;
            }
            if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
              newBaseState = resultState;
            }
            queue.baseState = newBaseState;
            queue.firstUpdate = newFirstUpdate;
            queue.firstCapturedUpdate = newFirstCapturedUpdate;
            markUnprocessedUpdateTime(newExpirationTime);
            workInProgress2.expirationTime = newExpirationTime;
            workInProgress2.memoizedState = resultState;
            {
              currentlyProcessingQueue = null;
            }
          }
          function callCallback(callback, context) {
            if (!(typeof callback === "function")) {
              {
                throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
              }
            }
            callback.call(context);
          }
          function resetHasForceUpdateBeforeProcessing() {
            hasForceUpdate = false;
          }
          function checkHasForceUpdateAfterProcessing() {
            return hasForceUpdate;
          }
          function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime2) {
            if (finishedQueue.firstCapturedUpdate !== null) {
              if (finishedQueue.lastUpdate !== null) {
                finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
                finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
              }
              finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
            }
            commitUpdateEffects(finishedQueue.firstEffect, instance);
            finishedQueue.firstEffect = finishedQueue.lastEffect = null;
            commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
            finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
          }
          function commitUpdateEffects(effect, instance) {
            while (effect !== null) {
              var callback = effect.callback;
              if (callback !== null) {
                effect.callback = null;
                callCallback(callback, instance);
              }
              effect = effect.nextEffect;
            }
          }
          var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
          function requestCurrentSuspenseConfig() {
            return ReactCurrentBatchConfig.suspense;
          }
          var fakeInternalInstance = {};
          var isArray$1 = Array.isArray;
          var emptyRefsObject = new React10.Component().refs;
          var didWarnAboutStateAssignmentForComponent;
          var didWarnAboutUninitializedState;
          var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
          var didWarnAboutLegacyLifecyclesAndDerivedState;
          var didWarnAboutUndefinedDerivedState;
          var warnOnUndefinedDerivedState;
          var warnOnInvalidCallback;
          var didWarnAboutDirectlyAssigningPropsToState;
          var didWarnAboutContextTypeAndContextTypes;
          var didWarnAboutInvalidateContextType;
          {
            didWarnAboutStateAssignmentForComponent = /* @__PURE__ */ new Set();
            didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
            didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
            didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
            didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
            didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
            didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
            var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
            warnOnInvalidCallback = function(callback, callerName) {
              if (callback === null || typeof callback === "function") {
                return;
              }
              var key2 = callerName + "_" + callback;
              if (!didWarnOnInvalidCallback.has(key2)) {
                didWarnOnInvalidCallback.add(key2);
                warningWithoutStack$1(false, "%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
              }
            };
            warnOnUndefinedDerivedState = function(type2, partialState) {
              if (partialState === void 0) {
                var componentName = getComponentName(type2) || "Component";
                if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                  didWarnAboutUndefinedDerivedState.add(componentName);
                  warningWithoutStack$1(false, "%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
                }
              }
            };
            Object.defineProperty(fakeInternalInstance, "_processChildContext", {
              enumerable: false,
              value: function() {
                {
                  {
                    throw Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
                  }
                }
              }
            });
            Object.freeze(fakeInternalInstance);
          }
          function applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, nextProps) {
            var prevState = workInProgress2.memoizedState;
            {
              if (debugRenderPhaseSideEffectsForStrictMode && workInProgress2.mode & StrictMode) {
                getDerivedStateFromProps(nextProps, prevState);
              }
            }
            var partialState = getDerivedStateFromProps(nextProps, prevState);
            {
              warnOnUndefinedDerivedState(ctor, partialState);
            }
            var memoizedState = partialState === null || partialState === void 0 ? prevState : _assign({}, prevState, partialState);
            workInProgress2.memoizedState = memoizedState;
            var updateQueue = workInProgress2.updateQueue;
            if (updateQueue !== null && workInProgress2.expirationTime === NoWork) {
              updateQueue.baseState = memoizedState;
            }
          }
          var classComponentUpdater = {
            isMounted,
            enqueueSetState: function(inst, payload, callback) {
              var fiber = get(inst);
              var currentTime = requestCurrentTimeForUpdate();
              var suspenseConfig = requestCurrentSuspenseConfig();
              var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
              var update = createUpdate(expirationTime, suspenseConfig);
              update.payload = payload;
              if (callback !== void 0 && callback !== null) {
                {
                  warnOnInvalidCallback(callback, "setState");
                }
                update.callback = callback;
              }
              enqueueUpdate(fiber, update);
              scheduleWork(fiber, expirationTime);
            },
            enqueueReplaceState: function(inst, payload, callback) {
              var fiber = get(inst);
              var currentTime = requestCurrentTimeForUpdate();
              var suspenseConfig = requestCurrentSuspenseConfig();
              var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
              var update = createUpdate(expirationTime, suspenseConfig);
              update.tag = ReplaceState;
              update.payload = payload;
              if (callback !== void 0 && callback !== null) {
                {
                  warnOnInvalidCallback(callback, "replaceState");
                }
                update.callback = callback;
              }
              enqueueUpdate(fiber, update);
              scheduleWork(fiber, expirationTime);
            },
            enqueueForceUpdate: function(inst, callback) {
              var fiber = get(inst);
              var currentTime = requestCurrentTimeForUpdate();
              var suspenseConfig = requestCurrentSuspenseConfig();
              var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
              var update = createUpdate(expirationTime, suspenseConfig);
              update.tag = ForceUpdate;
              if (callback !== void 0 && callback !== null) {
                {
                  warnOnInvalidCallback(callback, "forceUpdate");
                }
                update.callback = callback;
              }
              enqueueUpdate(fiber, update);
              scheduleWork(fiber, expirationTime);
            }
          };
          function checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) {
            var instance = workInProgress2.stateNode;
            if (typeof instance.shouldComponentUpdate === "function") {
              startPhaseTimer(workInProgress2, "shouldComponentUpdate");
              var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
              stopPhaseTimer();
              {
                !(shouldUpdate !== void 0) ? warningWithoutStack$1(false, "%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentName(ctor) || "Component") : void 0;
              }
              return shouldUpdate;
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent) {
              return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
            }
            return true;
          }
          function checkClassInstance(workInProgress2, ctor, newProps) {
            var instance = workInProgress2.stateNode;
            {
              var name = getComponentName(ctor) || "Component";
              var renderPresent = instance.render;
              if (!renderPresent) {
                if (ctor.prototype && typeof ctor.prototype.render === "function") {
                  warningWithoutStack$1(false, "%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
                } else {
                  warningWithoutStack$1(false, "%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
                }
              }
              var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
              !noGetInitialStateOnES6 ? warningWithoutStack$1(false, "getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name) : void 0;
              var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
              !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, "getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name) : void 0;
              var noInstancePropTypes = !instance.propTypes;
              !noInstancePropTypes ? warningWithoutStack$1(false, "propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name) : void 0;
              var noInstanceContextType = !instance.contextType;
              !noInstanceContextType ? warningWithoutStack$1(false, "contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name) : void 0;
              if (disableLegacyContext) {
                if (ctor.childContextTypes) {
                  warningWithoutStack$1(false, "%s uses the legacy childContextTypes API which is no longer supported. Use React.createContext() instead.", name);
                }
                if (ctor.contextTypes) {
                  warningWithoutStack$1(false, "%s uses the legacy contextTypes API which is no longer supported. Use React.createContext() with static contextType instead.", name);
                }
              } else {
                var noInstanceContextTypes = !instance.contextTypes;
                !noInstanceContextTypes ? warningWithoutStack$1(false, "contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name) : void 0;
                if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                  didWarnAboutContextTypeAndContextTypes.add(ctor);
                  warningWithoutStack$1(false, "%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
                }
              }
              var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== "function";
              !noComponentShouldUpdate ? warningWithoutStack$1(false, "%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name) : void 0;
              if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
                warningWithoutStack$1(false, "%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentName(ctor) || "A pure component");
              }
              var noComponentDidUnmount = typeof instance.componentDidUnmount !== "function";
              !noComponentDidUnmount ? warningWithoutStack$1(false, "%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name) : void 0;
              var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== "function";
              !noComponentDidReceiveProps ? warningWithoutStack$1(false, "%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name) : void 0;
              var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== "function";
              !noComponentWillRecieveProps ? warningWithoutStack$1(false, "%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name) : void 0;
              var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== "function";
              !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, "%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name) : void 0;
              var hasMutatedProps = instance.props !== newProps;
              !(instance.props === void 0 || !hasMutatedProps) ? warningWithoutStack$1(false, "%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name) : void 0;
              var noInstanceDefaultProps = !instance.defaultProps;
              !noInstanceDefaultProps ? warningWithoutStack$1(false, "Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name) : void 0;
              if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
                didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
                warningWithoutStack$1(false, "%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentName(ctor));
              }
              var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== "function";
              !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, "%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name) : void 0;
              var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== "function";
              !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, "%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name) : void 0;
              var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== "function";
              !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, "%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name) : void 0;
              var _state = instance.state;
              if (_state && (typeof _state !== "object" || isArray$1(_state))) {
                warningWithoutStack$1(false, "%s.state: must be set to an object or null", name);
              }
              if (typeof instance.getChildContext === "function") {
                !(typeof ctor.childContextTypes === "object") ? warningWithoutStack$1(false, "%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name) : void 0;
              }
            }
          }
          function adoptClassInstance(workInProgress2, instance) {
            instance.updater = classComponentUpdater;
            workInProgress2.stateNode = instance;
            set(instance, workInProgress2);
            {
              instance._reactInternalInstance = fakeInternalInstance;
            }
          }
          function constructClassInstance(workInProgress2, ctor, props, renderExpirationTime2) {
            var isLegacyContextConsumer = false;
            var unmaskedContext = emptyContextObject;
            var context = emptyContextObject;
            var contextType = ctor.contextType;
            {
              if ("contextType" in ctor) {
                var isValid = contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0;
                if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                  didWarnAboutInvalidateContextType.add(ctor);
                  var addendum = "";
                  if (contextType === void 0) {
                    addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                  } else if (typeof contextType !== "object") {
                    addendum = " However, it is set to a " + typeof contextType + ".";
                  } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                    addendum = " Did you accidentally pass the Context.Provider instead?";
                  } else if (contextType._context !== void 0) {
                    addendum = " Did you accidentally pass the Context.Consumer instead?";
                  } else {
                    addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                  }
                  warningWithoutStack$1(false, "%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentName(ctor) || "Component", addendum);
                }
              }
            }
            if (typeof contextType === "object" && contextType !== null) {
              context = readContext(contextType);
            } else if (!disableLegacyContext) {
              unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
              var contextTypes = ctor.contextTypes;
              isLegacyContextConsumer = contextTypes !== null && contextTypes !== void 0;
              context = isLegacyContextConsumer ? getMaskedContext(workInProgress2, unmaskedContext) : emptyContextObject;
            }
            {
              if (debugRenderPhaseSideEffectsForStrictMode && workInProgress2.mode & StrictMode) {
                new ctor(props, context);
              }
            }
            var instance = new ctor(props, context);
            var state = workInProgress2.memoizedState = instance.state !== null && instance.state !== void 0 ? instance.state : null;
            adoptClassInstance(workInProgress2, instance);
            {
              if (typeof ctor.getDerivedStateFromProps === "function" && state === null) {
                var componentName = getComponentName(ctor) || "Component";
                if (!didWarnAboutUninitializedState.has(componentName)) {
                  didWarnAboutUninitializedState.add(componentName);
                  warningWithoutStack$1(false, "`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
                }
              }
              if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
                var foundWillMountName = null;
                var foundWillReceivePropsName = null;
                var foundWillUpdateName = null;
                if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                  foundWillMountName = "componentWillMount";
                } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                  foundWillMountName = "UNSAFE_componentWillMount";
                }
                if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                  foundWillReceivePropsName = "componentWillReceiveProps";
                } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                  foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
                }
                if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                  foundWillUpdateName = "componentWillUpdate";
                } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                  foundWillUpdateName = "UNSAFE_componentWillUpdate";
                }
                if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                  var _componentName = getComponentName(ctor) || "Component";
                  var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                  if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                    didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                    warningWithoutStack$1(false, "Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                  }
                }
              }
            }
            if (isLegacyContextConsumer) {
              cacheContext(workInProgress2, unmaskedContext, context);
            }
            return instance;
          }
          function callComponentWillMount(workInProgress2, instance) {
            startPhaseTimer(workInProgress2, "componentWillMount");
            var oldState = instance.state;
            if (typeof instance.componentWillMount === "function") {
              instance.componentWillMount();
            }
            if (typeof instance.UNSAFE_componentWillMount === "function") {
              instance.UNSAFE_componentWillMount();
            }
            stopPhaseTimer();
            if (oldState !== instance.state) {
              {
                warningWithoutStack$1(false, "%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentName(workInProgress2.type) || "Component");
              }
              classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
            }
          }
          function callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext) {
            var oldState = instance.state;
            startPhaseTimer(workInProgress2, "componentWillReceiveProps");
            if (typeof instance.componentWillReceiveProps === "function") {
              instance.componentWillReceiveProps(newProps, nextContext);
            }
            if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
              instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
            }
            stopPhaseTimer();
            if (instance.state !== oldState) {
              {
                var componentName = getComponentName(workInProgress2.type) || "Component";
                if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                  didWarnAboutStateAssignmentForComponent.add(componentName);
                  warningWithoutStack$1(false, "%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
                }
              }
              classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
            }
          }
          function mountClassInstance(workInProgress2, ctor, newProps, renderExpirationTime2) {
            {
              checkClassInstance(workInProgress2, ctor, newProps);
            }
            var instance = workInProgress2.stateNode;
            instance.props = newProps;
            instance.state = workInProgress2.memoizedState;
            instance.refs = emptyRefsObject;
            var contextType = ctor.contextType;
            if (typeof contextType === "object" && contextType !== null) {
              instance.context = readContext(contextType);
            } else if (disableLegacyContext) {
              instance.context = emptyContextObject;
            } else {
              var unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
              instance.context = getMaskedContext(workInProgress2, unmaskedContext);
            }
            {
              if (instance.state === newProps) {
                var componentName = getComponentName(ctor) || "Component";
                if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                  didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                  warningWithoutStack$1(false, "%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
                }
              }
              if (workInProgress2.mode & StrictMode) {
                ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, instance);
              }
              if (warnAboutDeprecatedLifecycles) {
                ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress2, instance);
              }
            }
            var updateQueue = workInProgress2.updateQueue;
            if (updateQueue !== null) {
              processUpdateQueue(workInProgress2, updateQueue, newProps, instance, renderExpirationTime2);
              instance.state = workInProgress2.memoizedState;
            }
            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
            if (typeof getDerivedStateFromProps === "function") {
              applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
              instance.state = workInProgress2.memoizedState;
            }
            if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
              callComponentWillMount(workInProgress2, instance);
              updateQueue = workInProgress2.updateQueue;
              if (updateQueue !== null) {
                processUpdateQueue(workInProgress2, updateQueue, newProps, instance, renderExpirationTime2);
                instance.state = workInProgress2.memoizedState;
              }
            }
            if (typeof instance.componentDidMount === "function") {
              workInProgress2.effectTag |= Update;
            }
          }
          function resumeMountClassInstance(workInProgress2, ctor, newProps, renderExpirationTime2) {
            var instance = workInProgress2.stateNode;
            var oldProps = workInProgress2.memoizedProps;
            instance.props = oldProps;
            var oldContext = instance.context;
            var contextType = ctor.contextType;
            var nextContext = emptyContextObject;
            if (typeof contextType === "object" && contextType !== null) {
              nextContext = readContext(contextType);
            } else if (!disableLegacyContext) {
              var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
              nextContext = getMaskedContext(workInProgress2, nextLegacyUnmaskedContext);
            }
            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
            var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
              if (oldProps !== newProps || oldContext !== nextContext) {
                callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
              }
            }
            resetHasForceUpdateBeforeProcessing();
            var oldState = workInProgress2.memoizedState;
            var newState = instance.state = oldState;
            var updateQueue = workInProgress2.updateQueue;
            if (updateQueue !== null) {
              processUpdateQueue(workInProgress2, updateQueue, newProps, instance, renderExpirationTime2);
              newState = workInProgress2.memoizedState;
            }
            if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
              if (typeof instance.componentDidMount === "function") {
                workInProgress2.effectTag |= Update;
              }
              return false;
            }
            if (typeof getDerivedStateFromProps === "function") {
              applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
              newState = workInProgress2.memoizedState;
            }
            var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
            if (shouldUpdate) {
              if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
                startPhaseTimer(workInProgress2, "componentWillMount");
                if (typeof instance.componentWillMount === "function") {
                  instance.componentWillMount();
                }
                if (typeof instance.UNSAFE_componentWillMount === "function") {
                  instance.UNSAFE_componentWillMount();
                }
                stopPhaseTimer();
              }
              if (typeof instance.componentDidMount === "function") {
                workInProgress2.effectTag |= Update;
              }
            } else {
              if (typeof instance.componentDidMount === "function") {
                workInProgress2.effectTag |= Update;
              }
              workInProgress2.memoizedProps = newProps;
              workInProgress2.memoizedState = newState;
            }
            instance.props = newProps;
            instance.state = newState;
            instance.context = nextContext;
            return shouldUpdate;
          }
          function updateClassInstance(current2, workInProgress2, ctor, newProps, renderExpirationTime2) {
            var instance = workInProgress2.stateNode;
            var oldProps = workInProgress2.memoizedProps;
            instance.props = workInProgress2.type === workInProgress2.elementType ? oldProps : resolveDefaultProps(workInProgress2.type, oldProps);
            var oldContext = instance.context;
            var contextType = ctor.contextType;
            var nextContext = emptyContextObject;
            if (typeof contextType === "object" && contextType !== null) {
              nextContext = readContext(contextType);
            } else if (!disableLegacyContext) {
              var nextUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
              nextContext = getMaskedContext(workInProgress2, nextUnmaskedContext);
            }
            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
            var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
              if (oldProps !== newProps || oldContext !== nextContext) {
                callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
              }
            }
            resetHasForceUpdateBeforeProcessing();
            var oldState = workInProgress2.memoizedState;
            var newState = instance.state = oldState;
            var updateQueue = workInProgress2.updateQueue;
            if (updateQueue !== null) {
              processUpdateQueue(workInProgress2, updateQueue, newProps, instance, renderExpirationTime2);
              newState = workInProgress2.memoizedState;
            }
            if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
              if (typeof instance.componentDidUpdate === "function") {
                if (oldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                  workInProgress2.effectTag |= Update;
                }
              }
              if (typeof instance.getSnapshotBeforeUpdate === "function") {
                if (oldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                  workInProgress2.effectTag |= Snapshot;
                }
              }
              return false;
            }
            if (typeof getDerivedStateFromProps === "function") {
              applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
              newState = workInProgress2.memoizedState;
            }
            var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
            if (shouldUpdate) {
              if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === "function" || typeof instance.componentWillUpdate === "function")) {
                startPhaseTimer(workInProgress2, "componentWillUpdate");
                if (typeof instance.componentWillUpdate === "function") {
                  instance.componentWillUpdate(newProps, newState, nextContext);
                }
                if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                  instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
                }
                stopPhaseTimer();
              }
              if (typeof instance.componentDidUpdate === "function") {
                workInProgress2.effectTag |= Update;
              }
              if (typeof instance.getSnapshotBeforeUpdate === "function") {
                workInProgress2.effectTag |= Snapshot;
              }
            } else {
              if (typeof instance.componentDidUpdate === "function") {
                if (oldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                  workInProgress2.effectTag |= Update;
                }
              }
              if (typeof instance.getSnapshotBeforeUpdate === "function") {
                if (oldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                  workInProgress2.effectTag |= Snapshot;
                }
              }
              workInProgress2.memoizedProps = newProps;
              workInProgress2.memoizedState = newState;
            }
            instance.props = newProps;
            instance.state = newState;
            instance.context = nextContext;
            return shouldUpdate;
          }
          var didWarnAboutMaps;
          var didWarnAboutGenerators;
          var didWarnAboutStringRefs;
          var ownerHasKeyUseWarning;
          var ownerHasFunctionTypeWarning;
          var warnForMissingKey = function(child) {
          };
          {
            didWarnAboutMaps = false;
            didWarnAboutGenerators = false;
            didWarnAboutStringRefs = {};
            ownerHasKeyUseWarning = {};
            ownerHasFunctionTypeWarning = {};
            warnForMissingKey = function(child) {
              if (child === null || typeof child !== "object") {
                return;
              }
              if (!child._store || child._store.validated || child.key != null) {
                return;
              }
              if (!(typeof child._store === "object")) {
                {
                  throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              child._store.validated = true;
              var currentComponentErrorInfo = 'Each child in a list should have a unique "key" prop. See https://fb.me/react-warning-keys for more information.' + getCurrentFiberStackInDev();
              if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
                return;
              }
              ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
              warning$1(false, 'Each child in a list should have a unique "key" prop. See https://fb.me/react-warning-keys for more information.');
            };
          }
          var isArray = Array.isArray;
          function coerceRef(returnFiber, current$$1, element) {
            var mixedRef = element.ref;
            if (mixedRef !== null && typeof mixedRef !== "function" && typeof mixedRef !== "object") {
              {
                if (returnFiber.mode & StrictMode || warnAboutStringRefs) {
                  var componentName = getComponentName(returnFiber.type) || "Component";
                  if (!didWarnAboutStringRefs[componentName]) {
                    if (warnAboutStringRefs) {
                      warningWithoutStack$1(false, 'Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://fb.me/react-strict-mode-string-ref%s', componentName, mixedRef, getStackByFiberInDevAndProd(returnFiber));
                    } else {
                      warningWithoutStack$1(false, 'A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://fb.me/react-strict-mode-string-ref%s', mixedRef, getStackByFiberInDevAndProd(returnFiber));
                    }
                    didWarnAboutStringRefs[componentName] = true;
                  }
                }
              }
              if (element._owner) {
                var owner = element._owner;
                var inst;
                if (owner) {
                  var ownerFiber = owner;
                  if (!(ownerFiber.tag === ClassComponent)) {
                    {
                      throw Error("Function components cannot have refs. Did you mean to use React.forwardRef()?");
                    }
                  }
                  inst = ownerFiber.stateNode;
                }
                if (!inst) {
                  {
                    throw Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
                  }
                }
                var stringRef = "" + mixedRef;
                if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === "function" && current$$1.ref._stringRef === stringRef) {
                  return current$$1.ref;
                }
                var ref = function(value) {
                  var refs = inst.refs;
                  if (refs === emptyRefsObject) {
                    refs = inst.refs = {};
                  }
                  if (value === null) {
                    delete refs[stringRef];
                  } else {
                    refs[stringRef] = value;
                  }
                };
                ref._stringRef = stringRef;
                return ref;
              } else {
                if (!(typeof mixedRef === "string")) {
                  {
                    throw Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
                  }
                }
                if (!element._owner) {
                  {
                    throw Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.");
                  }
                }
              }
            }
            return mixedRef;
          }
          function throwOnInvalidObjectType(returnFiber, newChild) {
            if (returnFiber.type !== "textarea") {
              var addendum = "";
              {
                addendum = " If you meant to render a collection of children, use an array instead." + getCurrentFiberStackInDev();
              }
              {
                {
                  throw Error("Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")." + addendum);
                }
              }
            }
          }
          function warnOnFunctionType() {
            var currentComponentErrorInfo = "Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it." + getCurrentFiberStackInDev();
            if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;
            warning$1(false, "Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
          }
          function ChildReconciler(shouldTrackSideEffects) {
            function deleteChild(returnFiber, childToDelete) {
              if (!shouldTrackSideEffects) {
                return;
              }
              var last = returnFiber.lastEffect;
              if (last !== null) {
                last.nextEffect = childToDelete;
                returnFiber.lastEffect = childToDelete;
              } else {
                returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
              }
              childToDelete.nextEffect = null;
              childToDelete.effectTag = Deletion;
            }
            function deleteRemainingChildren(returnFiber, currentFirstChild) {
              if (!shouldTrackSideEffects) {
                return null;
              }
              var childToDelete = currentFirstChild;
              while (childToDelete !== null) {
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
              }
              return null;
            }
            function mapRemainingChildren(returnFiber, currentFirstChild) {
              var existingChildren = /* @__PURE__ */ new Map();
              var existingChild = currentFirstChild;
              while (existingChild !== null) {
                if (existingChild.key !== null) {
                  existingChildren.set(existingChild.key, existingChild);
                } else {
                  existingChildren.set(existingChild.index, existingChild);
                }
                existingChild = existingChild.sibling;
              }
              return existingChildren;
            }
            function useFiber(fiber, pendingProps, expirationTime) {
              var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
              clone.index = 0;
              clone.sibling = null;
              return clone;
            }
            function placeChild(newFiber, lastPlacedIndex, newIndex) {
              newFiber.index = newIndex;
              if (!shouldTrackSideEffects) {
                return lastPlacedIndex;
              }
              var current$$1 = newFiber.alternate;
              if (current$$1 !== null) {
                var oldIndex = current$$1.index;
                if (oldIndex < lastPlacedIndex) {
                  newFiber.effectTag = Placement;
                  return lastPlacedIndex;
                } else {
                  return oldIndex;
                }
              } else {
                newFiber.effectTag = Placement;
                return lastPlacedIndex;
              }
            }
            function placeSingleChild(newFiber) {
              if (shouldTrackSideEffects && newFiber.alternate === null) {
                newFiber.effectTag = Placement;
              }
              return newFiber;
            }
            function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
              if (current$$1 === null || current$$1.tag !== HostText) {
                var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
                created.return = returnFiber;
                return created;
              } else {
                var existing = useFiber(current$$1, textContent, expirationTime);
                existing.return = returnFiber;
                return existing;
              }
            }
            function updateElement(returnFiber, current$$1, element, expirationTime) {
              if (current$$1 !== null && (current$$1.elementType === element.type || isCompatibleFamilyForHotReloading(current$$1, element))) {
                var existing = useFiber(current$$1, element.props, expirationTime);
                existing.ref = coerceRef(returnFiber, current$$1, element);
                existing.return = returnFiber;
                {
                  existing._debugSource = element._source;
                  existing._debugOwner = element._owner;
                }
                return existing;
              } else {
                var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
                created.ref = coerceRef(returnFiber, current$$1, element);
                created.return = returnFiber;
                return created;
              }
            }
            function updatePortal(returnFiber, current$$1, portal, expirationTime) {
              if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {
                var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
                created.return = returnFiber;
                return created;
              } else {
                var existing = useFiber(current$$1, portal.children || [], expirationTime);
                existing.return = returnFiber;
                return existing;
              }
            }
            function updateFragment2(returnFiber, current$$1, fragment, expirationTime, key2) {
              if (current$$1 === null || current$$1.tag !== Fragment) {
                var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key2);
                created.return = returnFiber;
                return created;
              } else {
                var existing = useFiber(current$$1, fragment, expirationTime);
                existing.return = returnFiber;
                return existing;
              }
            }
            function createChild(returnFiber, newChild, expirationTime) {
              if (typeof newChild === "string" || typeof newChild === "number") {
                var created = createFiberFromText("" + newChild, returnFiber.mode, expirationTime);
                created.return = returnFiber;
                return created;
              }
              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);
                    _created.ref = coerceRef(returnFiber, null, newChild);
                    _created.return = returnFiber;
                    return _created;
                  }
                  case REACT_PORTAL_TYPE: {
                    var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
                    _created2.return = returnFiber;
                    return _created2;
                  }
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                  var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);
                  _created3.return = returnFiber;
                  return _created3;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
              }
              {
                if (typeof newChild === "function") {
                  warnOnFunctionType();
                }
              }
              return null;
            }
            function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
              var key2 = oldFiber !== null ? oldFiber.key : null;
              if (typeof newChild === "string" || typeof newChild === "number") {
                if (key2 !== null) {
                  return null;
                }
                return updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);
              }
              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    if (newChild.key === key2) {
                      if (newChild.type === REACT_FRAGMENT_TYPE) {
                        return updateFragment2(returnFiber, oldFiber, newChild.props.children, expirationTime, key2);
                      }
                      return updateElement(returnFiber, oldFiber, newChild, expirationTime);
                    } else {
                      return null;
                    }
                  }
                  case REACT_PORTAL_TYPE: {
                    if (newChild.key === key2) {
                      return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
                    } else {
                      return null;
                    }
                  }
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                  if (key2 !== null) {
                    return null;
                  }
                  return updateFragment2(returnFiber, oldFiber, newChild, expirationTime, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
              }
              {
                if (typeof newChild === "function") {
                  warnOnFunctionType();
                }
              }
              return null;
            }
            function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
              if (typeof newChild === "string" || typeof newChild === "number") {
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(returnFiber, matchedFiber, "" + newChild, expirationTime);
              }
              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                    if (newChild.type === REACT_FRAGMENT_TYPE) {
                      return updateFragment2(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
                    }
                    return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
                  }
                  case REACT_PORTAL_TYPE: {
                    var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                    return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
                  }
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                  var _matchedFiber3 = existingChildren.get(newIdx) || null;
                  return updateFragment2(returnFiber, _matchedFiber3, newChild, expirationTime, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
              }
              {
                if (typeof newChild === "function") {
                  warnOnFunctionType();
                }
              }
              return null;
            }
            function warnOnInvalidKey(child, knownKeys) {
              {
                if (typeof child !== "object" || child === null) {
                  return knownKeys;
                }
                switch (child.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    warnForMissingKey(child);
                    var key2 = child.key;
                    if (typeof key2 !== "string") {
                      break;
                    }
                    if (knownKeys === null) {
                      knownKeys = /* @__PURE__ */ new Set();
                      knownKeys.add(key2);
                      break;
                    }
                    if (!knownKeys.has(key2)) {
                      knownKeys.add(key2);
                      break;
                    }
                    warning$1(false, "Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key2);
                    break;
                  default:
                    break;
                }
              }
              return knownKeys;
            }
            function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
              {
                var knownKeys = null;
                for (var i2 = 0; i2 < newChildren.length; i2++) {
                  var child = newChildren[i2];
                  knownKeys = warnOnInvalidKey(child, knownKeys);
                }
              }
              var resultingFirstChild = null;
              var previousNewFiber = null;
              var oldFiber = currentFirstChild;
              var lastPlacedIndex = 0;
              var newIdx = 0;
              var nextOldFiber = null;
              for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
                if (oldFiber.index > newIdx) {
                  nextOldFiber = oldFiber;
                  oldFiber = null;
                } else {
                  nextOldFiber = oldFiber.sibling;
                }
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
                if (newFiber === null) {
                  if (oldFiber === null) {
                    oldFiber = nextOldFiber;
                  }
                  break;
                }
                if (shouldTrackSideEffects) {
                  if (oldFiber && newFiber.alternate === null) {
                    deleteChild(returnFiber, oldFiber);
                  }
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = newFiber;
                } else {
                  previousNewFiber.sibling = newFiber;
                }
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
              }
              if (newIdx === newChildren.length) {
                deleteRemainingChildren(returnFiber, oldFiber);
                return resultingFirstChild;
              }
              if (oldFiber === null) {
                for (; newIdx < newChildren.length; newIdx++) {
                  var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
                  if (_newFiber === null) {
                    continue;
                  }
                  lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber;
                  } else {
                    previousNewFiber.sibling = _newFiber;
                  }
                  previousNewFiber = _newFiber;
                }
                return resultingFirstChild;
              }
              var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
              for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
                if (_newFiber2 !== null) {
                  if (shouldTrackSideEffects) {
                    if (_newFiber2.alternate !== null) {
                      existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                    }
                  }
                  lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber2;
                  } else {
                    previousNewFiber.sibling = _newFiber2;
                  }
                  previousNewFiber = _newFiber2;
                }
              }
              if (shouldTrackSideEffects) {
                existingChildren.forEach(function(child2) {
                  return deleteChild(returnFiber, child2);
                });
              }
              return resultingFirstChild;
            }
            function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
              var iteratorFn = getIteratorFn(newChildrenIterable);
              if (!(typeof iteratorFn === "function")) {
                {
                  throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              {
                if (typeof Symbol === "function" && newChildrenIterable[Symbol.toStringTag] === "Generator") {
                  !didWarnAboutGenerators ? warning$1(false, "Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.") : void 0;
                  didWarnAboutGenerators = true;
                }
                if (newChildrenIterable.entries === iteratorFn) {
                  !didWarnAboutMaps ? warning$1(false, "Using Maps as children is unsupported and will likely yield unexpected results. Convert it to a sequence/iterable of keyed ReactElements instead.") : void 0;
                  didWarnAboutMaps = true;
                }
                var _newChildren = iteratorFn.call(newChildrenIterable);
                if (_newChildren) {
                  var knownKeys = null;
                  var _step = _newChildren.next();
                  for (; !_step.done; _step = _newChildren.next()) {
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys);
                  }
                }
              }
              var newChildren = iteratorFn.call(newChildrenIterable);
              if (!(newChildren != null)) {
                {
                  throw Error("An iterable object provided no iterator.");
                }
              }
              var resultingFirstChild = null;
              var previousNewFiber = null;
              var oldFiber = currentFirstChild;
              var lastPlacedIndex = 0;
              var newIdx = 0;
              var nextOldFiber = null;
              var step = newChildren.next();
              for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
                if (oldFiber.index > newIdx) {
                  nextOldFiber = oldFiber;
                  oldFiber = null;
                } else {
                  nextOldFiber = oldFiber.sibling;
                }
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
                if (newFiber === null) {
                  if (oldFiber === null) {
                    oldFiber = nextOldFiber;
                  }
                  break;
                }
                if (shouldTrackSideEffects) {
                  if (oldFiber && newFiber.alternate === null) {
                    deleteChild(returnFiber, oldFiber);
                  }
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = newFiber;
                } else {
                  previousNewFiber.sibling = newFiber;
                }
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
              }
              if (step.done) {
                deleteRemainingChildren(returnFiber, oldFiber);
                return resultingFirstChild;
              }
              if (oldFiber === null) {
                for (; !step.done; newIdx++, step = newChildren.next()) {
                  var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
                  if (_newFiber3 === null) {
                    continue;
                  }
                  lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber3;
                  } else {
                    previousNewFiber.sibling = _newFiber3;
                  }
                  previousNewFiber = _newFiber3;
                }
                return resultingFirstChild;
              }
              var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
              for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
                if (_newFiber4 !== null) {
                  if (shouldTrackSideEffects) {
                    if (_newFiber4.alternate !== null) {
                      existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                    }
                  }
                  lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber4;
                  } else {
                    previousNewFiber.sibling = _newFiber4;
                  }
                  previousNewFiber = _newFiber4;
                }
              }
              if (shouldTrackSideEffects) {
                existingChildren.forEach(function(child2) {
                  return deleteChild(returnFiber, child2);
                });
              }
              return resultingFirstChild;
            }
            function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
              if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, textContent, expirationTime);
                existing.return = returnFiber;
                return existing;
              }
              deleteRemainingChildren(returnFiber, currentFirstChild);
              var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
              created.return = returnFiber;
              return created;
            }
            function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
              var key2 = element.key;
              var child = currentFirstChild;
              while (child !== null) {
                if (child.key === key2) {
                  if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type || isCompatibleFamilyForHotReloading(child, element)) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
                    existing.ref = coerceRef(returnFiber, child, element);
                    existing.return = returnFiber;
                    {
                      existing._debugSource = element._source;
                      existing._debugOwner = element._owner;
                    }
                    return existing;
                  } else {
                    deleteRemainingChildren(returnFiber, child);
                    break;
                  }
                } else {
                  deleteChild(returnFiber, child);
                }
                child = child.sibling;
              }
              if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
                created.return = returnFiber;
                return created;
              } else {
                var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);
                _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
                _created4.return = returnFiber;
                return _created4;
              }
            }
            function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
              var key2 = portal.key;
              var child = currentFirstChild;
              while (child !== null) {
                if (child.key === key2) {
                  if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, portal.children || [], expirationTime);
                    existing.return = returnFiber;
                    return existing;
                  } else {
                    deleteRemainingChildren(returnFiber, child);
                    break;
                  }
                } else {
                  deleteChild(returnFiber, child);
                }
                child = child.sibling;
              }
              var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
              created.return = returnFiber;
              return created;
            }
            function reconcileChildFibers2(returnFiber, currentFirstChild, newChild, expirationTime) {
              var isUnkeyedTopLevelFragment = typeof newChild === "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
              if (isUnkeyedTopLevelFragment) {
                newChild = newChild.props.children;
              }
              var isObject = typeof newChild === "object" && newChild !== null;
              if (isObject) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                    return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));
                  case REACT_PORTAL_TYPE:
                    return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
                }
              }
              if (typeof newChild === "string" || typeof newChild === "number") {
                return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, expirationTime));
              }
              if (isArray(newChild)) {
                return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
              }
              if (getIteratorFn(newChild)) {
                return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
              }
              if (isObject) {
                throwOnInvalidObjectType(returnFiber, newChild);
              }
              {
                if (typeof newChild === "function") {
                  warnOnFunctionType();
                }
              }
              if (typeof newChild === "undefined" && !isUnkeyedTopLevelFragment) {
                switch (returnFiber.tag) {
                  case ClassComponent: {
                    {
                      var instance = returnFiber.stateNode;
                      if (instance.render._isMockFunction) {
                        break;
                      }
                    }
                  }
                  case FunctionComponent: {
                    var Component = returnFiber.type;
                    {
                      {
                        throw Error((Component.displayName || Component.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.");
                      }
                    }
                  }
                }
              }
              return deleteRemainingChildren(returnFiber, currentFirstChild);
            }
            return reconcileChildFibers2;
          }
          var reconcileChildFibers = ChildReconciler(true);
          var mountChildFibers = ChildReconciler(false);
          function cloneChildFibers(current$$1, workInProgress2) {
            if (!(current$$1 === null || workInProgress2.child === current$$1.child)) {
              {
                throw Error("Resuming work not yet implemented.");
              }
            }
            if (workInProgress2.child === null) {
              return;
            }
            var currentChild = workInProgress2.child;
            var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
            workInProgress2.child = newChild;
            newChild.return = workInProgress2;
            while (currentChild.sibling !== null) {
              currentChild = currentChild.sibling;
              newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
              newChild.return = workInProgress2;
            }
            newChild.sibling = null;
          }
          function resetChildFibers(workInProgress2, renderExpirationTime2) {
            var child = workInProgress2.child;
            while (child !== null) {
              resetWorkInProgress(child, renderExpirationTime2);
              child = child.sibling;
            }
          }
          var NO_CONTEXT = {};
          var contextStackCursor$1 = createCursor(NO_CONTEXT);
          var contextFiberStackCursor = createCursor(NO_CONTEXT);
          var rootInstanceStackCursor = createCursor(NO_CONTEXT);
          function requiredContext(c) {
            if (!(c !== NO_CONTEXT)) {
              {
                throw Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            return c;
          }
          function getRootHostContainer() {
            var rootInstance = requiredContext(rootInstanceStackCursor.current);
            return rootInstance;
          }
          function pushHostContainer(fiber, nextRootInstance) {
            push(rootInstanceStackCursor, nextRootInstance, fiber);
            push(contextFiberStackCursor, fiber, fiber);
            push(contextStackCursor$1, NO_CONTEXT, fiber);
            var nextRootContext = getRootHostContext(nextRootInstance);
            pop(contextStackCursor$1, fiber);
            push(contextStackCursor$1, nextRootContext, fiber);
          }
          function popHostContainer(fiber) {
            pop(contextStackCursor$1, fiber);
            pop(contextFiberStackCursor, fiber);
            pop(rootInstanceStackCursor, fiber);
          }
          function getHostContext() {
            var context = requiredContext(contextStackCursor$1.current);
            return context;
          }
          function pushHostContext(fiber) {
            var rootInstance = requiredContext(rootInstanceStackCursor.current);
            var context = requiredContext(contextStackCursor$1.current);
            var nextContext = getChildHostContext(context, fiber.type, rootInstance);
            if (context === nextContext) {
              return;
            }
            push(contextFiberStackCursor, fiber, fiber);
            push(contextStackCursor$1, nextContext, fiber);
          }
          function popHostContext(fiber) {
            if (contextFiberStackCursor.current !== fiber) {
              return;
            }
            pop(contextStackCursor$1, fiber);
            pop(contextFiberStackCursor, fiber);
          }
          var DefaultSuspenseContext = 0;
          var SubtreeSuspenseContextMask = 1;
          var InvisibleParentSuspenseContext = 1;
          var ForceSuspenseFallback = 2;
          var suspenseStackCursor = createCursor(DefaultSuspenseContext);
          function hasSuspenseContext(parentContext, flag) {
            return (parentContext & flag) !== 0;
          }
          function setDefaultShallowSuspenseContext(parentContext) {
            return parentContext & SubtreeSuspenseContextMask;
          }
          function setShallowSuspenseContext(parentContext, shallowContext) {
            return parentContext & SubtreeSuspenseContextMask | shallowContext;
          }
          function addSubtreeSuspenseContext(parentContext, subtreeContext) {
            return parentContext | subtreeContext;
          }
          function pushSuspenseContext(fiber, newContext) {
            push(suspenseStackCursor, newContext, fiber);
          }
          function popSuspenseContext(fiber) {
            pop(suspenseStackCursor, fiber);
          }
          function shouldCaptureSuspense(workInProgress2, hasInvisibleParent) {
            var nextState = workInProgress2.memoizedState;
            if (nextState !== null) {
              if (nextState.dehydrated !== null) {
                return true;
              }
              return false;
            }
            var props = workInProgress2.memoizedProps;
            if (props.fallback === void 0) {
              return false;
            }
            if (props.unstable_avoidThisFallback !== true) {
              return true;
            }
            if (hasInvisibleParent) {
              return false;
            }
            return true;
          }
          function findFirstSuspended(row) {
            var node = row;
            while (node !== null) {
              if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                  var dehydrated = state.dehydrated;
                  if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
                    return node;
                  }
                }
              } else if (node.tag === SuspenseListComponent && node.memoizedProps.revealOrder !== void 0) {
                var didSuspend = (node.effectTag & DidCapture) !== NoEffect;
                if (didSuspend) {
                  return node;
                }
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === row) {
                return null;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === row) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
            return null;
          }
          var emptyObject = {};
          var isArray$2 = Array.isArray;
          function createResponderInstance(responder, responderProps, responderState, fiber) {
            return {
              fiber,
              props: responderProps,
              responder,
              rootEventTypes: null,
              state: responderState
            };
          }
          function mountEventResponder(responder, responderProps, fiber, respondersMap, rootContainerInstance) {
            var responderState = emptyObject;
            var getInitialState = responder.getInitialState;
            if (getInitialState !== null) {
              responderState = getInitialState(responderProps);
            }
            var responderInstance = createResponderInstance(responder, responderProps, responderState, fiber);
            if (!rootContainerInstance) {
              var node = fiber;
              while (node !== null) {
                var tag = node.tag;
                if (tag === HostComponent) {
                  rootContainerInstance = node.stateNode;
                  break;
                } else if (tag === HostRoot) {
                  rootContainerInstance = node.stateNode.containerInfo;
                  break;
                }
                node = node.return;
              }
            }
            mountResponderInstance(responder, responderInstance, responderProps, responderState, rootContainerInstance);
            respondersMap.set(responder, responderInstance);
          }
          function updateEventListener(listener, fiber, visistedResponders, respondersMap, rootContainerInstance) {
            var responder;
            var props;
            if (listener) {
              responder = listener.responder;
              props = listener.props;
            }
            if (!(responder && responder.$$typeof === REACT_RESPONDER_TYPE)) {
              {
                throw Error("An invalid value was used as an event listener. Expect one or many event listeners created via React.unstable_useResponder().");
              }
            }
            var listenerProps = props;
            if (visistedResponders.has(responder)) {
              {
                warning$1(false, 'Duplicate event responder "%s" found in event listeners. Event listeners passed to elements cannot use the same event responder more than once.', responder.displayName);
              }
              return;
            }
            visistedResponders.add(responder);
            var responderInstance = respondersMap.get(responder);
            if (responderInstance === void 0) {
              mountEventResponder(responder, listenerProps, fiber, respondersMap, rootContainerInstance);
            } else {
              responderInstance.props = listenerProps;
              responderInstance.fiber = fiber;
            }
          }
          function updateEventListeners(listeners, fiber, rootContainerInstance) {
            var visistedResponders = /* @__PURE__ */ new Set();
            var dependencies = fiber.dependencies;
            if (listeners != null) {
              if (dependencies === null) {
                dependencies = fiber.dependencies = {
                  expirationTime: NoWork,
                  firstContext: null,
                  responders: /* @__PURE__ */ new Map()
                };
              }
              var respondersMap = dependencies.responders;
              if (respondersMap === null) {
                respondersMap = /* @__PURE__ */ new Map();
              }
              if (isArray$2(listeners)) {
                for (var i2 = 0, length = listeners.length; i2 < length; i2++) {
                  var listener = listeners[i2];
                  updateEventListener(listener, fiber, visistedResponders, respondersMap, rootContainerInstance);
                }
              } else {
                updateEventListener(listeners, fiber, visistedResponders, respondersMap, rootContainerInstance);
              }
            }
            if (dependencies !== null) {
              var _respondersMap = dependencies.responders;
              if (_respondersMap !== null) {
                var mountedResponders = Array.from(_respondersMap.keys());
                for (var _i = 0, _length = mountedResponders.length; _i < _length; _i++) {
                  var mountedResponder = mountedResponders[_i];
                  if (!visistedResponders.has(mountedResponder)) {
                    var responderInstance = _respondersMap.get(mountedResponder);
                    unmountResponderInstance(responderInstance);
                    _respondersMap.delete(mountedResponder);
                  }
                }
              }
            }
          }
          function createResponderListener(responder, props) {
            var eventResponderListener = {
              responder,
              props
            };
            {
              Object.freeze(eventResponderListener);
            }
            return eventResponderListener;
          }
          var NoEffect$1 = 0;
          var UnmountSnapshot = 2;
          var UnmountMutation = 4;
          var MountMutation = 8;
          var UnmountLayout = 16;
          var MountLayout = 32;
          var MountPassive = 64;
          var UnmountPassive = 128;
          var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
          var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
          var didWarnAboutMismatchedHooksForComponent;
          {
            didWarnAboutMismatchedHooksForComponent = /* @__PURE__ */ new Set();
          }
          var renderExpirationTime$1 = NoWork;
          var currentlyRenderingFiber$1 = null;
          var currentHook = null;
          var nextCurrentHook = null;
          var firstWorkInProgressHook = null;
          var workInProgressHook = null;
          var nextWorkInProgressHook = null;
          var remainingExpirationTime = NoWork;
          var componentUpdateQueue = null;
          var sideEffectTag = 0;
          var didScheduleRenderPhaseUpdate = false;
          var renderPhaseUpdates = null;
          var numberOfReRenders = 0;
          var RE_RENDER_LIMIT = 25;
          var currentHookNameInDev = null;
          var hookTypesDev = null;
          var hookTypesUpdateIndexDev = -1;
          var ignorePreviousDependencies = false;
          function mountHookTypesDev() {
            {
              var hookName = currentHookNameInDev;
              if (hookTypesDev === null) {
                hookTypesDev = [hookName];
              } else {
                hookTypesDev.push(hookName);
              }
            }
          }
          function updateHookTypesDev() {
            {
              var hookName = currentHookNameInDev;
              if (hookTypesDev !== null) {
                hookTypesUpdateIndexDev++;
                if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
                  warnOnHookMismatchInDev(hookName);
                }
              }
            }
          }
          function checkDepsAreArrayDev(deps) {
            {
              if (deps !== void 0 && deps !== null && !Array.isArray(deps)) {
                warning$1(false, "%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
              }
            }
          }
          function warnOnHookMismatchInDev(currentHookName) {
            {
              var componentName = getComponentName(currentlyRenderingFiber$1.type);
              if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
                didWarnAboutMismatchedHooksForComponent.add(componentName);
                if (hookTypesDev !== null) {
                  var table = "";
                  var secondColumnStart = 30;
                  for (var i2 = 0; i2 <= hookTypesUpdateIndexDev; i2++) {
                    var oldHookName = hookTypesDev[i2];
                    var newHookName = i2 === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                    var row = i2 + 1 + ". " + oldHookName;
                    while (row.length < secondColumnStart) {
                      row += " ";
                    }
                    row += newHookName + "\n";
                    table += row;
                  }
                  warning$1(false, "React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
                }
              }
            }
          }
          function throwInvalidHookError() {
            {
              {
                throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.");
              }
            }
          }
          function areHookInputsEqual(nextDeps, prevDeps) {
            {
              if (ignorePreviousDependencies) {
                return false;
              }
            }
            if (prevDeps === null) {
              {
                warning$1(false, "%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
              }
              return false;
            }
            {
              if (nextDeps.length !== prevDeps.length) {
                warning$1(false, "The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
              }
            }
            for (var i2 = 0; i2 < prevDeps.length && i2 < nextDeps.length; i2++) {
              if (is$1(nextDeps[i2], prevDeps[i2])) {
                continue;
              }
              return false;
            }
            return true;
          }
          function renderWithHooks(current2, workInProgress2, Component, props, refOrContext, nextRenderExpirationTime) {
            renderExpirationTime$1 = nextRenderExpirationTime;
            currentlyRenderingFiber$1 = workInProgress2;
            nextCurrentHook = current2 !== null ? current2.memoizedState : null;
            {
              hookTypesDev = current2 !== null ? current2._debugHookTypes : null;
              hookTypesUpdateIndexDev = -1;
              ignorePreviousDependencies = current2 !== null && current2.type !== workInProgress2.type;
            }
            {
              if (nextCurrentHook !== null) {
                ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
              } else if (hookTypesDev !== null) {
                ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
              } else {
                ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
              }
            }
            var children = Component(props, refOrContext);
            if (didScheduleRenderPhaseUpdate) {
              do {
                didScheduleRenderPhaseUpdate = false;
                numberOfReRenders += 1;
                {
                  ignorePreviousDependencies = false;
                }
                nextCurrentHook = current2 !== null ? current2.memoizedState : null;
                nextWorkInProgressHook = firstWorkInProgressHook;
                currentHook = null;
                workInProgressHook = null;
                componentUpdateQueue = null;
                {
                  hookTypesUpdateIndexDev = -1;
                }
                ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
                children = Component(props, refOrContext);
              } while (didScheduleRenderPhaseUpdate);
              renderPhaseUpdates = null;
              numberOfReRenders = 0;
            }
            ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
            var renderedWork = currentlyRenderingFiber$1;
            renderedWork.memoizedState = firstWorkInProgressHook;
            renderedWork.expirationTime = remainingExpirationTime;
            renderedWork.updateQueue = componentUpdateQueue;
            renderedWork.effectTag |= sideEffectTag;
            {
              renderedWork._debugHookTypes = hookTypesDev;
            }
            var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
            renderExpirationTime$1 = NoWork;
            currentlyRenderingFiber$1 = null;
            currentHook = null;
            nextCurrentHook = null;
            firstWorkInProgressHook = null;
            workInProgressHook = null;
            nextWorkInProgressHook = null;
            {
              currentHookNameInDev = null;
              hookTypesDev = null;
              hookTypesUpdateIndexDev = -1;
            }
            remainingExpirationTime = NoWork;
            componentUpdateQueue = null;
            sideEffectTag = 0;
            if (!!didRenderTooFewHooks) {
              {
                throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
              }
            }
            return children;
          }
          function bailoutHooks(current2, workInProgress2, expirationTime) {
            workInProgress2.updateQueue = current2.updateQueue;
            workInProgress2.effectTag &= ~(Passive | Update);
            if (current2.expirationTime <= expirationTime) {
              current2.expirationTime = NoWork;
            }
          }
          function resetHooks() {
            ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
            renderExpirationTime$1 = NoWork;
            currentlyRenderingFiber$1 = null;
            currentHook = null;
            nextCurrentHook = null;
            firstWorkInProgressHook = null;
            workInProgressHook = null;
            nextWorkInProgressHook = null;
            {
              hookTypesDev = null;
              hookTypesUpdateIndexDev = -1;
              currentHookNameInDev = null;
            }
            remainingExpirationTime = NoWork;
            componentUpdateQueue = null;
            sideEffectTag = 0;
            didScheduleRenderPhaseUpdate = false;
            renderPhaseUpdates = null;
            numberOfReRenders = 0;
          }
          function mountWorkInProgressHook() {
            var hook = {
              memoizedState: null,
              baseState: null,
              queue: null,
              baseUpdate: null,
              next: null
            };
            if (workInProgressHook === null) {
              firstWorkInProgressHook = workInProgressHook = hook;
            } else {
              workInProgressHook = workInProgressHook.next = hook;
            }
            return workInProgressHook;
          }
          function updateWorkInProgressHook() {
            if (nextWorkInProgressHook !== null) {
              workInProgressHook = nextWorkInProgressHook;
              nextWorkInProgressHook = workInProgressHook.next;
              currentHook = nextCurrentHook;
              nextCurrentHook = currentHook !== null ? currentHook.next : null;
            } else {
              if (!(nextCurrentHook !== null)) {
                {
                  throw Error("Rendered more hooks than during the previous render.");
                }
              }
              currentHook = nextCurrentHook;
              var newHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                queue: currentHook.queue,
                baseUpdate: currentHook.baseUpdate,
                next: null
              };
              if (workInProgressHook === null) {
                workInProgressHook = firstWorkInProgressHook = newHook;
              } else {
                workInProgressHook = workInProgressHook.next = newHook;
              }
              nextCurrentHook = currentHook.next;
            }
            return workInProgressHook;
          }
          function createFunctionComponentUpdateQueue() {
            return {
              lastEffect: null
            };
          }
          function basicStateReducer(state, action) {
            return typeof action === "function" ? action(state) : action;
          }
          function mountReducer(reducer, initialArg, init) {
            var hook = mountWorkInProgressHook();
            var initialState;
            if (init !== void 0) {
              initialState = init(initialArg);
            } else {
              initialState = initialArg;
            }
            hook.memoizedState = hook.baseState = initialState;
            var queue = hook.queue = {
              last: null,
              dispatch: null,
              lastRenderedReducer: reducer,
              lastRenderedState: initialState
            };
            var dispatch = queue.dispatch = dispatchAction.bind(
              null,
              currentlyRenderingFiber$1,
              queue
            );
            return [hook.memoizedState, dispatch];
          }
          function updateReducer(reducer, initialArg, init) {
            var hook = updateWorkInProgressHook();
            var queue = hook.queue;
            if (!(queue !== null)) {
              {
                throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
              }
            }
            queue.lastRenderedReducer = reducer;
            if (numberOfReRenders > 0) {
              var _dispatch = queue.dispatch;
              if (renderPhaseUpdates !== null) {
                var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
                if (firstRenderPhaseUpdate !== void 0) {
                  renderPhaseUpdates.delete(queue);
                  var newState = hook.memoizedState;
                  var update = firstRenderPhaseUpdate;
                  do {
                    var action = update.action;
                    newState = reducer(newState, action);
                    update = update.next;
                  } while (update !== null);
                  if (!is$1(newState, hook.memoizedState)) {
                    markWorkInProgressReceivedUpdate();
                  }
                  hook.memoizedState = newState;
                  if (hook.baseUpdate === queue.last) {
                    hook.baseState = newState;
                  }
                  queue.lastRenderedState = newState;
                  return [newState, _dispatch];
                }
              }
              return [hook.memoizedState, _dispatch];
            }
            var last = queue.last;
            var baseUpdate = hook.baseUpdate;
            var baseState = hook.baseState;
            var first;
            if (baseUpdate !== null) {
              if (last !== null) {
                last.next = null;
              }
              first = baseUpdate.next;
            } else {
              first = last !== null ? last.next : null;
            }
            if (first !== null) {
              var _newState = baseState;
              var newBaseState = null;
              var newBaseUpdate = null;
              var prevUpdate = baseUpdate;
              var _update = first;
              var didSkip = false;
              do {
                var updateExpirationTime = _update.expirationTime;
                if (updateExpirationTime < renderExpirationTime$1) {
                  if (!didSkip) {
                    didSkip = true;
                    newBaseUpdate = prevUpdate;
                    newBaseState = _newState;
                  }
                  if (updateExpirationTime > remainingExpirationTime) {
                    remainingExpirationTime = updateExpirationTime;
                    markUnprocessedUpdateTime(remainingExpirationTime);
                  }
                } else {
                  markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig);
                  if (_update.eagerReducer === reducer) {
                    _newState = _update.eagerState;
                  } else {
                    var _action = _update.action;
                    _newState = reducer(_newState, _action);
                  }
                }
                prevUpdate = _update;
                _update = _update.next;
              } while (_update !== null && _update !== first);
              if (!didSkip) {
                newBaseUpdate = prevUpdate;
                newBaseState = _newState;
              }
              if (!is$1(_newState, hook.memoizedState)) {
                markWorkInProgressReceivedUpdate();
              }
              hook.memoizedState = _newState;
              hook.baseUpdate = newBaseUpdate;
              hook.baseState = newBaseState;
              queue.lastRenderedState = _newState;
            }
            var dispatch = queue.dispatch;
            return [hook.memoizedState, dispatch];
          }
          function mountState(initialState) {
            var hook = mountWorkInProgressHook();
            if (typeof initialState === "function") {
              initialState = initialState();
            }
            hook.memoizedState = hook.baseState = initialState;
            var queue = hook.queue = {
              last: null,
              dispatch: null,
              lastRenderedReducer: basicStateReducer,
              lastRenderedState: initialState
            };
            var dispatch = queue.dispatch = dispatchAction.bind(
              null,
              currentlyRenderingFiber$1,
              queue
            );
            return [hook.memoizedState, dispatch];
          }
          function updateState(initialState) {
            return updateReducer(basicStateReducer, initialState);
          }
          function pushEffect(tag, create, destroy, deps) {
            var effect = {
              tag,
              create,
              destroy,
              deps,
              next: null
            };
            if (componentUpdateQueue === null) {
              componentUpdateQueue = createFunctionComponentUpdateQueue();
              componentUpdateQueue.lastEffect = effect.next = effect;
            } else {
              var lastEffect = componentUpdateQueue.lastEffect;
              if (lastEffect === null) {
                componentUpdateQueue.lastEffect = effect.next = effect;
              } else {
                var firstEffect = lastEffect.next;
                lastEffect.next = effect;
                effect.next = firstEffect;
                componentUpdateQueue.lastEffect = effect;
              }
            }
            return effect;
          }
          function mountRef(initialValue) {
            var hook = mountWorkInProgressHook();
            var ref = {
              current: initialValue
            };
            {
              Object.seal(ref);
            }
            hook.memoizedState = ref;
            return ref;
          }
          function updateRef(initialValue) {
            var hook = updateWorkInProgressHook();
            return hook.memoizedState;
          }
          function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
            var hook = mountWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            sideEffectTag |= fiberEffectTag;
            hook.memoizedState = pushEffect(hookEffectTag, create, void 0, nextDeps);
          }
          function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
            var hook = updateWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            var destroy = void 0;
            if (currentHook !== null) {
              var prevEffect = currentHook.memoizedState;
              destroy = prevEffect.destroy;
              if (nextDeps !== null) {
                var prevDeps = prevEffect.deps;
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  pushEffect(NoEffect$1, create, destroy, nextDeps);
                  return;
                }
              }
            }
            sideEffectTag |= fiberEffectTag;
            hook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextDeps);
          }
          function mountEffect(create, deps) {
            {
              if ("undefined" !== typeof jest) {
                warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
              }
            }
            return mountEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
          }
          function updateEffect(create, deps) {
            {
              if ("undefined" !== typeof jest) {
                warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
              }
            }
            return updateEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
          }
          function mountLayoutEffect(create, deps) {
            return mountEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
          }
          function updateLayoutEffect(create, deps) {
            return updateEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
          }
          function imperativeHandleEffect(create, ref) {
            if (typeof ref === "function") {
              var refCallback = ref;
              var _inst = create();
              refCallback(_inst);
              return function() {
                refCallback(null);
              };
            } else if (ref !== null && ref !== void 0) {
              var refObject = ref;
              {
                !refObject.hasOwnProperty("current") ? warning$1(false, "Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}") : void 0;
              }
              var _inst2 = create();
              refObject.current = _inst2;
              return function() {
                refObject.current = null;
              };
            }
          }
          function mountImperativeHandle(ref, create, deps) {
            {
              !(typeof create === "function") ? warning$1(false, "Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null") : void 0;
            }
            var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
            return mountEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
          }
          function updateImperativeHandle(ref, create, deps) {
            {
              !(typeof create === "function") ? warning$1(false, "Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null") : void 0;
            }
            var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
            return updateEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
          }
          function mountDebugValue(value, formatterFn) {
          }
          var updateDebugValue = mountDebugValue;
          function mountCallback(callback, deps) {
            var hook = mountWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            hook.memoizedState = [callback, nextDeps];
            return callback;
          }
          function updateCallback(callback, deps) {
            var hook = updateWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            var prevState = hook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
            hook.memoizedState = [callback, nextDeps];
            return callback;
          }
          function mountMemo(nextCreate, deps) {
            var hook = mountWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            var nextValue = nextCreate();
            hook.memoizedState = [nextValue, nextDeps];
            return nextValue;
          }
          function updateMemo(nextCreate, deps) {
            var hook = updateWorkInProgressHook();
            var nextDeps = deps === void 0 ? null : deps;
            var prevState = hook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
            var nextValue = nextCreate();
            hook.memoizedState = [nextValue, nextDeps];
            return nextValue;
          }
          function mountDeferredValue(value, config) {
            var _mountState = mountState(value), prevValue = _mountState[0], setValue2 = _mountState[1];
            mountEffect(function() {
              Scheduler.unstable_next(function() {
                var previousConfig = ReactCurrentBatchConfig$1.suspense;
                ReactCurrentBatchConfig$1.suspense = config === void 0 ? null : config;
                try {
                  setValue2(value);
                } finally {
                  ReactCurrentBatchConfig$1.suspense = previousConfig;
                }
              });
            }, [value, config]);
            return prevValue;
          }
          function updateDeferredValue(value, config) {
            var _updateState = updateState(value), prevValue = _updateState[0], setValue2 = _updateState[1];
            updateEffect(function() {
              Scheduler.unstable_next(function() {
                var previousConfig = ReactCurrentBatchConfig$1.suspense;
                ReactCurrentBatchConfig$1.suspense = config === void 0 ? null : config;
                try {
                  setValue2(value);
                } finally {
                  ReactCurrentBatchConfig$1.suspense = previousConfig;
                }
              });
            }, [value, config]);
            return prevValue;
          }
          function mountTransition(config) {
            var _mountState2 = mountState(false), isPending = _mountState2[0], setPending = _mountState2[1];
            var startTransition = mountCallback(function(callback) {
              setPending(true);
              Scheduler.unstable_next(function() {
                var previousConfig = ReactCurrentBatchConfig$1.suspense;
                ReactCurrentBatchConfig$1.suspense = config === void 0 ? null : config;
                try {
                  setPending(false);
                  callback();
                } finally {
                  ReactCurrentBatchConfig$1.suspense = previousConfig;
                }
              });
            }, [config, isPending]);
            return [startTransition, isPending];
          }
          function updateTransition(config) {
            var _updateState2 = updateState(false), isPending = _updateState2[0], setPending = _updateState2[1];
            var startTransition = updateCallback(function(callback) {
              setPending(true);
              Scheduler.unstable_next(function() {
                var previousConfig = ReactCurrentBatchConfig$1.suspense;
                ReactCurrentBatchConfig$1.suspense = config === void 0 ? null : config;
                try {
                  setPending(false);
                  callback();
                } finally {
                  ReactCurrentBatchConfig$1.suspense = previousConfig;
                }
              });
            }, [config, isPending]);
            return [startTransition, isPending];
          }
          function dispatchAction(fiber, queue, action) {
            if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
              {
                throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
              }
            }
            {
              !(typeof arguments[3] !== "function") ? warning$1(false, "State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().") : void 0;
            }
            var alternate = fiber.alternate;
            if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
              didScheduleRenderPhaseUpdate = true;
              var update = {
                expirationTime: renderExpirationTime$1,
                suspenseConfig: null,
                action,
                eagerReducer: null,
                eagerState: null,
                next: null
              };
              {
                update.priority = getCurrentPriorityLevel();
              }
              if (renderPhaseUpdates === null) {
                renderPhaseUpdates = /* @__PURE__ */ new Map();
              }
              var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
              if (firstRenderPhaseUpdate === void 0) {
                renderPhaseUpdates.set(queue, update);
              } else {
                var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
                while (lastRenderPhaseUpdate.next !== null) {
                  lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
                }
                lastRenderPhaseUpdate.next = update;
              }
            } else {
              var currentTime = requestCurrentTimeForUpdate();
              var suspenseConfig = requestCurrentSuspenseConfig();
              var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
              var _update2 = {
                expirationTime,
                suspenseConfig,
                action,
                eagerReducer: null,
                eagerState: null,
                next: null
              };
              {
                _update2.priority = getCurrentPriorityLevel();
              }
              var last = queue.last;
              if (last === null) {
                _update2.next = _update2;
              } else {
                var first = last.next;
                if (first !== null) {
                  _update2.next = first;
                }
                last.next = _update2;
              }
              queue.last = _update2;
              if (fiber.expirationTime === NoWork && (alternate === null || alternate.expirationTime === NoWork)) {
                var lastRenderedReducer = queue.lastRenderedReducer;
                if (lastRenderedReducer !== null) {
                  var prevDispatcher;
                  {
                    prevDispatcher = ReactCurrentDispatcher$1.current;
                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                  }
                  try {
                    var currentState = queue.lastRenderedState;
                    var eagerState = lastRenderedReducer(currentState, action);
                    _update2.eagerReducer = lastRenderedReducer;
                    _update2.eagerState = eagerState;
                    if (is$1(eagerState, currentState)) {
                      return;
                    }
                  } catch (error) {
                  } finally {
                    {
                      ReactCurrentDispatcher$1.current = prevDispatcher;
                    }
                  }
                }
              }
              {
                if ("undefined" !== typeof jest) {
                  warnIfNotScopedWithMatchingAct(fiber);
                  warnIfNotCurrentlyActingUpdatesInDev(fiber);
                }
              }
              scheduleWork(fiber, expirationTime);
            }
          }
          var ContextOnlyDispatcher = {
            readContext,
            useCallback: throwInvalidHookError,
            useContext: throwInvalidHookError,
            useEffect: throwInvalidHookError,
            useImperativeHandle: throwInvalidHookError,
            useLayoutEffect: throwInvalidHookError,
            useMemo: throwInvalidHookError,
            useReducer: throwInvalidHookError,
            useRef: throwInvalidHookError,
            useState: throwInvalidHookError,
            useDebugValue: throwInvalidHookError,
            useResponder: throwInvalidHookError,
            useDeferredValue: throwInvalidHookError,
            useTransition: throwInvalidHookError
          };
          var HooksDispatcherOnMountInDEV = null;
          var HooksDispatcherOnMountWithHookTypesInDEV = null;
          var HooksDispatcherOnUpdateInDEV = null;
          var InvalidNestedHooksDispatcherOnMountInDEV = null;
          var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
          {
            var warnInvalidContextAccess = function() {
              warning$1(false, "Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            };
            var warnInvalidHookAccess = function() {
              warning$1(false, "Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://fb.me/rules-of-hooks");
            };
            HooksDispatcherOnMountInDEV = {
              readContext: function(context, observedBits) {
                return readContext(context, observedBits);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountCallback(callback, deps);
              },
              useContext: function(context, observedBits) {
                currentHookNameInDev = "useContext";
                mountHookTypesDev();
                return readContext(context, observedBits);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountImperativeHandle(ref, create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                return mountLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                mountHookTypesDev();
                checkDepsAreArrayDev(deps);
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                mountHookTypesDev();
                return mountRef(initialValue);
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                mountHookTypesDev();
                return mountDebugValue(value, formatterFn);
              },
              useResponder: function(responder, props) {
                currentHookNameInDev = "useResponder";
                mountHookTypesDev();
                return createResponderListener(responder, props);
              },
              useDeferredValue: function(value, config) {
                currentHookNameInDev = "useDeferredValue";
                mountHookTypesDev();
                return mountDeferredValue(value, config);
              },
              useTransition: function(config) {
                currentHookNameInDev = "useTransition";
                mountHookTypesDev();
                return mountTransition(config);
              }
            };
            HooksDispatcherOnMountWithHookTypesInDEV = {
              readContext: function(context, observedBits) {
                return readContext(context, observedBits);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                updateHookTypesDev();
                return mountCallback(callback, deps);
              },
              useContext: function(context, observedBits) {
                currentHookNameInDev = "useContext";
                updateHookTypesDev();
                return readContext(context, observedBits);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                updateHookTypesDev();
                return mountEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                updateHookTypesDev();
                return mountImperativeHandle(ref, create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                updateHookTypesDev();
                return mountLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                updateHookTypesDev();
                return mountRef(initialValue);
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                updateHookTypesDev();
                return mountDebugValue(value, formatterFn);
              },
              useResponder: function(responder, props) {
                currentHookNameInDev = "useResponder";
                updateHookTypesDev();
                return createResponderListener(responder, props);
              },
              useDeferredValue: function(value, config) {
                currentHookNameInDev = "useDeferredValue";
                updateHookTypesDev();
                return mountDeferredValue(value, config);
              },
              useTransition: function(config) {
                currentHookNameInDev = "useTransition";
                updateHookTypesDev();
                return mountTransition(config);
              }
            };
            HooksDispatcherOnUpdateInDEV = {
              readContext: function(context, observedBits) {
                return readContext(context, observedBits);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                updateHookTypesDev();
                return updateCallback(callback, deps);
              },
              useContext: function(context, observedBits) {
                currentHookNameInDev = "useContext";
                updateHookTypesDev();
                return readContext(context, observedBits);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                updateHookTypesDev();
                return updateEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                updateHookTypesDev();
                return updateImperativeHandle(ref, create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                updateHookTypesDev();
                return updateLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                updateHookTypesDev();
                return updateRef(initialValue);
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                updateHookTypesDev();
                return updateDebugValue(value, formatterFn);
              },
              useResponder: function(responder, props) {
                currentHookNameInDev = "useResponder";
                updateHookTypesDev();
                return createResponderListener(responder, props);
              },
              useDeferredValue: function(value, config) {
                currentHookNameInDev = "useDeferredValue";
                updateHookTypesDev();
                return updateDeferredValue(value, config);
              },
              useTransition: function(config) {
                currentHookNameInDev = "useTransition";
                updateHookTypesDev();
                return updateTransition(config);
              }
            };
            InvalidNestedHooksDispatcherOnMountInDEV = {
              readContext: function(context, observedBits) {
                warnInvalidContextAccess();
                return readContext(context, observedBits);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountCallback(callback, deps);
              },
              useContext: function(context, observedBits) {
                currentHookNameInDev = "useContext";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return readContext(context, observedBits);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountImperativeHandle(ref, create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                warnInvalidHookAccess();
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                warnInvalidHookAccess();
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountRef(initialValue);
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                warnInvalidHookAccess();
                mountHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                try {
                  return mountState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountDebugValue(value, formatterFn);
              },
              useResponder: function(responder, props) {
                currentHookNameInDev = "useResponder";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return createResponderListener(responder, props);
              },
              useDeferredValue: function(value, config) {
                currentHookNameInDev = "useDeferredValue";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountDeferredValue(value, config);
              },
              useTransition: function(config) {
                currentHookNameInDev = "useTransition";
                warnInvalidHookAccess();
                mountHookTypesDev();
                return mountTransition(config);
              }
            };
            InvalidNestedHooksDispatcherOnUpdateInDEV = {
              readContext: function(context, observedBits) {
                warnInvalidContextAccess();
                return readContext(context, observedBits);
              },
              useCallback: function(callback, deps) {
                currentHookNameInDev = "useCallback";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateCallback(callback, deps);
              },
              useContext: function(context, observedBits) {
                currentHookNameInDev = "useContext";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return readContext(context, observedBits);
              },
              useEffect: function(create, deps) {
                currentHookNameInDev = "useEffect";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateEffect(create, deps);
              },
              useImperativeHandle: function(ref, create, deps) {
                currentHookNameInDev = "useImperativeHandle";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateImperativeHandle(ref, create, deps);
              },
              useLayoutEffect: function(create, deps) {
                currentHookNameInDev = "useLayoutEffect";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateLayoutEffect(create, deps);
              },
              useMemo: function(create, deps) {
                currentHookNameInDev = "useMemo";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateMemo(create, deps);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useReducer: function(reducer, initialArg, init) {
                currentHookNameInDev = "useReducer";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateReducer(reducer, initialArg, init);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useRef: function(initialValue) {
                currentHookNameInDev = "useRef";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateRef(initialValue);
              },
              useState: function(initialState) {
                currentHookNameInDev = "useState";
                warnInvalidHookAccess();
                updateHookTypesDev();
                var prevDispatcher = ReactCurrentDispatcher$1.current;
                ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                  return updateState(initialState);
                } finally {
                  ReactCurrentDispatcher$1.current = prevDispatcher;
                }
              },
              useDebugValue: function(value, formatterFn) {
                currentHookNameInDev = "useDebugValue";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateDebugValue(value, formatterFn);
              },
              useResponder: function(responder, props) {
                currentHookNameInDev = "useResponder";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return createResponderListener(responder, props);
              },
              useDeferredValue: function(value, config) {
                currentHookNameInDev = "useDeferredValue";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateDeferredValue(value, config);
              },
              useTransition: function(config) {
                currentHookNameInDev = "useTransition";
                warnInvalidHookAccess();
                updateHookTypesDev();
                return updateTransition(config);
              }
            };
          }
          var now$2 = Scheduler.unstable_now;
          var commitTime = 0;
          var profilerStartTime = -1;
          function getCommitTime() {
            return commitTime;
          }
          function recordCommitTime() {
            if (!enableProfilerTimer) {
              return;
            }
            commitTime = now$2();
          }
          function startProfilerTimer(fiber) {
            if (!enableProfilerTimer) {
              return;
            }
            profilerStartTime = now$2();
            if (fiber.actualStartTime < 0) {
              fiber.actualStartTime = now$2();
            }
          }
          function stopProfilerTimerIfRunning(fiber) {
            if (!enableProfilerTimer) {
              return;
            }
            profilerStartTime = -1;
          }
          function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
            if (!enableProfilerTimer) {
              return;
            }
            if (profilerStartTime >= 0) {
              var elapsedTime = now$2() - profilerStartTime;
              fiber.actualDuration += elapsedTime;
              if (overrideBaseTime) {
                fiber.selfBaseDuration = elapsedTime;
              }
              profilerStartTime = -1;
            }
          }
          var hydrationParentFiber = null;
          var nextHydratableInstance = null;
          var isHydrating = false;
          function warnIfHydrating() {
            {
              !!isHydrating ? warning$1(false, "We should not be hydrating here. This is a bug in React. Please file a bug.") : void 0;
            }
          }
          function enterHydrationState(fiber) {
            if (!supportsHydration) {
              return false;
            }
            var parentInstance = fiber.stateNode.containerInfo;
            nextHydratableInstance = getFirstHydratableChild(parentInstance);
            hydrationParentFiber = fiber;
            isHydrating = true;
            return true;
          }
          function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance) {
            if (!supportsHydration) {
              return false;
            }
            nextHydratableInstance = getNextHydratableSibling(suspenseInstance);
            popToNextHostParent(fiber);
            isHydrating = true;
            return true;
          }
          function deleteHydratableInstance(returnFiber, instance) {
            {
              switch (returnFiber.tag) {
                case HostRoot:
                  didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
                  break;
                case HostComponent:
                  didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
                  break;
              }
            }
            var childToDelete = createFiberFromHostInstanceForDeletion();
            childToDelete.stateNode = instance;
            childToDelete.return = returnFiber;
            childToDelete.effectTag = Deletion;
            if (returnFiber.lastEffect !== null) {
              returnFiber.lastEffect.nextEffect = childToDelete;
              returnFiber.lastEffect = childToDelete;
            } else {
              returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
            }
          }
          function insertNonHydratedInstance(returnFiber, fiber) {
            fiber.effectTag = fiber.effectTag & ~Hydrating | Placement;
            {
              switch (returnFiber.tag) {
                case HostRoot: {
                  var parentContainer = returnFiber.stateNode.containerInfo;
                  switch (fiber.tag) {
                    case HostComponent:
                      var type2 = fiber.type;
                      var props = fiber.pendingProps;
                      didNotFindHydratableContainerInstance(parentContainer, type2, props);
                      break;
                    case HostText:
                      var text = fiber.pendingProps;
                      didNotFindHydratableContainerTextInstance(parentContainer, text);
                      break;
                    case SuspenseComponent:
                      didNotFindHydratableContainerSuspenseInstance(parentContainer);
                      break;
                  }
                  break;
                }
                case HostComponent: {
                  var parentType = returnFiber.type;
                  var parentProps = returnFiber.memoizedProps;
                  var parentInstance = returnFiber.stateNode;
                  switch (fiber.tag) {
                    case HostComponent:
                      var _type = fiber.type;
                      var _props = fiber.pendingProps;
                      didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
                      break;
                    case HostText:
                      var _text = fiber.pendingProps;
                      didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                      break;
                    case SuspenseComponent:
                      didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance);
                      break;
                  }
                  break;
                }
                default:
                  return;
              }
            }
          }
          function tryHydrate(fiber, nextInstance) {
            switch (fiber.tag) {
              case HostComponent: {
                var type2 = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type2, props);
                if (instance !== null) {
                  fiber.stateNode = instance;
                  return true;
                }
                return false;
              }
              case HostText: {
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                  fiber.stateNode = textInstance;
                  return true;
                }
                return false;
              }
              case SuspenseComponent: {
                if (enableSuspenseServerRenderer) {
                  var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
                  if (suspenseInstance !== null) {
                    var suspenseState = {
                      dehydrated: suspenseInstance,
                      retryTime: Never
                    };
                    fiber.memoizedState = suspenseState;
                    var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                    dehydratedFragment.return = fiber;
                    fiber.child = dehydratedFragment;
                    return true;
                  }
                }
                return false;
              }
              default:
                return false;
            }
          }
          function tryToClaimNextHydratableInstance(fiber) {
            if (!isHydrating) {
              return;
            }
            var nextInstance = nextHydratableInstance;
            if (!nextInstance) {
              insertNonHydratedInstance(hydrationParentFiber, fiber);
              isHydrating = false;
              hydrationParentFiber = fiber;
              return;
            }
            var firstAttemptedInstance = nextInstance;
            if (!tryHydrate(fiber, nextInstance)) {
              nextInstance = getNextHydratableSibling(firstAttemptedInstance);
              if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating = false;
                hydrationParentFiber = fiber;
                return;
              }
              deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
            }
            hydrationParentFiber = fiber;
            nextHydratableInstance = getFirstHydratableChild(nextInstance);
          }
          function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
            if (!supportsHydration) {
              {
                {
                  throw Error("Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
            var instance = fiber.stateNode;
            var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
            fiber.updateQueue = updatePayload;
            if (updatePayload !== null) {
              return true;
            }
            return false;
          }
          function prepareToHydrateHostTextInstance(fiber) {
            if (!supportsHydration) {
              {
                {
                  throw Error("Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
            var textInstance = fiber.stateNode;
            var textContent = fiber.memoizedProps;
            var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
            {
              if (shouldUpdate) {
                var returnFiber = hydrationParentFiber;
                if (returnFiber !== null) {
                  switch (returnFiber.tag) {
                    case HostRoot: {
                      var parentContainer = returnFiber.stateNode.containerInfo;
                      didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                      break;
                    }
                    case HostComponent: {
                      var parentType = returnFiber.type;
                      var parentProps = returnFiber.memoizedProps;
                      var parentInstance = returnFiber.stateNode;
                      didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                      break;
                    }
                  }
                }
              }
            }
            return shouldUpdate;
          }
          function prepareToHydrateHostSuspenseInstance(fiber) {
            if (!supportsHydration) {
              {
                {
                  throw Error("Expected prepareToHydrateHostSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
            var suspenseState = fiber.memoizedState;
            var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
            if (!suspenseInstance) {
              {
                throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            hydrateSuspenseInstance(suspenseInstance, fiber);
          }
          function skipPastDehydratedSuspenseInstance(fiber) {
            if (!supportsHydration) {
              {
                {
                  throw Error("Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
            var suspenseState = fiber.memoizedState;
            var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
            if (!suspenseInstance) {
              {
                throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
          }
          function popToNextHostParent(fiber) {
            var parent = fiber.return;
            while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
              parent = parent.return;
            }
            hydrationParentFiber = parent;
          }
          function popHydrationState(fiber) {
            if (!supportsHydration) {
              return false;
            }
            if (fiber !== hydrationParentFiber) {
              return false;
            }
            if (!isHydrating) {
              popToNextHostParent(fiber);
              isHydrating = true;
              return false;
            }
            var type2 = fiber.type;
            if (fiber.tag !== HostComponent || type2 !== "head" && type2 !== "body" && !shouldSetTextContent(type2, fiber.memoizedProps)) {
              var nextInstance = nextHydratableInstance;
              while (nextInstance) {
                deleteHydratableInstance(fiber, nextInstance);
                nextInstance = getNextHydratableSibling(nextInstance);
              }
            }
            popToNextHostParent(fiber);
            if (fiber.tag === SuspenseComponent) {
              nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
            } else {
              nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
            }
            return true;
          }
          function resetHydrationState() {
            if (!supportsHydration) {
              return;
            }
            hydrationParentFiber = null;
            nextHydratableInstance = null;
            isHydrating = false;
          }
          var ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;
          var didReceiveUpdate = false;
          var didWarnAboutBadClass;
          var didWarnAboutModulePatternComponent;
          var didWarnAboutContextTypeOnFunctionComponent;
          var didWarnAboutGetDerivedStateOnFunctionComponent;
          var didWarnAboutFunctionRefs;
          var didWarnAboutReassigningProps;
          var didWarnAboutMaxDuration;
          var didWarnAboutRevealOrder;
          var didWarnAboutTailOptions;
          var didWarnAboutDefaultPropsOnFunctionComponent;
          {
            didWarnAboutBadClass = {};
            didWarnAboutModulePatternComponent = {};
            didWarnAboutContextTypeOnFunctionComponent = {};
            didWarnAboutGetDerivedStateOnFunctionComponent = {};
            didWarnAboutFunctionRefs = {};
            didWarnAboutReassigningProps = false;
            didWarnAboutMaxDuration = false;
            didWarnAboutRevealOrder = {};
            didWarnAboutTailOptions = {};
            didWarnAboutDefaultPropsOnFunctionComponent = {};
          }
          function reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2) {
            if (current$$1 === null) {
              workInProgress2.child = mountChildFibers(workInProgress2, null, nextChildren, renderExpirationTime2);
            } else {
              workInProgress2.child = reconcileChildFibers(workInProgress2, current$$1.child, nextChildren, renderExpirationTime2);
            }
          }
          function forceUnmountCurrentAndReconcile(current$$1, workInProgress2, nextChildren, renderExpirationTime2) {
            workInProgress2.child = reconcileChildFibers(workInProgress2, current$$1.child, null, renderExpirationTime2);
            workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderExpirationTime2);
          }
          function updateForwardRef(current$$1, workInProgress2, Component, nextProps, renderExpirationTime2) {
            {
              if (workInProgress2.type !== workInProgress2.elementType) {
                var innerPropTypes = Component.propTypes;
                if (innerPropTypes) {
                  checkPropTypes(
                    innerPropTypes,
                    nextProps,
                    "prop",
                    getComponentName(Component),
                    getCurrentFiberStackInDev
                  );
                }
              }
            }
            var render2 = Component.render;
            var ref = workInProgress2.ref;
            var nextChildren;
            prepareToReadContext(workInProgress2, renderExpirationTime2);
            {
              ReactCurrentOwner$2.current = workInProgress2;
              setCurrentPhase("render");
              nextChildren = renderWithHooks(current$$1, workInProgress2, render2, nextProps, ref, renderExpirationTime2);
              if (debugRenderPhaseSideEffectsForStrictMode && workInProgress2.mode & StrictMode) {
                if (workInProgress2.memoizedState !== null) {
                  nextChildren = renderWithHooks(current$$1, workInProgress2, render2, nextProps, ref, renderExpirationTime2);
                }
              }
              setCurrentPhase(null);
            }
            if (current$$1 !== null && !didReceiveUpdate) {
              bailoutHooks(current$$1, workInProgress2, renderExpirationTime2);
              return bailoutOnAlreadyFinishedWork(current$$1, workInProgress2, renderExpirationTime2);
            }
            workInProgress2.effectTag |= PerformedWork;
            reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
            return workInProgress2.child;
          }
          function updateMemoComponent(current$$1, workInProgress2, Component, nextProps, updateExpirationTime, renderExpirationTime2) {
            if (current$$1 === null) {
              var type2 = Component.type;
              if (isSimpleFunctionComponent(type2) && Component.compare === null && Component.defaultProps === void 0) {
                var resolvedType = type2;
                {
                  resolvedType = resolveFunctionForHotReloading(type2);
                }
                workInProgress2.tag = SimpleMemoComponent;
                workInProgress2.type = resolvedType;
                {
                  validateFunctionComponentInDev(workInProgress2, type2);
                }
                return updateSimpleMemoComponent(current$$1, workInProgress2, resolvedType, nextProps, updateExpirationTime, renderExpirationTime2);
              }
              {
                var innerPropTypes = type2.propTypes;
                if (innerPropTypes) {
                  checkPropTypes(
                    innerPropTypes,
                    nextProps,
                    "prop",
                    getComponentName(type2),
                    getCurrentFiberStackInDev
                  );
                }
              }
              var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress2.mode, renderExpirationTime2);
              child.ref = workInProgress2.ref;
              child.return = workInProgress2;
              workInProgress2.child = child;
              return child;
            }
            {
              var _type = Component.type;
              var _innerPropTypes = _type.propTypes;
              if (_innerPropTypes) {
                checkPropTypes(
                  _innerPropTypes,
                  nextProps,
                  "prop",
                  getComponentName(_type),
                  getCurrentFiberStackInDev
                );
              }
            }
            var currentChild = current$$1.child;
            if (updateExpirationTime < renderExpirationTime2) {
              var prevProps = currentChild.memoizedProps;
              var compare = Component.compare;
              compare = compare !== null ? compare : shallowEqual;
              if (compare(prevProps, nextProps) && current$$1.ref === workInProgress2.ref) {
                return bailoutOnAlreadyFinishedWork(current$$1, workInProgress2, renderExpirationTime2);
              }
            }
            workInProgress2.effectTag |= PerformedWork;
            var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime2);
            newChild.ref = workInProgress2.ref;
            newChild.return = workInProgress2;
            workInProgress2.child = newChild;
            return newChild;
          }
          function updateSimpleMemoComponent(current$$1, workInProgress2, Component, nextProps, updateExpirationTime, renderExpirationTime2) {
            {
              if (workInProgress2.type !== workInProgress2.elementType) {
                var outerMemoType = workInProgress2.elementType;
                if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                  outerMemoType = refineResolvedLazyComponent(outerMemoType);
                }
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) {
                  checkPropTypes(
                    outerPropTypes,
                    nextProps,
                    "prop",
                    getComponentName(outerMemoType),
                    getCurrentFiberStackInDev
                  );
                }
              }
            }
            if (current$$1 !== null) {
              var prevProps = current$$1.memoizedProps;
              if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress2.ref && workInProgress2.type === current$$1.type) {
                didReceiveUpdate = false;
                if (updateExpirationTime < renderExpirationTime2) {
                  return bailoutOnAlreadyFinishedWork(current$$1, workInProgress2, renderExpirationTime2);
                }
              }
            }
            return updateFunctionComponent(current$$1, workInProgress2, Component, nextProps, renderExpirationTime2);
          }
          function updateFragment(current$$1, workInProgress2, renderExpirationTime2) {
            var nextChildren = workInProgress2.pendingProps;
            reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
            return workInProgress2.child;
          }
          function updateMode(current$$1, workInProgress2, renderExpirationTime2) {
            var nextChildren = workInProgress2.pendingProps.children;
            reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
            return workInProgress2.child;
          }
          function updateProfiler(current$$1, workInProgress2, renderExpirationTime2) {
            if (enableProfilerTimer) {
              workInProgress2.effectTag |= Update;
            }
            var nextProps = workInProgress2.pendingProps;
            var nextChildren = nextProps.children;
            reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
            return workInProgress2.child;
          }
          function markRef(current$$1, workInProgress2) {
            var ref = workInProgress2.ref;
            if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {
              workInProgress2.effectTag |= Ref;
            }
          }
          function updateFunctionComponent(current$$1, workInProgress2, Component, nextProps, renderExpirationTime2) {
            {
              if (workInProgress2.type !== workInProgress2.elementType) {
                var innerPropTypes = Component.propTypes;
                if (innerPropTypes) {
                  checkPropTypes(
                    innerPropTypes,
                    nextProps,
                    "prop",
                    getComponentName(Component),
                    getCurrentFiberStackInDev
                  );
                }
              }
            }
            var context;
            if (!disableLegacyContext) {
              var unmaskedContext = getUnmaskedContext(workInProgress2, Component, true);
              context = getMaskedContext(workInProgress2, unmaskedContext);
            }
            var nextChildren;
            prepareToReadContext(workInProgress2, renderExpirationTime2);
            {
              ReactCurrentOwner$2.current = workInProgress2;
              setCurrentPhase("render");
              nextChildren = renderWithHooks(current$$1, workInProgress2, Component, nextProps, context, renderExpirationTime2);
              if (debugRenderPhaseSideEffectsForStrictMode && workInProgress2.mode & StrictMode) {
                if (workInProgress2.memoizedState !== null) {
                  nextChildren = renderWithHooks(current$$1, workInProgress2, Component, nextProps, context, renderExpirationTime2);
                }
              }
              setCurrentPhase(null);
            }
            if (current$$1 !== null && !didReceiveUpdate) {
              bailoutHooks(current$$1, workInProgress2, renderExpirationTime2);
              return bailoutOnAlreadyFinishedWork(current$$1, workInProgress2, renderExpirationTime2);
            }
            workInProgress2.effectTag |= PerformedWork;
            reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
            return workInProgress2.child;
          }
          function updateClassComponent(current$$1, workInProgress2, Component, nextProps, renderExpirationTime2) {
            {
              if (workInProgress2.type !== workInProgress2.elementType) {
                var innerPropTypes = Component.propTypes;
                if (innerPropTypes) {
                  checkPropTypes(
                    innerPropTypes,
                    nextProps,
                    "prop",
                    getComponentName(Component),
                    getCurrentFiberStackInDev
                  );
                }
              }
            }
            var hasContext;
            if (isContextProvider(Component)) {
              hasContext = true;
              pushContextProvider(workInProgress2);
            } else {
              hasContext = false;
            }
            prepareToReadContext(workInProgress2, renderExpirationTime2);
            var instance = workInProgress2.stateNode;
            var shouldUpdate;
            if (instance === null) {
              if (current$$1 !== null) {
                current$$1.alternate = null;
                workInProgress2.alternate = null;
                workInProgress2.effectTag |= Placement;
              }
              constructClassInstance(workInProgress2, Component, nextProps, renderExpirationTime2);
              mountClassInstance(workInProgress2, Component, nextProps, renderExpirationTime2);
              shouldUpdate = true;
            } else if (current$$1 === null) {
              shouldUpdate = resumeMountClassInstance(workInProgress2, Component, nextProps, renderExpirationTime2);
            } else {
              shouldUpdate = updateClassInstance(current$$1, workInProgress2, Component, nextProps, renderExpirationTime2);
            }
            var nextUnitOfWork = finishClassComponent(current$$1, workInProgress2, Component, shouldUpdate, hasContext, renderExpirationTime2);
            {
              var inst = workInProgress2.stateNode;
              if (inst.props !== nextProps) {
                !didWarnAboutReassigningProps ? warning$1(false, "It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentName(workInProgress2.type) || "a component") : void 0;
                didWarnAboutReassigningProps = true;
              }
            }
            return nextUnitOfWork;
          }
          function finishClassComponent(current$$1, workInProgress2, Component, shouldUpdate, hasContext, renderExpirationTime2) {
            markRef(current$$1, workInProgress2);
            var didCaptureError = (workInProgress2.effectTag & DidCapture) !== NoEffect;
            if (!shouldUpdate && !didCaptureError) {
              if (hasContext) {
                invalidateContextProvider(workInProgress2, Component, false);
              }
              return bailoutOnAlreadyFinishedWork(current$$1, workInProgress2, renderExpirationTime2);
            }
            var instance = workInProgress2.stateNode;
            ReactCurrentOwner$2.current = workInProgress2;
            var nextChildren;
            if (didCaptureError && typeof Component.getDerivedStateFromError !== "function") {
              nextChildren = null;
              if (enableProfilerTimer) {
                stopProfilerTimerIfRunning(workInProgress2);
              }
            } else {
              {
                setCurrentPhase("render");
                nextChildren = instance.render();
                if (debugRenderPhaseSideEffectsForStrictMode && workInProgress2.mode & StrictMode) {
                  instance.render();
                }
                setCurrentPhase(null);
              }
            }
            workInProgress2.effectTag |= PerformedWork;
            if (current$$1 !== null && didCaptureError) {
              forceUnmountCurrentAndReconcile(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
            } else {
              reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
            }
            workInProgress2.memoizedState = instance.state;
            if (hasContext) {
              invalidateContextProvider(workInProgress2, Component, true);
            }
            return workInProgress2.child;
          }
          function pushHostRootContext(workInProgress2) {
            var root = workInProgress2.stateNode;
            if (root.pendingContext) {
              pushTopLevelContextObject(workInProgress2, root.pendingContext, root.pendingContext !== root.context);
            } else if (root.context) {
              pushTopLevelContextObject(workInProgress2, root.context, false);
            }
            pushHostContainer(workInProgress2, root.containerInfo);
          }
          function updateHostRoot(current$$1, workInProgress2, renderExpirationTime2) {
            pushHostRootContext(workInProgress2);
            var updateQueue = workInProgress2.updateQueue;
            if (!(updateQueue !== null)) {
              {
                throw Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            var nextProps = workInProgress2.pendingProps;
            var prevState = workInProgress2.memoizedState;
            var prevChildren = prevState !== null ? prevState.element : null;
            processUpdateQueue(workInProgress2, updateQueue, nextProps, null, renderExpirationTime2);
            var nextState = workInProgress2.memoizedState;
            var nextChildren = nextState.element;
            if (nextChildren === prevChildren) {
              resetHydrationState();
              return bailoutOnAlreadyFinishedWork(current$$1, workInProgress2, renderExpirationTime2);
            }
            var root = workInProgress2.stateNode;
            if (root.hydrate && enterHydrationState(workInProgress2)) {
              var child = mountChildFibers(workInProgress2, null, nextChildren, renderExpirationTime2);
              workInProgress2.child = child;
              var node = child;
              while (node) {
                node.effectTag = node.effectTag & ~Placement | Hydrating;
                node = node.sibling;
              }
            } else {
              reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
              resetHydrationState();
            }
            return workInProgress2.child;
          }
          function updateHostComponent(current$$1, workInProgress2, renderExpirationTime2) {
            pushHostContext(workInProgress2);
            if (current$$1 === null) {
              tryToClaimNextHydratableInstance(workInProgress2);
            }
            var type2 = workInProgress2.type;
            var nextProps = workInProgress2.pendingProps;
            var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;
            var nextChildren = nextProps.children;
            var isDirectTextChild = shouldSetTextContent(type2, nextProps);
            if (isDirectTextChild) {
              nextChildren = null;
            } else if (prevProps !== null && shouldSetTextContent(type2, prevProps)) {
              workInProgress2.effectTag |= ContentReset;
            }
            markRef(current$$1, workInProgress2);
            if (workInProgress2.mode & ConcurrentMode && renderExpirationTime2 !== Never && shouldDeprioritizeSubtree(type2, nextProps)) {
              if (enableSchedulerTracing) {
                markSpawnedWork(Never);
              }
              workInProgress2.expirationTime = workInProgress2.childExpirationTime = Never;
              return null;
            }
            reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
            return workInProgress2.child;
          }
          function updateHostText(current$$1, workInProgress2) {
            if (current$$1 === null) {
              tryToClaimNextHydratableInstance(workInProgress2);
            }
            return null;
          }
          function mountLazyComponent(_current, workInProgress2, elementType, updateExpirationTime, renderExpirationTime2) {
            if (_current !== null) {
              _current.alternate = null;
              workInProgress2.alternate = null;
              workInProgress2.effectTag |= Placement;
            }
            var props = workInProgress2.pendingProps;
            cancelWorkTimer(workInProgress2);
            var Component = readLazyComponentType(elementType);
            workInProgress2.type = Component;
            var resolvedTag = workInProgress2.tag = resolveLazyComponentTag(Component);
            startWorkTimer(workInProgress2);
            var resolvedProps = resolveDefaultProps(Component, props);
            var child;
            switch (resolvedTag) {
              case FunctionComponent: {
                {
                  validateFunctionComponentInDev(workInProgress2, Component);
                  workInProgress2.type = Component = resolveFunctionForHotReloading(Component);
                }
                child = updateFunctionComponent(null, workInProgress2, Component, resolvedProps, renderExpirationTime2);
                break;
              }
              case ClassComponent: {
                {
                  workInProgress2.type = Component = resolveClassForHotReloading(Component);
                }
                child = updateClassComponent(null, workInProgress2, Component, resolvedProps, renderExpirationTime2);
                break;
              }
              case ForwardRef: {
                {
                  workInProgress2.type = Component = resolveForwardRefForHotReloading(Component);
                }
                child = updateForwardRef(null, workInProgress2, Component, resolvedProps, renderExpirationTime2);
                break;
              }
              case MemoComponent: {
                {
                  if (workInProgress2.type !== workInProgress2.elementType) {
                    var outerPropTypes = Component.propTypes;
                    if (outerPropTypes) {
                      checkPropTypes(
                        outerPropTypes,
                        resolvedProps,
                        "prop",
                        getComponentName(Component),
                        getCurrentFiberStackInDev
                      );
                    }
                  }
                }
                child = updateMemoComponent(
                  null,
                  workInProgress2,
                  Component,
                  resolveDefaultProps(Component.type, resolvedProps),
                  updateExpirationTime,
                  renderExpirationTime2
                );
                break;
              }
              default: {
                var hint = "";
                {
                  if (Component !== null && typeof Component === "object" && Component.$$typeof === REACT_LAZY_TYPE) {
                    hint = " Did you wrap a component in React.lazy() more than once?";
                  }
                }
                {
                  {
                    throw Error("Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint);
                  }
                }
              }
            }
            return child;
          }
          function mountIncompleteClassComponent(_current, workInProgress2, Component, nextProps, renderExpirationTime2) {
            if (_current !== null) {
              _current.alternate = null;
              workInProgress2.alternate = null;
              workInProgress2.effectTag |= Placement;
            }
            workInProgress2.tag = ClassComponent;
            var hasContext;
            if (isContextProvider(Component)) {
              hasContext = true;
              pushContextProvider(workInProgress2);
            } else {
              hasContext = false;
            }
            prepareToReadContext(workInProgress2, renderExpirationTime2);
            constructClassInstance(workInProgress2, Component, nextProps, renderExpirationTime2);
            mountClassInstance(workInProgress2, Component, nextProps, renderExpirationTime2);
            return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderExpirationTime2);
          }
          function mountIndeterminateComponent(_current, workInProgress2, Component, renderExpirationTime2) {
            if (_current !== null) {
              _current.alternate = null;
              workInProgress2.alternate = null;
              workInProgress2.effectTag |= Placement;
            }
            var props = workInProgress2.pendingProps;
            var context;
            if (!disableLegacyContext) {
              var unmaskedContext = getUnmaskedContext(workInProgress2, Component, false);
              context = getMaskedContext(workInProgress2, unmaskedContext);
            }
            prepareToReadContext(workInProgress2, renderExpirationTime2);
            var value;
            {
              if (Component.prototype && typeof Component.prototype.render === "function") {
                var componentName = getComponentName(Component) || "Unknown";
                if (!didWarnAboutBadClass[componentName]) {
                  warningWithoutStack$1(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                  didWarnAboutBadClass[componentName] = true;
                }
              }
              if (workInProgress2.mode & StrictMode) {
                ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, null);
              }
              ReactCurrentOwner$2.current = workInProgress2;
              value = renderWithHooks(null, workInProgress2, Component, props, context, renderExpirationTime2);
            }
            workInProgress2.effectTag |= PerformedWork;
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              {
                var _componentName = getComponentName(Component) || "Unknown";
                if (!didWarnAboutModulePatternComponent[_componentName]) {
                  warningWithoutStack$1(false, "The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                  didWarnAboutModulePatternComponent[_componentName] = true;
                }
              }
              workInProgress2.tag = ClassComponent;
              resetHooks();
              var hasContext = false;
              if (isContextProvider(Component)) {
                hasContext = true;
                pushContextProvider(workInProgress2);
              } else {
                hasContext = false;
              }
              workInProgress2.memoizedState = value.state !== null && value.state !== void 0 ? value.state : null;
              var getDerivedStateFromProps = Component.getDerivedStateFromProps;
              if (typeof getDerivedStateFromProps === "function") {
                applyDerivedStateFromProps(workInProgress2, Component, getDerivedStateFromProps, props);
              }
              adoptClassInstance(workInProgress2, value);
              mountClassInstance(workInProgress2, Component, props, renderExpirationTime2);
              return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderExpirationTime2);
            } else {
              workInProgress2.tag = FunctionComponent;
              {
                if (disableLegacyContext && Component.contextTypes) {
                  warningWithoutStack$1(false, "%s uses the legacy contextTypes API which is no longer supported. Use React.createContext() with React.useContext() instead.", getComponentName(Component) || "Unknown");
                }
                if (debugRenderPhaseSideEffectsForStrictMode && workInProgress2.mode & StrictMode) {
                  if (workInProgress2.memoizedState !== null) {
                    value = renderWithHooks(null, workInProgress2, Component, props, context, renderExpirationTime2);
                  }
                }
              }
              reconcileChildren(null, workInProgress2, value, renderExpirationTime2);
              {
                validateFunctionComponentInDev(workInProgress2, Component);
              }
              return workInProgress2.child;
            }
          }
          function validateFunctionComponentInDev(workInProgress2, Component) {
            if (Component) {
              !!Component.childContextTypes ? warningWithoutStack$1(false, "%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component") : void 0;
            }
            if (workInProgress2.ref !== null) {
              var info = "";
              var ownerName = getCurrentFiberOwnerNameInDevOrNull();
              if (ownerName) {
                info += "\n\nCheck the render method of `" + ownerName + "`.";
              }
              var warningKey = ownerName || workInProgress2._debugID || "";
              var debugSource = workInProgress2._debugSource;
              if (debugSource) {
                warningKey = debugSource.fileName + ":" + debugSource.lineNumber;
              }
              if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                warning$1(false, "Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
              }
            }
            if (warnAboutDefaultPropsOnFunctionComponents && Component.defaultProps !== void 0) {
              var componentName = getComponentName(Component) || "Unknown";
              if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
                warningWithoutStack$1(false, "%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.", componentName);
                didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
              }
            }
            if (typeof Component.getDerivedStateFromProps === "function") {
              var _componentName2 = getComponentName(Component) || "Unknown";
              if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName2]) {
                warningWithoutStack$1(false, "%s: Function components do not support getDerivedStateFromProps.", _componentName2);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName2] = true;
              }
            }
            if (typeof Component.contextType === "object" && Component.contextType !== null) {
              var _componentName3 = getComponentName(Component) || "Unknown";
              if (!didWarnAboutContextTypeOnFunctionComponent[_componentName3]) {
                warningWithoutStack$1(false, "%s: Function components do not support contextType.", _componentName3);
                didWarnAboutContextTypeOnFunctionComponent[_componentName3] = true;
              }
            }
          }
          var SUSPENDED_MARKER = {
            dehydrated: null,
            retryTime: NoWork
          };
          function shouldRemainOnFallback(suspenseContext, current$$1, workInProgress2) {
            return hasSuspenseContext(suspenseContext, ForceSuspenseFallback) && (current$$1 === null || current$$1.memoizedState !== null);
          }
          function updateSuspenseComponent(current$$1, workInProgress2, renderExpirationTime2) {
            var mode = workInProgress2.mode;
            var nextProps = workInProgress2.pendingProps;
            {
              if (shouldSuspend(workInProgress2)) {
                workInProgress2.effectTag |= DidCapture;
              }
            }
            var suspenseContext = suspenseStackCursor.current;
            var nextDidTimeout = false;
            var didSuspend = (workInProgress2.effectTag & DidCapture) !== NoEffect;
            if (didSuspend || shouldRemainOnFallback(suspenseContext, current$$1, workInProgress2)) {
              nextDidTimeout = true;
              workInProgress2.effectTag &= ~DidCapture;
            } else {
              if (current$$1 === null || current$$1.memoizedState !== null) {
                if (nextProps.fallback !== void 0 && nextProps.unstable_avoidThisFallback !== true) {
                  suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
                }
              }
            }
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
            pushSuspenseContext(workInProgress2, suspenseContext);
            {
              if ("maxDuration" in nextProps) {
                if (!didWarnAboutMaxDuration) {
                  didWarnAboutMaxDuration = true;
                  warning$1(false, "maxDuration has been removed from React. Remove the maxDuration prop.");
                }
              }
            }
            if (current$$1 === null) {
              if (nextProps.fallback !== void 0) {
                tryToClaimNextHydratableInstance(workInProgress2);
                if (enableSuspenseServerRenderer) {
                  var suspenseState = workInProgress2.memoizedState;
                  if (suspenseState !== null) {
                    var dehydrated = suspenseState.dehydrated;
                    if (dehydrated !== null) {
                      return mountDehydratedSuspenseComponent(workInProgress2, dehydrated, renderExpirationTime2);
                    }
                  }
                }
              }
              if (nextDidTimeout) {
                var nextFallbackChildren = nextProps.fallback;
                var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);
                primaryChildFragment.return = workInProgress2;
                if ((workInProgress2.mode & BlockingMode) === NoMode) {
                  var progressedState = workInProgress2.memoizedState;
                  var progressedPrimaryChild = progressedState !== null ? workInProgress2.child.child : workInProgress2.child;
                  primaryChildFragment.child = progressedPrimaryChild;
                  var progressedChild = progressedPrimaryChild;
                  while (progressedChild !== null) {
                    progressedChild.return = primaryChildFragment;
                    progressedChild = progressedChild.sibling;
                  }
                }
                var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime2, null);
                fallbackChildFragment.return = workInProgress2;
                primaryChildFragment.sibling = fallbackChildFragment;
                workInProgress2.memoizedState = SUSPENDED_MARKER;
                workInProgress2.child = primaryChildFragment;
                return fallbackChildFragment;
              } else {
                var nextPrimaryChildren = nextProps.children;
                workInProgress2.memoizedState = null;
                return workInProgress2.child = mountChildFibers(workInProgress2, null, nextPrimaryChildren, renderExpirationTime2);
              }
            } else {
              var prevState = current$$1.memoizedState;
              if (prevState !== null) {
                if (enableSuspenseServerRenderer) {
                  var _dehydrated = prevState.dehydrated;
                  if (_dehydrated !== null) {
                    if (!didSuspend) {
                      return updateDehydratedSuspenseComponent(current$$1, workInProgress2, _dehydrated, prevState, renderExpirationTime2);
                    } else if (workInProgress2.memoizedState !== null) {
                      workInProgress2.child = current$$1.child;
                      workInProgress2.effectTag |= DidCapture;
                      return null;
                    } else {
                      var _nextFallbackChildren = nextProps.fallback;
                      var _primaryChildFragment = createFiberFromFragment(
                        null,
                        mode,
                        NoWork,
                        null
                      );
                      _primaryChildFragment.return = workInProgress2;
                      _primaryChildFragment.child = null;
                      if ((workInProgress2.mode & BlockingMode) === NoMode) {
                        var _progressedChild = _primaryChildFragment.child = workInProgress2.child;
                        while (_progressedChild !== null) {
                          _progressedChild.return = _primaryChildFragment;
                          _progressedChild = _progressedChild.sibling;
                        }
                      } else {
                        reconcileChildFibers(workInProgress2, current$$1.child, null, renderExpirationTime2);
                      }
                      if (enableProfilerTimer && workInProgress2.mode & ProfileMode) {
                        var treeBaseDuration = 0;
                        var hiddenChild = _primaryChildFragment.child;
                        while (hiddenChild !== null) {
                          treeBaseDuration += hiddenChild.treeBaseDuration;
                          hiddenChild = hiddenChild.sibling;
                        }
                        _primaryChildFragment.treeBaseDuration = treeBaseDuration;
                      }
                      var _fallbackChildFragment = createFiberFromFragment(_nextFallbackChildren, mode, renderExpirationTime2, null);
                      _fallbackChildFragment.return = workInProgress2;
                      _primaryChildFragment.sibling = _fallbackChildFragment;
                      _fallbackChildFragment.effectTag |= Placement;
                      _primaryChildFragment.childExpirationTime = NoWork;
                      workInProgress2.memoizedState = SUSPENDED_MARKER;
                      workInProgress2.child = _primaryChildFragment;
                      return _fallbackChildFragment;
                    }
                  }
                }
                var currentPrimaryChildFragment = current$$1.child;
                var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
                if (nextDidTimeout) {
                  var _nextFallbackChildren2 = nextProps.fallback;
                  var _primaryChildFragment2 = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);
                  _primaryChildFragment2.return = workInProgress2;
                  if ((workInProgress2.mode & BlockingMode) === NoMode) {
                    var _progressedState = workInProgress2.memoizedState;
                    var _progressedPrimaryChild = _progressedState !== null ? workInProgress2.child.child : workInProgress2.child;
                    if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {
                      _primaryChildFragment2.child = _progressedPrimaryChild;
                      var _progressedChild2 = _progressedPrimaryChild;
                      while (_progressedChild2 !== null) {
                        _progressedChild2.return = _primaryChildFragment2;
                        _progressedChild2 = _progressedChild2.sibling;
                      }
                    }
                  }
                  if (enableProfilerTimer && workInProgress2.mode & ProfileMode) {
                    var _treeBaseDuration = 0;
                    var _hiddenChild = _primaryChildFragment2.child;
                    while (_hiddenChild !== null) {
                      _treeBaseDuration += _hiddenChild.treeBaseDuration;
                      _hiddenChild = _hiddenChild.sibling;
                    }
                    _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;
                  }
                  var _fallbackChildFragment2 = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren2, currentFallbackChildFragment.expirationTime);
                  _fallbackChildFragment2.return = workInProgress2;
                  _primaryChildFragment2.sibling = _fallbackChildFragment2;
                  _primaryChildFragment2.childExpirationTime = NoWork;
                  workInProgress2.memoizedState = SUSPENDED_MARKER;
                  workInProgress2.child = _primaryChildFragment2;
                  return _fallbackChildFragment2;
                } else {
                  var _nextPrimaryChildren = nextProps.children;
                  var currentPrimaryChild = currentPrimaryChildFragment.child;
                  var primaryChild = reconcileChildFibers(workInProgress2, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime2);
                  workInProgress2.memoizedState = null;
                  return workInProgress2.child = primaryChild;
                }
              } else {
                var _currentPrimaryChild = current$$1.child;
                if (nextDidTimeout) {
                  var _nextFallbackChildren3 = nextProps.fallback;
                  var _primaryChildFragment3 = createFiberFromFragment(
                    null,
                    mode,
                    NoWork,
                    null
                  );
                  _primaryChildFragment3.return = workInProgress2;
                  _primaryChildFragment3.child = _currentPrimaryChild;
                  if (_currentPrimaryChild !== null) {
                    _currentPrimaryChild.return = _primaryChildFragment3;
                  }
                  if ((workInProgress2.mode & BlockingMode) === NoMode) {
                    var _progressedState2 = workInProgress2.memoizedState;
                    var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress2.child.child : workInProgress2.child;
                    _primaryChildFragment3.child = _progressedPrimaryChild2;
                    var _progressedChild3 = _progressedPrimaryChild2;
                    while (_progressedChild3 !== null) {
                      _progressedChild3.return = _primaryChildFragment3;
                      _progressedChild3 = _progressedChild3.sibling;
                    }
                  }
                  if (enableProfilerTimer && workInProgress2.mode & ProfileMode) {
                    var _treeBaseDuration2 = 0;
                    var _hiddenChild2 = _primaryChildFragment3.child;
                    while (_hiddenChild2 !== null) {
                      _treeBaseDuration2 += _hiddenChild2.treeBaseDuration;
                      _hiddenChild2 = _hiddenChild2.sibling;
                    }
                    _primaryChildFragment3.treeBaseDuration = _treeBaseDuration2;
                  }
                  var _fallbackChildFragment3 = createFiberFromFragment(_nextFallbackChildren3, mode, renderExpirationTime2, null);
                  _fallbackChildFragment3.return = workInProgress2;
                  _primaryChildFragment3.sibling = _fallbackChildFragment3;
                  _fallbackChildFragment3.effectTag |= Placement;
                  _primaryChildFragment3.childExpirationTime = NoWork;
                  workInProgress2.memoizedState = SUSPENDED_MARKER;
                  workInProgress2.child = _primaryChildFragment3;
                  return _fallbackChildFragment3;
                } else {
                  workInProgress2.memoizedState = null;
                  var _nextPrimaryChildren2 = nextProps.children;
                  return workInProgress2.child = reconcileChildFibers(workInProgress2, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime2);
                }
              }
            }
          }
          function retrySuspenseComponentWithoutHydrating(current$$1, workInProgress2, renderExpirationTime2) {
            workInProgress2.memoizedState = null;
            var nextProps = workInProgress2.pendingProps;
            var nextChildren = nextProps.children;
            reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
            return workInProgress2.child;
          }
          function mountDehydratedSuspenseComponent(workInProgress2, suspenseInstance, renderExpirationTime2) {
            if ((workInProgress2.mode & BlockingMode) === NoMode) {
              {
                warning$1(false, "Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOM.createBlockingRoot(container, { hydrate: true }).render(element) or remove the Suspense components from the server rendered components.");
              }
              workInProgress2.expirationTime = Sync;
            } else if (isSuspenseInstanceFallback(suspenseInstance)) {
              var serverDisplayTime = requestCurrentTimeForUpdate();
              var newExpirationTime = computeAsyncExpiration(serverDisplayTime);
              if (enableSchedulerTracing) {
                markSpawnedWork(newExpirationTime);
              }
              workInProgress2.expirationTime = newExpirationTime;
            } else {
              workInProgress2.expirationTime = Never;
              if (enableSchedulerTracing) {
                markSpawnedWork(Never);
              }
            }
            return null;
          }
          function updateDehydratedSuspenseComponent(current$$1, workInProgress2, suspenseInstance, suspenseState, renderExpirationTime2) {
            warnIfHydrating();
            if ((workInProgress2.mode & BlockingMode) === NoMode) {
              return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress2, renderExpirationTime2);
            }
            if (isSuspenseInstanceFallback(suspenseInstance)) {
              return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress2, renderExpirationTime2);
            }
            var hasContextChanged$$1 = current$$1.childExpirationTime >= renderExpirationTime2;
            if (didReceiveUpdate || hasContextChanged$$1) {
              if (renderExpirationTime2 < Sync) {
                if (suspenseState.retryTime <= renderExpirationTime2) {
                  var attemptHydrationAtExpirationTime = renderExpirationTime2 + 1;
                  suspenseState.retryTime = attemptHydrationAtExpirationTime;
                  scheduleWork(current$$1, attemptHydrationAtExpirationTime);
                } else {
                }
              }
              renderDidSuspendDelayIfPossible();
              return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress2, renderExpirationTime2);
            } else if (isSuspenseInstancePending(suspenseInstance)) {
              workInProgress2.effectTag |= DidCapture;
              workInProgress2.child = current$$1.child;
              registerSuspenseInstanceRetry(suspenseInstance, retryDehydratedSuspenseBoundary.bind(null, current$$1));
              return null;
            } else {
              reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress2, suspenseInstance);
              var nextProps = workInProgress2.pendingProps;
              var nextChildren = nextProps.children;
              var child = mountChildFibers(workInProgress2, null, nextChildren, renderExpirationTime2);
              var node = child;
              while (node) {
                node.effectTag |= Hydrating;
                node = node.sibling;
              }
              workInProgress2.child = child;
              return workInProgress2.child;
            }
          }
          function scheduleWorkOnFiber(fiber, renderExpirationTime2) {
            if (fiber.expirationTime < renderExpirationTime2) {
              fiber.expirationTime = renderExpirationTime2;
            }
            var alternate = fiber.alternate;
            if (alternate !== null && alternate.expirationTime < renderExpirationTime2) {
              alternate.expirationTime = renderExpirationTime2;
            }
            scheduleWorkOnParentPath(fiber.return, renderExpirationTime2);
          }
          function propagateSuspenseContextChange(workInProgress2, firstChild, renderExpirationTime2) {
            var node = firstChild;
            while (node !== null) {
              if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                  scheduleWorkOnFiber(node, renderExpirationTime2);
                }
              } else if (node.tag === SuspenseListComponent) {
                scheduleWorkOnFiber(node, renderExpirationTime2);
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === workInProgress2) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === workInProgress2) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
          function findLastContentRow(firstChild) {
            var row = firstChild;
            var lastContentRow = null;
            while (row !== null) {
              var currentRow = row.alternate;
              if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                lastContentRow = row;
              }
              row = row.sibling;
            }
            return lastContentRow;
          }
          function validateRevealOrder(revealOrder) {
            {
              if (revealOrder !== void 0 && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder]) {
                didWarnAboutRevealOrder[revealOrder] = true;
                if (typeof revealOrder === "string") {
                  switch (revealOrder.toLowerCase()) {
                    case "together":
                    case "forwards":
                    case "backwards": {
                      warning$1(false, '"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                      break;
                    }
                    case "forward":
                    case "backward": {
                      warning$1(false, '"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                      break;
                    }
                    default:
                      warning$1(false, '"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                      break;
                  }
                } else {
                  warning$1(false, '%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                }
              }
            }
          }
          function validateTailOptions(tailMode, revealOrder) {
            {
              if (tailMode !== void 0 && !didWarnAboutTailOptions[tailMode]) {
                if (tailMode !== "collapsed" && tailMode !== "hidden") {
                  didWarnAboutTailOptions[tailMode] = true;
                  warning$1(false, '"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
                } else if (revealOrder !== "forwards" && revealOrder !== "backwards") {
                  didWarnAboutTailOptions[tailMode] = true;
                  warning$1(false, '<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
                }
              }
            }
          }
          function validateSuspenseListNestedChild(childSlot, index2) {
            {
              var isArray2 = Array.isArray(childSlot);
              var isIterable = !isArray2 && typeof getIteratorFn(childSlot) === "function";
              if (isArray2 || isIterable) {
                var type2 = isArray2 ? "array" : "iterable";
                warning$1(false, "A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type2, index2, type2);
                return false;
              }
            }
            return true;
          }
          function validateSuspenseListChildren(children, revealOrder) {
            {
              if ((revealOrder === "forwards" || revealOrder === "backwards") && children !== void 0 && children !== null && children !== false) {
                if (Array.isArray(children)) {
                  for (var i2 = 0; i2 < children.length; i2++) {
                    if (!validateSuspenseListNestedChild(children[i2], i2)) {
                      return;
                    }
                  }
                } else {
                  var iteratorFn = getIteratorFn(children);
                  if (typeof iteratorFn === "function") {
                    var childrenIterator = iteratorFn.call(children);
                    if (childrenIterator) {
                      var step = childrenIterator.next();
                      var _i = 0;
                      for (; !step.done; step = childrenIterator.next()) {
                        if (!validateSuspenseListNestedChild(step.value, _i)) {
                          return;
                        }
                        _i++;
                      }
                    }
                  } else {
                    warning$1(false, 'A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
                  }
                }
              }
            }
          }
          function initSuspenseListRenderState(workInProgress2, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {
            var renderState = workInProgress2.memoizedState;
            if (renderState === null) {
              workInProgress2.memoizedState = {
                isBackwards,
                rendering: null,
                last: lastContentRow,
                tail,
                tailExpiration: 0,
                tailMode,
                lastEffect: lastEffectBeforeRendering
              };
            } else {
              renderState.isBackwards = isBackwards;
              renderState.rendering = null;
              renderState.last = lastContentRow;
              renderState.tail = tail;
              renderState.tailExpiration = 0;
              renderState.tailMode = tailMode;
              renderState.lastEffect = lastEffectBeforeRendering;
            }
          }
          function updateSuspenseListComponent(current$$1, workInProgress2, renderExpirationTime2) {
            var nextProps = workInProgress2.pendingProps;
            var revealOrder = nextProps.revealOrder;
            var tailMode = nextProps.tail;
            var newChildren = nextProps.children;
            validateRevealOrder(revealOrder);
            validateTailOptions(tailMode, revealOrder);
            validateSuspenseListChildren(newChildren, revealOrder);
            reconcileChildren(current$$1, workInProgress2, newChildren, renderExpirationTime2);
            var suspenseContext = suspenseStackCursor.current;
            var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
            if (shouldForceFallback) {
              suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
              workInProgress2.effectTag |= DidCapture;
            } else {
              var didSuspendBefore = current$$1 !== null && (current$$1.effectTag & DidCapture) !== NoEffect;
              if (didSuspendBefore) {
                propagateSuspenseContextChange(workInProgress2, workInProgress2.child, renderExpirationTime2);
              }
              suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
            }
            pushSuspenseContext(workInProgress2, suspenseContext);
            if ((workInProgress2.mode & BlockingMode) === NoMode) {
              workInProgress2.memoizedState = null;
            } else {
              switch (revealOrder) {
                case "forwards": {
                  var lastContentRow = findLastContentRow(workInProgress2.child);
                  var tail;
                  if (lastContentRow === null) {
                    tail = workInProgress2.child;
                    workInProgress2.child = null;
                  } else {
                    tail = lastContentRow.sibling;
                    lastContentRow.sibling = null;
                  }
                  initSuspenseListRenderState(
                    workInProgress2,
                    false,
                    tail,
                    lastContentRow,
                    tailMode,
                    workInProgress2.lastEffect
                  );
                  break;
                }
                case "backwards": {
                  var _tail = null;
                  var row = workInProgress2.child;
                  workInProgress2.child = null;
                  while (row !== null) {
                    var currentRow = row.alternate;
                    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                      workInProgress2.child = row;
                      break;
                    }
                    var nextRow = row.sibling;
                    row.sibling = _tail;
                    _tail = row;
                    row = nextRow;
                  }
                  initSuspenseListRenderState(
                    workInProgress2,
                    true,
                    _tail,
                    null,
                    tailMode,
                    workInProgress2.lastEffect
                  );
                  break;
                }
                case "together": {
                  initSuspenseListRenderState(
                    workInProgress2,
                    false,
                    null,
                    null,
                    void 0,
                    workInProgress2.lastEffect
                  );
                  break;
                }
                default: {
                  workInProgress2.memoizedState = null;
                }
              }
            }
            return workInProgress2.child;
          }
          function updatePortalComponent(current$$1, workInProgress2, renderExpirationTime2) {
            pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
            var nextChildren = workInProgress2.pendingProps;
            if (current$$1 === null) {
              workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderExpirationTime2);
            } else {
              reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
            }
            return workInProgress2.child;
          }
          function updateContextProvider(current$$1, workInProgress2, renderExpirationTime2) {
            var providerType = workInProgress2.type;
            var context = providerType._context;
            var newProps = workInProgress2.pendingProps;
            var oldProps = workInProgress2.memoizedProps;
            var newValue = newProps.value;
            {
              var providerPropTypes = workInProgress2.type.propTypes;
              if (providerPropTypes) {
                checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider", getCurrentFiberStackInDev);
              }
            }
            pushProvider(workInProgress2, newValue);
            if (oldProps !== null) {
              var oldValue = oldProps.value;
              var changedBits = calculateChangedBits(context, newValue, oldValue);
              if (changedBits === 0) {
                if (oldProps.children === newProps.children && !hasContextChanged()) {
                  return bailoutOnAlreadyFinishedWork(current$$1, workInProgress2, renderExpirationTime2);
                }
              } else {
                propagateContextChange(workInProgress2, context, changedBits, renderExpirationTime2);
              }
            }
            var newChildren = newProps.children;
            reconcileChildren(current$$1, workInProgress2, newChildren, renderExpirationTime2);
            return workInProgress2.child;
          }
          var hasWarnedAboutUsingContextAsConsumer = false;
          function updateContextConsumer(current$$1, workInProgress2, renderExpirationTime2) {
            var context = workInProgress2.type;
            {
              if (context._context === void 0) {
                if (context !== context.Consumer) {
                  if (!hasWarnedAboutUsingContextAsConsumer) {
                    hasWarnedAboutUsingContextAsConsumer = true;
                    warning$1(false, "Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                  }
                }
              } else {
                context = context._context;
              }
            }
            var newProps = workInProgress2.pendingProps;
            var render2 = newProps.children;
            {
              !(typeof render2 === "function") ? warningWithoutStack$1(false, "A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.") : void 0;
            }
            prepareToReadContext(workInProgress2, renderExpirationTime2);
            var newValue = readContext(context, newProps.unstable_observedBits);
            var newChildren;
            {
              ReactCurrentOwner$2.current = workInProgress2;
              setCurrentPhase("render");
              newChildren = render2(newValue);
              setCurrentPhase(null);
            }
            workInProgress2.effectTag |= PerformedWork;
            reconcileChildren(current$$1, workInProgress2, newChildren, renderExpirationTime2);
            return workInProgress2.child;
          }
          function updateFundamentalComponent$1(current$$1, workInProgress2, renderExpirationTime2) {
            var fundamentalImpl = workInProgress2.type.impl;
            if (fundamentalImpl.reconcileChildren === false) {
              return null;
            }
            var nextProps = workInProgress2.pendingProps;
            var nextChildren = nextProps.children;
            reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
            return workInProgress2.child;
          }
          function updateScopeComponent(current$$1, workInProgress2, renderExpirationTime2) {
            var nextProps = workInProgress2.pendingProps;
            var nextChildren = nextProps.children;
            reconcileChildren(current$$1, workInProgress2, nextChildren, renderExpirationTime2);
            return workInProgress2.child;
          }
          function markWorkInProgressReceivedUpdate() {
            didReceiveUpdate = true;
          }
          function bailoutOnAlreadyFinishedWork(current$$1, workInProgress2, renderExpirationTime2) {
            cancelWorkTimer(workInProgress2);
            if (current$$1 !== null) {
              workInProgress2.dependencies = current$$1.dependencies;
            }
            if (enableProfilerTimer) {
              stopProfilerTimerIfRunning(workInProgress2);
            }
            var updateExpirationTime = workInProgress2.expirationTime;
            if (updateExpirationTime !== NoWork) {
              markUnprocessedUpdateTime(updateExpirationTime);
            }
            var childExpirationTime = workInProgress2.childExpirationTime;
            if (childExpirationTime < renderExpirationTime2) {
              return null;
            } else {
              cloneChildFibers(current$$1, workInProgress2);
              return workInProgress2.child;
            }
          }
          function remountFiber(current$$1, oldWorkInProgress, newWorkInProgress) {
            {
              var returnFiber = oldWorkInProgress.return;
              if (returnFiber === null) {
                throw new Error("Cannot swap the root fiber.");
              }
              current$$1.alternate = null;
              oldWorkInProgress.alternate = null;
              newWorkInProgress.index = oldWorkInProgress.index;
              newWorkInProgress.sibling = oldWorkInProgress.sibling;
              newWorkInProgress.return = oldWorkInProgress.return;
              newWorkInProgress.ref = oldWorkInProgress.ref;
              if (oldWorkInProgress === returnFiber.child) {
                returnFiber.child = newWorkInProgress;
              } else {
                var prevSibling = returnFiber.child;
                if (prevSibling === null) {
                  throw new Error("Expected parent to have a child.");
                }
                while (prevSibling.sibling !== oldWorkInProgress) {
                  prevSibling = prevSibling.sibling;
                  if (prevSibling === null) {
                    throw new Error("Expected to find the previous sibling.");
                  }
                }
                prevSibling.sibling = newWorkInProgress;
              }
              var last = returnFiber.lastEffect;
              if (last !== null) {
                last.nextEffect = current$$1;
                returnFiber.lastEffect = current$$1;
              } else {
                returnFiber.firstEffect = returnFiber.lastEffect = current$$1;
              }
              current$$1.nextEffect = null;
              current$$1.effectTag = Deletion;
              newWorkInProgress.effectTag |= Placement;
              return newWorkInProgress;
            }
          }
          function beginWork$1(current$$1, workInProgress2, renderExpirationTime2) {
            var updateExpirationTime = workInProgress2.expirationTime;
            {
              if (workInProgress2._debugNeedsRemount && current$$1 !== null) {
                return remountFiber(current$$1, workInProgress2, createFiberFromTypeAndProps(workInProgress2.type, workInProgress2.key, workInProgress2.pendingProps, workInProgress2._debugOwner || null, workInProgress2.mode, workInProgress2.expirationTime));
              }
            }
            if (current$$1 !== null) {
              var oldProps = current$$1.memoizedProps;
              var newProps = workInProgress2.pendingProps;
              if (oldProps !== newProps || hasContextChanged() || workInProgress2.type !== current$$1.type) {
                didReceiveUpdate = true;
              } else if (updateExpirationTime < renderExpirationTime2) {
                didReceiveUpdate = false;
                switch (workInProgress2.tag) {
                  case HostRoot:
                    pushHostRootContext(workInProgress2);
                    resetHydrationState();
                    break;
                  case HostComponent:
                    pushHostContext(workInProgress2);
                    if (workInProgress2.mode & ConcurrentMode && renderExpirationTime2 !== Never && shouldDeprioritizeSubtree(workInProgress2.type, newProps)) {
                      if (enableSchedulerTracing) {
                        markSpawnedWork(Never);
                      }
                      workInProgress2.expirationTime = workInProgress2.childExpirationTime = Never;
                      return null;
                    }
                    break;
                  case ClassComponent: {
                    var Component = workInProgress2.type;
                    if (isContextProvider(Component)) {
                      pushContextProvider(workInProgress2);
                    }
                    break;
                  }
                  case HostPortal:
                    pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
                    break;
                  case ContextProvider: {
                    var newValue = workInProgress2.memoizedProps.value;
                    pushProvider(workInProgress2, newValue);
                    break;
                  }
                  case Profiler:
                    if (enableProfilerTimer) {
                      var hasChildWork = workInProgress2.childExpirationTime >= renderExpirationTime2;
                      if (hasChildWork) {
                        workInProgress2.effectTag |= Update;
                      }
                    }
                    break;
                  case SuspenseComponent: {
                    var state = workInProgress2.memoizedState;
                    if (state !== null) {
                      if (enableSuspenseServerRenderer) {
                        if (state.dehydrated !== null) {
                          pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                          workInProgress2.effectTag |= DidCapture;
                          break;
                        }
                      }
                      var primaryChildFragment = workInProgress2.child;
                      var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;
                      if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime2) {
                        return updateSuspenseComponent(current$$1, workInProgress2, renderExpirationTime2);
                      } else {
                        pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                        var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress2, renderExpirationTime2);
                        if (child !== null) {
                          return child.sibling;
                        } else {
                          return null;
                        }
                      }
                    } else {
                      pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                    }
                    break;
                  }
                  case SuspenseListComponent: {
                    var didSuspendBefore = (current$$1.effectTag & DidCapture) !== NoEffect;
                    var _hasChildWork = workInProgress2.childExpirationTime >= renderExpirationTime2;
                    if (didSuspendBefore) {
                      if (_hasChildWork) {
                        return updateSuspenseListComponent(current$$1, workInProgress2, renderExpirationTime2);
                      }
                      workInProgress2.effectTag |= DidCapture;
                    }
                    var renderState = workInProgress2.memoizedState;
                    if (renderState !== null) {
                      renderState.rendering = null;
                      renderState.tail = null;
                    }
                    pushSuspenseContext(workInProgress2, suspenseStackCursor.current);
                    if (_hasChildWork) {
                      break;
                    } else {
                      return null;
                    }
                  }
                }
                return bailoutOnAlreadyFinishedWork(current$$1, workInProgress2, renderExpirationTime2);
              } else {
                didReceiveUpdate = false;
              }
            } else {
              didReceiveUpdate = false;
            }
            workInProgress2.expirationTime = NoWork;
            switch (workInProgress2.tag) {
              case IndeterminateComponent: {
                return mountIndeterminateComponent(current$$1, workInProgress2, workInProgress2.type, renderExpirationTime2);
              }
              case LazyComponent: {
                var elementType = workInProgress2.elementType;
                return mountLazyComponent(current$$1, workInProgress2, elementType, updateExpirationTime, renderExpirationTime2);
              }
              case FunctionComponent: {
                var _Component = workInProgress2.type;
                var unresolvedProps = workInProgress2.pendingProps;
                var resolvedProps = workInProgress2.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
                return updateFunctionComponent(current$$1, workInProgress2, _Component, resolvedProps, renderExpirationTime2);
              }
              case ClassComponent: {
                var _Component2 = workInProgress2.type;
                var _unresolvedProps = workInProgress2.pendingProps;
                var _resolvedProps = workInProgress2.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);
                return updateClassComponent(current$$1, workInProgress2, _Component2, _resolvedProps, renderExpirationTime2);
              }
              case HostRoot:
                return updateHostRoot(current$$1, workInProgress2, renderExpirationTime2);
              case HostComponent:
                return updateHostComponent(current$$1, workInProgress2, renderExpirationTime2);
              case HostText:
                return updateHostText(current$$1, workInProgress2);
              case SuspenseComponent:
                return updateSuspenseComponent(current$$1, workInProgress2, renderExpirationTime2);
              case HostPortal:
                return updatePortalComponent(current$$1, workInProgress2, renderExpirationTime2);
              case ForwardRef: {
                var type2 = workInProgress2.type;
                var _unresolvedProps2 = workInProgress2.pendingProps;
                var _resolvedProps2 = workInProgress2.elementType === type2 ? _unresolvedProps2 : resolveDefaultProps(type2, _unresolvedProps2);
                return updateForwardRef(current$$1, workInProgress2, type2, _resolvedProps2, renderExpirationTime2);
              }
              case Fragment:
                return updateFragment(current$$1, workInProgress2, renderExpirationTime2);
              case Mode:
                return updateMode(current$$1, workInProgress2, renderExpirationTime2);
              case Profiler:
                return updateProfiler(current$$1, workInProgress2, renderExpirationTime2);
              case ContextProvider:
                return updateContextProvider(current$$1, workInProgress2, renderExpirationTime2);
              case ContextConsumer:
                return updateContextConsumer(current$$1, workInProgress2, renderExpirationTime2);
              case MemoComponent: {
                var _type2 = workInProgress2.type;
                var _unresolvedProps3 = workInProgress2.pendingProps;
                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                {
                  if (workInProgress2.type !== workInProgress2.elementType) {
                    var outerPropTypes = _type2.propTypes;
                    if (outerPropTypes) {
                      checkPropTypes(
                        outerPropTypes,
                        _resolvedProps3,
                        "prop",
                        getComponentName(_type2),
                        getCurrentFiberStackInDev
                      );
                    }
                  }
                }
                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                return updateMemoComponent(current$$1, workInProgress2, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime2);
              }
              case SimpleMemoComponent: {
                return updateSimpleMemoComponent(current$$1, workInProgress2, workInProgress2.type, workInProgress2.pendingProps, updateExpirationTime, renderExpirationTime2);
              }
              case IncompleteClassComponent: {
                var _Component3 = workInProgress2.type;
                var _unresolvedProps4 = workInProgress2.pendingProps;
                var _resolvedProps4 = workInProgress2.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);
                return mountIncompleteClassComponent(current$$1, workInProgress2, _Component3, _resolvedProps4, renderExpirationTime2);
              }
              case SuspenseListComponent: {
                return updateSuspenseListComponent(current$$1, workInProgress2, renderExpirationTime2);
              }
              case FundamentalComponent: {
                if (enableFundamentalAPI) {
                  return updateFundamentalComponent$1(current$$1, workInProgress2, renderExpirationTime2);
                }
                break;
              }
              case ScopeComponent: {
                if (enableScopeAPI) {
                  return updateScopeComponent(current$$1, workInProgress2, renderExpirationTime2);
                }
                break;
              }
            }
            {
              {
                throw Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          function createFundamentalStateInstance(currentFiber2, props, impl, state) {
            return {
              currentFiber: currentFiber2,
              impl,
              instance: null,
              prevProps: null,
              props,
              state
            };
          }
          function isFiberSuspenseAndTimedOut(fiber) {
            return fiber.tag === SuspenseComponent && fiber.memoizedState !== null;
          }
          function getSuspenseFallbackChild(fiber) {
            return fiber.child.sibling.child;
          }
          var emptyObject$1 = {};
          function collectScopedNodes(node, fn, scopedNodes) {
            if (enableScopeAPI) {
              if (node.tag === HostComponent) {
                var _type = node.type, memoizedProps = node.memoizedProps, stateNode = node.stateNode;
                var _instance = getPublicInstance(stateNode);
                if (_instance !== null && fn(_type, memoizedProps || emptyObject$1, _instance) === true) {
                  scopedNodes.push(_instance);
                }
              }
              var child = node.child;
              if (isFiberSuspenseAndTimedOut(node)) {
                child = getSuspenseFallbackChild(node);
              }
              if (child !== null) {
                collectScopedNodesFromChildren(child, fn, scopedNodes);
              }
            }
          }
          function collectFirstScopedNode(node, fn) {
            if (enableScopeAPI) {
              if (node.tag === HostComponent) {
                var _type2 = node.type, memoizedProps = node.memoizedProps, stateNode = node.stateNode;
                var _instance2 = getPublicInstance(stateNode);
                if (_instance2 !== null && fn(_type2, memoizedProps, _instance2) === true) {
                  return _instance2;
                }
              }
              var child = node.child;
              if (isFiberSuspenseAndTimedOut(node)) {
                child = getSuspenseFallbackChild(node);
              }
              if (child !== null) {
                return collectFirstScopedNodeFromChildren(child, fn);
              }
            }
            return null;
          }
          function collectScopedNodesFromChildren(startingChild, fn, scopedNodes) {
            var child = startingChild;
            while (child !== null) {
              collectScopedNodes(child, fn, scopedNodes);
              child = child.sibling;
            }
          }
          function collectFirstScopedNodeFromChildren(startingChild, fn) {
            var child = startingChild;
            while (child !== null) {
              var scopedNode = collectFirstScopedNode(child, fn);
              if (scopedNode !== null) {
                return scopedNode;
              }
              child = child.sibling;
            }
            return null;
          }
          function collectNearestScopeMethods(node, scope, childrenScopes) {
            if (isValidScopeNode(node, scope)) {
              childrenScopes.push(node.stateNode.methods);
            } else {
              var child = node.child;
              if (isFiberSuspenseAndTimedOut(node)) {
                child = getSuspenseFallbackChild(node);
              }
              if (child !== null) {
                collectNearestChildScopeMethods(child, scope, childrenScopes);
              }
            }
          }
          function collectNearestChildScopeMethods(startingChild, scope, childrenScopes) {
            var child = startingChild;
            while (child !== null) {
              collectNearestScopeMethods(child, scope, childrenScopes);
              child = child.sibling;
            }
          }
          function isValidScopeNode(node, scope) {
            return node.tag === ScopeComponent && node.type === scope && node.stateNode !== null;
          }
          function createScopeMethods(scope, instance) {
            return {
              getChildren: function() {
                var currentFiber2 = instance.fiber;
                var child = currentFiber2.child;
                var childrenScopes = [];
                if (child !== null) {
                  collectNearestChildScopeMethods(child, scope, childrenScopes);
                }
                return childrenScopes.length === 0 ? null : childrenScopes;
              },
              getChildrenFromRoot: function() {
                var currentFiber2 = instance.fiber;
                var node = currentFiber2;
                while (node !== null) {
                  var parent = node.return;
                  if (parent === null) {
                    break;
                  }
                  node = parent;
                  if (node.tag === ScopeComponent && node.type === scope) {
                    break;
                  }
                }
                var childrenScopes = [];
                collectNearestChildScopeMethods(node.child, scope, childrenScopes);
                return childrenScopes.length === 0 ? null : childrenScopes;
              },
              getParent: function() {
                var node = instance.fiber.return;
                while (node !== null) {
                  if (node.tag === ScopeComponent && node.type === scope) {
                    return node.stateNode.methods;
                  }
                  node = node.return;
                }
                return null;
              },
              getProps: function() {
                var currentFiber2 = instance.fiber;
                return currentFiber2.memoizedProps;
              },
              queryAllNodes: function(fn) {
                var currentFiber2 = instance.fiber;
                var child = currentFiber2.child;
                var scopedNodes = [];
                if (child !== null) {
                  collectScopedNodesFromChildren(child, fn, scopedNodes);
                }
                return scopedNodes.length === 0 ? null : scopedNodes;
              },
              queryFirstNode: function(fn) {
                var currentFiber2 = instance.fiber;
                var child = currentFiber2.child;
                if (child !== null) {
                  return collectFirstScopedNodeFromChildren(child, fn);
                }
                return null;
              },
              containsNode: function(node) {
                var fiber = getInstanceFromNode(node);
                while (fiber !== null) {
                  if (fiber.tag === ScopeComponent && fiber.type === scope && fiber.stateNode === instance) {
                    return true;
                  }
                  fiber = fiber.return;
                }
                return false;
              }
            };
          }
          function markUpdate(workInProgress2) {
            workInProgress2.effectTag |= Update;
          }
          function markRef$1(workInProgress2) {
            workInProgress2.effectTag |= Ref;
          }
          var appendAllChildren;
          var updateHostContainer;
          var updateHostComponent$1;
          var updateHostText$1;
          if (supportsMutation) {
            appendAllChildren = function(parent, workInProgress2, needsVisibilityToggle, isHidden) {
              var node = workInProgress2.child;
              while (node !== null) {
                if (node.tag === HostComponent || node.tag === HostText) {
                  appendInitialChild(parent, node.stateNode);
                } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
                  appendInitialChild(parent, node.stateNode.instance);
                } else if (node.tag === HostPortal) {
                } else if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
                if (node === workInProgress2) {
                  return;
                }
                while (node.sibling === null) {
                  if (node.return === null || node.return === workInProgress2) {
                    return;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
              }
            };
            updateHostContainer = function(workInProgress2) {
            };
            updateHostComponent$1 = function(current2, workInProgress2, type2, newProps, rootContainerInstance) {
              var oldProps = current2.memoizedProps;
              if (oldProps === newProps) {
                return;
              }
              var instance = workInProgress2.stateNode;
              var currentHostContext = getHostContext();
              var updatePayload = prepareUpdate(instance, type2, oldProps, newProps, rootContainerInstance, currentHostContext);
              workInProgress2.updateQueue = updatePayload;
              if (updatePayload) {
                markUpdate(workInProgress2);
              }
            };
            updateHostText$1 = function(current2, workInProgress2, oldText, newText) {
              if (oldText !== newText) {
                markUpdate(workInProgress2);
              }
            };
          } else if (supportsPersistence) {
            appendAllChildren = function(parent, workInProgress2, needsVisibilityToggle, isHidden) {
              var node = workInProgress2.child;
              while (node !== null) {
                branches:
                  if (node.tag === HostComponent) {
                    var instance = node.stateNode;
                    if (needsVisibilityToggle && isHidden) {
                      var props = node.memoizedProps;
                      var type2 = node.type;
                      instance = cloneHiddenInstance(instance, type2, props, node);
                    }
                    appendInitialChild(parent, instance);
                  } else if (node.tag === HostText) {
                    var _instance = node.stateNode;
                    if (needsVisibilityToggle && isHidden) {
                      var text = node.memoizedProps;
                      _instance = cloneHiddenTextInstance(_instance, text, node);
                    }
                    appendInitialChild(parent, _instance);
                  } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
                    var _instance2 = node.stateNode.instance;
                    if (needsVisibilityToggle && isHidden) {
                      var _props = node.memoizedProps;
                      var _type = node.type;
                      _instance2 = cloneHiddenInstance(_instance2, _type, _props, node);
                    }
                    appendInitialChild(parent, _instance2);
                  } else if (node.tag === HostPortal) {
                  } else if (node.tag === SuspenseComponent) {
                    if ((node.effectTag & Update) !== NoEffect) {
                      var newIsHidden = node.memoizedState !== null;
                      if (newIsHidden) {
                        var primaryChildParent = node.child;
                        if (primaryChildParent !== null) {
                          if (primaryChildParent.child !== null) {
                            primaryChildParent.child.return = primaryChildParent;
                            appendAllChildren(parent, primaryChildParent, true, newIsHidden);
                          }
                          var fallbackChildParent = primaryChildParent.sibling;
                          if (fallbackChildParent !== null) {
                            fallbackChildParent.return = node;
                            node = fallbackChildParent;
                            continue;
                          }
                        }
                      }
                    }
                    if (node.child !== null) {
                      node.child.return = node;
                      node = node.child;
                      continue;
                    }
                  } else if (node.child !== null) {
                    node.child.return = node;
                    node = node.child;
                    continue;
                  }
                node = node;
                if (node === workInProgress2) {
                  return;
                }
                while (node.sibling === null) {
                  if (node.return === null || node.return === workInProgress2) {
                    return;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
              }
            };
            var appendAllChildrenToContainer = function(containerChildSet, workInProgress2, needsVisibilityToggle, isHidden) {
              var node = workInProgress2.child;
              while (node !== null) {
                branches:
                  if (node.tag === HostComponent) {
                    var instance = node.stateNode;
                    if (needsVisibilityToggle && isHidden) {
                      var props = node.memoizedProps;
                      var type2 = node.type;
                      instance = cloneHiddenInstance(instance, type2, props, node);
                    }
                    appendChildToContainerChildSet(containerChildSet, instance);
                  } else if (node.tag === HostText) {
                    var _instance3 = node.stateNode;
                    if (needsVisibilityToggle && isHidden) {
                      var text = node.memoizedProps;
                      _instance3 = cloneHiddenTextInstance(_instance3, text, node);
                    }
                    appendChildToContainerChildSet(containerChildSet, _instance3);
                  } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
                    var _instance4 = node.stateNode.instance;
                    if (needsVisibilityToggle && isHidden) {
                      var _props2 = node.memoizedProps;
                      var _type2 = node.type;
                      _instance4 = cloneHiddenInstance(_instance4, _type2, _props2, node);
                    }
                    appendChildToContainerChildSet(containerChildSet, _instance4);
                  } else if (node.tag === HostPortal) {
                  } else if (node.tag === SuspenseComponent) {
                    if ((node.effectTag & Update) !== NoEffect) {
                      var newIsHidden = node.memoizedState !== null;
                      if (newIsHidden) {
                        var primaryChildParent = node.child;
                        if (primaryChildParent !== null) {
                          if (primaryChildParent.child !== null) {
                            primaryChildParent.child.return = primaryChildParent;
                            appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);
                          }
                          var fallbackChildParent = primaryChildParent.sibling;
                          if (fallbackChildParent !== null) {
                            fallbackChildParent.return = node;
                            node = fallbackChildParent;
                            continue;
                          }
                        }
                      }
                    }
                    if (node.child !== null) {
                      node.child.return = node;
                      node = node.child;
                      continue;
                    }
                  } else if (node.child !== null) {
                    node.child.return = node;
                    node = node.child;
                    continue;
                  }
                node = node;
                if (node === workInProgress2) {
                  return;
                }
                while (node.sibling === null) {
                  if (node.return === null || node.return === workInProgress2) {
                    return;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
              }
            };
            updateHostContainer = function(workInProgress2) {
              var portalOrRoot = workInProgress2.stateNode;
              var childrenUnchanged = workInProgress2.firstEffect === null;
              if (childrenUnchanged) {
              } else {
                var container = portalOrRoot.containerInfo;
                var newChildSet = createContainerChildSet(container);
                appendAllChildrenToContainer(newChildSet, workInProgress2, false, false);
                portalOrRoot.pendingChildren = newChildSet;
                markUpdate(workInProgress2);
                finalizeContainerChildren(container, newChildSet);
              }
            };
            updateHostComponent$1 = function(current2, workInProgress2, type2, newProps, rootContainerInstance) {
              var currentInstance = current2.stateNode;
              var oldProps = current2.memoizedProps;
              var childrenUnchanged = workInProgress2.firstEffect === null;
              if (childrenUnchanged && oldProps === newProps) {
                workInProgress2.stateNode = currentInstance;
                return;
              }
              var recyclableInstance = workInProgress2.stateNode;
              var currentHostContext = getHostContext();
              var updatePayload = null;
              if (oldProps !== newProps) {
                updatePayload = prepareUpdate(recyclableInstance, type2, oldProps, newProps, rootContainerInstance, currentHostContext);
              }
              if (childrenUnchanged && updatePayload === null) {
                workInProgress2.stateNode = currentInstance;
                return;
              }
              var newInstance = cloneInstance(currentInstance, updatePayload, type2, oldProps, newProps, workInProgress2, childrenUnchanged, recyclableInstance);
              if (finalizeInitialChildren(newInstance, type2, newProps, rootContainerInstance, currentHostContext)) {
                markUpdate(workInProgress2);
              }
              workInProgress2.stateNode = newInstance;
              if (childrenUnchanged) {
                markUpdate(workInProgress2);
              } else {
                appendAllChildren(newInstance, workInProgress2, false, false);
              }
            };
            updateHostText$1 = function(current2, workInProgress2, oldText, newText) {
              if (oldText !== newText) {
                var rootContainerInstance = getRootHostContainer();
                var currentHostContext = getHostContext();
                workInProgress2.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress2);
                markUpdate(workInProgress2);
              }
            };
          } else {
            updateHostContainer = function(workInProgress2) {
            };
            updateHostComponent$1 = function(current2, workInProgress2, type2, newProps, rootContainerInstance) {
            };
            updateHostText$1 = function(current2, workInProgress2, oldText, newText) {
            };
          }
          function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
            switch (renderState.tailMode) {
              case "hidden": {
                var tailNode = renderState.tail;
                var lastTailNode = null;
                while (tailNode !== null) {
                  if (tailNode.alternate !== null) {
                    lastTailNode = tailNode;
                  }
                  tailNode = tailNode.sibling;
                }
                if (lastTailNode === null) {
                  renderState.tail = null;
                } else {
                  lastTailNode.sibling = null;
                }
                break;
              }
              case "collapsed": {
                var _tailNode = renderState.tail;
                var _lastTailNode = null;
                while (_tailNode !== null) {
                  if (_tailNode.alternate !== null) {
                    _lastTailNode = _tailNode;
                  }
                  _tailNode = _tailNode.sibling;
                }
                if (_lastTailNode === null) {
                  if (!hasRenderedATailFallback && renderState.tail !== null) {
                    renderState.tail.sibling = null;
                  } else {
                    renderState.tail = null;
                  }
                } else {
                  _lastTailNode.sibling = null;
                }
                break;
              }
            }
          }
          function completeWork(current2, workInProgress2, renderExpirationTime2) {
            var newProps = workInProgress2.pendingProps;
            switch (workInProgress2.tag) {
              case IndeterminateComponent:
                break;
              case LazyComponent:
                break;
              case SimpleMemoComponent:
              case FunctionComponent:
                break;
              case ClassComponent: {
                var Component = workInProgress2.type;
                if (isContextProvider(Component)) {
                  popContext(workInProgress2);
                }
                break;
              }
              case HostRoot: {
                popHostContainer(workInProgress2);
                popTopLevelContextObject(workInProgress2);
                var fiberRoot = workInProgress2.stateNode;
                if (fiberRoot.pendingContext) {
                  fiberRoot.context = fiberRoot.pendingContext;
                  fiberRoot.pendingContext = null;
                }
                if (current2 === null || current2.child === null) {
                  var wasHydrated = popHydrationState(workInProgress2);
                  if (wasHydrated) {
                    markUpdate(workInProgress2);
                  }
                }
                updateHostContainer(workInProgress2);
                break;
              }
              case HostComponent: {
                popHostContext(workInProgress2);
                var rootContainerInstance = getRootHostContainer();
                var type2 = workInProgress2.type;
                if (current2 !== null && workInProgress2.stateNode != null) {
                  updateHostComponent$1(current2, workInProgress2, type2, newProps, rootContainerInstance);
                  if (enableFlareAPI) {
                    var prevListeners = current2.memoizedProps.listeners;
                    var nextListeners = newProps.listeners;
                    if (prevListeners !== nextListeners) {
                      markUpdate(workInProgress2);
                    }
                  }
                  if (current2.ref !== workInProgress2.ref) {
                    markRef$1(workInProgress2);
                  }
                } else {
                  if (!newProps) {
                    if (!(workInProgress2.stateNode !== null)) {
                      {
                        throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                      }
                    }
                    break;
                  }
                  var currentHostContext = getHostContext();
                  var _wasHydrated = popHydrationState(workInProgress2);
                  if (_wasHydrated) {
                    if (prepareToHydrateHostInstance(workInProgress2, rootContainerInstance, currentHostContext)) {
                      markUpdate(workInProgress2);
                    }
                    if (enableFlareAPI) {
                      var listeners = newProps.listeners;
                      if (listeners != null) {
                        updateEventListeners(listeners, workInProgress2, rootContainerInstance);
                      }
                    }
                  } else {
                    var instance = createInstance(type2, newProps, rootContainerInstance, currentHostContext, workInProgress2);
                    appendAllChildren(instance, workInProgress2, false, false);
                    workInProgress2.stateNode = instance;
                    if (enableFlareAPI) {
                      var _listeners = newProps.listeners;
                      if (_listeners != null) {
                        updateEventListeners(_listeners, workInProgress2, rootContainerInstance);
                      }
                    }
                    if (finalizeInitialChildren(instance, type2, newProps, rootContainerInstance, currentHostContext)) {
                      markUpdate(workInProgress2);
                    }
                  }
                  if (workInProgress2.ref !== null) {
                    markRef$1(workInProgress2);
                  }
                }
                break;
              }
              case HostText: {
                var newText = newProps;
                if (current2 && workInProgress2.stateNode != null) {
                  var oldText = current2.memoizedProps;
                  updateHostText$1(current2, workInProgress2, oldText, newText);
                } else {
                  if (typeof newText !== "string") {
                    if (!(workInProgress2.stateNode !== null)) {
                      {
                        throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                      }
                    }
                  }
                  var _rootContainerInstance = getRootHostContainer();
                  var _currentHostContext = getHostContext();
                  var _wasHydrated2 = popHydrationState(workInProgress2);
                  if (_wasHydrated2) {
                    if (prepareToHydrateHostTextInstance(workInProgress2)) {
                      markUpdate(workInProgress2);
                    }
                  } else {
                    workInProgress2.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress2);
                  }
                }
                break;
              }
              case ForwardRef:
                break;
              case SuspenseComponent: {
                popSuspenseContext(workInProgress2);
                var nextState = workInProgress2.memoizedState;
                if (enableSuspenseServerRenderer) {
                  if (nextState !== null && nextState.dehydrated !== null) {
                    if (current2 === null) {
                      var _wasHydrated3 = popHydrationState(workInProgress2);
                      if (!_wasHydrated3) {
                        {
                          throw Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                        }
                      }
                      prepareToHydrateHostSuspenseInstance(workInProgress2);
                      if (enableSchedulerTracing) {
                        markSpawnedWork(Never);
                      }
                      return null;
                    } else {
                      resetHydrationState();
                      if ((workInProgress2.effectTag & DidCapture) === NoEffect) {
                        workInProgress2.memoizedState = null;
                      }
                      workInProgress2.effectTag |= Update;
                      return null;
                    }
                  }
                }
                if ((workInProgress2.effectTag & DidCapture) !== NoEffect) {
                  workInProgress2.expirationTime = renderExpirationTime2;
                  return workInProgress2;
                }
                var nextDidTimeout = nextState !== null;
                var prevDidTimeout = false;
                if (current2 === null) {
                  if (workInProgress2.memoizedProps.fallback !== void 0) {
                    popHydrationState(workInProgress2);
                  }
                } else {
                  var prevState = current2.memoizedState;
                  prevDidTimeout = prevState !== null;
                  if (!nextDidTimeout && prevState !== null) {
                    var currentFallbackChild = current2.child.sibling;
                    if (currentFallbackChild !== null) {
                      var first = workInProgress2.firstEffect;
                      if (first !== null) {
                        workInProgress2.firstEffect = currentFallbackChild;
                        currentFallbackChild.nextEffect = first;
                      } else {
                        workInProgress2.firstEffect = workInProgress2.lastEffect = currentFallbackChild;
                        currentFallbackChild.nextEffect = null;
                      }
                      currentFallbackChild.effectTag = Deletion;
                    }
                  }
                }
                if (nextDidTimeout && !prevDidTimeout) {
                  if ((workInProgress2.mode & BlockingMode) !== NoMode) {
                    var hasInvisibleChildContext = current2 === null && workInProgress2.memoizedProps.unstable_avoidThisFallback !== true;
                    if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                      renderDidSuspend();
                    } else {
                      renderDidSuspendDelayIfPossible();
                    }
                  }
                }
                if (supportsPersistence) {
                  if (nextDidTimeout) {
                    workInProgress2.effectTag |= Update;
                  }
                }
                if (supportsMutation) {
                  if (nextDidTimeout || prevDidTimeout) {
                    workInProgress2.effectTag |= Update;
                  }
                }
                if (enableSuspenseCallback && workInProgress2.updateQueue !== null && workInProgress2.memoizedProps.suspenseCallback != null) {
                  workInProgress2.effectTag |= Update;
                }
                break;
              }
              case Fragment:
                break;
              case Mode:
                break;
              case Profiler:
                break;
              case HostPortal:
                popHostContainer(workInProgress2);
                updateHostContainer(workInProgress2);
                break;
              case ContextProvider:
                popProvider(workInProgress2);
                break;
              case ContextConsumer:
                break;
              case MemoComponent:
                break;
              case IncompleteClassComponent: {
                var _Component = workInProgress2.type;
                if (isContextProvider(_Component)) {
                  popContext(workInProgress2);
                }
                break;
              }
              case SuspenseListComponent: {
                popSuspenseContext(workInProgress2);
                var renderState = workInProgress2.memoizedState;
                if (renderState === null) {
                  break;
                }
                var didSuspendAlready = (workInProgress2.effectTag & DidCapture) !== NoEffect;
                var renderedTail = renderState.rendering;
                if (renderedTail === null) {
                  if (!didSuspendAlready) {
                    var cannotBeSuspended = renderHasNotSuspendedYet() && (current2 === null || (current2.effectTag & DidCapture) === NoEffect);
                    if (!cannotBeSuspended) {
                      var row = workInProgress2.child;
                      while (row !== null) {
                        var suspended = findFirstSuspended(row);
                        if (suspended !== null) {
                          didSuspendAlready = true;
                          workInProgress2.effectTag |= DidCapture;
                          cutOffTailIfNeeded(renderState, false);
                          var newThennables = suspended.updateQueue;
                          if (newThennables !== null) {
                            workInProgress2.updateQueue = newThennables;
                            workInProgress2.effectTag |= Update;
                          }
                          if (renderState.lastEffect === null) {
                            workInProgress2.firstEffect = null;
                          }
                          workInProgress2.lastEffect = renderState.lastEffect;
                          resetChildFibers(workInProgress2, renderExpirationTime2);
                          pushSuspenseContext(workInProgress2, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                          return workInProgress2.child;
                        }
                        row = row.sibling;
                      }
                    }
                  } else {
                    cutOffTailIfNeeded(renderState, false);
                  }
                } else {
                  if (!didSuspendAlready) {
                    var _suspended = findFirstSuspended(renderedTail);
                    if (_suspended !== null) {
                      workInProgress2.effectTag |= DidCapture;
                      didSuspendAlready = true;
                      var _newThennables = _suspended.updateQueue;
                      if (_newThennables !== null) {
                        workInProgress2.updateQueue = _newThennables;
                        workInProgress2.effectTag |= Update;
                      }
                      cutOffTailIfNeeded(renderState, true);
                      if (renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate) {
                        var lastEffect = workInProgress2.lastEffect = renderState.lastEffect;
                        if (lastEffect !== null) {
                          lastEffect.nextEffect = null;
                        }
                        return null;
                      }
                    } else if (now$1() > renderState.tailExpiration && renderExpirationTime2 > Never) {
                      workInProgress2.effectTag |= DidCapture;
                      didSuspendAlready = true;
                      cutOffTailIfNeeded(renderState, false);
                      var nextPriority = renderExpirationTime2 - 1;
                      workInProgress2.expirationTime = workInProgress2.childExpirationTime = nextPriority;
                      if (enableSchedulerTracing) {
                        markSpawnedWork(nextPriority);
                      }
                    }
                  }
                  if (renderState.isBackwards) {
                    renderedTail.sibling = workInProgress2.child;
                    workInProgress2.child = renderedTail;
                  } else {
                    var previousSibling = renderState.last;
                    if (previousSibling !== null) {
                      previousSibling.sibling = renderedTail;
                    } else {
                      workInProgress2.child = renderedTail;
                    }
                    renderState.last = renderedTail;
                  }
                }
                if (renderState.tail !== null) {
                  if (renderState.tailExpiration === 0) {
                    var TAIL_EXPIRATION_TIMEOUT_MS = 500;
                    renderState.tailExpiration = now$1() + TAIL_EXPIRATION_TIMEOUT_MS;
                  }
                  var next = renderState.tail;
                  renderState.rendering = next;
                  renderState.tail = next.sibling;
                  renderState.lastEffect = workInProgress2.lastEffect;
                  next.sibling = null;
                  var suspenseContext = suspenseStackCursor.current;
                  if (didSuspendAlready) {
                    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                  } else {
                    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                  }
                  pushSuspenseContext(workInProgress2, suspenseContext);
                  return next;
                }
                break;
              }
              case FundamentalComponent: {
                if (enableFundamentalAPI) {
                  var fundamentalImpl = workInProgress2.type.impl;
                  var fundamentalInstance = workInProgress2.stateNode;
                  if (fundamentalInstance === null) {
                    var getInitialState = fundamentalImpl.getInitialState;
                    var fundamentalState;
                    if (getInitialState !== void 0) {
                      fundamentalState = getInitialState(newProps);
                    }
                    fundamentalInstance = workInProgress2.stateNode = createFundamentalStateInstance(workInProgress2, newProps, fundamentalImpl, fundamentalState || {});
                    var _instance5 = getFundamentalComponentInstance(fundamentalInstance);
                    fundamentalInstance.instance = _instance5;
                    if (fundamentalImpl.reconcileChildren === false) {
                      return null;
                    }
                    appendAllChildren(_instance5, workInProgress2, false, false);
                    mountFundamentalComponent(fundamentalInstance);
                  } else {
                    var prevProps = fundamentalInstance.props;
                    fundamentalInstance.prevProps = prevProps;
                    fundamentalInstance.props = newProps;
                    fundamentalInstance.currentFiber = workInProgress2;
                    if (supportsPersistence) {
                      var _instance6 = cloneFundamentalInstance(fundamentalInstance);
                      fundamentalInstance.instance = _instance6;
                      appendAllChildren(_instance6, workInProgress2, false, false);
                    }
                    var shouldUpdate = shouldUpdateFundamentalComponent(fundamentalInstance);
                    if (shouldUpdate) {
                      markUpdate(workInProgress2);
                    }
                  }
                }
                break;
              }
              case ScopeComponent: {
                if (enableScopeAPI) {
                  if (current2 === null) {
                    var _type3 = workInProgress2.type;
                    var scopeInstance = {
                      fiber: workInProgress2,
                      methods: null
                    };
                    workInProgress2.stateNode = scopeInstance;
                    scopeInstance.methods = createScopeMethods(_type3, scopeInstance);
                    if (enableFlareAPI) {
                      var _listeners2 = newProps.listeners;
                      if (_listeners2 != null) {
                        var _rootContainerInstance2 = getRootHostContainer();
                        updateEventListeners(_listeners2, workInProgress2, _rootContainerInstance2);
                      }
                    }
                    if (workInProgress2.ref !== null) {
                      markRef$1(workInProgress2);
                      markUpdate(workInProgress2);
                    }
                  } else {
                    if (enableFlareAPI) {
                      var _prevListeners = current2.memoizedProps.listeners;
                      var _nextListeners = newProps.listeners;
                      if (_prevListeners !== _nextListeners || workInProgress2.ref !== null) {
                        markUpdate(workInProgress2);
                      }
                    } else {
                      if (workInProgress2.ref !== null) {
                        markUpdate(workInProgress2);
                      }
                    }
                    if (current2.ref !== workInProgress2.ref) {
                      markRef$1(workInProgress2);
                    }
                  }
                }
                break;
              }
              default: {
                {
                  throw Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
            return null;
          }
          function unwindWork(workInProgress2, renderExpirationTime2) {
            switch (workInProgress2.tag) {
              case ClassComponent: {
                var Component = workInProgress2.type;
                if (isContextProvider(Component)) {
                  popContext(workInProgress2);
                }
                var effectTag = workInProgress2.effectTag;
                if (effectTag & ShouldCapture) {
                  workInProgress2.effectTag = effectTag & ~ShouldCapture | DidCapture;
                  return workInProgress2;
                }
                return null;
              }
              case HostRoot: {
                popHostContainer(workInProgress2);
                popTopLevelContextObject(workInProgress2);
                var _effectTag = workInProgress2.effectTag;
                if (!((_effectTag & DidCapture) === NoEffect)) {
                  {
                    throw Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue.");
                  }
                }
                workInProgress2.effectTag = _effectTag & ~ShouldCapture | DidCapture;
                return workInProgress2;
              }
              case HostComponent: {
                popHostContext(workInProgress2);
                return null;
              }
              case SuspenseComponent: {
                popSuspenseContext(workInProgress2);
                if (enableSuspenseServerRenderer) {
                  var suspenseState = workInProgress2.memoizedState;
                  if (suspenseState !== null && suspenseState.dehydrated !== null) {
                    if (!(workInProgress2.alternate !== null)) {
                      {
                        throw Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                      }
                    }
                    resetHydrationState();
                  }
                }
                var _effectTag2 = workInProgress2.effectTag;
                if (_effectTag2 & ShouldCapture) {
                  workInProgress2.effectTag = _effectTag2 & ~ShouldCapture | DidCapture;
                  return workInProgress2;
                }
                return null;
              }
              case SuspenseListComponent: {
                popSuspenseContext(workInProgress2);
                return null;
              }
              case HostPortal:
                popHostContainer(workInProgress2);
                return null;
              case ContextProvider:
                popProvider(workInProgress2);
                return null;
              default:
                return null;
            }
          }
          function unwindInterruptedWork(interruptedWork) {
            switch (interruptedWork.tag) {
              case ClassComponent: {
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (childContextTypes !== null && childContextTypes !== void 0) {
                  popContext(interruptedWork);
                }
                break;
              }
              case HostRoot: {
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                break;
              }
              case HostComponent: {
                popHostContext(interruptedWork);
                break;
              }
              case HostPortal:
                popHostContainer(interruptedWork);
                break;
              case SuspenseComponent:
                popSuspenseContext(interruptedWork);
                break;
              case SuspenseListComponent:
                popSuspenseContext(interruptedWork);
                break;
              case ContextProvider:
                popProvider(interruptedWork);
                break;
              default:
                break;
            }
          }
          function createCapturedValue(value, source) {
            return {
              value,
              source,
              stack: getStackByFiberInDevAndProd(source)
            };
          }
          var invokeGuardedCallbackImpl = function(name, func2, context, a, b, c, d, e, f) {
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            try {
              func2.apply(context, funcArgs);
            } catch (error) {
              this.onError(error);
            }
          };
          {
            if (typeof window !== "undefined" && typeof window.dispatchEvent === "function" && typeof document !== "undefined" && typeof document.createEvent === "function") {
              var fakeNode = document.createElement("react");
              var invokeGuardedCallbackDev = function(name, func2, context, a, b, c, d, e, f) {
                if (!(typeof document !== "undefined")) {
                  {
                    throw Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
                  }
                }
                var evt = document.createEvent("Event");
                var didError = true;
                var windowEvent = window.event;
                var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
                var funcArgs = Array.prototype.slice.call(arguments, 3);
                function callCallback2() {
                  fakeNode.removeEventListener(evtType, callCallback2, false);
                  if (typeof window.event !== "undefined" && window.hasOwnProperty("event")) {
                    window.event = windowEvent;
                  }
                  func2.apply(context, funcArgs);
                  didError = false;
                }
                var error;
                var didSetError = false;
                var isCrossOriginError = false;
                function handleWindowError(event) {
                  error = event.error;
                  didSetError = true;
                  if (error === null && event.colno === 0 && event.lineno === 0) {
                    isCrossOriginError = true;
                  }
                  if (event.defaultPrevented) {
                    if (error != null && typeof error === "object") {
                      try {
                        error._suppressLogging = true;
                      } catch (inner) {
                      }
                    }
                  }
                }
                var evtType = "react-" + (name ? name : "invokeguardedcallback");
                window.addEventListener("error", handleWindowError);
                fakeNode.addEventListener(evtType, callCallback2, false);
                evt.initEvent(evtType, false, false);
                fakeNode.dispatchEvent(evt);
                if (windowEventDescriptor) {
                  Object.defineProperty(window, "event", windowEventDescriptor);
                }
                if (didError) {
                  if (!didSetError) {
                    error = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`);
                  } else if (isCrossOriginError) {
                    error = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://fb.me/react-crossorigin-error for more information.");
                  }
                  this.onError(error);
                }
                window.removeEventListener("error", handleWindowError);
              };
              invokeGuardedCallbackImpl = invokeGuardedCallbackDev;
            }
          }
          var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
          var hasError = false;
          var caughtError = null;
          var reporter = {
            onError: function(error) {
              hasError = true;
              caughtError = error;
            }
          };
          function invokeGuardedCallback(name, func2, context, a, b, c, d, e, f) {
            hasError = false;
            caughtError = null;
            invokeGuardedCallbackImpl$1.apply(reporter, arguments);
          }
          function hasCaughtError() {
            return hasError;
          }
          function clearCaughtError() {
            if (hasError) {
              var error = caughtError;
              hasError = false;
              caughtError = null;
              return error;
            } else {
              {
                {
                  throw Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
          }
          function showErrorDialog(capturedError) {
            return true;
          }
          function logCapturedError(capturedError) {
            var logError2 = showErrorDialog(capturedError);
            if (logError2 === false) {
              return;
            }
            var error = capturedError.error;
            {
              var componentName = capturedError.componentName, componentStack = capturedError.componentStack, errorBoundaryName = capturedError.errorBoundaryName, errorBoundaryFound = capturedError.errorBoundaryFound, willRetry = capturedError.willRetry;
              if (error != null && error._suppressLogging) {
                if (errorBoundaryFound && willRetry) {
                  return;
                }
                console.error(error);
              }
              var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:";
              var errorBoundaryMessage;
              if (errorBoundaryFound && errorBoundaryName) {
                if (willRetry) {
                  errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
                } else {
                  errorBoundaryMessage = "This error was initially handled by the error boundary " + errorBoundaryName + ".\nRecreating the tree from scratch failed so React will unmount the tree.";
                }
              } else {
                errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://fb.me/react-error-boundaries to learn more about error boundaries.";
              }
              var combinedMessage = "" + componentNameMessage + componentStack + "\n\n" + ("" + errorBoundaryMessage);
              console.error(combinedMessage);
            }
          }
          var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
          {
            didWarnAboutUndefinedSnapshotBeforeUpdate = /* @__PURE__ */ new Set();
          }
          var PossiblyWeakSet = typeof WeakSet === "function" ? WeakSet : Set;
          function logError(boundary, errorInfo) {
            var source = errorInfo.source;
            var stack = errorInfo.stack;
            if (stack === null && source !== null) {
              stack = getStackByFiberInDevAndProd(source);
            }
            var capturedError = {
              componentName: source !== null ? getComponentName(source.type) : null,
              componentStack: stack !== null ? stack : "",
              error: errorInfo.value,
              errorBoundary: null,
              errorBoundaryName: null,
              errorBoundaryFound: false,
              willRetry: false
            };
            if (boundary !== null && boundary.tag === ClassComponent) {
              capturedError.errorBoundary = boundary.stateNode;
              capturedError.errorBoundaryName = getComponentName(boundary.type);
              capturedError.errorBoundaryFound = true;
              capturedError.willRetry = true;
            }
            try {
              logCapturedError(capturedError);
            } catch (e) {
              setTimeout(function() {
                throw e;
              });
            }
          }
          var callComponentWillUnmountWithTimer = function(current$$1, instance) {
            startPhaseTimer(current$$1, "componentWillUnmount");
            instance.props = current$$1.memoizedProps;
            instance.state = current$$1.memoizedState;
            instance.componentWillUnmount();
            stopPhaseTimer();
          };
          function safelyCallComponentWillUnmount(current$$1, instance) {
            {
              invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);
              if (hasCaughtError()) {
                var unmountError = clearCaughtError();
                captureCommitPhaseError(current$$1, unmountError);
              }
            }
          }
          function safelyDetachRef(current$$1) {
            var ref = current$$1.ref;
            if (ref !== null) {
              if (typeof ref === "function") {
                {
                  invokeGuardedCallback(null, ref, null, null);
                  if (hasCaughtError()) {
                    var refError = clearCaughtError();
                    captureCommitPhaseError(current$$1, refError);
                  }
                }
              } else {
                ref.current = null;
              }
            }
          }
          function safelyCallDestroy(current$$1, destroy) {
            {
              invokeGuardedCallback(null, destroy, null);
              if (hasCaughtError()) {
                var error = clearCaughtError();
                captureCommitPhaseError(current$$1, error);
              }
            }
          }
          function commitBeforeMutationLifeCycles(current$$1, finishedWork) {
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);
                return;
              }
              case ClassComponent: {
                if (finishedWork.effectTag & Snapshot) {
                  if (current$$1 !== null) {
                    var prevProps = current$$1.memoizedProps;
                    var prevState = current$$1.memoizedState;
                    startPhaseTimer(finishedWork, "getSnapshotBeforeUpdate");
                    var instance = finishedWork.stateNode;
                    {
                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        !(instance.props === finishedWork.memoizedProps) ? warning$1(false, "Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance") : void 0;
                        !(instance.state === finishedWork.memoizedState) ? warning$1(false, "Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance") : void 0;
                      }
                    }
                    var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                    {
                      var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                      if (snapshot === void 0 && !didWarnSet.has(finishedWork.type)) {
                        didWarnSet.add(finishedWork.type);
                        warningWithoutStack$1(false, "%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentName(finishedWork.type));
                      }
                    }
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                    stopPhaseTimer();
                  }
                }
                return;
              }
              case HostRoot:
              case HostComponent:
              case HostText:
              case HostPortal:
              case IncompleteClassComponent:
                return;
              default: {
                {
                  {
                    throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
                  }
                }
              }
            }
          }
          function commitHookEffectList(unmountTag, mountTag, finishedWork) {
            var updateQueue = finishedWork.updateQueue;
            var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
            if (lastEffect !== null) {
              var firstEffect = lastEffect.next;
              var effect = firstEffect;
              do {
                if ((effect.tag & unmountTag) !== NoEffect$1) {
                  var destroy = effect.destroy;
                  effect.destroy = void 0;
                  if (destroy !== void 0) {
                    destroy();
                  }
                }
                if ((effect.tag & mountTag) !== NoEffect$1) {
                  var create = effect.create;
                  effect.destroy = create();
                  {
                    var _destroy = effect.destroy;
                    if (_destroy !== void 0 && typeof _destroy !== "function") {
                      var addendum = void 0;
                      if (_destroy === null) {
                        addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                      } else if (typeof _destroy.then === "function") {
                        addendum = "\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://fb.me/react-hooks-data-fetching";
                      } else {
                        addendum = " You returned: " + _destroy;
                      }
                      warningWithoutStack$1(false, "An effect function must not return anything besides a function, which is used for clean-up.%s%s", addendum, getStackByFiberInDevAndProd(finishedWork));
                    }
                  }
                }
                effect = effect.next;
              } while (effect !== firstEffect);
            }
          }
          function commitPassiveHookEffects(finishedWork) {
            if ((finishedWork.effectTag & Passive) !== NoEffect) {
              switch (finishedWork.tag) {
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);
                  commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
                  break;
                }
                default:
                  break;
              }
            }
          }
          function commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                commitHookEffectList(UnmountLayout, MountLayout, finishedWork);
                break;
              }
              case ClassComponent: {
                var instance = finishedWork.stateNode;
                if (finishedWork.effectTag & Update) {
                  if (current$$1 === null) {
                    startPhaseTimer(finishedWork, "componentDidMount");
                    {
                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        !(instance.props === finishedWork.memoizedProps) ? warning$1(false, "Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance") : void 0;
                        !(instance.state === finishedWork.memoizedState) ? warning$1(false, "Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance") : void 0;
                      }
                    }
                    instance.componentDidMount();
                    stopPhaseTimer();
                  } else {
                    var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);
                    var prevState = current$$1.memoizedState;
                    startPhaseTimer(finishedWork, "componentDidUpdate");
                    {
                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        !(instance.props === finishedWork.memoizedProps) ? warning$1(false, "Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance") : void 0;
                        !(instance.state === finishedWork.memoizedState) ? warning$1(false, "Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance") : void 0;
                      }
                    }
                    instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                    stopPhaseTimer();
                  }
                }
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      !(instance.props === finishedWork.memoizedProps) ? warning$1(false, "Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance") : void 0;
                      !(instance.state === finishedWork.memoizedState) ? warning$1(false, "Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance") : void 0;
                    }
                  }
                  commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
                }
                return;
              }
              case HostRoot: {
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                  var _instance = null;
                  if (finishedWork.child !== null) {
                    switch (finishedWork.child.tag) {
                      case HostComponent:
                        _instance = getPublicInstance(finishedWork.child.stateNode);
                        break;
                      case ClassComponent:
                        _instance = finishedWork.child.stateNode;
                        break;
                    }
                  }
                  commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
                }
                return;
              }
              case HostComponent: {
                var _instance2 = finishedWork.stateNode;
                if (current$$1 === null && finishedWork.effectTag & Update) {
                  var type2 = finishedWork.type;
                  var props = finishedWork.memoizedProps;
                  commitMount(_instance2, type2, props, finishedWork);
                }
                return;
              }
              case HostText: {
                return;
              }
              case HostPortal: {
                return;
              }
              case Profiler: {
                if (enableProfilerTimer) {
                  var onRender = finishedWork.memoizedProps.onRender;
                  if (typeof onRender === "function") {
                    if (enableSchedulerTracing) {
                      onRender(finishedWork.memoizedProps.id, current$$1 === null ? "mount" : "update", finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);
                    } else {
                      onRender(finishedWork.memoizedProps.id, current$$1 === null ? "mount" : "update", finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());
                    }
                  }
                }
                return;
              }
              case SuspenseComponent: {
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                return;
              }
              case SuspenseListComponent:
              case IncompleteClassComponent:
              case FundamentalComponent:
              case ScopeComponent:
                return;
              default: {
                {
                  {
                    throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
                  }
                }
              }
            }
          }
          function hideOrUnhideAllChildren(finishedWork, isHidden) {
            if (supportsMutation) {
              var node = finishedWork;
              while (true) {
                if (node.tag === HostComponent) {
                  var instance = node.stateNode;
                  if (isHidden) {
                    hideInstance(instance);
                  } else {
                    unhideInstance(node.stateNode, node.memoizedProps);
                  }
                } else if (node.tag === HostText) {
                  var _instance3 = node.stateNode;
                  if (isHidden) {
                    hideTextInstance(_instance3);
                  } else {
                    unhideTextInstance(_instance3, node.memoizedProps);
                  }
                } else if (node.tag === SuspenseComponent && node.memoizedState !== null && node.memoizedState.dehydrated === null) {
                  var fallbackChildFragment = node.child.sibling;
                  fallbackChildFragment.return = node;
                  node = fallbackChildFragment;
                  continue;
                } else if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
                if (node === finishedWork) {
                  return;
                }
                while (node.sibling === null) {
                  if (node.return === null || node.return === finishedWork) {
                    return;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
              }
            }
          }
          function commitAttachRef(finishedWork) {
            var ref = finishedWork.ref;
            if (ref !== null) {
              var instance = finishedWork.stateNode;
              var instanceToUse;
              switch (finishedWork.tag) {
                case HostComponent:
                  instanceToUse = getPublicInstance(instance);
                  break;
                default:
                  instanceToUse = instance;
              }
              if (enableScopeAPI && finishedWork.tag === ScopeComponent) {
                instanceToUse = instance.methods;
              }
              if (typeof ref === "function") {
                ref(instanceToUse);
              } else {
                {
                  if (!ref.hasOwnProperty("current")) {
                    warningWithoutStack$1(false, "Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().%s", getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));
                  }
                }
                ref.current = instanceToUse;
              }
            }
          }
          function commitDetachRef(current$$1) {
            var currentRef = current$$1.ref;
            if (currentRef !== null) {
              if (typeof currentRef === "function") {
                currentRef(null);
              } else {
                currentRef.current = null;
              }
            }
          }
          function commitUnmount(finishedRoot, current$$1, renderPriorityLevel) {
            onCommitUnmount(current$$1);
            switch (current$$1.tag) {
              case FunctionComponent:
              case ForwardRef:
              case MemoComponent:
              case SimpleMemoComponent: {
                var updateQueue = current$$1.updateQueue;
                if (updateQueue !== null) {
                  var lastEffect = updateQueue.lastEffect;
                  if (lastEffect !== null) {
                    var firstEffect = lastEffect.next;
                    var priorityLevel = renderPriorityLevel > NormalPriority ? NormalPriority : renderPriorityLevel;
                    runWithPriority(priorityLevel, function() {
                      var effect = firstEffect;
                      do {
                        var destroy = effect.destroy;
                        if (destroy !== void 0) {
                          safelyCallDestroy(current$$1, destroy);
                        }
                        effect = effect.next;
                      } while (effect !== firstEffect);
                    });
                  }
                }
                break;
              }
              case ClassComponent: {
                safelyDetachRef(current$$1);
                var instance = current$$1.stateNode;
                if (typeof instance.componentWillUnmount === "function") {
                  safelyCallComponentWillUnmount(current$$1, instance);
                }
                return;
              }
              case HostComponent: {
                if (enableFlareAPI) {
                  var dependencies = current$$1.dependencies;
                  if (dependencies !== null) {
                    var respondersMap = dependencies.responders;
                    if (respondersMap !== null) {
                      var responderInstances = Array.from(respondersMap.values());
                      for (var i2 = 0, length = responderInstances.length; i2 < length; i2++) {
                        var responderInstance = responderInstances[i2];
                        unmountResponderInstance(responderInstance);
                      }
                      dependencies.responders = null;
                    }
                  }
                }
                safelyDetachRef(current$$1);
                return;
              }
              case HostPortal: {
                if (supportsMutation) {
                  unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel);
                } else if (supportsPersistence) {
                  emptyPortalContainer(current$$1);
                }
                return;
              }
              case FundamentalComponent: {
                if (enableFundamentalAPI) {
                  var fundamentalInstance = current$$1.stateNode;
                  if (fundamentalInstance !== null) {
                    unmountFundamentalComponent(fundamentalInstance);
                    current$$1.stateNode = null;
                  }
                }
                return;
              }
              case DehydratedFragment: {
                if (enableSuspenseCallback) {
                  var hydrationCallbacks = finishedRoot.hydrationCallbacks;
                  if (hydrationCallbacks !== null) {
                    var onDeleted = hydrationCallbacks.onDeleted;
                    if (onDeleted) {
                      onDeleted(current$$1.stateNode);
                    }
                  }
                }
                return;
              }
              case ScopeComponent: {
                if (enableScopeAPI) {
                  safelyDetachRef(current$$1);
                }
              }
            }
          }
          function commitNestedUnmounts(finishedRoot, root, renderPriorityLevel) {
            var node = root;
            while (true) {
              commitUnmount(finishedRoot, node, renderPriorityLevel);
              if (node.child !== null && (!supportsMutation || node.tag !== HostPortal)) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === root) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === root) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
          function detachFiber(current$$1) {
            var alternate = current$$1.alternate;
            current$$1.return = null;
            current$$1.child = null;
            current$$1.memoizedState = null;
            current$$1.updateQueue = null;
            current$$1.dependencies = null;
            current$$1.alternate = null;
            current$$1.firstEffect = null;
            current$$1.lastEffect = null;
            current$$1.pendingProps = null;
            current$$1.memoizedProps = null;
            if (alternate !== null) {
              detachFiber(alternate);
            }
          }
          function emptyPortalContainer(current$$1) {
            if (!supportsPersistence) {
              return;
            }
            var portal = current$$1.stateNode;
            var containerInfo = portal.containerInfo;
            var emptyChildSet = createContainerChildSet(containerInfo);
            replaceContainerChildren(containerInfo, emptyChildSet);
          }
          function commitContainer(finishedWork) {
            if (!supportsPersistence) {
              return;
            }
            switch (finishedWork.tag) {
              case ClassComponent:
              case HostComponent:
              case HostText:
              case FundamentalComponent: {
                return;
              }
              case HostRoot:
              case HostPortal: {
                var portalOrRoot = finishedWork.stateNode;
                var containerInfo = portalOrRoot.containerInfo, pendingChildren = portalOrRoot.pendingChildren;
                replaceContainerChildren(containerInfo, pendingChildren);
                return;
              }
              default: {
                {
                  {
                    throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
                  }
                }
              }
            }
          }
          function getHostParentFiber(fiber) {
            var parent = fiber.return;
            while (parent !== null) {
              if (isHostParent(parent)) {
                return parent;
              }
              parent = parent.return;
            }
            {
              {
                throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          function isHostParent(fiber) {
            return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
          }
          function getHostSibling(fiber) {
            var node = fiber;
            siblings:
              while (true) {
                while (node.sibling === null) {
                  if (node.return === null || isHostParent(node.return)) {
                    return null;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
                while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
                  if (node.effectTag & Placement) {
                    continue siblings;
                  }
                  if (node.child === null || node.tag === HostPortal) {
                    continue siblings;
                  } else {
                    node.child.return = node;
                    node = node.child;
                  }
                }
                if (!(node.effectTag & Placement)) {
                  return node.stateNode;
                }
              }
          }
          function commitPlacement(finishedWork) {
            if (!supportsMutation) {
              return;
            }
            var parentFiber = getHostParentFiber(finishedWork);
            var parent;
            var isContainer;
            var parentStateNode = parentFiber.stateNode;
            switch (parentFiber.tag) {
              case HostComponent:
                parent = parentStateNode;
                isContainer = false;
                break;
              case HostRoot:
                parent = parentStateNode.containerInfo;
                isContainer = true;
                break;
              case HostPortal:
                parent = parentStateNode.containerInfo;
                isContainer = true;
                break;
              case FundamentalComponent:
                if (enableFundamentalAPI) {
                  parent = parentStateNode.instance;
                  isContainer = false;
                }
              default: {
                {
                  throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
            }
            if (parentFiber.effectTag & ContentReset) {
              resetTextContent(parent);
              parentFiber.effectTag &= ~ContentReset;
            }
            var before = getHostSibling(finishedWork);
            var node = finishedWork;
            while (true) {
              var isHost = node.tag === HostComponent || node.tag === HostText;
              if (isHost || enableFundamentalAPI && node.tag === FundamentalComponent) {
                var stateNode = isHost ? node.stateNode : node.stateNode.instance;
                if (before) {
                  if (isContainer) {
                    insertInContainerBefore(parent, stateNode, before);
                  } else {
                    insertBefore(parent, stateNode, before);
                  }
                } else {
                  if (isContainer) {
                    appendChildToContainer(parent, stateNode);
                  } else {
                    appendChild(parent, stateNode);
                  }
                }
              } else if (node.tag === HostPortal) {
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === finishedWork) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === finishedWork) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
          function unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel) {
            var node = current$$1;
            var currentParentIsValid = false;
            var currentParent;
            var currentParentIsContainer;
            while (true) {
              if (!currentParentIsValid) {
                var parent = node.return;
                findParent:
                  while (true) {
                    if (!(parent !== null)) {
                      {
                        throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
                      }
                    }
                    var parentStateNode = parent.stateNode;
                    switch (parent.tag) {
                      case HostComponent:
                        currentParent = parentStateNode;
                        currentParentIsContainer = false;
                        break findParent;
                      case HostRoot:
                        currentParent = parentStateNode.containerInfo;
                        currentParentIsContainer = true;
                        break findParent;
                      case HostPortal:
                        currentParent = parentStateNode.containerInfo;
                        currentParentIsContainer = true;
                        break findParent;
                      case FundamentalComponent:
                        if (enableFundamentalAPI) {
                          currentParent = parentStateNode.instance;
                          currentParentIsContainer = false;
                        }
                    }
                    parent = parent.return;
                  }
                currentParentIsValid = true;
              }
              if (node.tag === HostComponent || node.tag === HostText) {
                commitNestedUnmounts(finishedRoot, node, renderPriorityLevel);
                if (currentParentIsContainer) {
                  removeChildFromContainer(currentParent, node.stateNode);
                } else {
                  removeChild(currentParent, node.stateNode);
                }
              } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
                var fundamentalNode = node.stateNode.instance;
                commitNestedUnmounts(finishedRoot, node, renderPriorityLevel);
                if (currentParentIsContainer) {
                  removeChildFromContainer(currentParent, fundamentalNode);
                } else {
                  removeChild(currentParent, fundamentalNode);
                }
              } else if (enableSuspenseServerRenderer && node.tag === DehydratedFragment) {
                if (enableSuspenseCallback) {
                  var hydrationCallbacks = finishedRoot.hydrationCallbacks;
                  if (hydrationCallbacks !== null) {
                    var onDeleted = hydrationCallbacks.onDeleted;
                    if (onDeleted) {
                      onDeleted(node.stateNode);
                    }
                  }
                }
                if (currentParentIsContainer) {
                  clearSuspenseBoundaryFromContainer(currentParent, node.stateNode);
                } else {
                  clearSuspenseBoundary(currentParent, node.stateNode);
                }
              } else if (node.tag === HostPortal) {
                if (node.child !== null) {
                  currentParent = node.stateNode.containerInfo;
                  currentParentIsContainer = true;
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
              } else {
                commitUnmount(finishedRoot, node, renderPriorityLevel);
                if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
              }
              if (node === current$$1) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === current$$1) {
                  return;
                }
                node = node.return;
                if (node.tag === HostPortal) {
                  currentParentIsValid = false;
                }
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
          function commitDeletion(finishedRoot, current$$1, renderPriorityLevel) {
            if (supportsMutation) {
              unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel);
            } else {
              commitNestedUnmounts(finishedRoot, current$$1, renderPriorityLevel);
            }
            detachFiber(current$$1);
          }
          function commitWork(current$$1, finishedWork) {
            if (!supportsMutation) {
              switch (finishedWork.tag) {
                case FunctionComponent:
                case ForwardRef:
                case MemoComponent:
                case SimpleMemoComponent: {
                  commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
                  return;
                }
                case Profiler: {
                  return;
                }
                case SuspenseComponent: {
                  commitSuspenseComponent(finishedWork);
                  attachSuspenseRetryListeners(finishedWork);
                  return;
                }
                case SuspenseListComponent: {
                  attachSuspenseRetryListeners(finishedWork);
                  return;
                }
                case HostRoot: {
                  if (supportsHydration) {
                    var root = finishedWork.stateNode;
                    if (root.hydrate) {
                      root.hydrate = false;
                      commitHydratedContainer(root.containerInfo);
                    }
                  }
                  break;
                }
              }
              commitContainer(finishedWork);
              return;
            }
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case MemoComponent:
              case SimpleMemoComponent: {
                commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
                return;
              }
              case ClassComponent: {
                return;
              }
              case HostComponent: {
                var instance = finishedWork.stateNode;
                if (instance != null) {
                  var newProps = finishedWork.memoizedProps;
                  var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;
                  var type2 = finishedWork.type;
                  var updatePayload = finishedWork.updateQueue;
                  finishedWork.updateQueue = null;
                  if (updatePayload !== null) {
                    commitUpdate(instance, updatePayload, type2, oldProps, newProps, finishedWork);
                  }
                  if (enableFlareAPI) {
                    var prevListeners = oldProps.listeners;
                    var nextListeners = newProps.listeners;
                    if (prevListeners !== nextListeners) {
                      updateEventListeners(nextListeners, finishedWork, null);
                    }
                  }
                }
                return;
              }
              case HostText: {
                if (!(finishedWork.stateNode !== null)) {
                  {
                    throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                  }
                }
                var textInstance = finishedWork.stateNode;
                var newText = finishedWork.memoizedProps;
                var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;
                commitTextUpdate(textInstance, oldText, newText);
                return;
              }
              case HostRoot: {
                if (supportsHydration) {
                  var _root = finishedWork.stateNode;
                  if (_root.hydrate) {
                    _root.hydrate = false;
                    commitHydratedContainer(_root.containerInfo);
                  }
                }
                return;
              }
              case Profiler: {
                return;
              }
              case SuspenseComponent: {
                commitSuspenseComponent(finishedWork);
                attachSuspenseRetryListeners(finishedWork);
                return;
              }
              case SuspenseListComponent: {
                attachSuspenseRetryListeners(finishedWork);
                return;
              }
              case IncompleteClassComponent: {
                return;
              }
              case FundamentalComponent: {
                if (enableFundamentalAPI) {
                  var fundamentalInstance = finishedWork.stateNode;
                  updateFundamentalComponent(fundamentalInstance);
                }
                return;
              }
              case ScopeComponent: {
                if (enableScopeAPI) {
                  var scopeInstance = finishedWork.stateNode;
                  scopeInstance.fiber = finishedWork;
                  if (enableFlareAPI) {
                    var _newProps = finishedWork.memoizedProps;
                    var _oldProps = current$$1 !== null ? current$$1.memoizedProps : _newProps;
                    var _prevListeners = _oldProps.listeners;
                    var _nextListeners = _newProps.listeners;
                    if (_prevListeners !== _nextListeners) {
                      updateEventListeners(_nextListeners, finishedWork, null);
                    }
                  }
                }
                return;
              }
              default: {
                {
                  {
                    throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
                  }
                }
              }
            }
          }
          function commitSuspenseComponent(finishedWork) {
            var newState = finishedWork.memoizedState;
            var newDidTimeout;
            var primaryChildParent = finishedWork;
            if (newState === null) {
              newDidTimeout = false;
            } else {
              newDidTimeout = true;
              primaryChildParent = finishedWork.child;
              markCommitTimeOfFallback();
            }
            if (supportsMutation && primaryChildParent !== null) {
              hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);
            }
            if (enableSuspenseCallback && newState !== null) {
              var suspenseCallback = finishedWork.memoizedProps.suspenseCallback;
              if (typeof suspenseCallback === "function") {
                var thenables = finishedWork.updateQueue;
                if (thenables !== null) {
                  suspenseCallback(new Set(thenables));
                }
              } else {
                if (suspenseCallback !== void 0) {
                  warning$1(false, "Unexpected type for suspenseCallback.");
                }
              }
            }
          }
          function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
            if (!supportsHydration) {
              return;
            }
            var newState = finishedWork.memoizedState;
            if (newState === null) {
              var current$$1 = finishedWork.alternate;
              if (current$$1 !== null) {
                var prevState = current$$1.memoizedState;
                if (prevState !== null) {
                  var suspenseInstance = prevState.dehydrated;
                  if (suspenseInstance !== null) {
                    commitHydratedSuspenseInstance(suspenseInstance);
                    if (enableSuspenseCallback) {
                      var hydrationCallbacks = finishedRoot.hydrationCallbacks;
                      if (hydrationCallbacks !== null) {
                        var onHydrated = hydrationCallbacks.onHydrated;
                        if (onHydrated) {
                          onHydrated(suspenseInstance);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          function attachSuspenseRetryListeners(finishedWork) {
            var thenables = finishedWork.updateQueue;
            if (thenables !== null) {
              finishedWork.updateQueue = null;
              var retryCache = finishedWork.stateNode;
              if (retryCache === null) {
                retryCache = finishedWork.stateNode = new PossiblyWeakSet();
              }
              thenables.forEach(function(thenable) {
                var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
                if (!retryCache.has(thenable)) {
                  if (enableSchedulerTracing) {
                    if (thenable.__reactDoNotTraceInteractions !== true) {
                      retry = tracing.unstable_wrap(retry);
                    }
                  }
                  retryCache.add(thenable);
                  thenable.then(retry, retry);
                }
              });
            }
          }
          function commitResetTextContent(current$$1) {
            if (!supportsMutation) {
              return;
            }
            resetTextContent(current$$1.stateNode);
          }
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
            var update = createUpdate(expirationTime, null);
            update.tag = CaptureUpdate;
            update.payload = {
              element: null
            };
            var error = errorInfo.value;
            update.callback = function() {
              onUncaughtError(error);
              logError(fiber, errorInfo);
            };
            return update;
          }
          function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
            var update = createUpdate(expirationTime, null);
            update.tag = CaptureUpdate;
            var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
            if (typeof getDerivedStateFromError === "function") {
              var error = errorInfo.value;
              update.payload = function() {
                logError(fiber, errorInfo);
                return getDerivedStateFromError(error);
              };
            }
            var inst = fiber.stateNode;
            if (inst !== null && typeof inst.componentDidCatch === "function") {
              update.callback = function callback() {
                {
                  markFailedErrorBoundaryForHotReloading(fiber);
                }
                if (typeof getDerivedStateFromError !== "function") {
                  markLegacyErrorBoundaryAsFailed(this);
                  logError(fiber, errorInfo);
                }
                var error2 = errorInfo.value;
                var stack = errorInfo.stack;
                this.componentDidCatch(error2, {
                  componentStack: stack !== null ? stack : ""
                });
                {
                  if (typeof getDerivedStateFromError !== "function") {
                    !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, "%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentName(fiber.type) || "Unknown") : void 0;
                  }
                }
              };
            } else {
              update.callback = function() {
                markFailedErrorBoundaryForHotReloading(fiber);
              };
            }
            return update;
          }
          function attachPingListener(root, renderExpirationTime2, thenable) {
            var pingCache = root.pingCache;
            var threadIDs;
            if (pingCache === null) {
              pingCache = root.pingCache = new PossiblyWeakMap();
              threadIDs = /* @__PURE__ */ new Set();
              pingCache.set(thenable, threadIDs);
            } else {
              threadIDs = pingCache.get(thenable);
              if (threadIDs === void 0) {
                threadIDs = /* @__PURE__ */ new Set();
                pingCache.set(thenable, threadIDs);
              }
            }
            if (!threadIDs.has(renderExpirationTime2)) {
              threadIDs.add(renderExpirationTime2);
              var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime2);
              thenable.then(ping, ping);
            }
          }
          function throwException(root, returnFiber, sourceFiber, value, renderExpirationTime2) {
            sourceFiber.effectTag |= Incomplete;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;
            if (value !== null && typeof value === "object" && typeof value.then === "function") {
              var thenable = value;
              checkForWrongSuspensePriorityInDEV(sourceFiber);
              var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext);
              var _workInProgress = returnFiber;
              do {
                if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
                  var thenables = _workInProgress.updateQueue;
                  if (thenables === null) {
                    var updateQueue = /* @__PURE__ */ new Set();
                    updateQueue.add(thenable);
                    _workInProgress.updateQueue = updateQueue;
                  } else {
                    thenables.add(thenable);
                  }
                  if ((_workInProgress.mode & BlockingMode) === NoMode) {
                    _workInProgress.effectTag |= DidCapture;
                    sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);
                    if (sourceFiber.tag === ClassComponent) {
                      var currentSourceFiber = sourceFiber.alternate;
                      if (currentSourceFiber === null) {
                        sourceFiber.tag = IncompleteClassComponent;
                      } else {
                        var update = createUpdate(Sync, null);
                        update.tag = ForceUpdate;
                        enqueueUpdate(sourceFiber, update);
                      }
                    }
                    sourceFiber.expirationTime = Sync;
                    return;
                  }
                  attachPingListener(root, renderExpirationTime2, thenable);
                  _workInProgress.effectTag |= ShouldCapture;
                  _workInProgress.expirationTime = renderExpirationTime2;
                  return;
                }
                _workInProgress = _workInProgress.return;
              } while (_workInProgress !== null);
              value = new Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }
            renderDidError();
            value = createCapturedValue(value, sourceFiber);
            var workInProgress2 = returnFiber;
            do {
              switch (workInProgress2.tag) {
                case HostRoot: {
                  var _errorInfo = value;
                  workInProgress2.effectTag |= ShouldCapture;
                  workInProgress2.expirationTime = renderExpirationTime2;
                  var _update = createRootErrorUpdate(workInProgress2, _errorInfo, renderExpirationTime2);
                  enqueueCapturedUpdate(workInProgress2, _update);
                  return;
                }
                case ClassComponent:
                  var errorInfo = value;
                  var ctor = workInProgress2.type;
                  var instance = workInProgress2.stateNode;
                  if ((workInProgress2.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === "function" || instance !== null && typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                    workInProgress2.effectTag |= ShouldCapture;
                    workInProgress2.expirationTime = renderExpirationTime2;
                    var _update2 = createClassErrorUpdate(workInProgress2, errorInfo, renderExpirationTime2);
                    enqueueCapturedUpdate(workInProgress2, _update2);
                    return;
                  }
                  break;
                default:
                  break;
              }
              workInProgress2 = workInProgress2.return;
            } while (workInProgress2 !== null);
          }
          var ceil = Math.ceil;
          var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
          var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
          var IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
          var NoContext = 0;
          var BatchedContext = 1;
          var EventContext = 2;
          var DiscreteEventContext = 4;
          var LegacyUnbatchedContext = 8;
          var RenderContext = 16;
          var CommitContext = 32;
          var RootIncomplete = 0;
          var RootFatalErrored = 1;
          var RootErrored = 2;
          var RootSuspended = 3;
          var RootSuspendedWithDelay = 4;
          var RootCompleted = 5;
          var executionContext = NoContext;
          var workInProgressRoot = null;
          var workInProgress = null;
          var renderExpirationTime = NoWork;
          var workInProgressRootExitStatus = RootIncomplete;
          var workInProgressRootFatalError = null;
          var workInProgressRootLatestProcessedExpirationTime = Sync;
          var workInProgressRootLatestSuspenseTimeout = Sync;
          var workInProgressRootCanSuspendUsingConfig = null;
          var workInProgressRootNextUnprocessedUpdateTime = NoWork;
          var workInProgressRootHasPendingPing = false;
          var globalMostRecentFallbackTime = 0;
          var FALLBACK_THROTTLE_MS = 500;
          var nextEffect = null;
          var hasUncaughtError = false;
          var firstUncaughtError = null;
          var legacyErrorBoundariesThatAlreadyFailed = null;
          var rootDoesHavePassiveEffects = false;
          var rootWithPendingPassiveEffects = null;
          var pendingPassiveEffectsRenderPriority = NoPriority;
          var pendingPassiveEffectsExpirationTime = NoWork;
          var rootsWithPendingDiscreteUpdates = null;
          var NESTED_UPDATE_LIMIT = 50;
          var nestedUpdateCount = 0;
          var rootWithNestedUpdates = null;
          var NESTED_PASSIVE_UPDATE_LIMIT = 50;
          var nestedPassiveUpdateCount = 0;
          var interruptedBy = null;
          var spawnedWorkDuringRender = null;
          var currentEventTime = NoWork;
          function requestCurrentTimeForUpdate() {
            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
              return msToExpirationTime(now$1());
            }
            if (currentEventTime !== NoWork) {
              return currentEventTime;
            }
            currentEventTime = msToExpirationTime(now$1());
            return currentEventTime;
          }
          function getCurrentTime() {
            return msToExpirationTime(now$1());
          }
          function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
            var mode = fiber.mode;
            if ((mode & BlockingMode) === NoMode) {
              return Sync;
            }
            var priorityLevel = getCurrentPriorityLevel();
            if ((mode & ConcurrentMode) === NoMode) {
              return priorityLevel === ImmediatePriority ? Sync : Batched;
            }
            if ((executionContext & RenderContext) !== NoContext) {
              return renderExpirationTime;
            }
            var expirationTime;
            if (suspenseConfig !== null) {
              expirationTime = computeSuspenseExpiration(currentTime, suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION);
            } else {
              switch (priorityLevel) {
                case ImmediatePriority:
                  expirationTime = Sync;
                  break;
                case UserBlockingPriority:
                  expirationTime = computeInteractiveExpiration(currentTime);
                  break;
                case NormalPriority:
                case LowPriority:
                  expirationTime = computeAsyncExpiration(currentTime);
                  break;
                case IdlePriority:
                  expirationTime = Idle;
                  break;
                default: {
                  {
                    throw Error("Expected a valid priority level");
                  }
                }
              }
            }
            if (workInProgressRoot !== null && expirationTime === renderExpirationTime) {
              expirationTime -= 1;
            }
            return expirationTime;
          }
          function scheduleUpdateOnFiber(fiber, expirationTime) {
            checkForNestedUpdates();
            warnAboutInvalidUpdatesOnClassComponentsInDEV(fiber);
            var root = markUpdateTimeFromFiberToRoot(fiber, expirationTime);
            if (root === null) {
              warnAboutUpdateOnUnmountedFiberInDEV(fiber);
              return;
            }
            checkForInterruption(fiber, expirationTime);
            recordScheduleUpdate();
            var priorityLevel = getCurrentPriorityLevel();
            if (expirationTime === Sync) {
              if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & (RenderContext | CommitContext)) === NoContext) {
                schedulePendingInteractions(root, expirationTime);
                performSyncWorkOnRoot(root);
              } else {
                ensureRootIsScheduled(root);
                schedulePendingInteractions(root, expirationTime);
                if (executionContext === NoContext) {
                  flushSyncCallbackQueue();
                }
              }
            } else {
              ensureRootIsScheduled(root);
              schedulePendingInteractions(root, expirationTime);
            }
            if ((executionContext & DiscreteEventContext) !== NoContext && (priorityLevel === UserBlockingPriority || priorityLevel === ImmediatePriority)) {
              if (rootsWithPendingDiscreteUpdates === null) {
                rootsWithPendingDiscreteUpdates = /* @__PURE__ */ new Map([[root, expirationTime]]);
              } else {
                var lastDiscreteTime = rootsWithPendingDiscreteUpdates.get(root);
                if (lastDiscreteTime === void 0 || lastDiscreteTime > expirationTime) {
                  rootsWithPendingDiscreteUpdates.set(root, expirationTime);
                }
              }
            }
          }
          var scheduleWork = scheduleUpdateOnFiber;
          function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
            if (fiber.expirationTime < expirationTime) {
              fiber.expirationTime = expirationTime;
            }
            var alternate = fiber.alternate;
            if (alternate !== null && alternate.expirationTime < expirationTime) {
              alternate.expirationTime = expirationTime;
            }
            var node = fiber.return;
            var root = null;
            if (node === null && fiber.tag === HostRoot) {
              root = fiber.stateNode;
            } else {
              while (node !== null) {
                alternate = node.alternate;
                if (node.childExpirationTime < expirationTime) {
                  node.childExpirationTime = expirationTime;
                  if (alternate !== null && alternate.childExpirationTime < expirationTime) {
                    alternate.childExpirationTime = expirationTime;
                  }
                } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {
                  alternate.childExpirationTime = expirationTime;
                }
                if (node.return === null && node.tag === HostRoot) {
                  root = node.stateNode;
                  break;
                }
                node = node.return;
              }
            }
            if (root !== null) {
              if (workInProgressRoot === root) {
                markUnprocessedUpdateTime(expirationTime);
                if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
                  markRootSuspendedAtTime(root, renderExpirationTime);
                }
              }
              markRootUpdatedAtTime(root, expirationTime);
            }
            return root;
          }
          function getNextRootExpirationTimeToWorkOn(root) {
            var lastExpiredTime = root.lastExpiredTime;
            if (lastExpiredTime !== NoWork) {
              return lastExpiredTime;
            }
            var firstPendingTime = root.firstPendingTime;
            if (!isRootSuspendedAtTime(root, firstPendingTime)) {
              return firstPendingTime;
            }
            var lastPingedTime = root.lastPingedTime;
            var nextKnownPendingLevel = root.nextKnownPendingLevel;
            return lastPingedTime > nextKnownPendingLevel ? lastPingedTime : nextKnownPendingLevel;
          }
          function ensureRootIsScheduled(root) {
            var lastExpiredTime = root.lastExpiredTime;
            if (lastExpiredTime !== NoWork) {
              root.callbackExpirationTime = Sync;
              root.callbackPriority = ImmediatePriority;
              root.callbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
              return;
            }
            var expirationTime = getNextRootExpirationTimeToWorkOn(root);
            var existingCallbackNode = root.callbackNode;
            if (expirationTime === NoWork) {
              if (existingCallbackNode !== null) {
                root.callbackNode = null;
                root.callbackExpirationTime = NoWork;
                root.callbackPriority = NoPriority;
              }
              return;
            }
            var currentTime = requestCurrentTimeForUpdate();
            var priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime);
            if (existingCallbackNode !== null) {
              var existingCallbackPriority = root.callbackPriority;
              var existingCallbackExpirationTime = root.callbackExpirationTime;
              if (existingCallbackExpirationTime === expirationTime && existingCallbackPriority >= priorityLevel) {
                return;
              }
              cancelCallback(existingCallbackNode);
            }
            root.callbackExpirationTime = expirationTime;
            root.callbackPriority = priorityLevel;
            var callbackNode;
            if (expirationTime === Sync) {
              callbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
            } else if (disableSchedulerTimeoutBasedOnReactExpirationTime) {
              callbackNode = scheduleCallback(priorityLevel, performConcurrentWorkOnRoot.bind(null, root));
            } else {
              callbackNode = scheduleCallback(
                priorityLevel,
                performConcurrentWorkOnRoot.bind(null, root),
                {
                  timeout: expirationTimeToMs(expirationTime) - now$1()
                }
              );
            }
            root.callbackNode = callbackNode;
          }
          function performConcurrentWorkOnRoot(root, didTimeout) {
            currentEventTime = NoWork;
            if (didTimeout) {
              var currentTime = requestCurrentTimeForUpdate();
              markRootExpiredAtTime(root, currentTime);
              ensureRootIsScheduled(root);
              return null;
            }
            var expirationTime = getNextRootExpirationTimeToWorkOn(root);
            if (expirationTime !== NoWork) {
              var originalCallbackNode = root.callbackNode;
              if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
                {
                  throw Error("Should not already be working.");
                }
              }
              flushPassiveEffects();
              if (root !== workInProgressRoot || expirationTime !== renderExpirationTime) {
                prepareFreshStack(root, expirationTime);
                startWorkOnPendingInteractions(root, expirationTime);
              }
              if (workInProgress !== null) {
                var prevExecutionContext = executionContext;
                executionContext |= RenderContext;
                var prevDispatcher = pushDispatcher(root);
                var prevInteractions = pushInteractions(root);
                startWorkLoopTimer(workInProgress);
                do {
                  try {
                    workLoopConcurrent();
                    break;
                  } catch (thrownValue) {
                    handleError(root, thrownValue);
                  }
                } while (true);
                resetContextDependencies();
                executionContext = prevExecutionContext;
                popDispatcher(prevDispatcher);
                if (enableSchedulerTracing) {
                  popInteractions(prevInteractions);
                }
                if (workInProgressRootExitStatus === RootFatalErrored) {
                  var fatalError = workInProgressRootFatalError;
                  stopInterruptedWorkLoopTimer();
                  prepareFreshStack(root, expirationTime);
                  markRootSuspendedAtTime(root, expirationTime);
                  ensureRootIsScheduled(root);
                  throw fatalError;
                }
                if (workInProgress !== null) {
                  stopInterruptedWorkLoopTimer();
                } else {
                  stopFinishedWorkLoopTimer();
                  var finishedWork = root.finishedWork = root.current.alternate;
                  root.finishedExpirationTime = expirationTime;
                  finishConcurrentRender(root, finishedWork, workInProgressRootExitStatus, expirationTime);
                }
                ensureRootIsScheduled(root);
                if (root.callbackNode === originalCallbackNode) {
                  return performConcurrentWorkOnRoot.bind(null, root);
                }
              }
            }
            return null;
          }
          function finishConcurrentRender(root, finishedWork, exitStatus, expirationTime) {
            workInProgressRoot = null;
            switch (exitStatus) {
              case RootIncomplete:
              case RootFatalErrored: {
                {
                  {
                    throw Error("Root did not complete. This is a bug in React.");
                  }
                }
              }
              case RootErrored: {
                markRootExpiredAtTime(root, expirationTime > Idle ? Idle : expirationTime);
                break;
              }
              case RootSuspended: {
                markRootSuspendedAtTime(root, expirationTime);
                var lastSuspendedTime = root.lastSuspendedTime;
                if (expirationTime === lastSuspendedTime) {
                  root.nextKnownPendingLevel = getRemainingExpirationTime(finishedWork);
                }
                flushSuspensePriorityWarningInDEV();
                var hasNotProcessedNewUpdates = workInProgressRootLatestProcessedExpirationTime === Sync;
                if (hasNotProcessedNewUpdates && !(flushSuspenseFallbacksInTests && IsThisRendererActing.current)) {
                  var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now$1();
                  if (msUntilTimeout > 10) {
                    if (workInProgressRootHasPendingPing) {
                      var lastPingedTime = root.lastPingedTime;
                      if (lastPingedTime === NoWork || lastPingedTime >= expirationTime) {
                        root.lastPingedTime = expirationTime;
                        prepareFreshStack(root, expirationTime);
                        break;
                      }
                    }
                    var nextTime = getNextRootExpirationTimeToWorkOn(root);
                    if (nextTime !== NoWork && nextTime !== expirationTime) {
                      break;
                    }
                    if (lastSuspendedTime !== NoWork && lastSuspendedTime !== expirationTime) {
                      root.lastPingedTime = lastSuspendedTime;
                      break;
                    }
                    root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);
                    break;
                  }
                }
                commitRoot(root);
                break;
              }
              case RootSuspendedWithDelay: {
                markRootSuspendedAtTime(root, expirationTime);
                var _lastSuspendedTime = root.lastSuspendedTime;
                if (expirationTime === _lastSuspendedTime) {
                  root.nextKnownPendingLevel = getRemainingExpirationTime(finishedWork);
                }
                flushSuspensePriorityWarningInDEV();
                if (!(flushSuspenseFallbacksInTests && IsThisRendererActing.current)) {
                  if (workInProgressRootHasPendingPing) {
                    var _lastPingedTime = root.lastPingedTime;
                    if (_lastPingedTime === NoWork || _lastPingedTime >= expirationTime) {
                      root.lastPingedTime = expirationTime;
                      prepareFreshStack(root, expirationTime);
                      break;
                    }
                  }
                  var _nextTime = getNextRootExpirationTimeToWorkOn(root);
                  if (_nextTime !== NoWork && _nextTime !== expirationTime) {
                    break;
                  }
                  if (_lastSuspendedTime !== NoWork && _lastSuspendedTime !== expirationTime) {
                    root.lastPingedTime = _lastSuspendedTime;
                    break;
                  }
                  var _msUntilTimeout;
                  if (workInProgressRootLatestSuspenseTimeout !== Sync) {
                    _msUntilTimeout = expirationTimeToMs(workInProgressRootLatestSuspenseTimeout) - now$1();
                  } else if (workInProgressRootLatestProcessedExpirationTime === Sync) {
                    _msUntilTimeout = 0;
                  } else {
                    var eventTimeMs = inferTimeFromExpirationTime(workInProgressRootLatestProcessedExpirationTime);
                    var currentTimeMs = now$1();
                    var timeUntilExpirationMs = expirationTimeToMs(expirationTime) - currentTimeMs;
                    var timeElapsed = currentTimeMs - eventTimeMs;
                    if (timeElapsed < 0) {
                      timeElapsed = 0;
                    }
                    _msUntilTimeout = jnd(timeElapsed) - timeElapsed;
                    if (timeUntilExpirationMs < _msUntilTimeout) {
                      _msUntilTimeout = timeUntilExpirationMs;
                    }
                  }
                  if (_msUntilTimeout > 10) {
                    root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout);
                    break;
                  }
                }
                commitRoot(root);
                break;
              }
              case RootCompleted: {
                if (!(flushSuspenseFallbacksInTests && IsThisRendererActing.current) && workInProgressRootLatestProcessedExpirationTime !== Sync && workInProgressRootCanSuspendUsingConfig !== null) {
                  var _msUntilTimeout2 = computeMsUntilSuspenseLoadingDelay(workInProgressRootLatestProcessedExpirationTime, expirationTime, workInProgressRootCanSuspendUsingConfig);
                  if (_msUntilTimeout2 > 10) {
                    markRootSuspendedAtTime(root, expirationTime);
                    root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout2);
                    break;
                  }
                }
                commitRoot(root);
                break;
              }
              default: {
                {
                  {
                    throw Error("Unknown root exit status.");
                  }
                }
              }
            }
          }
          function performSyncWorkOnRoot(root) {
            var lastExpiredTime = root.lastExpiredTime;
            var expirationTime = lastExpiredTime !== NoWork ? lastExpiredTime : Sync;
            if (root.finishedExpirationTime === expirationTime) {
              commitRoot(root);
            } else {
              if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
                {
                  throw Error("Should not already be working.");
                }
              }
              flushPassiveEffects();
              if (root !== workInProgressRoot || expirationTime !== renderExpirationTime) {
                prepareFreshStack(root, expirationTime);
                startWorkOnPendingInteractions(root, expirationTime);
              }
              if (workInProgress !== null) {
                var prevExecutionContext = executionContext;
                executionContext |= RenderContext;
                var prevDispatcher = pushDispatcher(root);
                var prevInteractions = pushInteractions(root);
                startWorkLoopTimer(workInProgress);
                do {
                  try {
                    workLoopSync();
                    break;
                  } catch (thrownValue) {
                    handleError(root, thrownValue);
                  }
                } while (true);
                resetContextDependencies();
                executionContext = prevExecutionContext;
                popDispatcher(prevDispatcher);
                if (enableSchedulerTracing) {
                  popInteractions(prevInteractions);
                }
                if (workInProgressRootExitStatus === RootFatalErrored) {
                  var fatalError = workInProgressRootFatalError;
                  stopInterruptedWorkLoopTimer();
                  prepareFreshStack(root, expirationTime);
                  markRootSuspendedAtTime(root, expirationTime);
                  ensureRootIsScheduled(root);
                  throw fatalError;
                }
                if (workInProgress !== null) {
                  {
                    {
                      throw Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
                    }
                  }
                } else {
                  stopFinishedWorkLoopTimer();
                  root.finishedWork = root.current.alternate;
                  root.finishedExpirationTime = expirationTime;
                  finishSyncRender(root, workInProgressRootExitStatus, expirationTime);
                }
                ensureRootIsScheduled(root);
              }
            }
            return null;
          }
          function finishSyncRender(root, exitStatus, expirationTime) {
            workInProgressRoot = null;
            {
              if (exitStatus === RootSuspended || exitStatus === RootSuspendedWithDelay) {
                flushSuspensePriorityWarningInDEV();
              }
            }
            commitRoot(root);
          }
          function flushRoot(root, expirationTime) {
            markRootExpiredAtTime(root, expirationTime);
            ensureRootIsScheduled(root);
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
              flushSyncCallbackQueue();
            }
          }
          function flushDiscreteUpdates() {
            if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
              if ((executionContext & RenderContext) !== NoContext) {
                warning$1(false, "unstable_flushDiscreteUpdates: Cannot flush updates when React is already rendering.");
              }
              return;
            }
            flushPendingDiscreteUpdates();
            flushPassiveEffects();
          }
          function deferredUpdates(fn) {
            return runWithPriority(NormalPriority, fn);
          }
          function syncUpdates(fn, a, b, c) {
            return runWithPriority(ImmediatePriority, fn.bind(null, a, b, c));
          }
          function flushPendingDiscreteUpdates() {
            if (rootsWithPendingDiscreteUpdates !== null) {
              var roots = rootsWithPendingDiscreteUpdates;
              rootsWithPendingDiscreteUpdates = null;
              roots.forEach(function(expirationTime, root) {
                markRootExpiredAtTime(root, expirationTime);
                ensureRootIsScheduled(root);
              });
              flushSyncCallbackQueue();
            }
          }
          function batchedUpdates(fn, a) {
            var prevExecutionContext = executionContext;
            executionContext |= BatchedContext;
            try {
              return fn(a);
            } finally {
              executionContext = prevExecutionContext;
              if (executionContext === NoContext) {
                flushSyncCallbackQueue();
              }
            }
          }
          function batchedEventUpdates(fn, a) {
            var prevExecutionContext = executionContext;
            executionContext |= EventContext;
            try {
              return fn(a);
            } finally {
              executionContext = prevExecutionContext;
              if (executionContext === NoContext) {
                flushSyncCallbackQueue();
              }
            }
          }
          function discreteUpdates(fn, a, b, c) {
            var prevExecutionContext = executionContext;
            executionContext |= DiscreteEventContext;
            try {
              return runWithPriority(UserBlockingPriority, fn.bind(null, a, b, c));
            } finally {
              executionContext = prevExecutionContext;
              if (executionContext === NoContext) {
                flushSyncCallbackQueue();
              }
            }
          }
          function unbatchedUpdates(fn, a) {
            var prevExecutionContext = executionContext;
            executionContext &= ~BatchedContext;
            executionContext |= LegacyUnbatchedContext;
            try {
              return fn(a);
            } finally {
              executionContext = prevExecutionContext;
              if (executionContext === NoContext) {
                flushSyncCallbackQueue();
              }
            }
          }
          function flushSync(fn, a) {
            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
              {
                {
                  throw Error("flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.");
                }
              }
            }
            var prevExecutionContext = executionContext;
            executionContext |= BatchedContext;
            try {
              return runWithPriority(ImmediatePriority, fn.bind(null, a));
            } finally {
              executionContext = prevExecutionContext;
              flushSyncCallbackQueue();
            }
          }
          function flushControlled(fn) {
            var prevExecutionContext = executionContext;
            executionContext |= BatchedContext;
            try {
              runWithPriority(ImmediatePriority, fn);
            } finally {
              executionContext = prevExecutionContext;
              if (executionContext === NoContext) {
                flushSyncCallbackQueue();
              }
            }
          }
          function prepareFreshStack(root, expirationTime) {
            root.finishedWork = null;
            root.finishedExpirationTime = NoWork;
            var timeoutHandle = root.timeoutHandle;
            if (timeoutHandle !== noTimeout) {
              root.timeoutHandle = noTimeout;
              cancelTimeout(timeoutHandle);
            }
            if (workInProgress !== null) {
              var interruptedWork = workInProgress.return;
              while (interruptedWork !== null) {
                unwindInterruptedWork(interruptedWork);
                interruptedWork = interruptedWork.return;
              }
            }
            workInProgressRoot = root;
            workInProgress = createWorkInProgress(root.current, null, expirationTime);
            renderExpirationTime = expirationTime;
            workInProgressRootExitStatus = RootIncomplete;
            workInProgressRootFatalError = null;
            workInProgressRootLatestProcessedExpirationTime = Sync;
            workInProgressRootLatestSuspenseTimeout = Sync;
            workInProgressRootCanSuspendUsingConfig = null;
            workInProgressRootNextUnprocessedUpdateTime = NoWork;
            workInProgressRootHasPendingPing = false;
            if (enableSchedulerTracing) {
              spawnedWorkDuringRender = null;
            }
            {
              ReactStrictModeWarnings.discardPendingWarnings();
              componentsThatTriggeredHighPriSuspend = null;
            }
          }
          function handleError(root, thrownValue) {
            do {
              try {
                resetContextDependencies();
                resetHooks();
                resetCurrentFiber();
                if (workInProgress === null || workInProgress.return === null) {
                  workInProgressRootExitStatus = RootFatalErrored;
                  workInProgressRootFatalError = thrownValue;
                  return null;
                }
                if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
                  stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);
                }
                throwException(root, workInProgress.return, workInProgress, thrownValue, renderExpirationTime);
                workInProgress = completeUnitOfWork(workInProgress);
              } catch (yetAnotherThrownValue) {
                thrownValue = yetAnotherThrownValue;
                continue;
              }
              return;
            } while (true);
          }
          function pushDispatcher(root) {
            var prevDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = ContextOnlyDispatcher;
            if (prevDispatcher === null) {
              return ContextOnlyDispatcher;
            } else {
              return prevDispatcher;
            }
          }
          function popDispatcher(prevDispatcher) {
            ReactCurrentDispatcher.current = prevDispatcher;
          }
          function pushInteractions(root) {
            if (enableSchedulerTracing) {
              var prevInteractions = tracing.__interactionsRef.current;
              tracing.__interactionsRef.current = root.memoizedInteractions;
              return prevInteractions;
            }
            return null;
          }
          function popInteractions(prevInteractions) {
            if (enableSchedulerTracing) {
              tracing.__interactionsRef.current = prevInteractions;
            }
          }
          function markCommitTimeOfFallback() {
            globalMostRecentFallbackTime = now$1();
          }
          function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
            if (expirationTime < workInProgressRootLatestProcessedExpirationTime && expirationTime > Idle) {
              workInProgressRootLatestProcessedExpirationTime = expirationTime;
            }
            if (suspenseConfig !== null) {
              if (expirationTime < workInProgressRootLatestSuspenseTimeout && expirationTime > Idle) {
                workInProgressRootLatestSuspenseTimeout = expirationTime;
                workInProgressRootCanSuspendUsingConfig = suspenseConfig;
              }
            }
          }
          function markUnprocessedUpdateTime(expirationTime) {
            if (expirationTime > workInProgressRootNextUnprocessedUpdateTime) {
              workInProgressRootNextUnprocessedUpdateTime = expirationTime;
            }
          }
          function renderDidSuspend() {
            if (workInProgressRootExitStatus === RootIncomplete) {
              workInProgressRootExitStatus = RootSuspended;
            }
          }
          function renderDidSuspendDelayIfPossible() {
            if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {
              workInProgressRootExitStatus = RootSuspendedWithDelay;
            }
            if (workInProgressRootNextUnprocessedUpdateTime !== NoWork && workInProgressRoot !== null) {
              markRootSuspendedAtTime(workInProgressRoot, renderExpirationTime);
              markRootUpdatedAtTime(workInProgressRoot, workInProgressRootNextUnprocessedUpdateTime);
            }
          }
          function renderDidError() {
            if (workInProgressRootExitStatus !== RootCompleted) {
              workInProgressRootExitStatus = RootErrored;
            }
          }
          function renderHasNotSuspendedYet() {
            return workInProgressRootExitStatus === RootIncomplete;
          }
          function inferTimeFromExpirationTime(expirationTime) {
            var earliestExpirationTimeMs = expirationTimeToMs(expirationTime);
            return earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;
          }
          function inferTimeFromExpirationTimeWithSuspenseConfig(expirationTime, suspenseConfig) {
            var earliestExpirationTimeMs = expirationTimeToMs(expirationTime);
            return earliestExpirationTimeMs - (suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION);
          }
          function workLoopSync() {
            while (workInProgress !== null) {
              workInProgress = performUnitOfWork(workInProgress);
            }
          }
          function workLoopConcurrent() {
            while (workInProgress !== null && !shouldYield()) {
              workInProgress = performUnitOfWork(workInProgress);
            }
          }
          function performUnitOfWork(unitOfWork) {
            var current$$1 = unitOfWork.alternate;
            startWorkTimer(unitOfWork);
            setCurrentFiber(unitOfWork);
            var next;
            if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {
              startProfilerTimer(unitOfWork);
              next = beginWork$$1(current$$1, unitOfWork, renderExpirationTime);
              stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
            } else {
              next = beginWork$$1(current$$1, unitOfWork, renderExpirationTime);
            }
            resetCurrentFiber();
            unitOfWork.memoizedProps = unitOfWork.pendingProps;
            if (next === null) {
              next = completeUnitOfWork(unitOfWork);
            }
            ReactCurrentOwner$1.current = null;
            return next;
          }
          function completeUnitOfWork(unitOfWork) {
            workInProgress = unitOfWork;
            do {
              var current$$1 = workInProgress.alternate;
              var returnFiber = workInProgress.return;
              if ((workInProgress.effectTag & Incomplete) === NoEffect) {
                setCurrentFiber(workInProgress);
                var next = void 0;
                if (!enableProfilerTimer || (workInProgress.mode & ProfileMode) === NoMode) {
                  next = completeWork(current$$1, workInProgress, renderExpirationTime);
                } else {
                  startProfilerTimer(workInProgress);
                  next = completeWork(current$$1, workInProgress, renderExpirationTime);
                  stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);
                }
                stopWorkTimer(workInProgress);
                resetCurrentFiber();
                resetChildExpirationTime(workInProgress);
                if (next !== null) {
                  return next;
                }
                if (returnFiber !== null && (returnFiber.effectTag & Incomplete) === NoEffect) {
                  if (returnFiber.firstEffect === null) {
                    returnFiber.firstEffect = workInProgress.firstEffect;
                  }
                  if (workInProgress.lastEffect !== null) {
                    if (returnFiber.lastEffect !== null) {
                      returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
                    }
                    returnFiber.lastEffect = workInProgress.lastEffect;
                  }
                  var effectTag = workInProgress.effectTag;
                  if (effectTag > PerformedWork) {
                    if (returnFiber.lastEffect !== null) {
                      returnFiber.lastEffect.nextEffect = workInProgress;
                    } else {
                      returnFiber.firstEffect = workInProgress;
                    }
                    returnFiber.lastEffect = workInProgress;
                  }
                }
              } else {
                var _next = unwindWork(workInProgress, renderExpirationTime);
                if (enableProfilerTimer && (workInProgress.mode & ProfileMode) !== NoMode) {
                  stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);
                  var actualDuration = workInProgress.actualDuration;
                  var child = workInProgress.child;
                  while (child !== null) {
                    actualDuration += child.actualDuration;
                    child = child.sibling;
                  }
                  workInProgress.actualDuration = actualDuration;
                }
                if (_next !== null) {
                  stopFailedWorkTimer(workInProgress);
                  _next.effectTag &= HostEffectMask;
                  return _next;
                }
                stopWorkTimer(workInProgress);
                if (returnFiber !== null) {
                  returnFiber.firstEffect = returnFiber.lastEffect = null;
                  returnFiber.effectTag |= Incomplete;
                }
              }
              var siblingFiber = workInProgress.sibling;
              if (siblingFiber !== null) {
                return siblingFiber;
              }
              workInProgress = returnFiber;
            } while (workInProgress !== null);
            if (workInProgressRootExitStatus === RootIncomplete) {
              workInProgressRootExitStatus = RootCompleted;
            }
            return null;
          }
          function getRemainingExpirationTime(fiber) {
            var updateExpirationTime = fiber.expirationTime;
            var childExpirationTime = fiber.childExpirationTime;
            return updateExpirationTime > childExpirationTime ? updateExpirationTime : childExpirationTime;
          }
          function resetChildExpirationTime(completedWork) {
            if (renderExpirationTime !== Never && completedWork.childExpirationTime === Never) {
              return;
            }
            var newChildExpirationTime = NoWork;
            if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {
              var actualDuration = completedWork.actualDuration;
              var treeBaseDuration = completedWork.selfBaseDuration;
              var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
              var child = completedWork.child;
              while (child !== null) {
                var childUpdateExpirationTime = child.expirationTime;
                var childChildExpirationTime = child.childExpirationTime;
                if (childUpdateExpirationTime > newChildExpirationTime) {
                  newChildExpirationTime = childUpdateExpirationTime;
                }
                if (childChildExpirationTime > newChildExpirationTime) {
                  newChildExpirationTime = childChildExpirationTime;
                }
                if (shouldBubbleActualDurations) {
                  actualDuration += child.actualDuration;
                }
                treeBaseDuration += child.treeBaseDuration;
                child = child.sibling;
              }
              completedWork.actualDuration = actualDuration;
              completedWork.treeBaseDuration = treeBaseDuration;
            } else {
              var _child = completedWork.child;
              while (_child !== null) {
                var _childUpdateExpirationTime = _child.expirationTime;
                var _childChildExpirationTime = _child.childExpirationTime;
                if (_childUpdateExpirationTime > newChildExpirationTime) {
                  newChildExpirationTime = _childUpdateExpirationTime;
                }
                if (_childChildExpirationTime > newChildExpirationTime) {
                  newChildExpirationTime = _childChildExpirationTime;
                }
                _child = _child.sibling;
              }
            }
            completedWork.childExpirationTime = newChildExpirationTime;
          }
          function commitRoot(root) {
            var renderPriorityLevel = getCurrentPriorityLevel();
            runWithPriority(ImmediatePriority, commitRootImpl.bind(null, root, renderPriorityLevel));
            return null;
          }
          function commitRootImpl(root, renderPriorityLevel) {
            do {
              flushPassiveEffects();
            } while (rootWithPendingPassiveEffects !== null);
            flushRenderPhaseStrictModeWarningsInDEV();
            if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
              {
                throw Error("Should not already be working.");
              }
            }
            var finishedWork = root.finishedWork;
            var expirationTime = root.finishedExpirationTime;
            if (finishedWork === null) {
              return null;
            }
            root.finishedWork = null;
            root.finishedExpirationTime = NoWork;
            if (!(finishedWork !== root.current)) {
              {
                throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            root.callbackNode = null;
            root.callbackExpirationTime = NoWork;
            root.callbackPriority = NoPriority;
            root.nextKnownPendingLevel = NoWork;
            startCommitTimer();
            var remainingExpirationTimeBeforeCommit = getRemainingExpirationTime(finishedWork);
            markRootFinishedAtTime(root, expirationTime, remainingExpirationTimeBeforeCommit);
            if (root === workInProgressRoot) {
              workInProgressRoot = null;
              workInProgress = null;
              renderExpirationTime = NoWork;
            } else {
            }
            var firstEffect;
            if (finishedWork.effectTag > PerformedWork) {
              if (finishedWork.lastEffect !== null) {
                finishedWork.lastEffect.nextEffect = finishedWork;
                firstEffect = finishedWork.firstEffect;
              } else {
                firstEffect = finishedWork;
              }
            } else {
              firstEffect = finishedWork.firstEffect;
            }
            if (firstEffect !== null) {
              var prevExecutionContext = executionContext;
              executionContext |= CommitContext;
              var prevInteractions = pushInteractions(root);
              ReactCurrentOwner$1.current = null;
              startCommitSnapshotEffectsTimer();
              prepareForCommit(root.containerInfo);
              nextEffect = firstEffect;
              do {
                {
                  invokeGuardedCallback(null, commitBeforeMutationEffects, null);
                  if (hasCaughtError()) {
                    if (!(nextEffect !== null)) {
                      {
                        throw Error("Should be working on an effect.");
                      }
                    }
                    var error = clearCaughtError();
                    captureCommitPhaseError(nextEffect, error);
                    nextEffect = nextEffect.nextEffect;
                  }
                }
              } while (nextEffect !== null);
              stopCommitSnapshotEffectsTimer();
              if (enableProfilerTimer) {
                recordCommitTime();
              }
              startCommitHostEffectsTimer();
              nextEffect = firstEffect;
              do {
                {
                  invokeGuardedCallback(null, commitMutationEffects, null, root, renderPriorityLevel);
                  if (hasCaughtError()) {
                    if (!(nextEffect !== null)) {
                      {
                        throw Error("Should be working on an effect.");
                      }
                    }
                    var _error = clearCaughtError();
                    captureCommitPhaseError(nextEffect, _error);
                    nextEffect = nextEffect.nextEffect;
                  }
                }
              } while (nextEffect !== null);
              stopCommitHostEffectsTimer();
              resetAfterCommit(root.containerInfo);
              root.current = finishedWork;
              startCommitLifeCyclesTimer();
              nextEffect = firstEffect;
              do {
                {
                  invokeGuardedCallback(null, commitLayoutEffects, null, root, expirationTime);
                  if (hasCaughtError()) {
                    if (!(nextEffect !== null)) {
                      {
                        throw Error("Should be working on an effect.");
                      }
                    }
                    var _error2 = clearCaughtError();
                    captureCommitPhaseError(nextEffect, _error2);
                    nextEffect = nextEffect.nextEffect;
                  }
                }
              } while (nextEffect !== null);
              stopCommitLifeCyclesTimer();
              nextEffect = null;
              requestPaint();
              if (enableSchedulerTracing) {
                popInteractions(prevInteractions);
              }
              executionContext = prevExecutionContext;
            } else {
              root.current = finishedWork;
              startCommitSnapshotEffectsTimer();
              stopCommitSnapshotEffectsTimer();
              if (enableProfilerTimer) {
                recordCommitTime();
              }
              startCommitHostEffectsTimer();
              stopCommitHostEffectsTimer();
              startCommitLifeCyclesTimer();
              stopCommitLifeCyclesTimer();
            }
            stopCommitTimer();
            var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
            if (rootDoesHavePassiveEffects) {
              rootDoesHavePassiveEffects = false;
              rootWithPendingPassiveEffects = root;
              pendingPassiveEffectsExpirationTime = expirationTime;
              pendingPassiveEffectsRenderPriority = renderPriorityLevel;
            } else {
              nextEffect = firstEffect;
              while (nextEffect !== null) {
                var nextNextEffect = nextEffect.nextEffect;
                nextEffect.nextEffect = null;
                nextEffect = nextNextEffect;
              }
            }
            var remainingExpirationTime2 = root.firstPendingTime;
            if (remainingExpirationTime2 !== NoWork) {
              if (enableSchedulerTracing) {
                if (spawnedWorkDuringRender !== null) {
                  var expirationTimes = spawnedWorkDuringRender;
                  spawnedWorkDuringRender = null;
                  for (var i2 = 0; i2 < expirationTimes.length; i2++) {
                    scheduleInteractions(root, expirationTimes[i2], root.memoizedInteractions);
                  }
                }
                schedulePendingInteractions(root, remainingExpirationTime2);
              }
            } else {
              legacyErrorBoundariesThatAlreadyFailed = null;
            }
            if (enableSchedulerTracing) {
              if (!rootDidHavePassiveEffects) {
                finishPendingInteractions(root, expirationTime);
              }
            }
            if (remainingExpirationTime2 === Sync) {
              if (root === rootWithNestedUpdates) {
                nestedUpdateCount++;
              } else {
                nestedUpdateCount = 0;
                rootWithNestedUpdates = root;
              }
            } else {
              nestedUpdateCount = 0;
            }
            onCommitRoot(finishedWork.stateNode, expirationTime);
            ensureRootIsScheduled(root);
            if (hasUncaughtError) {
              hasUncaughtError = false;
              var _error3 = firstUncaughtError;
              firstUncaughtError = null;
              throw _error3;
            }
            if ((executionContext & LegacyUnbatchedContext) !== NoContext) {
              return null;
            }
            flushSyncCallbackQueue();
            return null;
          }
          function commitBeforeMutationEffects() {
            while (nextEffect !== null) {
              var effectTag = nextEffect.effectTag;
              if ((effectTag & Snapshot) !== NoEffect) {
                setCurrentFiber(nextEffect);
                recordEffect();
                var current$$1 = nextEffect.alternate;
                commitBeforeMutationLifeCycles(current$$1, nextEffect);
                resetCurrentFiber();
              }
              if ((effectTag & Passive) !== NoEffect) {
                if (!rootDoesHavePassiveEffects) {
                  rootDoesHavePassiveEffects = true;
                  scheduleCallback(NormalPriority, function() {
                    flushPassiveEffects();
                    return null;
                  });
                }
              }
              nextEffect = nextEffect.nextEffect;
            }
          }
          function commitMutationEffects(root, renderPriorityLevel) {
            while (nextEffect !== null) {
              setCurrentFiber(nextEffect);
              var effectTag = nextEffect.effectTag;
              if (effectTag & ContentReset) {
                commitResetTextContent(nextEffect);
              }
              if (effectTag & Ref) {
                var current$$1 = nextEffect.alternate;
                if (current$$1 !== null) {
                  commitDetachRef(current$$1);
                }
              }
              var primaryEffectTag = effectTag & (Placement | Update | Deletion | Hydrating);
              switch (primaryEffectTag) {
                case Placement: {
                  commitPlacement(nextEffect);
                  nextEffect.effectTag &= ~Placement;
                  break;
                }
                case PlacementAndUpdate: {
                  commitPlacement(nextEffect);
                  nextEffect.effectTag &= ~Placement;
                  var _current = nextEffect.alternate;
                  commitWork(_current, nextEffect);
                  break;
                }
                case Hydrating: {
                  nextEffect.effectTag &= ~Hydrating;
                  break;
                }
                case HydratingAndUpdate: {
                  nextEffect.effectTag &= ~Hydrating;
                  var _current2 = nextEffect.alternate;
                  commitWork(_current2, nextEffect);
                  break;
                }
                case Update: {
                  var _current3 = nextEffect.alternate;
                  commitWork(_current3, nextEffect);
                  break;
                }
                case Deletion: {
                  commitDeletion(root, nextEffect, renderPriorityLevel);
                  break;
                }
              }
              recordEffect();
              resetCurrentFiber();
              nextEffect = nextEffect.nextEffect;
            }
          }
          function commitLayoutEffects(root, committedExpirationTime) {
            while (nextEffect !== null) {
              setCurrentFiber(nextEffect);
              var effectTag = nextEffect.effectTag;
              if (effectTag & (Update | Callback)) {
                recordEffect();
                var current$$1 = nextEffect.alternate;
                commitLifeCycles(root, current$$1, nextEffect, committedExpirationTime);
              }
              if (effectTag & Ref) {
                recordEffect();
                commitAttachRef(nextEffect);
              }
              resetCurrentFiber();
              nextEffect = nextEffect.nextEffect;
            }
          }
          function flushPassiveEffects() {
            if (pendingPassiveEffectsRenderPriority !== NoPriority) {
              var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority ? NormalPriority : pendingPassiveEffectsRenderPriority;
              pendingPassiveEffectsRenderPriority = NoPriority;
              return runWithPriority(priorityLevel, flushPassiveEffectsImpl);
            }
          }
          function flushPassiveEffectsImpl() {
            if (rootWithPendingPassiveEffects === null) {
              return false;
            }
            var root = rootWithPendingPassiveEffects;
            var expirationTime = pendingPassiveEffectsExpirationTime;
            rootWithPendingPassiveEffects = null;
            pendingPassiveEffectsExpirationTime = NoWork;
            if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
              {
                throw Error("Cannot flush passive effects while already rendering.");
              }
            }
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            var prevInteractions = pushInteractions(root);
            var effect = root.current.firstEffect;
            while (effect !== null) {
              {
                setCurrentFiber(effect);
                invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);
                if (hasCaughtError()) {
                  if (!(effect !== null)) {
                    {
                      throw Error("Should be working on an effect.");
                    }
                  }
                  var error = clearCaughtError();
                  captureCommitPhaseError(effect, error);
                }
                resetCurrentFiber();
              }
              var nextNextEffect = effect.nextEffect;
              effect.nextEffect = null;
              effect = nextNextEffect;
            }
            if (enableSchedulerTracing) {
              popInteractions(prevInteractions);
              finishPendingInteractions(root, expirationTime);
            }
            executionContext = prevExecutionContext;
            flushSyncCallbackQueue();
            nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
            return true;
          }
          function isAlreadyFailedLegacyErrorBoundary(instance) {
            return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
          }
          function markLegacyErrorBoundaryAsFailed(instance) {
            if (legacyErrorBoundariesThatAlreadyFailed === null) {
              legacyErrorBoundariesThatAlreadyFailed = /* @__PURE__ */ new Set([instance]);
            } else {
              legacyErrorBoundariesThatAlreadyFailed.add(instance);
            }
          }
          function prepareToThrowUncaughtError(error) {
            if (!hasUncaughtError) {
              hasUncaughtError = true;
              firstUncaughtError = error;
            }
          }
          var onUncaughtError = prepareToThrowUncaughtError;
          function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
            var errorInfo = createCapturedValue(error, sourceFiber);
            var update = createRootErrorUpdate(rootFiber, errorInfo, Sync);
            enqueueUpdate(rootFiber, update);
            var root = markUpdateTimeFromFiberToRoot(rootFiber, Sync);
            if (root !== null) {
              ensureRootIsScheduled(root);
              schedulePendingInteractions(root, Sync);
            }
          }
          function captureCommitPhaseError(sourceFiber, error) {
            if (sourceFiber.tag === HostRoot) {
              captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
              return;
            }
            var fiber = sourceFiber.return;
            while (fiber !== null) {
              if (fiber.tag === HostRoot) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
                return;
              } else if (fiber.tag === ClassComponent) {
                var ctor = fiber.type;
                var instance = fiber.stateNode;
                if (typeof ctor.getDerivedStateFromError === "function" || typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                  var errorInfo = createCapturedValue(error, sourceFiber);
                  var update = createClassErrorUpdate(
                    fiber,
                    errorInfo,
                    Sync
                  );
                  enqueueUpdate(fiber, update);
                  var root = markUpdateTimeFromFiberToRoot(fiber, Sync);
                  if (root !== null) {
                    ensureRootIsScheduled(root);
                    schedulePendingInteractions(root, Sync);
                  }
                  return;
                }
              }
              fiber = fiber.return;
            }
          }
          function pingSuspendedRoot(root, thenable, suspendedTime) {
            var pingCache = root.pingCache;
            if (pingCache !== null) {
              pingCache.delete(thenable);
            }
            if (workInProgressRoot === root && renderExpirationTime === suspendedTime) {
              if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && workInProgressRootLatestProcessedExpirationTime === Sync && now$1() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
                prepareFreshStack(root, renderExpirationTime);
              } else {
                workInProgressRootHasPendingPing = true;
              }
              return;
            }
            if (!isRootSuspendedAtTime(root, suspendedTime)) {
              return;
            }
            var lastPingedTime = root.lastPingedTime;
            if (lastPingedTime !== NoWork && lastPingedTime < suspendedTime) {
              return;
            }
            root.lastPingedTime = suspendedTime;
            if (root.finishedExpirationTime === suspendedTime) {
              root.finishedExpirationTime = NoWork;
              root.finishedWork = null;
            }
            ensureRootIsScheduled(root);
            schedulePendingInteractions(root, suspendedTime);
          }
          function retryTimedOutBoundary(boundaryFiber, retryTime) {
            if (retryTime === NoWork) {
              var suspenseConfig = null;
              var currentTime = requestCurrentTimeForUpdate();
              retryTime = computeExpirationForFiber(currentTime, boundaryFiber, suspenseConfig);
            }
            var root = markUpdateTimeFromFiberToRoot(boundaryFiber, retryTime);
            if (root !== null) {
              ensureRootIsScheduled(root);
              schedulePendingInteractions(root, retryTime);
            }
          }
          function retryDehydratedSuspenseBoundary(boundaryFiber) {
            var suspenseState = boundaryFiber.memoizedState;
            var retryTime = NoWork;
            if (suspenseState !== null) {
              retryTime = suspenseState.retryTime;
            }
            retryTimedOutBoundary(boundaryFiber, retryTime);
          }
          function resolveRetryThenable(boundaryFiber, thenable) {
            var retryTime = NoWork;
            var retryCache;
            if (enableSuspenseServerRenderer) {
              switch (boundaryFiber.tag) {
                case SuspenseComponent:
                  retryCache = boundaryFiber.stateNode;
                  var suspenseState = boundaryFiber.memoizedState;
                  if (suspenseState !== null) {
                    retryTime = suspenseState.retryTime;
                  }
                  break;
                case SuspenseListComponent:
                  retryCache = boundaryFiber.stateNode;
                  break;
                default: {
                  {
                    throw Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
                  }
                }
              }
            } else {
              retryCache = boundaryFiber.stateNode;
            }
            if (retryCache !== null) {
              retryCache.delete(thenable);
            }
            retryTimedOutBoundary(boundaryFiber, retryTime);
          }
          function jnd(timeElapsed) {
            return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3e3 ? 3e3 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
          }
          function computeMsUntilSuspenseLoadingDelay(mostRecentEventTime, committedExpirationTime, suspenseConfig) {
            var busyMinDurationMs = suspenseConfig.busyMinDurationMs | 0;
            if (busyMinDurationMs <= 0) {
              return 0;
            }
            var busyDelayMs = suspenseConfig.busyDelayMs | 0;
            var currentTimeMs = now$1();
            var eventTimeMs = inferTimeFromExpirationTimeWithSuspenseConfig(mostRecentEventTime, suspenseConfig);
            var timeElapsed = currentTimeMs - eventTimeMs;
            if (timeElapsed <= busyDelayMs) {
              return 0;
            }
            var msUntilTimeout = busyDelayMs + busyMinDurationMs - timeElapsed;
            return msUntilTimeout;
          }
          function checkForNestedUpdates() {
            if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
              nestedUpdateCount = 0;
              rootWithNestedUpdates = null;
              {
                {
                  throw Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
                }
              }
            }
            {
              if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
                nestedPassiveUpdateCount = 0;
                warning$1(false, "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
              }
            }
          }
          function flushRenderPhaseStrictModeWarningsInDEV() {
            {
              ReactStrictModeWarnings.flushLegacyContextWarning();
              if (warnAboutDeprecatedLifecycles) {
                ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
              }
            }
          }
          function stopFinishedWorkLoopTimer() {
            var didCompleteRoot = true;
            stopWorkLoopTimer(interruptedBy, didCompleteRoot);
            interruptedBy = null;
          }
          function stopInterruptedWorkLoopTimer() {
            var didCompleteRoot = false;
            stopWorkLoopTimer(interruptedBy, didCompleteRoot);
            interruptedBy = null;
          }
          function checkForInterruption(fiberThatReceivedUpdate, updateExpirationTime) {
            if (enableUserTimingAPI && workInProgressRoot !== null && updateExpirationTime > renderExpirationTime) {
              interruptedBy = fiberThatReceivedUpdate;
            }
          }
          var didWarnStateUpdateForUnmountedComponent = null;
          function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
            {
              var tag = fiber.tag;
              if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
                return;
              }
              var componentName = getComponentName(fiber.type) || "ReactComponent";
              if (didWarnStateUpdateForUnmountedComponent !== null) {
                if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {
                  return;
                }
                didWarnStateUpdateForUnmountedComponent.add(componentName);
              } else {
                didWarnStateUpdateForUnmountedComponent = /* @__PURE__ */ new Set([componentName]);
              }
              warningWithoutStack$1(false, "Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in %s.%s", tag === ClassComponent ? "the componentWillUnmount method" : "a useEffect cleanup function", getStackByFiberInDevAndProd(fiber));
            }
          }
          var beginWork$$1;
          if (replayFailedUnitOfWorkWithInvokeGuardedCallback) {
            var dummyFiber = null;
            beginWork$$1 = function(current$$1, unitOfWork, expirationTime) {
              var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
              try {
                return beginWork$1(current$$1, unitOfWork, expirationTime);
              } catch (originalError) {
                if (originalError !== null && typeof originalError === "object" && typeof originalError.then === "function") {
                  throw originalError;
                }
                resetContextDependencies();
                resetHooks();
                unwindInterruptedWork(unitOfWork);
                assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
                if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {
                  startProfilerTimer(unitOfWork);
                }
                invokeGuardedCallback(null, beginWork$1, null, current$$1, unitOfWork, expirationTime);
                if (hasCaughtError()) {
                  var replayError = clearCaughtError();
                  throw replayError;
                } else {
                  throw originalError;
                }
              }
            };
          } else {
            beginWork$$1 = beginWork$1;
          }
          var didWarnAboutUpdateInRender = false;
          var didWarnAboutUpdateInGetChildContext = false;
          function warnAboutInvalidUpdatesOnClassComponentsInDEV(fiber) {
            {
              if (fiber.tag === ClassComponent) {
                switch (phase) {
                  case "getChildContext":
                    if (didWarnAboutUpdateInGetChildContext) {
                      return;
                    }
                    warningWithoutStack$1(false, "setState(...): Cannot call setState() inside getChildContext()");
                    didWarnAboutUpdateInGetChildContext = true;
                    break;
                  case "render":
                    if (didWarnAboutUpdateInRender) {
                      return;
                    }
                    warningWithoutStack$1(false, "Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                    break;
                }
              }
            }
          }
          var IsThisRendererActing = {
            current: false
          };
          function warnIfNotScopedWithMatchingAct(fiber) {
            {
              if (warnsIfNotActing === true && IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
                warningWithoutStack$1(false, "It looks like you're using the wrong act() around your test interactions.\nBe sure to use the matching version of act() corresponding to your renderer:\n\n// for react-dom:\nimport {act} from 'react-dom/test-utils';\n// ...\nact(() => ...);\n\n// for react-test-renderer:\nimport TestRenderer from 'react-test-renderer';\nconst {act} = TestRenderer;\n// ...\nact(() => ...);%s", getStackByFiberInDevAndProd(fiber));
              }
            }
          }
          function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
            {
              if (warnsIfNotActing === true && (fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
                warningWithoutStack$1(false, "An update to %s ran an effect, but was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://fb.me/react-wrap-tests-with-act%s", getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
              }
            }
          }
          function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
            {
              if (warnsIfNotActing === true && executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
                warningWithoutStack$1(false, "An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://fb.me/react-wrap-tests-with-act%s", getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
              }
            }
          }
          var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV;
          var didWarnAboutUnmockedScheduler = false;
          function warnIfUnmockedScheduler(fiber) {
            {
              if (didWarnAboutUnmockedScheduler === false && Scheduler.unstable_flushAllWithoutAsserting === void 0) {
                if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {
                  didWarnAboutUnmockedScheduler = true;
                  warningWithoutStack$1(false, `In Concurrent or Sync modes, the "scheduler" module needs to be mocked to guarantee consistent behaviour across tests and browsers. For example, with jest: 
jest.mock('scheduler', () => require('scheduler/unstable_mock'));

For more info, visit https://fb.me/react-mock-scheduler`);
                } else if (warnAboutUnmockedScheduler === true) {
                  didWarnAboutUnmockedScheduler = true;
                  warningWithoutStack$1(false, `Starting from React v17, the "scheduler" module will need to be mocked to guarantee consistent behaviour across tests and browsers. For example, with jest: 
jest.mock('scheduler', () => require('scheduler/unstable_mock'));

For more info, visit https://fb.me/react-mock-scheduler`);
                }
              }
            }
          }
          var componentsThatTriggeredHighPriSuspend = null;
          function checkForWrongSuspensePriorityInDEV(sourceFiber) {
            {
              var currentPriorityLevel = getCurrentPriorityLevel();
              if ((sourceFiber.mode & ConcurrentMode) !== NoEffect && (currentPriorityLevel === UserBlockingPriority || currentPriorityLevel === ImmediatePriority)) {
                var workInProgressNode = sourceFiber;
                while (workInProgressNode !== null) {
                  var current$$1 = workInProgressNode.alternate;
                  if (current$$1 !== null) {
                    switch (workInProgressNode.tag) {
                      case ClassComponent:
                        var updateQueue = current$$1.updateQueue;
                        if (updateQueue !== null) {
                          var update = updateQueue.firstUpdate;
                          while (update !== null) {
                            var priorityLevel = update.priority;
                            if (priorityLevel === UserBlockingPriority || priorityLevel === ImmediatePriority) {
                              if (componentsThatTriggeredHighPriSuspend === null) {
                                componentsThatTriggeredHighPriSuspend = /* @__PURE__ */ new Set([getComponentName(workInProgressNode.type)]);
                              } else {
                                componentsThatTriggeredHighPriSuspend.add(getComponentName(workInProgressNode.type));
                              }
                              break;
                            }
                            update = update.next;
                          }
                        }
                        break;
                      case FunctionComponent:
                      case ForwardRef:
                      case SimpleMemoComponent:
                        if (workInProgressNode.memoizedState !== null && workInProgressNode.memoizedState.baseUpdate !== null) {
                          var _update = workInProgressNode.memoizedState.baseUpdate;
                          while (_update !== null) {
                            var priority = _update.priority;
                            if (priority === UserBlockingPriority || priority === ImmediatePriority) {
                              if (componentsThatTriggeredHighPriSuspend === null) {
                                componentsThatTriggeredHighPriSuspend = /* @__PURE__ */ new Set([getComponentName(workInProgressNode.type)]);
                              } else {
                                componentsThatTriggeredHighPriSuspend.add(getComponentName(workInProgressNode.type));
                              }
                              break;
                            }
                            if (_update.next === workInProgressNode.memoizedState.baseUpdate) {
                              break;
                            }
                            _update = _update.next;
                          }
                        }
                        break;
                      default:
                        break;
                    }
                  }
                  workInProgressNode = workInProgressNode.return;
                }
              }
            }
          }
          function flushSuspensePriorityWarningInDEV() {
            {
              if (componentsThatTriggeredHighPriSuspend !== null) {
                var componentNames = [];
                componentsThatTriggeredHighPriSuspend.forEach(function(name) {
                  return componentNames.push(name);
                });
                componentsThatTriggeredHighPriSuspend = null;
                if (componentNames.length > 0) {
                  warningWithoutStack$1(
                    false,
                    "%s triggered a user-blocking update that suspended.\n\nThe fix is to split the update into multiple parts: a user-blocking update to provide immediate feedback, and another update that triggers the bulk of the changes.\n\nRefer to the documentation for useTransition to learn how to implement this pattern.",
                    componentNames.sort().join(", ")
                  );
                }
              }
            }
          }
          function computeThreadID(root, expirationTime) {
            return expirationTime * 1e3 + root.interactionThreadID;
          }
          function markSpawnedWork(expirationTime) {
            if (!enableSchedulerTracing) {
              return;
            }
            if (spawnedWorkDuringRender === null) {
              spawnedWorkDuringRender = [expirationTime];
            } else {
              spawnedWorkDuringRender.push(expirationTime);
            }
          }
          function scheduleInteractions(root, expirationTime, interactions) {
            if (!enableSchedulerTracing) {
              return;
            }
            if (interactions.size > 0) {
              var pendingInteractionMap = root.pendingInteractionMap;
              var pendingInteractions = pendingInteractionMap.get(expirationTime);
              if (pendingInteractions != null) {
                interactions.forEach(function(interaction) {
                  if (!pendingInteractions.has(interaction)) {
                    interaction.__count++;
                  }
                  pendingInteractions.add(interaction);
                });
              } else {
                pendingInteractionMap.set(expirationTime, new Set(interactions));
                interactions.forEach(function(interaction) {
                  interaction.__count++;
                });
              }
              var subscriber = tracing.__subscriberRef.current;
              if (subscriber !== null) {
                var threadID = computeThreadID(root, expirationTime);
                subscriber.onWorkScheduled(interactions, threadID);
              }
            }
          }
          function schedulePendingInteractions(root, expirationTime) {
            if (!enableSchedulerTracing) {
              return;
            }
            scheduleInteractions(root, expirationTime, tracing.__interactionsRef.current);
          }
          function startWorkOnPendingInteractions(root, expirationTime) {
            if (!enableSchedulerTracing) {
              return;
            }
            var interactions = /* @__PURE__ */ new Set();
            root.pendingInteractionMap.forEach(function(scheduledInteractions, scheduledExpirationTime) {
              if (scheduledExpirationTime >= expirationTime) {
                scheduledInteractions.forEach(function(interaction) {
                  return interactions.add(interaction);
                });
              }
            });
            root.memoizedInteractions = interactions;
            if (interactions.size > 0) {
              var subscriber = tracing.__subscriberRef.current;
              if (subscriber !== null) {
                var threadID = computeThreadID(root, expirationTime);
                try {
                  subscriber.onWorkStarted(interactions, threadID);
                } catch (error) {
                  scheduleCallback(ImmediatePriority, function() {
                    throw error;
                  });
                }
              }
            }
          }
          function finishPendingInteractions(root, committedExpirationTime) {
            if (!enableSchedulerTracing) {
              return;
            }
            var earliestRemainingTimeAfterCommit = root.firstPendingTime;
            var subscriber;
            try {
              subscriber = tracing.__subscriberRef.current;
              if (subscriber !== null && root.memoizedInteractions.size > 0) {
                var threadID = computeThreadID(root, committedExpirationTime);
                subscriber.onWorkStopped(root.memoizedInteractions, threadID);
              }
            } catch (error) {
              scheduleCallback(ImmediatePriority, function() {
                throw error;
              });
            } finally {
              var pendingInteractionMap = root.pendingInteractionMap;
              pendingInteractionMap.forEach(function(scheduledInteractions, scheduledExpirationTime) {
                if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {
                  pendingInteractionMap.delete(scheduledExpirationTime);
                  scheduledInteractions.forEach(function(interaction) {
                    interaction.__count--;
                    if (subscriber !== null && interaction.__count === 0) {
                      try {
                        subscriber.onInteractionScheduledWorkCompleted(interaction);
                      } catch (error) {
                        scheduleCallback(ImmediatePriority, function() {
                          throw error;
                        });
                      }
                    }
                  });
                }
              });
            }
          }
          var onCommitFiberRoot = null;
          var onCommitFiberUnmount = null;
          var hasLoggedError = false;
          var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined";
          function injectInternals(internals) {
            if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
              return false;
            }
            var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook.isDisabled) {
              return true;
            }
            if (!hook.supportsFiber) {
              {
                warningWithoutStack$1(false, "The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://fb.me/react-devtools");
              }
              return true;
            }
            try {
              var rendererID = hook.inject(internals);
              onCommitFiberRoot = function(root, expirationTime) {
                try {
                  var didError = (root.current.effectTag & DidCapture) === DidCapture;
                  if (enableProfilerTimer) {
                    var currentTime = getCurrentTime();
                    var priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime);
                    hook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);
                  } else {
                    hook.onCommitFiberRoot(rendererID, root, void 0, didError);
                  }
                } catch (err2) {
                  if (!hasLoggedError) {
                    hasLoggedError = true;
                    warningWithoutStack$1(false, "React DevTools encountered an error: %s", err2);
                  }
                }
              };
              onCommitFiberUnmount = function(fiber) {
                try {
                  hook.onCommitFiberUnmount(rendererID, fiber);
                } catch (err2) {
                  if (!hasLoggedError) {
                    hasLoggedError = true;
                    warningWithoutStack$1(false, "React DevTools encountered an error: %s", err2);
                  }
                }
              };
            } catch (err2) {
              {
                warningWithoutStack$1(false, "React DevTools encountered an error: %s.", err2);
              }
            }
            return true;
          }
          function onCommitRoot(root, expirationTime) {
            if (typeof onCommitFiberRoot === "function") {
              onCommitFiberRoot(root, expirationTime);
            }
          }
          function onCommitUnmount(fiber) {
            if (typeof onCommitFiberUnmount === "function") {
              onCommitFiberUnmount(fiber);
            }
          }
          var hasBadMapPolyfill;
          {
            hasBadMapPolyfill = false;
            try {
              var nonExtensibleObject = Object.preventExtensions({});
              var testMap = /* @__PURE__ */ new Map([[nonExtensibleObject, null]]);
              var testSet = /* @__PURE__ */ new Set([nonExtensibleObject]);
              testMap.set(0, 0);
              testSet.add(0);
            } catch (e) {
              hasBadMapPolyfill = true;
            }
          }
          var debugCounter = 1;
          function FiberNode(tag, pendingProps, key2, mode) {
            this.tag = tag;
            this.key = key2;
            this.elementType = null;
            this.type = null;
            this.stateNode = null;
            this.return = null;
            this.child = null;
            this.sibling = null;
            this.index = 0;
            this.ref = null;
            this.pendingProps = pendingProps;
            this.memoizedProps = null;
            this.updateQueue = null;
            this.memoizedState = null;
            this.dependencies = null;
            this.mode = mode;
            this.effectTag = NoEffect;
            this.nextEffect = null;
            this.firstEffect = null;
            this.lastEffect = null;
            this.expirationTime = NoWork;
            this.childExpirationTime = NoWork;
            this.alternate = null;
            if (enableProfilerTimer) {
              this.actualDuration = Number.NaN;
              this.actualStartTime = Number.NaN;
              this.selfBaseDuration = Number.NaN;
              this.treeBaseDuration = Number.NaN;
              this.actualDuration = 0;
              this.actualStartTime = -1;
              this.selfBaseDuration = 0;
              this.treeBaseDuration = 0;
            }
            if (enableUserTimingAPI) {
              this._debugID = debugCounter++;
              this._debugIsCurrentlyTiming = false;
            }
            {
              this._debugSource = null;
              this._debugOwner = null;
              this._debugNeedsRemount = false;
              this._debugHookTypes = null;
              if (!hasBadMapPolyfill && typeof Object.preventExtensions === "function") {
                Object.preventExtensions(this);
              }
            }
          }
          var createFiber = function(tag, pendingProps, key2, mode) {
            return new FiberNode(tag, pendingProps, key2, mode);
          };
          function shouldConstruct(Component) {
            var prototype = Component.prototype;
            return !!(prototype && prototype.isReactComponent);
          }
          function isSimpleFunctionComponent(type2) {
            return typeof type2 === "function" && !shouldConstruct(type2) && type2.defaultProps === void 0;
          }
          function resolveLazyComponentTag(Component) {
            if (typeof Component === "function") {
              return shouldConstruct(Component) ? ClassComponent : FunctionComponent;
            } else if (Component !== void 0 && Component !== null) {
              var $$typeof = Component.$$typeof;
              if ($$typeof === REACT_FORWARD_REF_TYPE) {
                return ForwardRef;
              }
              if ($$typeof === REACT_MEMO_TYPE) {
                return MemoComponent;
              }
            }
            return IndeterminateComponent;
          }
          function createWorkInProgress(current2, pendingProps, expirationTime) {
            var workInProgress2 = current2.alternate;
            if (workInProgress2 === null) {
              workInProgress2 = createFiber(current2.tag, pendingProps, current2.key, current2.mode);
              workInProgress2.elementType = current2.elementType;
              workInProgress2.type = current2.type;
              workInProgress2.stateNode = current2.stateNode;
              {
                workInProgress2._debugID = current2._debugID;
                workInProgress2._debugSource = current2._debugSource;
                workInProgress2._debugOwner = current2._debugOwner;
                workInProgress2._debugHookTypes = current2._debugHookTypes;
              }
              workInProgress2.alternate = current2;
              current2.alternate = workInProgress2;
            } else {
              workInProgress2.pendingProps = pendingProps;
              workInProgress2.effectTag = NoEffect;
              workInProgress2.nextEffect = null;
              workInProgress2.firstEffect = null;
              workInProgress2.lastEffect = null;
              if (enableProfilerTimer) {
                workInProgress2.actualDuration = 0;
                workInProgress2.actualStartTime = -1;
              }
            }
            workInProgress2.childExpirationTime = current2.childExpirationTime;
            workInProgress2.expirationTime = current2.expirationTime;
            workInProgress2.child = current2.child;
            workInProgress2.memoizedProps = current2.memoizedProps;
            workInProgress2.memoizedState = current2.memoizedState;
            workInProgress2.updateQueue = current2.updateQueue;
            var currentDependencies = current2.dependencies;
            workInProgress2.dependencies = currentDependencies === null ? null : {
              expirationTime: currentDependencies.expirationTime,
              firstContext: currentDependencies.firstContext,
              responders: currentDependencies.responders
            };
            workInProgress2.sibling = current2.sibling;
            workInProgress2.index = current2.index;
            workInProgress2.ref = current2.ref;
            if (enableProfilerTimer) {
              workInProgress2.selfBaseDuration = current2.selfBaseDuration;
              workInProgress2.treeBaseDuration = current2.treeBaseDuration;
            }
            {
              workInProgress2._debugNeedsRemount = current2._debugNeedsRemount;
              switch (workInProgress2.tag) {
                case IndeterminateComponent:
                case FunctionComponent:
                case SimpleMemoComponent:
                  workInProgress2.type = resolveFunctionForHotReloading(current2.type);
                  break;
                case ClassComponent:
                  workInProgress2.type = resolveClassForHotReloading(current2.type);
                  break;
                case ForwardRef:
                  workInProgress2.type = resolveForwardRefForHotReloading(current2.type);
                  break;
                default:
                  break;
              }
            }
            return workInProgress2;
          }
          function resetWorkInProgress(workInProgress2, renderExpirationTime2) {
            workInProgress2.effectTag &= Placement;
            workInProgress2.nextEffect = null;
            workInProgress2.firstEffect = null;
            workInProgress2.lastEffect = null;
            var current2 = workInProgress2.alternate;
            if (current2 === null) {
              workInProgress2.childExpirationTime = NoWork;
              workInProgress2.expirationTime = renderExpirationTime2;
              workInProgress2.child = null;
              workInProgress2.memoizedProps = null;
              workInProgress2.memoizedState = null;
              workInProgress2.updateQueue = null;
              workInProgress2.dependencies = null;
              if (enableProfilerTimer) {
                workInProgress2.selfBaseDuration = 0;
                workInProgress2.treeBaseDuration = 0;
              }
            } else {
              workInProgress2.childExpirationTime = current2.childExpirationTime;
              workInProgress2.expirationTime = current2.expirationTime;
              workInProgress2.child = current2.child;
              workInProgress2.memoizedProps = current2.memoizedProps;
              workInProgress2.memoizedState = current2.memoizedState;
              workInProgress2.updateQueue = current2.updateQueue;
              var currentDependencies = current2.dependencies;
              workInProgress2.dependencies = currentDependencies === null ? null : {
                expirationTime: currentDependencies.expirationTime,
                firstContext: currentDependencies.firstContext,
                responders: currentDependencies.responders
              };
              if (enableProfilerTimer) {
                workInProgress2.selfBaseDuration = current2.selfBaseDuration;
                workInProgress2.treeBaseDuration = current2.treeBaseDuration;
              }
            }
            return workInProgress2;
          }
          function createHostRootFiber(tag) {
            var mode;
            if (tag === ConcurrentRoot) {
              mode = ConcurrentMode | BlockingMode | StrictMode;
            } else if (tag === BlockingRoot) {
              mode = BlockingMode | StrictMode;
            } else {
              mode = NoMode;
            }
            if (enableProfilerTimer && isDevToolsPresent) {
              mode |= ProfileMode;
            }
            return createFiber(HostRoot, null, null, mode);
          }
          function createFiberFromTypeAndProps(type2, key2, pendingProps, owner, mode, expirationTime) {
            var fiber;
            var fiberTag = IndeterminateComponent;
            var resolvedType = type2;
            if (typeof type2 === "function") {
              if (shouldConstruct(type2)) {
                fiberTag = ClassComponent;
                {
                  resolvedType = resolveClassForHotReloading(resolvedType);
                }
              } else {
                {
                  resolvedType = resolveFunctionForHotReloading(resolvedType);
                }
              }
            } else if (typeof type2 === "string") {
              fiberTag = HostComponent;
            } else {
              getTag:
                switch (type2) {
                  case REACT_FRAGMENT_TYPE:
                    return createFiberFromFragment(pendingProps.children, mode, expirationTime, key2);
                  case REACT_CONCURRENT_MODE_TYPE:
                    fiberTag = Mode;
                    mode |= ConcurrentMode | BlockingMode | StrictMode;
                    break;
                  case REACT_STRICT_MODE_TYPE:
                    fiberTag = Mode;
                    mode |= StrictMode;
                    break;
                  case REACT_PROFILER_TYPE:
                    return createFiberFromProfiler(pendingProps, mode, expirationTime, key2);
                  case REACT_SUSPENSE_TYPE:
                    return createFiberFromSuspense(pendingProps, mode, expirationTime, key2);
                  case REACT_SUSPENSE_LIST_TYPE:
                    return createFiberFromSuspenseList(pendingProps, mode, expirationTime, key2);
                  default: {
                    if (typeof type2 === "object" && type2 !== null) {
                      switch (type2.$$typeof) {
                        case REACT_PROVIDER_TYPE:
                          fiberTag = ContextProvider;
                          break getTag;
                        case REACT_CONTEXT_TYPE:
                          fiberTag = ContextConsumer;
                          break getTag;
                        case REACT_FORWARD_REF_TYPE:
                          fiberTag = ForwardRef;
                          {
                            resolvedType = resolveForwardRefForHotReloading(resolvedType);
                          }
                          break getTag;
                        case REACT_MEMO_TYPE:
                          fiberTag = MemoComponent;
                          break getTag;
                        case REACT_LAZY_TYPE:
                          fiberTag = LazyComponent;
                          resolvedType = null;
                          break getTag;
                        case REACT_FUNDAMENTAL_TYPE:
                          if (enableFundamentalAPI) {
                            return createFiberFromFundamental(type2, pendingProps, mode, expirationTime, key2);
                          }
                          break;
                        case REACT_SCOPE_TYPE:
                          if (enableScopeAPI) {
                            return createFiberFromScope(type2, pendingProps, mode, expirationTime, key2);
                          }
                      }
                    }
                    var info = "";
                    {
                      if (type2 === void 0 || typeof type2 === "object" && type2 !== null && Object.keys(type2).length === 0) {
                        info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                      }
                      var ownerName = owner ? getComponentName(owner.type) : null;
                      if (ownerName) {
                        info += "\n\nCheck the render method of `" + ownerName + "`.";
                      }
                    }
                    {
                      {
                        throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type2 == null ? type2 : typeof type2) + "." + info);
                      }
                    }
                  }
                }
            }
            fiber = createFiber(fiberTag, pendingProps, key2, mode);
            fiber.elementType = type2;
            fiber.type = resolvedType;
            fiber.expirationTime = expirationTime;
            return fiber;
          }
          function createFiberFromElement(element, mode, expirationTime) {
            var owner = null;
            {
              owner = element._owner;
            }
            var type2 = element.type;
            var key2 = element.key;
            var pendingProps = element.props;
            var fiber = createFiberFromTypeAndProps(type2, key2, pendingProps, owner, mode, expirationTime);
            {
              fiber._debugSource = element._source;
              fiber._debugOwner = element._owner;
            }
            return fiber;
          }
          function createFiberFromFragment(elements, mode, expirationTime, key2) {
            var fiber = createFiber(Fragment, elements, key2, mode);
            fiber.expirationTime = expirationTime;
            return fiber;
          }
          function createFiberFromFundamental(fundamentalComponent, pendingProps, mode, expirationTime, key2) {
            var fiber = createFiber(FundamentalComponent, pendingProps, key2, mode);
            fiber.elementType = fundamentalComponent;
            fiber.type = fundamentalComponent;
            fiber.expirationTime = expirationTime;
            return fiber;
          }
          function createFiberFromScope(scope, pendingProps, mode, expirationTime, key2) {
            var fiber = createFiber(ScopeComponent, pendingProps, key2, mode);
            fiber.type = scope;
            fiber.elementType = scope;
            fiber.expirationTime = expirationTime;
            return fiber;
          }
          function createFiberFromProfiler(pendingProps, mode, expirationTime, key2) {
            {
              if (typeof pendingProps.id !== "string" || typeof pendingProps.onRender !== "function") {
                warningWithoutStack$1(false, 'Profiler must specify an "id" string and "onRender" function as props');
              }
            }
            var fiber = createFiber(Profiler, pendingProps, key2, mode | ProfileMode);
            fiber.elementType = REACT_PROFILER_TYPE;
            fiber.type = REACT_PROFILER_TYPE;
            fiber.expirationTime = expirationTime;
            return fiber;
          }
          function createFiberFromSuspense(pendingProps, mode, expirationTime, key2) {
            var fiber = createFiber(SuspenseComponent, pendingProps, key2, mode);
            fiber.type = REACT_SUSPENSE_TYPE;
            fiber.elementType = REACT_SUSPENSE_TYPE;
            fiber.expirationTime = expirationTime;
            return fiber;
          }
          function createFiberFromSuspenseList(pendingProps, mode, expirationTime, key2) {
            var fiber = createFiber(SuspenseListComponent, pendingProps, key2, mode);
            {
              fiber.type = REACT_SUSPENSE_LIST_TYPE;
            }
            fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
            fiber.expirationTime = expirationTime;
            return fiber;
          }
          function createFiberFromText(content, mode, expirationTime) {
            var fiber = createFiber(HostText, content, null, mode);
            fiber.expirationTime = expirationTime;
            return fiber;
          }
          function createFiberFromHostInstanceForDeletion() {
            var fiber = createFiber(HostComponent, null, null, NoMode);
            fiber.elementType = "DELETED";
            fiber.type = "DELETED";
            return fiber;
          }
          function createFiberFromDehydratedFragment(dehydratedNode) {
            var fiber = createFiber(DehydratedFragment, null, null, NoMode);
            fiber.stateNode = dehydratedNode;
            return fiber;
          }
          function createFiberFromPortal(portal, mode, expirationTime) {
            var pendingProps = portal.children !== null ? portal.children : [];
            var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
            fiber.expirationTime = expirationTime;
            fiber.stateNode = {
              containerInfo: portal.containerInfo,
              pendingChildren: null,
              implementation: portal.implementation
            };
            return fiber;
          }
          function assignFiberPropertiesInDEV(target, source) {
            if (target === null) {
              target = createFiber(IndeterminateComponent, null, null, NoMode);
            }
            target.tag = source.tag;
            target.key = source.key;
            target.elementType = source.elementType;
            target.type = source.type;
            target.stateNode = source.stateNode;
            target.return = source.return;
            target.child = source.child;
            target.sibling = source.sibling;
            target.index = source.index;
            target.ref = source.ref;
            target.pendingProps = source.pendingProps;
            target.memoizedProps = source.memoizedProps;
            target.updateQueue = source.updateQueue;
            target.memoizedState = source.memoizedState;
            target.dependencies = source.dependencies;
            target.mode = source.mode;
            target.effectTag = source.effectTag;
            target.nextEffect = source.nextEffect;
            target.firstEffect = source.firstEffect;
            target.lastEffect = source.lastEffect;
            target.expirationTime = source.expirationTime;
            target.childExpirationTime = source.childExpirationTime;
            target.alternate = source.alternate;
            if (enableProfilerTimer) {
              target.actualDuration = source.actualDuration;
              target.actualStartTime = source.actualStartTime;
              target.selfBaseDuration = source.selfBaseDuration;
              target.treeBaseDuration = source.treeBaseDuration;
            }
            target._debugID = source._debugID;
            target._debugSource = source._debugSource;
            target._debugOwner = source._debugOwner;
            target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
            target._debugNeedsRemount = source._debugNeedsRemount;
            target._debugHookTypes = source._debugHookTypes;
            return target;
          }
          function FiberRootNode(containerInfo, tag, hydrate) {
            this.tag = tag;
            this.current = null;
            this.containerInfo = containerInfo;
            this.pendingChildren = null;
            this.pingCache = null;
            this.finishedExpirationTime = NoWork;
            this.finishedWork = null;
            this.timeoutHandle = noTimeout;
            this.context = null;
            this.pendingContext = null;
            this.hydrate = hydrate;
            this.callbackNode = null;
            this.callbackPriority = NoPriority;
            this.firstPendingTime = NoWork;
            this.firstSuspendedTime = NoWork;
            this.lastSuspendedTime = NoWork;
            this.nextKnownPendingLevel = NoWork;
            this.lastPingedTime = NoWork;
            this.lastExpiredTime = NoWork;
            if (enableSchedulerTracing) {
              this.interactionThreadID = tracing.unstable_getThreadID();
              this.memoizedInteractions = /* @__PURE__ */ new Set();
              this.pendingInteractionMap = /* @__PURE__ */ new Map();
            }
            if (enableSuspenseCallback) {
              this.hydrationCallbacks = null;
            }
          }
          function createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks) {
            var root = new FiberRootNode(containerInfo, tag, hydrate);
            if (enableSuspenseCallback) {
              root.hydrationCallbacks = hydrationCallbacks;
            }
            var uninitializedFiber = createHostRootFiber(tag);
            root.current = uninitializedFiber;
            uninitializedFiber.stateNode = root;
            return root;
          }
          function isRootSuspendedAtTime(root, expirationTime) {
            var firstSuspendedTime = root.firstSuspendedTime;
            var lastSuspendedTime = root.lastSuspendedTime;
            return firstSuspendedTime !== NoWork && firstSuspendedTime >= expirationTime && lastSuspendedTime <= expirationTime;
          }
          function markRootSuspendedAtTime(root, expirationTime) {
            var firstSuspendedTime = root.firstSuspendedTime;
            var lastSuspendedTime = root.lastSuspendedTime;
            if (firstSuspendedTime < expirationTime) {
              root.firstSuspendedTime = expirationTime;
            }
            if (lastSuspendedTime > expirationTime || firstSuspendedTime === NoWork) {
              root.lastSuspendedTime = expirationTime;
            }
            if (expirationTime <= root.lastPingedTime) {
              root.lastPingedTime = NoWork;
            }
            if (expirationTime <= root.lastExpiredTime) {
              root.lastExpiredTime = NoWork;
            }
          }
          function markRootUpdatedAtTime(root, expirationTime) {
            var firstPendingTime = root.firstPendingTime;
            if (expirationTime > firstPendingTime) {
              root.firstPendingTime = expirationTime;
            }
            var firstSuspendedTime = root.firstSuspendedTime;
            if (firstSuspendedTime !== NoWork) {
              if (expirationTime >= firstSuspendedTime) {
                root.firstSuspendedTime = root.lastSuspendedTime = root.nextKnownPendingLevel = NoWork;
              } else if (expirationTime >= root.lastSuspendedTime) {
                root.lastSuspendedTime = expirationTime + 1;
              }
              if (expirationTime > root.nextKnownPendingLevel) {
                root.nextKnownPendingLevel = expirationTime;
              }
            }
          }
          function markRootFinishedAtTime(root, finishedExpirationTime, remainingExpirationTime2) {
            root.firstPendingTime = remainingExpirationTime2;
            if (finishedExpirationTime <= root.lastSuspendedTime) {
              root.firstSuspendedTime = root.lastSuspendedTime = root.nextKnownPendingLevel = NoWork;
            } else if (finishedExpirationTime <= root.firstSuspendedTime) {
              root.firstSuspendedTime = finishedExpirationTime - 1;
            }
            if (finishedExpirationTime <= root.lastPingedTime) {
              root.lastPingedTime = NoWork;
            }
            if (finishedExpirationTime <= root.lastExpiredTime) {
              root.lastExpiredTime = NoWork;
            }
          }
          function markRootExpiredAtTime(root, expirationTime) {
            var lastExpiredTime = root.lastExpiredTime;
            if (lastExpiredTime === NoWork || lastExpiredTime > expirationTime) {
              root.lastExpiredTime = expirationTime;
            }
          }
          var ReactFiberInstrumentation = {
            debugTool: null
          };
          var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;
          var didWarnAboutNestedUpdates;
          var didWarnAboutFindNodeInStrictMode;
          {
            didWarnAboutNestedUpdates = false;
            didWarnAboutFindNodeInStrictMode = {};
          }
          function getContextForSubtree(parentComponent) {
            if (!parentComponent) {
              return emptyContextObject;
            }
            var fiber = get(parentComponent);
            var parentContext = findCurrentUnmaskedContext(fiber);
            if (fiber.tag === ClassComponent) {
              var Component = fiber.type;
              if (isContextProvider(Component)) {
                return processChildContext(fiber, Component, parentContext);
              }
            }
            return parentContext;
          }
          function findHostInstance(component) {
            var fiber = get(component);
            if (fiber === void 0) {
              if (typeof component.render === "function") {
                {
                  {
                    throw Error("Unable to find node on an unmounted component.");
                  }
                }
              } else {
                {
                  {
                    throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
                  }
                }
              }
            }
            var hostFiber = findCurrentHostFiber(fiber);
            if (hostFiber === null) {
              return null;
            }
            return hostFiber.stateNode;
          }
          function findHostInstanceWithWarning(component, methodName) {
            {
              var fiber = get(component);
              if (fiber === void 0) {
                if (typeof component.render === "function") {
                  {
                    {
                      throw Error("Unable to find node on an unmounted component.");
                    }
                  }
                } else {
                  {
                    {
                      throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
                    }
                  }
                }
              }
              var hostFiber = findCurrentHostFiber(fiber);
              if (hostFiber === null) {
                return null;
              }
              if (hostFiber.mode & StrictMode) {
                var componentName = getComponentName(fiber.type) || "Component";
                if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                  didWarnAboutFindNodeInStrictMode[componentName] = true;
                  if (fiber.mode & StrictMode) {
                    warningWithoutStack$1(false, "%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://fb.me/react-strict-mode-find-node%s", methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
                  } else {
                    warningWithoutStack$1(false, "%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://fb.me/react-strict-mode-find-node%s", methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
                  }
                }
              }
              return hostFiber.stateNode;
            }
            return findHostInstance(component);
          }
          function createContainer(containerInfo, tag, hydrate, hydrationCallbacks) {
            return createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks);
          }
          function updateContainer(element, container, parentComponent, callback) {
            var current$$1 = container.current;
            var currentTime = requestCurrentTimeForUpdate();
            {
              if ("undefined" !== typeof jest) {
                warnIfUnmockedScheduler(current$$1);
                warnIfNotScopedWithMatchingAct(current$$1);
              }
            }
            var suspenseConfig = requestCurrentSuspenseConfig();
            var expirationTime = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
            {
              if (ReactFiberInstrumentation_1.debugTool) {
                if (current$$1.alternate === null) {
                  ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
                } else if (element === null) {
                  ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
                } else {
                  ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
                }
              }
            }
            var context = getContextForSubtree(parentComponent);
            if (container.context === null) {
              container.context = context;
            } else {
              container.pendingContext = context;
            }
            {
              if (phase === "render" && current !== null && !didWarnAboutNestedUpdates) {
                didWarnAboutNestedUpdates = true;
                warningWithoutStack$1(false, "Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentName(current.type) || "Unknown");
              }
            }
            var update = createUpdate(expirationTime, suspenseConfig);
            update.payload = {
              element
            };
            callback = callback === void 0 ? null : callback;
            if (callback !== null) {
              !(typeof callback === "function") ? warningWithoutStack$1(false, "render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback) : void 0;
              update.callback = callback;
            }
            enqueueUpdate(current$$1, update);
            scheduleWork(current$$1, expirationTime);
            return expirationTime;
          }
          function getPublicRootInstance(container) {
            var containerFiber = container.current;
            if (!containerFiber.child) {
              return null;
            }
            switch (containerFiber.child.tag) {
              case HostComponent:
                return getPublicInstance(containerFiber.child.stateNode);
              default:
                return containerFiber.child.stateNode;
            }
          }
          function attemptSynchronousHydration(fiber) {
            switch (fiber.tag) {
              case HostRoot:
                var root = fiber.stateNode;
                if (root.hydrate) {
                  flushRoot(root, root.firstPendingTime);
                }
                break;
              case SuspenseComponent:
                flushSync(function() {
                  return scheduleWork(fiber, Sync);
                });
                var retryExpTime = computeInteractiveExpiration(requestCurrentTimeForUpdate());
                markRetryTimeIfNotHydrated(fiber, retryExpTime);
                break;
            }
          }
          function markRetryTimeImpl(fiber, retryTime) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState !== null && suspenseState.dehydrated !== null) {
              if (suspenseState.retryTime < retryTime) {
                suspenseState.retryTime = retryTime;
              }
            }
          }
          function markRetryTimeIfNotHydrated(fiber, retryTime) {
            markRetryTimeImpl(fiber, retryTime);
            var alternate = fiber.alternate;
            if (alternate) {
              markRetryTimeImpl(alternate, retryTime);
            }
          }
          function attemptUserBlockingHydration(fiber) {
            if (fiber.tag !== SuspenseComponent) {
              return;
            }
            var expTime = computeInteractiveExpiration(requestCurrentTimeForUpdate());
            scheduleWork(fiber, expTime);
            markRetryTimeIfNotHydrated(fiber, expTime);
          }
          function attemptContinuousHydration(fiber) {
            if (fiber.tag !== SuspenseComponent) {
              return;
            }
            var expTime = computeContinuousHydrationExpiration(requestCurrentTimeForUpdate());
            scheduleWork(fiber, expTime);
            markRetryTimeIfNotHydrated(fiber, expTime);
          }
          function attemptHydrationAtCurrentPriority(fiber) {
            if (fiber.tag !== SuspenseComponent) {
              return;
            }
            var currentTime = requestCurrentTimeForUpdate();
            var expTime = computeExpirationForFiber(currentTime, fiber, null);
            scheduleWork(fiber, expTime);
            markRetryTimeIfNotHydrated(fiber, expTime);
          }
          function findHostInstanceWithNoPortals(fiber) {
            var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
            if (hostFiber === null) {
              return null;
            }
            if (hostFiber.tag === FundamentalComponent) {
              return hostFiber.stateNode.instance;
            }
            return hostFiber.stateNode;
          }
          var shouldSuspendImpl = function(fiber) {
            return false;
          };
          function shouldSuspend(fiber) {
            return shouldSuspendImpl(fiber);
          }
          var overrideHookState = null;
          var overrideProps = null;
          var scheduleUpdate = null;
          var setSuspenseHandler = null;
          {
            var copyWithSetImpl = function(obj, path, idx, value) {
              if (idx >= path.length) {
                return value;
              }
              var key2 = path[idx];
              var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
              updated[key2] = copyWithSetImpl(obj[key2], path, idx + 1, value);
              return updated;
            };
            var copyWithSet = function(obj, path, value) {
              return copyWithSetImpl(obj, path, 0, value);
            };
            overrideHookState = function(fiber, id, path, value) {
              var currentHook2 = fiber.memoizedState;
              while (currentHook2 !== null && id > 0) {
                currentHook2 = currentHook2.next;
                id--;
              }
              if (currentHook2 !== null) {
                var newState = copyWithSet(currentHook2.memoizedState, path, value);
                currentHook2.memoizedState = newState;
                currentHook2.baseState = newState;
                fiber.memoizedProps = _assign({}, fiber.memoizedProps);
                scheduleWork(fiber, Sync);
              }
            };
            overrideProps = function(fiber, path, value) {
              fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
              if (fiber.alternate) {
                fiber.alternate.pendingProps = fiber.pendingProps;
              }
              scheduleWork(fiber, Sync);
            };
            scheduleUpdate = function(fiber) {
              scheduleWork(fiber, Sync);
            };
            setSuspenseHandler = function(newShouldSuspendImpl) {
              shouldSuspendImpl = newShouldSuspendImpl;
            };
          }
          function injectIntoDevTools(devToolsConfig) {
            var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
            var ReactCurrentDispatcher2 = ReactSharedInternals.ReactCurrentDispatcher;
            return injectInternals(_assign({}, devToolsConfig, {
              overrideHookState,
              overrideProps,
              setSuspenseHandler,
              scheduleUpdate,
              currentDispatcherRef: ReactCurrentDispatcher2,
              findHostInstanceByFiber: function(fiber) {
                var hostFiber = findCurrentHostFiber(fiber);
                if (hostFiber === null) {
                  return null;
                }
                return hostFiber.stateNode;
              },
              findFiberByHostInstance: function(instance) {
                if (!findFiberByHostInstance) {
                  return null;
                }
                return findFiberByHostInstance(instance);
              },
              findHostInstancesForRefresh,
              scheduleRefresh,
              scheduleRoot,
              setRefreshHandler,
              getCurrentFiber: function() {
                return current;
              }
            }));
          }
          var ReactFiberReconciler = Object.freeze({
            createContainer,
            updateContainer,
            batchedEventUpdates,
            batchedUpdates,
            unbatchedUpdates,
            deferredUpdates,
            syncUpdates,
            discreteUpdates,
            flushDiscreteUpdates,
            flushControlled,
            flushSync,
            flushPassiveEffects,
            IsThisRendererActing,
            getPublicRootInstance,
            attemptSynchronousHydration,
            attemptUserBlockingHydration,
            attemptContinuousHydration,
            attemptHydrationAtCurrentPriority,
            findHostInstance,
            findHostInstanceWithWarning,
            findHostInstanceWithNoPortals,
            shouldSuspend,
            injectIntoDevTools
          });
          var reactReconciler = ReactFiberReconciler.default || ReactFiberReconciler;
          module2.exports = reactReconciler;
          var $$$renderer = module2.exports;
          module2.exports = $$$reconciler;
          return $$$renderer;
        };
      }
    }
  });

  // ../../../.yarn/__virtual__/react-reconciler-virtual-70b71e3ad2/0/cache/react-reconciler-npm-0.24.0-eaeed763d0-f544f94e10.zip/node_modules/react-reconciler/index.js
  var require_react_reconciler = __commonJS({
    "../../../.yarn/__virtual__/react-reconciler-virtual-70b71e3ad2/0/cache/react-reconciler-npm-0.24.0-eaeed763d0-f544f94e10.zip/node_modules/react-reconciler/index.js"(exports2, module2) {
      "use strict";
      if (process.env.NODE_ENV === "production") {
        module2.exports = require_react_reconciler_production_min();
      } else {
        module2.exports = require_react_reconciler_development();
      }
    }
  });

  // ../../../.yarn/cache/yoga-layout-prebuilt-patch-dd00f44944-9061e8a60c.zip/node_modules/yoga-layout-prebuilt/yoga-layout/dist/YGEnums.js
  var require_YGEnums = __commonJS({
    "../../../.yarn/cache/yoga-layout-prebuilt-patch-dd00f44944-9061e8a60c.zip/node_modules/yoga-layout-prebuilt/yoga-layout/dist/YGEnums.js"(exports2, module2) {
      "use strict";
      var CONSTANTS = {
        ALIGN_COUNT: 8,
        ALIGN_AUTO: 0,
        ALIGN_FLEX_START: 1,
        ALIGN_CENTER: 2,
        ALIGN_FLEX_END: 3,
        ALIGN_STRETCH: 4,
        ALIGN_BASELINE: 5,
        ALIGN_SPACE_BETWEEN: 6,
        ALIGN_SPACE_AROUND: 7,
        DIMENSION_COUNT: 2,
        DIMENSION_WIDTH: 0,
        DIMENSION_HEIGHT: 1,
        DIRECTION_COUNT: 3,
        DIRECTION_INHERIT: 0,
        DIRECTION_LTR: 1,
        DIRECTION_RTL: 2,
        DISPLAY_COUNT: 2,
        DISPLAY_FLEX: 0,
        DISPLAY_NONE: 1,
        EDGE_COUNT: 9,
        EDGE_LEFT: 0,
        EDGE_TOP: 1,
        EDGE_RIGHT: 2,
        EDGE_BOTTOM: 3,
        EDGE_START: 4,
        EDGE_END: 5,
        EDGE_HORIZONTAL: 6,
        EDGE_VERTICAL: 7,
        EDGE_ALL: 8,
        EXPERIMENTAL_FEATURE_COUNT: 1,
        EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS: 0,
        FLEX_DIRECTION_COUNT: 4,
        FLEX_DIRECTION_COLUMN: 0,
        FLEX_DIRECTION_COLUMN_REVERSE: 1,
        FLEX_DIRECTION_ROW: 2,
        FLEX_DIRECTION_ROW_REVERSE: 3,
        JUSTIFY_COUNT: 6,
        JUSTIFY_FLEX_START: 0,
        JUSTIFY_CENTER: 1,
        JUSTIFY_FLEX_END: 2,
        JUSTIFY_SPACE_BETWEEN: 3,
        JUSTIFY_SPACE_AROUND: 4,
        JUSTIFY_SPACE_EVENLY: 5,
        LOG_LEVEL_COUNT: 6,
        LOG_LEVEL_ERROR: 0,
        LOG_LEVEL_WARN: 1,
        LOG_LEVEL_INFO: 2,
        LOG_LEVEL_DEBUG: 3,
        LOG_LEVEL_VERBOSE: 4,
        LOG_LEVEL_FATAL: 5,
        MEASURE_MODE_COUNT: 3,
        MEASURE_MODE_UNDEFINED: 0,
        MEASURE_MODE_EXACTLY: 1,
        MEASURE_MODE_AT_MOST: 2,
        NODE_TYPE_COUNT: 2,
        NODE_TYPE_DEFAULT: 0,
        NODE_TYPE_TEXT: 1,
        OVERFLOW_COUNT: 3,
        OVERFLOW_VISIBLE: 0,
        OVERFLOW_HIDDEN: 1,
        OVERFLOW_SCROLL: 2,
        POSITION_TYPE_COUNT: 2,
        POSITION_TYPE_RELATIVE: 0,
        POSITION_TYPE_ABSOLUTE: 1,
        PRINT_OPTIONS_COUNT: 3,
        PRINT_OPTIONS_LAYOUT: 1,
        PRINT_OPTIONS_STYLE: 2,
        PRINT_OPTIONS_CHILDREN: 4,
        UNIT_COUNT: 4,
        UNIT_UNDEFINED: 0,
        UNIT_POINT: 1,
        UNIT_PERCENT: 2,
        UNIT_AUTO: 3,
        WRAP_COUNT: 3,
        WRAP_NO_WRAP: 0,
        WRAP_WRAP: 1,
        WRAP_WRAP_REVERSE: 2
      };
      module2.exports = CONSTANTS;
    }
  });

  // ../../../.yarn/cache/yoga-layout-prebuilt-patch-dd00f44944-9061e8a60c.zip/node_modules/yoga-layout-prebuilt/yoga-layout/dist/entry-common.js
  var require_entry_common = __commonJS({
    "../../../.yarn/cache/yoga-layout-prebuilt-patch-dd00f44944-9061e8a60c.zip/node_modules/yoga-layout-prebuilt/yoga-layout/dist/entry-common.js"(exports2, module2) {
      "use strict";
      var _extends = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key2 in source) {
            if (Object.prototype.hasOwnProperty.call(source, key2)) {
              target[key2] = source[key2];
            }
          }
        }
        return target;
      };
      var _createClass = function() {
        function defineProperties(target, props) {
          for (var i2 = 0; i2 < props.length; i2++) {
            var descriptor = props[i2];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
              descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
          if (staticProps)
            defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();
      function _defineProperty(obj, key2, value) {
        if (key2 in obj) {
          Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
        } else {
          obj[key2] = value;
        }
        return obj;
      }
      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      var CONSTANTS = require_YGEnums();
      var Layout = function() {
        function Layout2(left, right, top, bottom, width, height) {
          _classCallCheck(this, Layout2);
          this.left = left;
          this.right = right;
          this.top = top;
          this.bottom = bottom;
          this.width = width;
          this.height = height;
        }
        _createClass(Layout2, [{
          key: "fromJS",
          value: function fromJS(expose) {
            expose(this.left, this.right, this.top, this.bottom, this.width, this.height);
          }
        }, {
          key: "toString",
          value: function toString() {
            return "<Layout#" + this.left + ":" + this.right + ";" + this.top + ":" + this.bottom + ";" + this.width + ":" + this.height + ">";
          }
        }]);
        return Layout2;
      }();
      var Size = function() {
        _createClass(Size2, null, [{
          key: "fromJS",
          value: function fromJS(_ref) {
            var width = _ref.width, height = _ref.height;
            return new Size2(width, height);
          }
        }]);
        function Size2(width, height) {
          _classCallCheck(this, Size2);
          this.width = width;
          this.height = height;
        }
        _createClass(Size2, [{
          key: "fromJS",
          value: function fromJS(expose) {
            expose(this.width, this.height);
          }
        }, {
          key: "toString",
          value: function toString() {
            return "<Size#" + this.width + "x" + this.height + ">";
          }
        }]);
        return Size2;
      }();
      var Value = function() {
        function Value2(unit, value) {
          _classCallCheck(this, Value2);
          this.unit = unit;
          this.value = value;
        }
        _createClass(Value2, [{
          key: "fromJS",
          value: function fromJS(expose) {
            expose(this.unit, this.value);
          }
        }, {
          key: "toString",
          value: function toString() {
            switch (this.unit) {
              case CONSTANTS.UNIT_POINT:
                return String(this.value);
              case CONSTANTS.UNIT_PERCENT:
                return this.value + "%";
              case CONSTANTS.UNIT_AUTO:
                return "auto";
              default: {
                return this.value + "?";
              }
            }
          }
        }, {
          key: "valueOf",
          value: function valueOf() {
            return this.value;
          }
        }]);
        return Value2;
      }();
      module2.exports = function(bind, lib) {
        function patch(prototype, name, fn) {
          var original = prototype[name];
          prototype[name] = function() {
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            return fn.call.apply(fn, [this, original].concat(args));
          };
        }
        var _arr = ["setPosition", "setMargin", "setFlexBasis", "setWidth", "setHeight", "setMinWidth", "setMinHeight", "setMaxWidth", "setMaxHeight", "setPadding"];
        var _loop = function _loop2() {
          var _methods;
          var fnName = _arr[_i];
          var methods = (_methods = {}, _defineProperty(_methods, CONSTANTS.UNIT_POINT, lib.Node.prototype[fnName]), _defineProperty(_methods, CONSTANTS.UNIT_PERCENT, lib.Node.prototype[fnName + "Percent"]), _defineProperty(_methods, CONSTANTS.UNIT_AUTO, lib.Node.prototype[fnName + "Auto"]), _methods);
          patch(lib.Node.prototype, fnName, function(original) {
            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }
            var value = args.pop();
            var unit = void 0, asNumber = void 0;
            if (value === "auto") {
              unit = CONSTANTS.UNIT_AUTO;
              asNumber = void 0;
            } else if (value instanceof Value) {
              unit = value.unit;
              asNumber = value.valueOf();
            } else {
              unit = typeof value === "string" && value.endsWith("%") ? CONSTANTS.UNIT_PERCENT : CONSTANTS.UNIT_POINT;
              asNumber = parseFloat(value);
              if (!Number.isNaN(value) && Number.isNaN(asNumber)) {
                throw new Error("Invalid value " + value + " for " + fnName);
              }
            }
            if (!methods[unit])
              throw new Error('Failed to execute "' + fnName + `": Unsupported unit '` + value + "'");
            if (asNumber !== void 0) {
              var _methods$unit;
              return (_methods$unit = methods[unit]).call.apply(_methods$unit, [this].concat(args, [asNumber]));
            } else {
              var _methods$unit2;
              return (_methods$unit2 = methods[unit]).call.apply(_methods$unit2, [this].concat(args));
            }
          });
        };
        for (var _i = 0; _i < _arr.length; _i++) {
          _loop();
        }
        patch(lib.Config.prototype, "free", function() {
          lib.Config.destroy(this);
        });
        patch(lib.Node, "create", function(_, config) {
          return config ? lib.Node.createWithConfig(config) : lib.Node.createDefault();
        });
        patch(lib.Node.prototype, "free", function() {
          lib.Node.destroy(this);
        });
        patch(lib.Node.prototype, "freeRecursive", function() {
          for (var t = 0, T = this.getChildCount(); t < T; ++t) {
            this.getChild(0).freeRecursive();
          }
          this.free();
        });
        patch(lib.Node.prototype, "setMeasureFunc", function(original, measureFunc) {
          if (measureFunc) {
            return original.call(this, function() {
              return Size.fromJS(measureFunc.apply(void 0, arguments));
            });
          } else {
            return this.unsetMeasureFunc();
          }
        });
        patch(lib.Node.prototype, "calculateLayout", function(original) {
          var width = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : NaN;
          var height = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : NaN;
          var direction = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : CONSTANTS.DIRECTION_LTR;
          return original.call(this, width, height, direction);
        });
        return _extends({
          Config: lib.Config,
          Node: lib.Node,
          Layout: bind("Layout", Layout),
          Size: bind("Size", Size),
          Value: bind("Value", Value),
          getInstanceCount: function getInstanceCount() {
            return lib.getInstanceCount.apply(lib, arguments);
          }
        }, CONSTANTS);
      };
    }
  });

  // ../../../.yarn/cache/yoga-layout-prebuilt-patch-dd00f44944-9061e8a60c.zip/node_modules/yoga-layout-prebuilt/yoga-layout/build/Release/nbind.js
  var require_nbind = __commonJS({
    "../../../.yarn/cache/yoga-layout-prebuilt-patch-dd00f44944-9061e8a60c.zip/node_modules/yoga-layout-prebuilt/yoga-layout/build/Release/nbind.js"(exports, module) {
      (function(root, wrapper) {
        if (typeof define == "function" && define.amd)
          define([], function() {
            return wrapper;
          });
        else if (typeof module == "object" && module.exports)
          module.exports = wrapper;
        else
          (root.nbind = root.nbind || {}).init = wrapper;
      })(exports, function(Module, cb) {
        if (typeof Module == "function") {
          cb = Module;
          Module = {};
        }
        Module.onRuntimeInitialized = function(init, cb2) {
          return function() {
            if (init)
              init.apply(this, arguments);
            try {
              Module.ccall("nbind_init");
            } catch (err2) {
              cb2(err2);
              return;
            }
            cb2(null, { bind: Module._nbind_value, reflect: Module.NBind.reflect, queryType: Module.NBind.queryType, toggleLightGC: Module.toggleLightGC, lib: Module });
          };
        }(Module.onRuntimeInitialized, cb);
        var Module;
        if (!Module)
          Module = (typeof Module !== "undefined" ? Module : null) || {};
        var moduleOverrides = {};
        for (var key in Module) {
          if (Module.hasOwnProperty(key)) {
            moduleOverrides[key] = Module[key];
          }
        }
        var ENVIRONMENT_IS_WEB = false;
        var ENVIRONMENT_IS_WORKER = false;
        var ENVIRONMENT_IS_NODE = false;
        var ENVIRONMENT_IS_SHELL = false;
        if (Module["ENVIRONMENT"]) {
          if (Module["ENVIRONMENT"] === "WEB") {
            ENVIRONMENT_IS_WEB = true;
          } else if (Module["ENVIRONMENT"] === "WORKER") {
            ENVIRONMENT_IS_WORKER = true;
          } else if (Module["ENVIRONMENT"] === "NODE") {
            ENVIRONMENT_IS_NODE = true;
          } else if (Module["ENVIRONMENT"] === "SHELL") {
            ENVIRONMENT_IS_SHELL = true;
          } else {
            throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");
          }
        } else {
          ENVIRONMENT_IS_WEB = typeof window === "object";
          ENVIRONMENT_IS_WORKER = typeof importScripts === "function";
          ENVIRONMENT_IS_NODE = typeof process === "object" && typeof __require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
          ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
        }
        if (ENVIRONMENT_IS_NODE) {
          if (!Module["print"])
            Module["print"] = console.log;
          if (!Module["printErr"])
            Module["printErr"] = console.warn;
          var nodeFS;
          var nodePath;
          Module["read"] = function shell_read(filename, binary) {
            if (!nodeFS)
              nodeFS = {}("");
            if (!nodePath)
              nodePath = {}("");
            filename = nodePath["normalize"](filename);
            var ret = nodeFS["readFileSync"](filename);
            return binary ? ret : ret.toString();
          };
          Module["readBinary"] = function readBinary(filename) {
            var ret = Module["read"](filename, true);
            if (!ret.buffer) {
              ret = new Uint8Array(ret);
            }
            assert(ret.buffer);
            return ret;
          };
          Module["load"] = function load(f) {
            globalEval(read(f));
          };
          if (!Module["thisProgram"]) {
            if (process["argv"].length > 1) {
              Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
            } else {
              Module["thisProgram"] = "unknown-program";
            }
          }
          Module["arguments"] = process["argv"].slice(2);
          if (typeof module !== "undefined") {
            module["exports"] = Module;
          }
          process["on"]("uncaughtException", function(ex) {
            if (!(ex instanceof ExitStatus)) {
              throw ex;
            }
          });
          Module["inspect"] = function() {
            return "[Emscripten Module object]";
          };
        } else if (ENVIRONMENT_IS_SHELL) {
          if (!Module["print"])
            Module["print"] = print;
          if (typeof printErr != "undefined")
            Module["printErr"] = printErr;
          if (typeof read != "undefined") {
            Module["read"] = read;
          } else {
            Module["read"] = function shell_read() {
              throw "no read() available";
            };
          }
          Module["readBinary"] = function readBinary(f) {
            if (typeof readbuffer === "function") {
              return new Uint8Array(readbuffer(f));
            }
            var data = read(f, "binary");
            assert(typeof data === "object");
            return data;
          };
          if (typeof scriptArgs != "undefined") {
            Module["arguments"] = scriptArgs;
          } else if (typeof arguments != "undefined") {
            Module["arguments"] = arguments;
          }
          if (typeof quit === "function") {
            Module["quit"] = function(status, toThrow) {
              quit(status);
            };
          }
        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
          Module["read"] = function shell_read(url) {
            var xhr = new XMLHttpRequest();
            xhr.open("GET", url, false);
            xhr.send(null);
            return xhr.responseText;
          };
          if (ENVIRONMENT_IS_WORKER) {
            Module["readBinary"] = function readBinary(url) {
              var xhr = new XMLHttpRequest();
              xhr.open("GET", url, false);
              xhr.responseType = "arraybuffer";
              xhr.send(null);
              return new Uint8Array(xhr.response);
            };
          }
          Module["readAsync"] = function readAsync(url, onload, onerror) {
            var xhr = new XMLHttpRequest();
            xhr.open("GET", url, true);
            xhr.responseType = "arraybuffer";
            xhr.onload = function xhr_onload() {
              if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
                onload(xhr.response);
              } else {
                onerror();
              }
            };
            xhr.onerror = onerror;
            xhr.send(null);
          };
          if (typeof arguments != "undefined") {
            Module["arguments"] = arguments;
          }
          if (typeof console !== "undefined") {
            if (!Module["print"])
              Module["print"] = function shell_print(x) {
                console.log(x);
              };
            if (!Module["printErr"])
              Module["printErr"] = function shell_printErr(x) {
                console.warn(x);
              };
          } else {
            var TRY_USE_DUMP = false;
            if (!Module["print"])
              Module["print"] = TRY_USE_DUMP && typeof dump !== "undefined" ? function(x) {
                dump(x);
              } : function(x) {
              };
          }
          if (ENVIRONMENT_IS_WORKER) {
            Module["load"] = importScripts;
          }
          if (typeof Module["setWindowTitle"] === "undefined") {
            Module["setWindowTitle"] = function(title) {
              document.title = title;
            };
          }
        } else {
          throw "Unknown runtime environment. Where are we?";
        }
        function globalEval(x) {
          eval.call(null, x);
        }
        if (!Module["load"] && Module["read"]) {
          Module["load"] = function load(f) {
            globalEval(Module["read"](f));
          };
        }
        if (!Module["print"]) {
          Module["print"] = function() {
          };
        }
        if (!Module["printErr"]) {
          Module["printErr"] = Module["print"];
        }
        if (!Module["arguments"]) {
          Module["arguments"] = [];
        }
        if (!Module["thisProgram"]) {
          Module["thisProgram"] = "./this.program";
        }
        if (!Module["quit"]) {
          Module["quit"] = function(status, toThrow) {
            throw toThrow;
          };
        }
        Module.print = Module["print"];
        Module.printErr = Module["printErr"];
        Module["preRun"] = [];
        Module["postRun"] = [];
        for (var key in moduleOverrides) {
          if (moduleOverrides.hasOwnProperty(key)) {
            Module[key] = moduleOverrides[key];
          }
        }
        moduleOverrides = void 0;
        var Runtime = { setTempRet0: function(value) {
          tempRet0 = value;
          return value;
        }, getTempRet0: function() {
          return tempRet0;
        }, stackSave: function() {
          return STACKTOP;
        }, stackRestore: function(stackTop) {
          STACKTOP = stackTop;
        }, getNativeTypeSize: function(type2) {
          switch (type2) {
            case "i1":
            case "i8":
              return 1;
            case "i16":
              return 2;
            case "i32":
              return 4;
            case "i64":
              return 8;
            case "float":
              return 4;
            case "double":
              return 8;
            default: {
              if (type2[type2.length - 1] === "*") {
                return Runtime.QUANTUM_SIZE;
              } else if (type2[0] === "i") {
                var bits = parseInt(type2.substr(1));
                assert(bits % 8 === 0);
                return bits / 8;
              } else {
                return 0;
              }
            }
          }
        }, getNativeFieldSize: function(type2) {
          return Math.max(Runtime.getNativeTypeSize(type2), Runtime.QUANTUM_SIZE);
        }, STACK_ALIGN: 16, prepVararg: function(ptr2, type2) {
          if (type2 === "double" || type2 === "i64") {
            if (ptr2 & 7) {
              assert((ptr2 & 7) === 4);
              ptr2 += 4;
            }
          } else {
            assert((ptr2 & 3) === 0);
          }
          return ptr2;
        }, getAlignSize: function(type2, size, vararg) {
          if (!vararg && (type2 == "i64" || type2 == "double"))
            return 8;
          if (!type2)
            return Math.min(size, 8);
          return Math.min(size || (type2 ? Runtime.getNativeFieldSize(type2) : 0), Runtime.QUANTUM_SIZE);
        }, dynCall: function(sig, ptr2, args) {
          if (args && args.length) {
            return Module["dynCall_" + sig].apply(null, [ptr2].concat(args));
          } else {
            return Module["dynCall_" + sig].call(null, ptr2);
          }
        }, functionPointers: [], addFunction: function(func2) {
          for (var i2 = 0; i2 < Runtime.functionPointers.length; i2++) {
            if (!Runtime.functionPointers[i2]) {
              Runtime.functionPointers[i2] = func2;
              return 2 * (1 + i2);
            }
          }
          throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
        }, removeFunction: function(index) {
          Runtime.functionPointers[(index - 2) / 2] = null;
        }, warnOnce: function(text) {
          if (!Runtime.warnOnce.shown)
            Runtime.warnOnce.shown = {};
          if (!Runtime.warnOnce.shown[text]) {
            Runtime.warnOnce.shown[text] = 1;
            Module.printErr(text);
          }
        }, funcWrappers: {}, getFuncWrapper: function(func2, sig) {
          if (!func2)
            return;
          assert(sig);
          if (!Runtime.funcWrappers[sig]) {
            Runtime.funcWrappers[sig] = {};
          }
          var sigCache = Runtime.funcWrappers[sig];
          if (!sigCache[func2]) {
            if (sig.length === 1) {
              sigCache[func2] = function dynCall_wrapper() {
                return Runtime.dynCall(sig, func2);
              };
            } else if (sig.length === 2) {
              sigCache[func2] = function dynCall_wrapper(arg2) {
                return Runtime.dynCall(sig, func2, [arg2]);
              };
            } else {
              sigCache[func2] = function dynCall_wrapper() {
                return Runtime.dynCall(sig, func2, Array.prototype.slice.call(arguments));
              };
            }
          }
          return sigCache[func2];
        }, getCompilerSetting: function(name) {
          throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
        }, stackAlloc: function(size) {
          var ret = STACKTOP;
          STACKTOP = STACKTOP + size | 0;
          STACKTOP = STACKTOP + 15 & -16;
          return ret;
        }, staticAlloc: function(size) {
          var ret = STATICTOP;
          STATICTOP = STATICTOP + size | 0;
          STATICTOP = STATICTOP + 15 & -16;
          return ret;
        }, dynamicAlloc: function(size) {
          var ret = HEAP32[DYNAMICTOP_PTR >> 2];
          var end = (ret + size + 15 | 0) & -16;
          HEAP32[DYNAMICTOP_PTR >> 2] = end;
          if (end >= TOTAL_MEMORY) {
            var success = enlargeMemory();
            if (!success) {
              HEAP32[DYNAMICTOP_PTR >> 2] = ret;
              return 0;
            }
          }
          return ret;
        }, alignMemory: function(size, quantum) {
          var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);
          return ret;
        }, makeBigInt: function(low, high, unsigned) {
          var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * 4294967296 : +(low >>> 0) + +(high | 0) * 4294967296;
          return ret;
        }, GLOBAL_BASE: 8, QUANTUM_SIZE: 4, __dummy__: 0 };
        Module["Runtime"] = Runtime;
        var ABORT = 0;
        var EXITSTATUS = 0;
        function assert(condition, text) {
          if (!condition) {
            abort("Assertion failed: " + text);
          }
        }
        function getCFunc(ident) {
          var func = Module["_" + ident];
          if (!func) {
            try {
              func = eval("_" + ident);
            } catch (e) {
            }
          }
          assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");
          return func;
        }
        var cwrap, ccall;
        (function() {
          var JSfuncs = { "stackSave": function() {
            Runtime.stackSave();
          }, "stackRestore": function() {
            Runtime.stackRestore();
          }, "arrayToC": function(arr) {
            var ret = Runtime.stackAlloc(arr.length);
            writeArrayToMemory(arr, ret);
            return ret;
          }, "stringToC": function(str) {
            var ret = 0;
            if (str !== null && str !== void 0 && str !== 0) {
              var len = (str.length << 2) + 1;
              ret = Runtime.stackAlloc(len);
              stringToUTF8(str, ret, len);
            }
            return ret;
          } };
          var toC = { "string": JSfuncs["stringToC"], "array": JSfuncs["arrayToC"] };
          ccall = function ccallFunc(ident2, returnType2, argTypes2, args, opts) {
            var func2 = getCFunc(ident2);
            var cArgs = [];
            var stack = 0;
            if (args) {
              for (var i2 = 0; i2 < args.length; i2++) {
                var converter = toC[argTypes2[i2]];
                if (converter) {
                  if (stack === 0)
                    stack = Runtime.stackSave();
                  cArgs[i2] = converter(args[i2]);
                } else {
                  cArgs[i2] = args[i2];
                }
              }
            }
            var ret = func2.apply(null, cArgs);
            if (returnType2 === "string")
              ret = Pointer_stringify(ret);
            if (stack !== 0) {
              if (opts && opts.async) {
                EmterpreterAsync.asyncFinalizers.push(function() {
                  Runtime.stackRestore(stack);
                });
                return;
              }
              Runtime.stackRestore(stack);
            }
            return ret;
          };
          var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
          function parseJSFunc(jsfunc) {
            var parsed = jsfunc.toString().match(sourceRegex).slice(1);
            return { arguments: parsed[0], body: parsed[1], returnValue: parsed[2] };
          }
          var JSsource = null;
          function ensureJSsource() {
            if (!JSsource) {
              JSsource = {};
              for (var fun in JSfuncs) {
                if (JSfuncs.hasOwnProperty(fun)) {
                  JSsource[fun] = parseJSFunc(JSfuncs[fun]);
                }
              }
            }
          }
          cwrap = function cwrap(ident, returnType, argTypes) {
            argTypes = argTypes || [];
            var cfunc = getCFunc(ident);
            var numericArgs = argTypes.every(function(type2) {
              return type2 === "number";
            });
            var numericRet = returnType !== "string";
            if (numericRet && numericArgs) {
              return cfunc;
            }
            var argNames = argTypes.map(function(x, i2) {
              return "$" + i2;
            });
            var funcstr = "(function(" + argNames.join(",") + ") {";
            var nargs = argTypes.length;
            if (!numericArgs) {
              ensureJSsource();
              funcstr += "var stack = " + JSsource["stackSave"].body + ";";
              for (var i = 0; i < nargs; i++) {
                var arg = argNames[i], type = argTypes[i];
                if (type === "number")
                  continue;
                var convertCode = JSsource[type + "ToC"];
                funcstr += "var " + convertCode.arguments + " = " + arg + ";";
                funcstr += convertCode.body + ";";
                funcstr += arg + "=(" + convertCode.returnValue + ");";
              }
            }
            var cfuncname = parseJSFunc(function() {
              return cfunc;
            }).returnValue;
            funcstr += "var ret = " + cfuncname + "(" + argNames.join(",") + ");";
            if (!numericRet) {
              var strgfy = parseJSFunc(function() {
                return Pointer_stringify;
              }).returnValue;
              funcstr += "ret = " + strgfy + "(ret);";
            }
            if (!numericArgs) {
              ensureJSsource();
              funcstr += JSsource["stackRestore"].body.replace("()", "(stack)") + ";";
            }
            funcstr += "return ret})";
            return eval(funcstr);
          };
        })();
        Module["ccall"] = ccall;
        Module["cwrap"] = cwrap;
        function setValue(ptr2, value, type2, noSafe) {
          type2 = type2 || "i8";
          if (type2.charAt(type2.length - 1) === "*")
            type2 = "i32";
          switch (type2) {
            case "i1":
              HEAP8[ptr2 >> 0] = value;
              break;
            case "i8":
              HEAP8[ptr2 >> 0] = value;
              break;
            case "i16":
              HEAP16[ptr2 >> 1] = value;
              break;
            case "i32":
              HEAP32[ptr2 >> 2] = value;
              break;
            case "i64":
              tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[ptr2 >> 2] = tempI64[0], HEAP32[ptr2 + 4 >> 2] = tempI64[1];
              break;
            case "float":
              HEAPF32[ptr2 >> 2] = value;
              break;
            case "double":
              HEAPF64[ptr2 >> 3] = value;
              break;
            default:
              abort("invalid type for setValue: " + type2);
          }
        }
        Module["setValue"] = setValue;
        function getValue(ptr2, type2, noSafe) {
          type2 = type2 || "i8";
          if (type2.charAt(type2.length - 1) === "*")
            type2 = "i32";
          switch (type2) {
            case "i1":
              return HEAP8[ptr2 >> 0];
            case "i8":
              return HEAP8[ptr2 >> 0];
            case "i16":
              return HEAP16[ptr2 >> 1];
            case "i32":
              return HEAP32[ptr2 >> 2];
            case "i64":
              return HEAP32[ptr2 >> 2];
            case "float":
              return HEAPF32[ptr2 >> 2];
            case "double":
              return HEAPF64[ptr2 >> 3];
            default:
              abort("invalid type for setValue: " + type2);
          }
          return null;
        }
        Module["getValue"] = getValue;
        var ALLOC_NORMAL = 0;
        var ALLOC_STACK = 1;
        var ALLOC_STATIC = 2;
        var ALLOC_DYNAMIC = 3;
        var ALLOC_NONE = 4;
        Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
        Module["ALLOC_STACK"] = ALLOC_STACK;
        Module["ALLOC_STATIC"] = ALLOC_STATIC;
        Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
        Module["ALLOC_NONE"] = ALLOC_NONE;
        function allocate(slab, types, allocator, ptr2) {
          var zeroinit, size;
          if (typeof slab === "number") {
            zeroinit = true;
            size = slab;
          } else {
            zeroinit = false;
            size = slab.length;
          }
          var singleType = typeof types === "string" ? types : null;
          var ret;
          if (allocator == ALLOC_NONE) {
            ret = ptr2;
          } else {
            ret = [typeof _malloc === "function" ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === void 0 ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
          }
          if (zeroinit) {
            var ptr2 = ret, stop;
            assert((ret & 3) == 0);
            stop = ret + (size & ~3);
            for (; ptr2 < stop; ptr2 += 4) {
              HEAP32[ptr2 >> 2] = 0;
            }
            stop = ret + size;
            while (ptr2 < stop) {
              HEAP8[ptr2++ >> 0] = 0;
            }
            return ret;
          }
          if (singleType === "i8") {
            if (slab.subarray || slab.slice) {
              HEAPU8.set(slab, ret);
            } else {
              HEAPU8.set(new Uint8Array(slab), ret);
            }
            return ret;
          }
          var i2 = 0, type2, typeSize, previousType;
          while (i2 < size) {
            var curr = slab[i2];
            if (typeof curr === "function") {
              curr = Runtime.getFunctionIndex(curr);
            }
            type2 = singleType || types[i2];
            if (type2 === 0) {
              i2++;
              continue;
            }
            if (type2 == "i64")
              type2 = "i32";
            setValue(ret + i2, curr, type2);
            if (previousType !== type2) {
              typeSize = Runtime.getNativeTypeSize(type2);
              previousType = type2;
            }
            i2 += typeSize;
          }
          return ret;
        }
        Module["allocate"] = allocate;
        function getMemory(size) {
          if (!staticSealed)
            return Runtime.staticAlloc(size);
          if (!runtimeInitialized)
            return Runtime.dynamicAlloc(size);
          return _malloc(size);
        }
        Module["getMemory"] = getMemory;
        function Pointer_stringify(ptr2, length) {
          if (length === 0 || !ptr2)
            return "";
          var hasUtf = 0;
          var t;
          var i2 = 0;
          while (1) {
            t = HEAPU8[ptr2 + i2 >> 0];
            hasUtf |= t;
            if (t == 0 && !length)
              break;
            i2++;
            if (length && i2 == length)
              break;
          }
          if (!length)
            length = i2;
          var ret = "";
          if (hasUtf < 128) {
            var MAX_CHUNK = 1024;
            var curr;
            while (length > 0) {
              curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr2, ptr2 + Math.min(length, MAX_CHUNK)));
              ret = ret ? ret + curr : curr;
              ptr2 += MAX_CHUNK;
              length -= MAX_CHUNK;
            }
            return ret;
          }
          return Module["UTF8ToString"](ptr2);
        }
        Module["Pointer_stringify"] = Pointer_stringify;
        function AsciiToString(ptr2) {
          var str = "";
          while (1) {
            var ch = HEAP8[ptr2++ >> 0];
            if (!ch)
              return str;
            str += String.fromCharCode(ch);
          }
        }
        Module["AsciiToString"] = AsciiToString;
        function stringToAscii(str, outPtr) {
          return writeAsciiToMemory(str, outPtr, false);
        }
        Module["stringToAscii"] = stringToAscii;
        var UTF8Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf8") : void 0;
        function UTF8ArrayToString(u8Array, idx) {
          var endPtr = idx;
          while (u8Array[endPtr])
            ++endPtr;
          if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
            return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
          } else {
            var u0, u1, u2, u3, u4, u5;
            var str = "";
            while (1) {
              u0 = u8Array[idx++];
              if (!u0)
                return str;
              if (!(u0 & 128)) {
                str += String.fromCharCode(u0);
                continue;
              }
              u1 = u8Array[idx++] & 63;
              if ((u0 & 224) == 192) {
                str += String.fromCharCode((u0 & 31) << 6 | u1);
                continue;
              }
              u2 = u8Array[idx++] & 63;
              if ((u0 & 240) == 224) {
                u0 = (u0 & 15) << 12 | u1 << 6 | u2;
              } else {
                u3 = u8Array[idx++] & 63;
                if ((u0 & 248) == 240) {
                  u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
                } else {
                  u4 = u8Array[idx++] & 63;
                  if ((u0 & 252) == 248) {
                    u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
                  } else {
                    u5 = u8Array[idx++] & 63;
                    u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
                  }
                }
              }
              if (u0 < 65536) {
                str += String.fromCharCode(u0);
              } else {
                var ch = u0 - 65536;
                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
              }
            }
          }
        }
        Module["UTF8ArrayToString"] = UTF8ArrayToString;
        function UTF8ToString(ptr2) {
          return UTF8ArrayToString(HEAPU8, ptr2);
        }
        Module["UTF8ToString"] = UTF8ToString;
        function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
          if (!(maxBytesToWrite > 0))
            return 0;
          var startIdx = outIdx;
          var endIdx = outIdx + maxBytesToWrite - 1;
          for (var i2 = 0; i2 < str.length; ++i2) {
            var u = str.charCodeAt(i2);
            if (u >= 55296 && u <= 57343)
              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i2) & 1023;
            if (u <= 127) {
              if (outIdx >= endIdx)
                break;
              outU8Array[outIdx++] = u;
            } else if (u <= 2047) {
              if (outIdx + 1 >= endIdx)
                break;
              outU8Array[outIdx++] = 192 | u >> 6;
              outU8Array[outIdx++] = 128 | u & 63;
            } else if (u <= 65535) {
              if (outIdx + 2 >= endIdx)
                break;
              outU8Array[outIdx++] = 224 | u >> 12;
              outU8Array[outIdx++] = 128 | u >> 6 & 63;
              outU8Array[outIdx++] = 128 | u & 63;
            } else if (u <= 2097151) {
              if (outIdx + 3 >= endIdx)
                break;
              outU8Array[outIdx++] = 240 | u >> 18;
              outU8Array[outIdx++] = 128 | u >> 12 & 63;
              outU8Array[outIdx++] = 128 | u >> 6 & 63;
              outU8Array[outIdx++] = 128 | u & 63;
            } else if (u <= 67108863) {
              if (outIdx + 4 >= endIdx)
                break;
              outU8Array[outIdx++] = 248 | u >> 24;
              outU8Array[outIdx++] = 128 | u >> 18 & 63;
              outU8Array[outIdx++] = 128 | u >> 12 & 63;
              outU8Array[outIdx++] = 128 | u >> 6 & 63;
              outU8Array[outIdx++] = 128 | u & 63;
            } else {
              if (outIdx + 5 >= endIdx)
                break;
              outU8Array[outIdx++] = 252 | u >> 30;
              outU8Array[outIdx++] = 128 | u >> 24 & 63;
              outU8Array[outIdx++] = 128 | u >> 18 & 63;
              outU8Array[outIdx++] = 128 | u >> 12 & 63;
              outU8Array[outIdx++] = 128 | u >> 6 & 63;
              outU8Array[outIdx++] = 128 | u & 63;
            }
          }
          outU8Array[outIdx] = 0;
          return outIdx - startIdx;
        }
        Module["stringToUTF8Array"] = stringToUTF8Array;
        function stringToUTF8(str, outPtr, maxBytesToWrite) {
          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
        }
        Module["stringToUTF8"] = stringToUTF8;
        function lengthBytesUTF8(str) {
          var len = 0;
          for (var i2 = 0; i2 < str.length; ++i2) {
            var u = str.charCodeAt(i2);
            if (u >= 55296 && u <= 57343)
              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i2) & 1023;
            if (u <= 127) {
              ++len;
            } else if (u <= 2047) {
              len += 2;
            } else if (u <= 65535) {
              len += 3;
            } else if (u <= 2097151) {
              len += 4;
            } else if (u <= 67108863) {
              len += 5;
            } else {
              len += 6;
            }
          }
          return len;
        }
        Module["lengthBytesUTF8"] = lengthBytesUTF8;
        var UTF16Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-16le") : void 0;
        function demangle(func2) {
          var __cxa_demangle_func = Module["___cxa_demangle"] || Module["__cxa_demangle"];
          if (__cxa_demangle_func) {
            try {
              var s = func2.substr(1);
              var len = lengthBytesUTF8(s) + 1;
              var buf = _malloc(len);
              stringToUTF8(s, buf, len);
              var status = _malloc(4);
              var ret = __cxa_demangle_func(buf, 0, 0, status);
              if (getValue(status, "i32") === 0 && ret) {
                return Pointer_stringify(ret);
              }
            } catch (e) {
            } finally {
              if (buf)
                _free(buf);
              if (status)
                _free(status);
              if (ret)
                _free(ret);
            }
            return func2;
          }
          Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
          return func2;
        }
        function demangleAll(text) {
          var regex = /__Z[\w\d_]+/g;
          return text.replace(regex, function(x) {
            var y = demangle(x);
            return x === y ? x : x + " [" + y + "]";
          });
        }
        function jsStackTrace() {
          var err2 = new Error();
          if (!err2.stack) {
            try {
              throw new Error(0);
            } catch (e) {
              err2 = e;
            }
            if (!err2.stack) {
              return "(no stack trace available)";
            }
          }
          return err2.stack.toString();
        }
        function stackTrace() {
          var js = jsStackTrace();
          if (Module["extraStackTrace"])
            js += "\n" + Module["extraStackTrace"]();
          return demangleAll(js);
        }
        Module["stackTrace"] = stackTrace;
        var HEAP, buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
        function updateGlobalBufferViews() {
          Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
          Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
          Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
          Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
          Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
          Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
          Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
          Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
        }
        var STATIC_BASE, STATICTOP, staticSealed;
        var STACK_BASE, STACKTOP, STACK_MAX;
        var DYNAMIC_BASE, DYNAMICTOP_PTR;
        STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
        staticSealed = false;
        function abortOnCannotGrowMemory() {
          abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + TOTAL_MEMORY + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
        }
        function enlargeMemory() {
          abortOnCannotGrowMemory();
        }
        var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;
        var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 134217728;
        if (TOTAL_MEMORY < TOTAL_STACK)
          Module.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was " + TOTAL_MEMORY + "! (TOTAL_STACK=" + TOTAL_STACK + ")");
        if (Module["buffer"]) {
          buffer = Module["buffer"];
        } else {
          {
            buffer = new ArrayBuffer(TOTAL_MEMORY);
          }
        }
        updateGlobalBufferViews();
        function getTotalMemory() {
          return TOTAL_MEMORY;
        }
        HEAP32[0] = 1668509029;
        HEAP16[1] = 25459;
        if (HEAPU8[2] !== 115 || HEAPU8[3] !== 99)
          throw "Runtime error: expected the system to be little-endian!";
        Module["HEAP"] = HEAP;
        Module["buffer"] = buffer;
        Module["HEAP8"] = HEAP8;
        Module["HEAP16"] = HEAP16;
        Module["HEAP32"] = HEAP32;
        Module["HEAPU8"] = HEAPU8;
        Module["HEAPU16"] = HEAPU16;
        Module["HEAPU32"] = HEAPU32;
        Module["HEAPF32"] = HEAPF32;
        Module["HEAPF64"] = HEAPF64;
        function callRuntimeCallbacks(callbacks) {
          while (callbacks.length > 0) {
            var callback = callbacks.shift();
            if (typeof callback == "function") {
              callback();
              continue;
            }
            var func2 = callback.func;
            if (typeof func2 === "number") {
              if (callback.arg === void 0) {
                Module["dynCall_v"](func2);
              } else {
                Module["dynCall_vi"](func2, callback.arg);
              }
            } else {
              func2(callback.arg === void 0 ? null : callback.arg);
            }
          }
        }
        var __ATPRERUN__ = [];
        var __ATINIT__ = [];
        var __ATMAIN__ = [];
        var __ATEXIT__ = [];
        var __ATPOSTRUN__ = [];
        var runtimeInitialized = false;
        var runtimeExited = false;
        function preRun() {
          if (Module["preRun"]) {
            if (typeof Module["preRun"] == "function")
              Module["preRun"] = [Module["preRun"]];
            while (Module["preRun"].length) {
              addOnPreRun(Module["preRun"].shift());
            }
          }
          callRuntimeCallbacks(__ATPRERUN__);
        }
        function ensureInitRuntime() {
          if (runtimeInitialized)
            return;
          runtimeInitialized = true;
          callRuntimeCallbacks(__ATINIT__);
        }
        function preMain() {
          callRuntimeCallbacks(__ATMAIN__);
        }
        function exitRuntime() {
          callRuntimeCallbacks(__ATEXIT__);
          runtimeExited = true;
        }
        function postRun() {
          if (Module["postRun"]) {
            if (typeof Module["postRun"] == "function")
              Module["postRun"] = [Module["postRun"]];
            while (Module["postRun"].length) {
              addOnPostRun(Module["postRun"].shift());
            }
          }
          callRuntimeCallbacks(__ATPOSTRUN__);
        }
        function addOnPreRun(cb2) {
          __ATPRERUN__.unshift(cb2);
        }
        Module["addOnPreRun"] = addOnPreRun;
        function addOnInit(cb2) {
          __ATINIT__.unshift(cb2);
        }
        Module["addOnInit"] = addOnInit;
        function addOnPreMain(cb2) {
          __ATMAIN__.unshift(cb2);
        }
        Module["addOnPreMain"] = addOnPreMain;
        function addOnExit(cb2) {
          __ATEXIT__.unshift(cb2);
        }
        Module["addOnExit"] = addOnExit;
        function addOnPostRun(cb2) {
          __ATPOSTRUN__.unshift(cb2);
        }
        Module["addOnPostRun"] = addOnPostRun;
        function intArrayFromString(stringy, dontAddNull, length) {
          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
          var u8array = new Array(len);
          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
          if (dontAddNull)
            u8array.length = numBytesWritten;
          return u8array;
        }
        Module["intArrayFromString"] = intArrayFromString;
        function intArrayToString(array) {
          var ret = [];
          for (var i2 = 0; i2 < array.length; i2++) {
            var chr = array[i2];
            if (chr > 255) {
              chr &= 255;
            }
            ret.push(String.fromCharCode(chr));
          }
          return ret.join("");
        }
        Module["intArrayToString"] = intArrayToString;
        function writeStringToMemory(string, buffer2, dontAddNull) {
          Runtime.warnOnce("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!");
          var lastChar, end;
          if (dontAddNull) {
            end = buffer2 + lengthBytesUTF8(string);
            lastChar = HEAP8[end];
          }
          stringToUTF8(string, buffer2, Infinity);
          if (dontAddNull)
            HEAP8[end] = lastChar;
        }
        Module["writeStringToMemory"] = writeStringToMemory;
        function writeArrayToMemory(array, buffer2) {
          HEAP8.set(array, buffer2);
        }
        Module["writeArrayToMemory"] = writeArrayToMemory;
        function writeAsciiToMemory(str, buffer2, dontAddNull) {
          for (var i2 = 0; i2 < str.length; ++i2) {
            HEAP8[buffer2++ >> 0] = str.charCodeAt(i2);
          }
          if (!dontAddNull)
            HEAP8[buffer2 >> 0] = 0;
        }
        Module["writeAsciiToMemory"] = writeAsciiToMemory;
        if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5)
          Math["imul"] = function imul(a, b) {
            var ah = a >>> 16;
            var al = a & 65535;
            var bh = b >>> 16;
            var bl = b & 65535;
            return al * bl + (ah * bl + al * bh << 16) | 0;
          };
        Math.imul = Math["imul"];
        if (!Math["fround"]) {
          var froundBuffer = new Float32Array(1);
          Math["fround"] = function(x) {
            froundBuffer[0] = x;
            return froundBuffer[0];
          };
        }
        Math.fround = Math["fround"];
        if (!Math["clz32"])
          Math["clz32"] = function(x) {
            x = x >>> 0;
            for (var i2 = 0; i2 < 32; i2++) {
              if (x & 1 << 31 - i2)
                return i2;
            }
            return 32;
          };
        Math.clz32 = Math["clz32"];
        if (!Math["trunc"])
          Math["trunc"] = function(x) {
            return x < 0 ? Math.ceil(x) : Math.floor(x);
          };
        Math.trunc = Math["trunc"];
        var Math_abs = Math.abs;
        var Math_cos = Math.cos;
        var Math_sin = Math.sin;
        var Math_tan = Math.tan;
        var Math_acos = Math.acos;
        var Math_asin = Math.asin;
        var Math_atan = Math.atan;
        var Math_atan2 = Math.atan2;
        var Math_exp = Math.exp;
        var Math_log = Math.log;
        var Math_sqrt = Math.sqrt;
        var Math_ceil = Math.ceil;
        var Math_floor = Math.floor;
        var Math_pow = Math.pow;
        var Math_imul = Math.imul;
        var Math_fround = Math.fround;
        var Math_round = Math.round;
        var Math_min = Math.min;
        var Math_clz32 = Math.clz32;
        var Math_trunc = Math.trunc;
        var runDependencies = 0;
        var runDependencyWatcher = null;
        var dependenciesFulfilled = null;
        function getUniqueRunDependency(id) {
          return id;
        }
        function addRunDependency(id) {
          runDependencies++;
          if (Module["monitorRunDependencies"]) {
            Module["monitorRunDependencies"](runDependencies);
          }
        }
        Module["addRunDependency"] = addRunDependency;
        function removeRunDependency(id) {
          runDependencies--;
          if (Module["monitorRunDependencies"]) {
            Module["monitorRunDependencies"](runDependencies);
          }
          if (runDependencies == 0) {
            if (runDependencyWatcher !== null) {
              clearInterval(runDependencyWatcher);
              runDependencyWatcher = null;
            }
            if (dependenciesFulfilled) {
              var callback = dependenciesFulfilled;
              dependenciesFulfilled = null;
              callback();
            }
          }
        }
        Module["removeRunDependency"] = removeRunDependency;
        Module["preloadedImages"] = {};
        Module["preloadedAudios"] = {};
        var ASM_CONSTS = [function($0, $1, $2, $3, $4, $5, $6, $7) {
          return _nbind.callbackSignatureList[$0].apply(this, arguments);
        }];
        function _emscripten_asm_const_iiiiiiii(code, a0, a1, a2, a3, a4, a5, a6) {
          return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6);
        }
        function _emscripten_asm_const_iiiii(code, a0, a1, a2, a3) {
          return ASM_CONSTS[code](a0, a1, a2, a3);
        }
        function _emscripten_asm_const_iiidddddd(code, a0, a1, a2, a3, a4, a5, a6, a7) {
          return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7);
        }
        function _emscripten_asm_const_iiididi(code, a0, a1, a2, a3, a4, a5) {
          return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5);
        }
        function _emscripten_asm_const_iiii(code, a0, a1, a2) {
          return ASM_CONSTS[code](a0, a1, a2);
        }
        function _emscripten_asm_const_iiiid(code, a0, a1, a2, a3) {
          return ASM_CONSTS[code](a0, a1, a2, a3);
        }
        function _emscripten_asm_const_iiiiii(code, a0, a1, a2, a3, a4) {
          return ASM_CONSTS[code](a0, a1, a2, a3, a4);
        }
        STATIC_BASE = Runtime.GLOBAL_BASE;
        STATICTOP = STATIC_BASE + 12800;
        __ATINIT__.push({ func: function() {
          __GLOBAL__sub_I_Yoga_cpp();
        } }, { func: function() {
          __GLOBAL__sub_I_nbind_cc();
        } }, { func: function() {
          __GLOBAL__sub_I_common_cc();
        } }, { func: function() {
          __GLOBAL__sub_I_Binding_cc();
        } });
        allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 192, 127, 0, 0, 192, 127, 0, 0, 192, 127, 3, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 3, 0, 0, 0, 0, 0, 192, 127, 3, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 127, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 128, 191, 0, 0, 128, 191, 0, 0, 192, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 190, 12, 0, 0, 200, 12, 0, 0, 208, 12, 0, 0, 216, 12, 0, 0, 230, 12, 0, 0, 242, 12, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 192, 127, 3, 0, 0, 0, 180, 45, 0, 0, 181, 45, 0, 0, 182, 45, 0, 0, 181, 45, 0, 0, 182, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 183, 45, 0, 0, 181, 45, 0, 0, 181, 45, 0, 0, 181, 45, 0, 0, 181, 45, 0, 0, 181, 45, 0, 0, 181, 45, 0, 0, 184, 45, 0, 0, 185, 45, 0, 0, 181, 45, 0, 0, 181, 45, 0, 0, 182, 45, 0, 0, 186, 45, 0, 0, 185, 45, 0, 0, 148, 4, 0, 0, 3, 0, 0, 0, 187, 45, 0, 0, 164, 4, 0, 0, 188, 45, 0, 0, 2, 0, 0, 0, 189, 45, 0, 0, 164, 4, 0, 0, 188, 45, 0, 0, 185, 45, 0, 0, 164, 4, 0, 0, 185, 45, 0, 0, 164, 4, 0, 0, 188, 45, 0, 0, 181, 45, 0, 0, 182, 45, 0, 0, 181, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 183, 45, 0, 0, 182, 45, 0, 0, 181, 45, 0, 0, 190, 45, 0, 0, 190, 45, 0, 0, 182, 45, 0, 0, 182, 45, 0, 0, 185, 45, 0, 0, 181, 45, 0, 0, 185, 45, 0, 0, 182, 45, 0, 0, 181, 45, 0, 0, 185, 45, 0, 0, 182, 45, 0, 0, 185, 45, 0, 0, 48, 5, 0, 0, 3, 0, 0, 0, 56, 5, 0, 0, 1, 0, 0, 0, 189, 45, 0, 0, 185, 45, 0, 0, 164, 4, 0, 0, 76, 5, 0, 0, 2, 0, 0, 0, 191, 45, 0, 0, 186, 45, 0, 0, 182, 45, 0, 0, 185, 45, 0, 0, 192, 45, 0, 0, 185, 45, 0, 0, 182, 45, 0, 0, 186, 45, 0, 0, 185, 45, 0, 0, 76, 5, 0, 0, 76, 5, 0, 0, 136, 5, 0, 0, 182, 45, 0, 0, 181, 45, 0, 0, 2, 0, 0, 0, 190, 45, 0, 0, 136, 5, 0, 0, 56, 19, 0, 0, 156, 5, 0, 0, 2, 0, 0, 0, 184, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 10, 0, 0, 0, 204, 5, 0, 0, 181, 45, 0, 0, 181, 45, 0, 0, 2, 0, 0, 0, 180, 45, 0, 0, 204, 5, 0, 0, 2, 0, 0, 0, 195, 45, 0, 0, 236, 5, 0, 0, 97, 19, 0, 0, 198, 45, 0, 0, 211, 45, 0, 0, 212, 45, 0, 0, 213, 45, 0, 0, 214, 45, 0, 0, 215, 45, 0, 0, 188, 45, 0, 0, 182, 45, 0, 0, 216, 45, 0, 0, 217, 45, 0, 0, 218, 45, 0, 0, 219, 45, 0, 0, 192, 45, 0, 0, 181, 45, 0, 0, 0, 0, 0, 0, 185, 45, 0, 0, 110, 19, 0, 0, 186, 45, 0, 0, 115, 19, 0, 0, 221, 45, 0, 0, 120, 19, 0, 0, 148, 4, 0, 0, 132, 19, 0, 0, 96, 6, 0, 0, 145, 19, 0, 0, 222, 45, 0, 0, 164, 19, 0, 0, 223, 45, 0, 0, 173, 19, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 104, 6, 0, 0, 1, 0, 0, 0, 187, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 1, 0, 0, 0, 13, 0, 0, 0, 185, 45, 0, 0, 224, 45, 0, 0, 164, 6, 0, 0, 188, 45, 0, 0, 172, 6, 0, 0, 180, 6, 0, 0, 2, 0, 0, 0, 188, 6, 0, 0, 7, 0, 0, 0, 224, 45, 0, 0, 7, 0, 0, 0, 164, 6, 0, 0, 1, 0, 0, 0, 213, 45, 0, 0, 185, 45, 0, 0, 224, 45, 0, 0, 172, 6, 0, 0, 185, 45, 0, 0, 224, 45, 0, 0, 164, 6, 0, 0, 185, 45, 0, 0, 224, 45, 0, 0, 211, 45, 0, 0, 211, 45, 0, 0, 222, 45, 0, 0, 211, 45, 0, 0, 224, 45, 0, 0, 222, 45, 0, 0, 211, 45, 0, 0, 224, 45, 0, 0, 172, 6, 0, 0, 222, 45, 0, 0, 211, 45, 0, 0, 224, 45, 0, 0, 188, 45, 0, 0, 222, 45, 0, 0, 211, 45, 0, 0, 40, 7, 0, 0, 188, 45, 0, 0, 2, 0, 0, 0, 224, 45, 0, 0, 185, 45, 0, 0, 188, 45, 0, 0, 188, 45, 0, 0, 188, 45, 0, 0, 188, 45, 0, 0, 222, 45, 0, 0, 224, 45, 0, 0, 148, 4, 0, 0, 185, 45, 0, 0, 148, 4, 0, 0, 148, 4, 0, 0, 148, 4, 0, 0, 148, 4, 0, 0, 148, 4, 0, 0, 185, 45, 0, 0, 164, 6, 0, 0, 148, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 1, 0, 0, 0, 16, 0, 0, 0, 148, 7, 0, 0, 2, 0, 0, 0, 225, 45, 0, 0, 183, 45, 0, 0, 188, 45, 0, 0, 168, 7, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 234, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 148, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 9, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 242, 45, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 97, 108, 108, 111, 99, 97, 116, 101, 32, 109, 101, 109, 111, 114, 121, 32, 102, 111, 114, 32, 110, 111, 100, 101, 0, 67, 97, 110, 110, 111, 116, 32, 114, 101, 115, 101, 116, 32, 97, 32, 110, 111, 100, 101, 32, 119, 104, 105, 99, 104, 32, 115, 116, 105, 108, 108, 32, 104, 97, 115, 32, 99, 104, 105, 108, 100, 114, 101, 110, 32, 97, 116, 116, 97, 99, 104, 101, 100, 0, 67, 97, 110, 110, 111, 116, 32, 114, 101, 115, 101, 116, 32, 97, 32, 110, 111, 100, 101, 32, 115, 116, 105, 108, 108, 32, 97, 116, 116, 97, 99, 104, 101, 100, 32, 116, 111, 32, 97, 32, 112, 97, 114, 101, 110, 116, 0, 67, 111, 117, 108, 100, 32, 110, 111, 116, 32, 97, 108, 108, 111, 99, 97, 116, 101, 32, 109, 101, 109, 111, 114, 121, 32, 102, 111, 114, 32, 99, 111, 110, 102, 105, 103, 0, 67, 97, 110, 110, 111, 116, 32, 115, 101, 116, 32, 109, 101, 97, 115, 117, 114, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 58, 32, 78, 111, 100, 101, 115, 32, 119, 105, 116, 104, 32, 109, 101, 97, 115, 117, 114, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 115, 32, 99, 97, 110, 110, 111, 116, 32, 104, 97, 118, 101, 32, 99, 104, 105, 108, 100, 114, 101, 110, 46, 0, 67, 104, 105, 108, 100, 32, 97, 108, 114, 101, 97, 100, 121, 32, 104, 97, 115, 32, 97, 32, 112, 97, 114, 101, 110, 116, 44, 32, 105, 116, 32, 109, 117, 115, 116, 32, 98, 101, 32, 114, 101, 109, 111, 118, 101, 100, 32, 102, 105, 114, 115, 116, 46, 0, 67, 97, 110, 110, 111, 116, 32, 97, 100, 100, 32, 99, 104, 105, 108, 100, 58, 32, 78, 111, 100, 101, 115, 32, 119, 105, 116, 104, 32, 109, 101, 97, 115, 117, 114, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 115, 32, 99, 97, 110, 110, 111, 116, 32, 104, 97, 118, 101, 32, 99, 104, 105, 108, 100, 114, 101, 110, 46, 0, 79, 110, 108, 121, 32, 108, 101, 97, 102, 32, 110, 111, 100, 101, 115, 32, 119, 105, 116, 104, 32, 99, 117, 115, 116, 111, 109, 32, 109, 101, 97, 115, 117, 114, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 115, 115, 104, 111, 117, 108, 100, 32, 109, 97, 110, 117, 97, 108, 108, 121, 32, 109, 97, 114, 107, 32, 116, 104, 101, 109, 115, 101, 108, 118, 101, 115, 32, 97, 115, 32, 100, 105, 114, 116, 121, 0, 67, 97, 110, 110, 111, 116, 32, 103, 101, 116, 32, 108, 97, 121, 111, 117, 116, 32, 112, 114, 111, 112, 101, 114, 116, 105, 101, 115, 32, 111, 102, 32, 109, 117, 108, 116, 105, 45, 101, 100, 103, 101, 32, 115, 104, 111, 114, 116, 104, 97, 110, 100, 115, 0, 37, 115, 37, 100, 46, 123, 91, 115, 107, 105, 112, 112, 101, 100, 93, 32, 0, 119, 109, 58, 32, 37, 115, 44, 32, 104, 109, 58, 32, 37, 115, 44, 32, 97, 119, 58, 32, 37, 102, 32, 97, 104, 58, 32, 37, 102, 32, 61, 62, 32, 100, 58, 32, 40, 37, 102, 44, 32, 37, 102, 41, 32, 37, 115, 10, 0, 37, 115, 37, 100, 46, 123, 37, 115, 0, 42, 0, 119, 109, 58, 32, 37, 115, 44, 32, 104, 109, 58, 32, 37, 115, 44, 32, 97, 119, 58, 32, 37, 102, 32, 97, 104, 58, 32, 37, 102, 32, 37, 115, 10, 0, 37, 115, 37, 100, 46, 125, 37, 115, 0, 119, 109, 58, 32, 37, 115, 44, 32, 104, 109, 58, 32, 37, 115, 44, 32, 100, 58, 32, 40, 37, 102, 44, 32, 37, 102, 41, 32, 37, 115, 10, 0, 79, 117, 116, 32, 111, 102, 32, 99, 97, 99, 104, 101, 32, 101, 110, 116, 114, 105, 101, 115, 33, 10, 0, 83, 99, 97, 108, 101, 32, 102, 97, 99, 116, 111, 114, 32, 115, 104, 111, 117, 108, 100, 32, 110, 111, 116, 32, 98, 101, 32, 108, 101, 115, 115, 32, 116, 104, 97, 110, 32, 122, 101, 114, 111, 0, 105, 110, 105, 116, 105, 97, 108, 0, 37, 115, 10, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 85, 78, 68, 69, 70, 73, 78, 69, 68, 0, 69, 88, 65, 67, 84, 76, 89, 0, 65, 84, 95, 77, 79, 83, 84, 0, 76, 65, 89, 95, 85, 78, 68, 69, 70, 73, 78, 69, 68, 0, 76, 65, 89, 95, 69, 88, 65, 67, 84, 76, 89, 0, 76, 65, 89, 95, 65, 84, 95, 77, 79, 83, 84, 0, 97, 118, 97, 105, 108, 97, 98, 108, 101, 87, 105, 100, 116, 104, 32, 105, 115, 32, 105, 110, 100, 101, 102, 105, 110, 105, 116, 101, 32, 115, 111, 32, 119, 105, 100, 116, 104, 77, 101, 97, 115, 117, 114, 101, 77, 111, 100, 101, 32, 109, 117, 115, 116, 32, 98, 101, 32, 89, 71, 77, 101, 97, 115, 117, 114, 101, 77, 111, 100, 101, 85, 110, 100, 101, 102, 105, 110, 101, 100, 0, 97, 118, 97, 105, 108, 97, 98, 108, 101, 72, 101, 105, 103, 104, 116, 32, 105, 115, 32, 105, 110, 100, 101, 102, 105, 110, 105, 116, 101, 32, 115, 111, 32, 104, 101, 105, 103, 104, 116, 77, 101, 97, 115, 117, 114, 101, 77, 111, 100, 101, 32, 109, 117, 115, 116, 32, 98, 101, 32, 89, 71, 77, 101, 97, 115, 117, 114, 101, 77, 111, 100, 101, 85, 110, 100, 101, 102, 105, 110, 101, 100, 0, 102, 108, 101, 120, 0, 115, 116, 114, 101, 116, 99, 104, 0, 109, 117, 108, 116, 105, 108, 105, 110, 101, 45, 115, 116, 114, 101, 116, 99, 104, 0, 69, 120, 112, 101, 99, 116, 101, 100, 32, 110, 111, 100, 101, 32, 116, 111, 32, 104, 97, 118, 101, 32, 99, 117, 115, 116, 111, 109, 32, 109, 101, 97, 115, 117, 114, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 0, 109, 101, 97, 115, 117, 114, 101, 0, 69, 120, 112, 101, 99, 116, 32, 99, 117, 115, 116, 111, 109, 32, 98, 97, 115, 101, 108, 105, 110, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 116, 111, 32, 110, 111, 116, 32, 114, 101, 116, 117, 114, 110, 32, 78, 97, 78, 0, 97, 98, 115, 45, 109, 101, 97, 115, 117, 114, 101, 0, 97, 98, 115, 45, 108, 97, 121, 111, 117, 116, 0, 78, 111, 100, 101, 0, 99, 114, 101, 97, 116, 101, 68, 101, 102, 97, 117, 108, 116, 0, 99, 114, 101, 97, 116, 101, 87, 105, 116, 104, 67, 111, 110, 102, 105, 103, 0, 100, 101, 115, 116, 114, 111, 121, 0, 114, 101, 115, 101, 116, 0, 99, 111, 112, 121, 83, 116, 121, 108, 101, 0, 115, 101, 116, 80, 111, 115, 105, 116, 105, 111, 110, 84, 121, 112, 101, 0, 115, 101, 116, 80, 111, 115, 105, 116, 105, 111, 110, 0, 115, 101, 116, 80, 111, 115, 105, 116, 105, 111, 110, 80, 101, 114, 99, 101, 110, 116, 0, 115, 101, 116, 65, 108, 105, 103, 110, 67, 111, 110, 116, 101, 110, 116, 0, 115, 101, 116, 65, 108, 105, 103, 110, 73, 116, 101, 109, 115, 0, 115, 101, 116, 65, 108, 105, 103, 110, 83, 101, 108, 102, 0, 115, 101, 116, 70, 108, 101, 120, 68, 105, 114, 101, 99, 116, 105, 111, 110, 0, 115, 101, 116, 70, 108, 101, 120, 87, 114, 97, 112, 0, 115, 101, 116, 74, 117, 115, 116, 105, 102, 121, 67, 111, 110, 116, 101, 110, 116, 0, 115, 101, 116, 77, 97, 114, 103, 105, 110, 0, 115, 101, 116, 77, 97, 114, 103, 105, 110, 80, 101, 114, 99, 101, 110, 116, 0, 115, 101, 116, 77, 97, 114, 103, 105, 110, 65, 117, 116, 111, 0, 115, 101, 116, 79, 118, 101, 114, 102, 108, 111, 119, 0, 115, 101, 116, 68, 105, 115, 112, 108, 97, 121, 0, 115, 101, 116, 70, 108, 101, 120, 0, 115, 101, 116, 70, 108, 101, 120, 66, 97, 115, 105, 115, 0, 115, 101, 116, 70, 108, 101, 120, 66, 97, 115, 105, 115, 80, 101, 114, 99, 101, 110, 116, 0, 115, 101, 116, 70, 108, 101, 120, 71, 114, 111, 119, 0, 115, 101, 116, 70, 108, 101, 120, 83, 104, 114, 105, 110, 107, 0, 115, 101, 116, 87, 105, 100, 116, 104, 0, 115, 101, 116, 87, 105, 100, 116, 104, 80, 101, 114, 99, 101, 110, 116, 0, 115, 101, 116, 87, 105, 100, 116, 104, 65, 117, 116, 111, 0, 115, 101, 116, 72, 101, 105, 103, 104, 116, 0, 115, 101, 116, 72, 101, 105, 103, 104, 116, 80, 101, 114, 99, 101, 110, 116, 0, 115, 101, 116, 72, 101, 105, 103, 104, 116, 65, 117, 116, 111, 0, 115, 101, 116, 77, 105, 110, 87, 105, 100, 116, 104, 0, 115, 101, 116, 77, 105, 110, 87, 105, 100, 116, 104, 80, 101, 114, 99, 101, 110, 116, 0, 115, 101, 116, 77, 105, 110, 72, 101, 105, 103, 104, 116, 0, 115, 101, 116, 77, 105, 110, 72, 101, 105, 103, 104, 116, 80, 101, 114, 99, 101, 110, 116, 0, 115, 101, 116, 77, 97, 120, 87, 105, 100, 116, 104, 0, 115, 101, 116, 77, 97, 120, 87, 105, 100, 116, 104, 80, 101, 114, 99, 101, 110, 116, 0, 115, 101, 116, 77, 97, 120, 72, 101, 105, 103, 104, 116, 0, 115, 101, 116, 77, 97, 120, 72, 101, 105, 103, 104, 116, 80, 101, 114, 99, 101, 110, 116, 0, 115, 101, 116, 65, 115, 112, 101, 99, 116, 82, 97, 116, 105, 111, 0, 115, 101, 116, 66, 111, 114, 100, 101, 114, 0, 115, 101, 116, 80, 97, 100, 100, 105, 110, 103, 0, 115, 101, 116, 80, 97, 100, 100, 105, 110, 103, 80, 101, 114, 99, 101, 110, 116, 0, 103, 101, 116, 80, 111, 115, 105, 116, 105, 111, 110, 84, 121, 112, 101, 0, 103, 101, 116, 80, 111, 115, 105, 116, 105, 111, 110, 0, 103, 101, 116, 65, 108, 105, 103, 110, 67, 111, 110, 116, 101, 110, 116, 0, 103, 101, 116, 65, 108, 105, 103, 110, 73, 116, 101, 109, 115, 0, 103, 101, 116, 65, 108, 105, 103, 110, 83, 101, 108, 102, 0, 103, 101, 116, 70, 108, 101, 120, 68, 105, 114, 101, 99, 116, 105, 111, 110, 0, 103, 101, 116, 70, 108, 101, 120, 87, 114, 97, 112, 0, 103, 101, 116, 74, 117, 115, 116, 105, 102, 121, 67, 111, 110, 116, 101, 110, 116, 0, 103, 101, 116, 77, 97, 114, 103, 105, 110, 0, 103, 101, 116, 70, 108, 101, 120, 66, 97, 115, 105, 115, 0, 103, 101, 116, 70, 108, 101, 120, 71, 114, 111, 119, 0, 103, 101, 116, 70, 108, 101, 120, 83, 104, 114, 105, 110, 107, 0, 103, 101, 116, 87, 105, 100, 116, 104, 0, 103, 101, 116, 72, 101, 105, 103, 104, 116, 0, 103, 101, 116, 77, 105, 110, 87, 105, 100, 116, 104, 0, 103, 101, 116, 77, 105, 110, 72, 101, 105, 103, 104, 116, 0, 103, 101, 116, 77, 97, 120, 87, 105, 100, 116, 104, 0, 103, 101, 116, 77, 97, 120, 72, 101, 105, 103, 104, 116, 0, 103, 101, 116, 65, 115, 112, 101, 99, 116, 82, 97, 116, 105, 111, 0, 103, 101, 116, 66, 111, 114, 100, 101, 114, 0, 103, 101, 116, 79, 118, 101, 114, 102, 108, 111, 119, 0, 103, 101, 116, 68, 105, 115, 112, 108, 97, 121, 0, 103, 101, 116, 80, 97, 100, 100, 105, 110, 103, 0, 105, 110, 115, 101, 114, 116, 67, 104, 105, 108, 100, 0, 114, 101, 109, 111, 118, 101, 67, 104, 105, 108, 100, 0, 103, 101, 116, 67, 104, 105, 108, 100, 67, 111, 117, 110, 116, 0, 103, 101, 116, 80, 97, 114, 101, 110, 116, 0, 103, 101, 116, 67, 104, 105, 108, 100, 0, 115, 101, 116, 77, 101, 97, 115, 117, 114, 101, 70, 117, 110, 99, 0, 117, 110, 115, 101, 116, 77, 101, 97, 115, 117, 114, 101, 70, 117, 110, 99, 0, 109, 97, 114, 107, 68, 105, 114, 116, 121, 0, 105, 115, 68, 105, 114, 116, 121, 0, 99, 97, 108, 99, 117, 108, 97, 116, 101, 76, 97, 121, 111, 117, 116, 0, 103, 101, 116, 67, 111, 109, 112, 117, 116, 101, 100, 76, 101, 102, 116, 0, 103, 101, 116, 67, 111, 109, 112, 117, 116, 101, 100, 82, 105, 103, 104, 116, 0, 103, 101, 116, 67, 111, 109, 112, 117, 116, 101, 100, 84, 111, 112, 0, 103, 101, 116, 67, 111, 109, 112, 117, 116, 101, 100, 66, 111, 116, 116, 111, 109, 0, 103, 101, 116, 67, 111, 109, 112, 117, 116, 101, 100, 87, 105, 100, 116, 104, 0, 103, 101, 116, 67, 111, 109, 112, 117, 116, 101, 100, 72, 101, 105, 103, 104, 116, 0, 103, 101, 116, 67, 111, 109, 112, 117, 116, 101, 100, 76, 97, 121, 111, 117, 116, 0, 103, 101, 116, 67, 111, 109, 112, 117, 116, 101, 100, 77, 97, 114, 103, 105, 110, 0, 103, 101, 116, 67, 111, 109, 112, 117, 116, 101, 100, 66, 111, 114, 100, 101, 114, 0, 103, 101, 116, 67, 111, 109, 112, 117, 116, 101, 100, 80, 97, 100, 100, 105, 110, 103, 0, 67, 111, 110, 102, 105, 103, 0, 99, 114, 101, 97, 116, 101, 0, 115, 101, 116, 69, 120, 112, 101, 114, 105, 109, 101, 110, 116, 97, 108, 70, 101, 97, 116, 117, 114, 101, 69, 110, 97, 98, 108, 101, 100, 0, 115, 101, 116, 80, 111, 105, 110, 116, 83, 99, 97, 108, 101, 70, 97, 99, 116, 111, 114, 0, 105, 115, 69, 120, 112, 101, 114, 105, 109, 101, 110, 116, 97, 108, 70, 101, 97, 116, 117, 114, 101, 69, 110, 97, 98, 108, 101, 100, 0, 86, 97, 108, 117, 101, 0, 76, 97, 121, 111, 117, 116, 0, 83, 105, 122, 101, 0, 103, 101, 116, 73, 110, 115, 116, 97, 110, 99, 101, 67, 111, 117, 110, 116, 0, 73, 110, 116, 54, 52, 0, 1, 1, 1, 2, 2, 4, 4, 4, 4, 8, 8, 4, 8, 118, 111, 105, 100, 0, 98, 111, 111, 108, 0, 115, 116, 100, 58, 58, 115, 116, 114, 105, 110, 103, 0, 99, 98, 70, 117, 110, 99, 116, 105, 111, 110, 32, 38, 0, 99, 111, 110, 115, 116, 32, 99, 98, 70, 117, 110, 99, 116, 105, 111, 110, 32, 38, 0, 69, 120, 116, 101, 114, 110, 97, 108, 0, 66, 117, 102, 102, 101, 114, 0, 78, 66, 105, 110, 100, 73, 68, 0, 78, 66, 105, 110, 100, 0, 98, 105, 110, 100, 95, 118, 97, 108, 117, 101, 0, 114, 101, 102, 108, 101, 99, 116, 0, 113, 117, 101, 114, 121, 84, 121, 112, 101, 0, 108, 97, 108, 108, 111, 99, 0, 108, 114, 101, 115, 101, 116, 0, 123, 114, 101, 116, 117, 114, 110, 40, 95, 110, 98, 105, 110, 100, 46, 99, 97, 108, 108, 98, 97, 99, 107, 83, 105, 103, 110, 97, 116, 117, 114, 101, 76, 105, 115, 116, 91, 36, 48, 93, 46, 97, 112, 112, 108, 121, 40, 116, 104, 105, 115, 44, 97, 114, 103, 117, 109, 101, 110, 116, 115, 41, 41, 59, 125, 0, 95, 110, 98, 105, 110, 100, 95, 110, 101, 119, 0, 17, 0, 10, 0, 17, 17, 17, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 15, 10, 17, 17, 17, 3, 10, 7, 0, 1, 19, 9, 11, 11, 0, 0, 9, 6, 11, 0, 0, 11, 0, 6, 17, 0, 0, 0, 17, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 10, 10, 17, 17, 17, 0, 10, 0, 0, 2, 0, 9, 11, 0, 0, 0, 9, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 4, 13, 0, 0, 0, 0, 9, 14, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 15, 0, 0, 0, 0, 9, 16, 0, 0, 0, 0, 0, 16, 0, 0, 16, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 9, 11, 0, 0, 0, 0, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 45, 43, 32, 32, 32, 48, 88, 48, 120, 0, 40, 110, 117, 108, 108, 41, 0, 45, 48, 88, 43, 48, 88, 32, 48, 88, 45, 48, 120, 43, 48, 120, 32, 48, 120, 0, 105, 110, 102, 0, 73, 78, 70, 0, 110, 97, 110, 0, 78, 65, 78, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 46, 0, 84, 33, 34, 25, 13, 1, 2, 3, 17, 75, 28, 12, 16, 4, 11, 29, 18, 30, 39, 104, 110, 111, 112, 113, 98, 32, 5, 6, 15, 19, 20, 21, 26, 8, 22, 7, 40, 36, 23, 24, 9, 10, 14, 27, 31, 37, 35, 131, 130, 125, 38, 42, 43, 60, 61, 62, 63, 67, 71, 74, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 114, 115, 116, 121, 122, 123, 124, 0, 73, 108, 108, 101, 103, 97, 108, 32, 98, 121, 116, 101, 32, 115, 101, 113, 117, 101, 110, 99, 101, 0, 68, 111, 109, 97, 105, 110, 32, 101, 114, 114, 111, 114, 0, 82, 101, 115, 117, 108, 116, 32, 110, 111, 116, 32, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 98, 108, 101, 0, 78, 111, 116, 32, 97, 32, 116, 116, 121, 0, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 32, 100, 101, 110, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 110, 111, 116, 32, 112, 101, 114, 109, 105, 116, 116, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 102, 105, 108, 101, 32, 111, 114, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 78, 111, 32, 115, 117, 99, 104, 32, 112, 114, 111, 99, 101, 115, 115, 0, 70, 105, 108, 101, 32, 101, 120, 105, 115, 116, 115, 0, 86, 97, 108, 117, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 32, 102, 111, 114, 32, 100, 97, 116, 97, 32, 116, 121, 112, 101, 0, 78, 111, 32, 115, 112, 97, 99, 101, 32, 108, 101, 102, 116, 32, 111, 110, 32, 100, 101, 118, 105, 99, 101, 0, 79, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 98, 117, 115, 121, 0, 73, 110, 116, 101, 114, 114, 117, 112, 116, 101, 100, 32, 115, 121, 115, 116, 101, 109, 32, 99, 97, 108, 108, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 116, 101, 109, 112, 111, 114, 97, 114, 105, 108, 121, 32, 117, 110, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 73, 110, 118, 97, 108, 105, 100, 32, 115, 101, 101, 107, 0, 67, 114, 111, 115, 115, 45, 100, 101, 118, 105, 99, 101, 32, 108, 105, 110, 107, 0, 82, 101, 97, 100, 45, 111, 110, 108, 121, 32, 102, 105, 108, 101, 32, 115, 121, 115, 116, 101, 109, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 110, 111, 116, 32, 101, 109, 112, 116, 121, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 112, 101, 101, 114, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 102, 117, 115, 101, 100, 0, 72, 111, 115, 116, 32, 105, 115, 32, 100, 111, 119, 110, 0, 72, 111, 115, 116, 32, 105, 115, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 65, 100, 100, 114, 101, 115, 115, 32, 105, 110, 32, 117, 115, 101, 0, 66, 114, 111, 107, 101, 110, 32, 112, 105, 112, 101, 0, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 32, 111, 114, 32, 97, 100, 100, 114, 101, 115, 115, 0, 66, 108, 111, 99, 107, 32, 100, 101, 118, 105, 99, 101, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 0, 78, 111, 116, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 73, 115, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 84, 101, 120, 116, 32, 102, 105, 108, 101, 32, 98, 117, 115, 121, 0, 69, 120, 101, 99, 32, 102, 111, 114, 109, 97, 116, 32, 101, 114, 114, 111, 114, 0, 73, 110, 118, 97, 108, 105, 100, 32, 97, 114, 103, 117, 109, 101, 110, 116, 0, 65, 114, 103, 117, 109, 101, 110, 116, 32, 108, 105, 115, 116, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 83, 121, 109, 98, 111, 108, 105, 99, 32, 108, 105, 110, 107, 32, 108, 111, 111, 112, 0, 70, 105, 108, 101, 110, 97, 109, 101, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 115, 32, 105, 110, 32, 115, 121, 115, 116, 101, 109, 0, 78, 111, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 66, 97, 100, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 0, 78, 111, 32, 99, 104, 105, 108, 100, 32, 112, 114, 111, 99, 101, 115, 115, 0, 66, 97, 100, 32, 97, 100, 100, 114, 101, 115, 115, 0, 70, 105, 108, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 108, 105, 110, 107, 115, 0, 78, 111, 32, 108, 111, 99, 107, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 100, 101, 97, 100, 108, 111, 99, 107, 32, 119, 111, 117, 108, 100, 32, 111, 99, 99, 117, 114, 0, 83, 116, 97, 116, 101, 32, 110, 111, 116, 32, 114, 101, 99, 111, 118, 101, 114, 97, 98, 108, 101, 0, 80, 114, 101, 118, 105, 111, 117, 115, 32, 111, 119, 110, 101, 114, 32, 100, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 99, 97, 110, 99, 101, 108, 101, 100, 0, 70, 117, 110, 99, 116, 105, 111, 110, 32, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 0, 78, 111, 32, 109, 101, 115, 115, 97, 103, 101, 32, 111, 102, 32, 100, 101, 115, 105, 114, 101, 100, 32, 116, 121, 112, 101, 0, 73, 100, 101, 110, 116, 105, 102, 105, 101, 114, 32, 114, 101, 109, 111, 118, 101, 100, 0, 68, 101, 118, 105, 99, 101, 32, 110, 111, 116, 32, 97, 32, 115, 116, 114, 101, 97, 109, 0, 78, 111, 32, 100, 97, 116, 97, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 68, 101, 118, 105, 99, 101, 32, 116, 105, 109, 101, 111, 117, 116, 0, 79, 117, 116, 32, 111, 102, 32, 115, 116, 114, 101, 97, 109, 115, 32, 114, 101, 115, 111, 117, 114, 99, 101, 115, 0, 76, 105, 110, 107, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 101, 118, 101, 114, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 101, 114, 114, 111, 114, 0, 66, 97, 100, 32, 109, 101, 115, 115, 97, 103, 101, 0, 70, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 105, 110, 32, 98, 97, 100, 32, 115, 116, 97, 116, 101, 0, 78, 111, 116, 32, 97, 32, 115, 111, 99, 107, 101, 116, 0, 68, 101, 115, 116, 105, 110, 97, 116, 105, 111, 110, 32, 97, 100, 100, 114, 101, 115, 115, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 77, 101, 115, 115, 97, 103, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 119, 114, 111, 110, 103, 32, 116, 121, 112, 101, 32, 102, 111, 114, 32, 115, 111, 99, 107, 101, 116, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 116, 121, 112, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 78, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 65, 100, 100, 114, 101, 115, 115, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 98, 121, 32, 112, 114, 111, 116, 111, 99, 111, 108, 0, 65, 100, 100, 114, 101, 115, 115, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 78, 101, 116, 119, 111, 114, 107, 32, 105, 115, 32, 100, 111, 119, 110, 0, 78, 101, 116, 119, 111, 114, 107, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 110, 101, 116, 119, 111, 114, 107, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 97, 98, 111, 114, 116, 101, 100, 0, 78, 111, 32, 98, 117, 102, 102, 101, 114, 32, 115, 112, 97, 99, 101, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 83, 111, 99, 107, 101, 116, 32, 105, 115, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 110, 111, 116, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 67, 97, 110, 110, 111, 116, 32, 115, 101, 110, 100, 32, 97, 102, 116, 101, 114, 32, 115, 111, 99, 107, 101, 116, 32, 115, 104, 117, 116, 100, 111, 119, 110, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 97, 108, 114, 101, 97, 100, 121, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 83, 116, 97, 108, 101, 32, 102, 105, 108, 101, 32, 104, 97, 110, 100, 108, 101, 0, 82, 101, 109, 111, 116, 101, 32, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 81, 117, 111, 116, 97, 32, 101, 120, 99, 101, 101, 100, 101, 100, 0, 78, 111, 32, 109, 101, 100, 105, 117, 109, 32, 102, 111, 117, 110, 100, 0, 87, 114, 111, 110, 103, 32, 109, 101, 100, 105, 117, 109, 32, 116, 121, 112, 101, 0, 78, 111, 32, 101, 114, 114, 111, 114, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 0, 0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
        var tempDoublePtr = STATICTOP;
        STATICTOP += 16;
        function _atexit(func2, arg2) {
          __ATEXIT__.unshift({ func: func2, arg: arg2 });
        }
        function ___cxa_atexit() {
          return _atexit.apply(null, arguments);
        }
        function _abort() {
          Module["abort"]();
        }
        function __ZN8facebook4yoga14YGNodeToStringEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP6YGNode14YGPrintOptionsj() {
          Module["printErr"]("missing function: _ZN8facebook4yoga14YGNodeToStringEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP6YGNode14YGPrintOptionsj");
          abort(-1);
        }
        function __decorate(decorators, target, key2, desc) {
          var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key2) : desc, d;
          if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key2, desc);
          else
            for (var i2 = decorators.length - 1; i2 >= 0; i2--)
              if (d = decorators[i2])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key2, r) : d(target, key2)) || r;
          return c > 3 && r && Object.defineProperty(target, key2, r), r;
        }
        function _defineHidden(value) {
          return function(target, key2) {
            Object.defineProperty(target, key2, { configurable: false, enumerable: false, value, writable: true });
          };
        }
        var _nbind = {};
        function __nbind_free_external(num2) {
          _nbind.externalList[num2].dereference(num2);
        }
        function __nbind_reference_external(num2) {
          _nbind.externalList[num2].reference();
        }
        function _llvm_stackrestore(p) {
          var self2 = _llvm_stacksave;
          var ret = self2.LLVM_SAVEDSTACKS[p];
          self2.LLVM_SAVEDSTACKS.splice(p, 1);
          Runtime.stackRestore(ret);
        }
        function __nbind_register_pool(pageSize, usedPtr, rootPtr, pagePtr) {
          _nbind.Pool.pageSize = pageSize;
          _nbind.Pool.usedPtr = usedPtr / 4;
          _nbind.Pool.rootPtr = rootPtr;
          _nbind.Pool.pagePtr = pagePtr / 4;
          HEAP32[usedPtr / 4] = 16909060;
          if (HEAP8[usedPtr] == 1)
            _nbind.bigEndian = true;
          HEAP32[usedPtr / 4] = 0;
          _nbind.makeTypeKindTbl = (_a2 = {}, _a2[1024] = _nbind.PrimitiveType, _a2[64] = _nbind.Int64Type, _a2[2048] = _nbind.BindClass, _a2[3072] = _nbind.BindClassPtr, _a2[4096] = _nbind.SharedClassPtr, _a2[5120] = _nbind.ArrayType, _a2[6144] = _nbind.ArrayType, _a2[7168] = _nbind.CStringType, _a2[9216] = _nbind.CallbackType, _a2[10240] = _nbind.BindType, _a2);
          _nbind.makeTypeNameTbl = { "Buffer": _nbind.BufferType, "External": _nbind.ExternalType, "Int64": _nbind.Int64Type, "_nbind_new": _nbind.CreateValueType, "bool": _nbind.BooleanType, "cbFunction &": _nbind.CallbackType, "const cbFunction &": _nbind.CallbackType, "const std::string &": _nbind.StringType, "std::string": _nbind.StringType };
          Module["toggleLightGC"] = _nbind.toggleLightGC;
          _nbind.callUpcast = Module["dynCall_ii"];
          var globalScope = _nbind.makeType(_nbind.constructType, { flags: 2048, id: 0, name: "" });
          globalScope.proto = Module;
          _nbind.BindClass.list.push(globalScope);
          var _a2;
        }
        function _emscripten_set_main_loop_timing(mode, value) {
          Browser.mainLoop.timingMode = mode;
          Browser.mainLoop.timingValue = value;
          if (!Browser.mainLoop.func) {
            return 1;
          }
          if (mode == 0) {
            Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {
              var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now()) | 0;
              setTimeout(Browser.mainLoop.runner, timeUntilNextTick);
            };
            Browser.mainLoop.method = "timeout";
          } else if (mode == 1) {
            Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {
              Browser.requestAnimationFrame(Browser.mainLoop.runner);
            };
            Browser.mainLoop.method = "rAF";
          } else if (mode == 2) {
            if (!window["setImmediate"]) {
              let Browser_setImmediate_messageHandler2 = function(event) {
                if (event.source === window && event.data === emscriptenMainLoopMessageId) {
                  event.stopPropagation();
                  setImmediates.shift()();
                }
              };
              var Browser_setImmediate_messageHandler = Browser_setImmediate_messageHandler2;
              var setImmediates = [];
              var emscriptenMainLoopMessageId = "setimmediate";
              window.addEventListener("message", Browser_setImmediate_messageHandler2, true);
              window["setImmediate"] = function Browser_emulated_setImmediate(func2) {
                setImmediates.push(func2);
                if (ENVIRONMENT_IS_WORKER) {
                  if (Module["setImmediates"] === void 0)
                    Module["setImmediates"] = [];
                  Module["setImmediates"].push(func2);
                  window.postMessage({ target: emscriptenMainLoopMessageId });
                } else
                  window.postMessage(emscriptenMainLoopMessageId, "*");
              };
            }
            Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {
              window["setImmediate"](Browser.mainLoop.runner);
            };
            Browser.mainLoop.method = "immediate";
          }
          return 0;
        }
        function _emscripten_get_now() {
          abort();
        }
        function _emscripten_set_main_loop(func2, fps, simulateInfiniteLoop, arg2, noSetTiming) {
          Module["noExitRuntime"] = true;
          assert(!Browser.mainLoop.func, "emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.");
          Browser.mainLoop.func = func2;
          Browser.mainLoop.arg = arg2;
          var browserIterationFunc;
          if (typeof arg2 !== "undefined") {
            browserIterationFunc = function() {
              Module["dynCall_vi"](func2, arg2);
            };
          } else {
            browserIterationFunc = function() {
              Module["dynCall_v"](func2);
            };
          }
          var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
          Browser.mainLoop.runner = function Browser_mainLoop_runner() {
            if (ABORT)
              return;
            if (Browser.mainLoop.queue.length > 0) {
              var start = Date.now();
              var blocker = Browser.mainLoop.queue.shift();
              blocker.func(blocker.arg);
              if (Browser.mainLoop.remainingBlockers) {
                var remaining = Browser.mainLoop.remainingBlockers;
                var next = remaining % 1 == 0 ? remaining - 1 : Math.floor(remaining);
                if (blocker.counted) {
                  Browser.mainLoop.remainingBlockers = next;
                } else {
                  next = next + 0.5;
                  Browser.mainLoop.remainingBlockers = (8 * remaining + next) / 9;
                }
              }
              console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + " ms");
              Browser.mainLoop.updateStatus();
              if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop)
                return;
              setTimeout(Browser.mainLoop.runner, 0);
              return;
            }
            if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop)
              return;
            Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
            if (Browser.mainLoop.timingMode == 1 && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
              Browser.mainLoop.scheduler();
              return;
            } else if (Browser.mainLoop.timingMode == 0) {
              Browser.mainLoop.tickStartTime = _emscripten_get_now();
            }
            if (Browser.mainLoop.method === "timeout" && Module.ctx) {
              Module.printErr("Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!");
              Browser.mainLoop.method = "";
            }
            Browser.mainLoop.runIter(browserIterationFunc);
            if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop)
              return;
            if (typeof SDL === "object" && SDL.audio && SDL.audio.queueNewAudioData)
              SDL.audio.queueNewAudioData();
            Browser.mainLoop.scheduler();
          };
          if (!noSetTiming) {
            if (fps && fps > 0)
              _emscripten_set_main_loop_timing(0, 1e3 / fps);
            else
              _emscripten_set_main_loop_timing(1, 1);
            Browser.mainLoop.scheduler();
          }
          if (simulateInfiniteLoop) {
            throw "SimulateInfiniteLoop";
          }
        }
        var Browser = { mainLoop: { scheduler: null, method: "", currentlyRunningMainloop: 0, func: null, arg: 0, timingMode: 0, timingValue: 0, currentFrameNumber: 0, queue: [], pause: function() {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++;
        }, resume: function() {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func2 = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func2, 0, false, Browser.mainLoop.arg, true);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        }, updateStatus: function() {
          if (Module["setStatus"]) {
            var message = Module["statusMessage"] || "Please wait...";
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module["setStatus"](message + " (" + (expected - remaining) + "/" + expected + ")");
              } else {
                Module["setStatus"](message);
              }
            } else {
              Module["setStatus"]("");
            }
          }
        }, runIter: function(func2) {
          if (ABORT)
            return;
          if (Module["preMainLoop"]) {
            var preRet = Module["preMainLoop"]();
            if (preRet === false) {
              return;
            }
          }
          try {
            func2();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === "object" && e.stack)
                Module.printErr("exception thrown: " + [e, e.stack]);
              throw e;
            }
          }
          if (Module["postMainLoop"])
            Module["postMainLoop"]();
        } }, isFullscreen: false, pointerLock: false, moduleContextCreatedCallbacks: [], workers: [], init: function() {
          if (!Module["preloadPlugins"])
            Module["preloadPlugins"] = [];
          if (Browser.initted)
            return;
          Browser.initted = true;
          try {
            new Blob();
            Browser.hasBlobConstructor = true;
          } catch (e) {
            Browser.hasBlobConstructor = false;
            console.log("warning: no blob constructor, cannot create blobs with mimetypes");
          }
          Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : !Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null;
          Browser.URLObject = typeof window != "undefined" ? window.URL ? window.URL : window.webkitURL : void 0;
          if (!Module.noImageDecoding && typeof Browser.URLObject === "undefined") {
            console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
            Module.noImageDecoding = true;
          }
          var imagePlugin = {};
          imagePlugin["canHandle"] = function imagePlugin_canHandle(name) {
            return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
          };
          imagePlugin["handle"] = function imagePlugin_handle(byteArray, name, onload, onerror) {
            var b = null;
            if (Browser.hasBlobConstructor) {
              try {
                b = new Blob([byteArray], { type: Browser.getMimetype(name) });
                if (b.size !== byteArray.length) {
                  b = new Blob([new Uint8Array(byteArray).buffer], { type: Browser.getMimetype(name) });
                }
              } catch (e) {
                Runtime.warnOnce("Blob constructor present but fails: " + e + "; falling back to blob builder");
              }
            }
            if (!b) {
              var bb = new Browser.BlobBuilder();
              bb.append(new Uint8Array(byteArray).buffer);
              b = bb.getBlob();
            }
            var url = Browser.URLObject.createObjectURL(b);
            var img = new Image();
            img.onload = function img_onload() {
              assert(img.complete, "Image " + name + " could not be decoded");
              var canvas2 = document.createElement("canvas");
              canvas2.width = img.width;
              canvas2.height = img.height;
              var ctx = canvas2.getContext("2d");
              ctx.drawImage(img, 0, 0);
              Module["preloadedImages"][name] = canvas2;
              Browser.URLObject.revokeObjectURL(url);
              if (onload)
                onload(byteArray);
            };
            img.onerror = function img_onerror(event) {
              console.log("Image " + url + " could not be decoded");
              if (onerror)
                onerror();
            };
            img.src = url;
          };
          Module["preloadPlugins"].push(imagePlugin);
          var audioPlugin = {};
          audioPlugin["canHandle"] = function audioPlugin_canHandle(name) {
            return !Module.noAudioDecoding && name.substr(-4) in { ".ogg": 1, ".wav": 1, ".mp3": 1 };
          };
          audioPlugin["handle"] = function audioPlugin_handle(byteArray, name, onload, onerror) {
            var done = false;
            function finish(audio2) {
              if (done)
                return;
              done = true;
              Module["preloadedAudios"][name] = audio2;
              if (onload)
                onload(byteArray);
            }
            function fail() {
              if (done)
                return;
              done = true;
              Module["preloadedAudios"][name] = new Audio();
              if (onerror)
                onerror();
            }
            if (Browser.hasBlobConstructor) {
              try {
                var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              } catch (e) {
                return fail();
              }
              var url = Browser.URLObject.createObjectURL(b);
              var audio = new Audio();
              audio.addEventListener("canplaythrough", function() {
                finish(audio);
              }, false);
              audio.onerror = function audio_onerror(event) {
                if (done)
                  return;
                console.log("warning: browser could not fully decode audio " + name + ", trying slower base64 approach");
                function encode64(data) {
                  var BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
                  var PAD = "=";
                  var ret = "";
                  var leftchar = 0;
                  var leftbits = 0;
                  for (var i2 = 0; i2 < data.length; i2++) {
                    leftchar = leftchar << 8 | data[i2];
                    leftbits += 8;
                    while (leftbits >= 6) {
                      var curr = leftchar >> leftbits - 6 & 63;
                      leftbits -= 6;
                      ret += BASE[curr];
                    }
                  }
                  if (leftbits == 2) {
                    ret += BASE[(leftchar & 3) << 4];
                    ret += PAD + PAD;
                  } else if (leftbits == 4) {
                    ret += BASE[(leftchar & 15) << 2];
                    ret += PAD;
                  }
                  return ret;
                }
                audio.src = "data:audio/x-" + name.substr(-3) + ";base64," + encode64(byteArray);
                finish(audio);
              };
              audio.src = url;
              Browser.safeSetTimeout(function() {
                finish(audio);
              }, 1e4);
            } else {
              return fail();
            }
          };
          Module["preloadPlugins"].push(audioPlugin);
          function pointerLockChange() {
            Browser.pointerLock = document["pointerLockElement"] === Module["canvas"] || document["mozPointerLockElement"] === Module["canvas"] || document["webkitPointerLockElement"] === Module["canvas"] || document["msPointerLockElement"] === Module["canvas"];
          }
          var canvas = Module["canvas"];
          if (canvas) {
            canvas.requestPointerLock = canvas["requestPointerLock"] || canvas["mozRequestPointerLock"] || canvas["webkitRequestPointerLock"] || canvas["msRequestPointerLock"] || function() {
            };
            canvas.exitPointerLock = document["exitPointerLock"] || document["mozExitPointerLock"] || document["webkitExitPointerLock"] || document["msExitPointerLock"] || function() {
            };
            canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
            document.addEventListener("pointerlockchange", pointerLockChange, false);
            document.addEventListener("mozpointerlockchange", pointerLockChange, false);
            document.addEventListener("webkitpointerlockchange", pointerLockChange, false);
            document.addEventListener("mspointerlockchange", pointerLockChange, false);
            if (Module["elementPointerLock"]) {
              canvas.addEventListener("click", function(ev) {
                if (!Browser.pointerLock && Module["canvas"].requestPointerLock) {
                  Module["canvas"].requestPointerLock();
                  ev.preventDefault();
                }
              }, false);
            }
          }
        }, createContext: function(canvas, useWebGL, setInModule, webGLContextAttributes) {
          if (useWebGL && Module.ctx && canvas == Module.canvas)
            return Module.ctx;
          var ctx;
          var contextHandle;
          if (useWebGL) {
            var contextAttributes = { antialias: false, alpha: false };
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
            contextHandle = GL.createContext(canvas, contextAttributes);
            if (contextHandle) {
              ctx = GL.getContext(contextHandle).GLctx;
            }
          } else {
            ctx = canvas.getContext("2d");
          }
          if (!ctx)
            return null;
          if (setInModule) {
            if (!useWebGL)
              assert(typeof GLctx === "undefined", "cannot set in module if GLctx is used, but we are a non-GL context that would replace it");
            Module.ctx = ctx;
            if (useWebGL)
              GL.makeContextCurrent(contextHandle);
            Module.useWebGL = useWebGL;
            Browser.moduleContextCreatedCallbacks.forEach(function(callback) {
              callback();
            });
            Browser.init();
          }
          return ctx;
        }, destroyContext: function(canvas, useWebGL, setInModule) {
        }, fullscreenHandlersInstalled: false, lockPointer: void 0, resizeCanvas: void 0, requestFullscreen: function(lockPointer, resizeCanvas, vrDevice) {
          Browser.lockPointer = lockPointer;
          Browser.resizeCanvas = resizeCanvas;
          Browser.vrDevice = vrDevice;
          if (typeof Browser.lockPointer === "undefined")
            Browser.lockPointer = true;
          if (typeof Browser.resizeCanvas === "undefined")
            Browser.resizeCanvas = false;
          if (typeof Browser.vrDevice === "undefined")
            Browser.vrDevice = null;
          var canvas = Module["canvas"];
          function fullscreenChange() {
            Browser.isFullscreen = false;
            var canvasContainer2 = canvas.parentNode;
            if ((document["fullscreenElement"] || document["mozFullScreenElement"] || document["msFullscreenElement"] || document["webkitFullscreenElement"] || document["webkitCurrentFullScreenElement"]) === canvasContainer2) {
              canvas.exitFullscreen = document["exitFullscreen"] || document["cancelFullScreen"] || document["mozCancelFullScreen"] || document["msExitFullscreen"] || document["webkitCancelFullScreen"] || function() {
              };
              canvas.exitFullscreen = canvas.exitFullscreen.bind(document);
              if (Browser.lockPointer)
                canvas.requestPointerLock();
              Browser.isFullscreen = true;
              if (Browser.resizeCanvas)
                Browser.setFullscreenCanvasSize();
            } else {
              canvasContainer2.parentNode.insertBefore(canvas, canvasContainer2);
              canvasContainer2.parentNode.removeChild(canvasContainer2);
              if (Browser.resizeCanvas)
                Browser.setWindowedCanvasSize();
            }
            if (Module["onFullScreen"])
              Module["onFullScreen"](Browser.isFullscreen);
            if (Module["onFullscreen"])
              Module["onFullscreen"](Browser.isFullscreen);
            Browser.updateCanvasDimensions(canvas);
          }
          if (!Browser.fullscreenHandlersInstalled) {
            Browser.fullscreenHandlersInstalled = true;
            document.addEventListener("fullscreenchange", fullscreenChange, false);
            document.addEventListener("mozfullscreenchange", fullscreenChange, false);
            document.addEventListener("webkitfullscreenchange", fullscreenChange, false);
            document.addEventListener("MSFullscreenChange", fullscreenChange, false);
          }
          var canvasContainer = document.createElement("div");
          canvas.parentNode.insertBefore(canvasContainer, canvas);
          canvasContainer.appendChild(canvas);
          canvasContainer.requestFullscreen = canvasContainer["requestFullscreen"] || canvasContainer["mozRequestFullScreen"] || canvasContainer["msRequestFullscreen"] || (canvasContainer["webkitRequestFullscreen"] ? function() {
            canvasContainer["webkitRequestFullscreen"](Element["ALLOW_KEYBOARD_INPUT"]);
          } : null) || (canvasContainer["webkitRequestFullScreen"] ? function() {
            canvasContainer["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"]);
          } : null);
          if (vrDevice) {
            canvasContainer.requestFullscreen({ vrDisplay: vrDevice });
          } else {
            canvasContainer.requestFullscreen();
          }
        }, requestFullScreen: function(lockPointer, resizeCanvas, vrDevice) {
          Module.printErr("Browser.requestFullScreen() is deprecated. Please call Browser.requestFullscreen instead.");
          Browser.requestFullScreen = function(lockPointer2, resizeCanvas2, vrDevice2) {
            return Browser.requestFullscreen(lockPointer2, resizeCanvas2, vrDevice2);
          };
          return Browser.requestFullscreen(lockPointer, resizeCanvas, vrDevice);
        }, nextRAF: 0, fakeRequestAnimationFrame: function(func2) {
          var now = Date.now();
          if (Browser.nextRAF === 0) {
            Browser.nextRAF = now + 1e3 / 60;
          } else {
            while (now + 2 >= Browser.nextRAF) {
              Browser.nextRAF += 1e3 / 60;
            }
          }
          var delay = Math.max(Browser.nextRAF - now, 0);
          setTimeout(func2, delay);
        }, requestAnimationFrame: function requestAnimationFrame2(func2) {
          if (typeof window === "undefined") {
            Browser.fakeRequestAnimationFrame(func2);
          } else {
            if (!window.requestAnimationFrame) {
              window.requestAnimationFrame = window["requestAnimationFrame"] || window["mozRequestAnimationFrame"] || window["webkitRequestAnimationFrame"] || window["msRequestAnimationFrame"] || window["oRequestAnimationFrame"] || Browser.fakeRequestAnimationFrame;
            }
            window.requestAnimationFrame(func2);
          }
        }, safeCallback: function(func2) {
          return function() {
            if (!ABORT)
              return func2.apply(null, arguments);
          };
        }, allowAsyncCallbacks: true, queuedAsyncCallbacks: [], pauseAsyncCallbacks: function() {
          Browser.allowAsyncCallbacks = false;
        }, resumeAsyncCallbacks: function() {
          Browser.allowAsyncCallbacks = true;
          if (Browser.queuedAsyncCallbacks.length > 0) {
            var callbacks = Browser.queuedAsyncCallbacks;
            Browser.queuedAsyncCallbacks = [];
            callbacks.forEach(function(func2) {
              func2();
            });
          }
        }, safeRequestAnimationFrame: function(func2) {
          return Browser.requestAnimationFrame(function() {
            if (ABORT)
              return;
            if (Browser.allowAsyncCallbacks) {
              func2();
            } else {
              Browser.queuedAsyncCallbacks.push(func2);
            }
          });
        }, safeSetTimeout: function(func2, timeout) {
          Module["noExitRuntime"] = true;
          return setTimeout(function() {
            if (ABORT)
              return;
            if (Browser.allowAsyncCallbacks) {
              func2();
            } else {
              Browser.queuedAsyncCallbacks.push(func2);
            }
          }, timeout);
        }, safeSetInterval: function(func2, timeout) {
          Module["noExitRuntime"] = true;
          return setInterval(function() {
            if (ABORT)
              return;
            if (Browser.allowAsyncCallbacks) {
              func2();
            }
          }, timeout);
        }, getMimetype: function(name) {
          return { "jpg": "image/jpeg", "jpeg": "image/jpeg", "png": "image/png", "bmp": "image/bmp", "ogg": "audio/ogg", "wav": "audio/wav", "mp3": "audio/mpeg" }[name.substr(name.lastIndexOf(".") + 1)];
        }, getUserMedia: function(func2) {
          if (!window.getUserMedia) {
            window.getUserMedia = navigator["getUserMedia"] || navigator["mozGetUserMedia"];
          }
          window.getUserMedia(func2);
        }, getMovementX: function(event) {
          return event["movementX"] || event["mozMovementX"] || event["webkitMovementX"] || 0;
        }, getMovementY: function(event) {
          return event["movementY"] || event["mozMovementY"] || event["webkitMovementY"] || 0;
        }, getMouseWheelDelta: function(event) {
          var delta = 0;
          switch (event.type) {
            case "DOMMouseScroll":
              delta = event.detail;
              break;
            case "mousewheel":
              delta = event.wheelDelta;
              break;
            case "wheel":
              delta = event["deltaY"];
              break;
            default:
              throw "unrecognized mouse wheel event: " + event.type;
          }
          return delta;
        }, mouseX: 0, mouseY: 0, mouseMovementX: 0, mouseMovementY: 0, touches: {}, lastTouches: {}, calculateMouseEvent: function(event) {
          if (Browser.pointerLock) {
            if (event.type != "mousemove" && "mozMovementX" in event) {
              Browser.mouseMovementX = Browser.mouseMovementY = 0;
            } else {
              Browser.mouseMovementX = Browser.getMovementX(event);
              Browser.mouseMovementY = Browser.getMovementY(event);
            }
            if (typeof SDL != "undefined") {
              Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
              Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
            } else {
              Browser.mouseX += Browser.mouseMovementX;
              Browser.mouseY += Browser.mouseMovementY;
            }
          } else {
            var rect = Module["canvas"].getBoundingClientRect();
            var cw = Module["canvas"].width;
            var ch = Module["canvas"].height;
            var scrollX = typeof window.scrollX !== "undefined" ? window.scrollX : window.pageXOffset;
            var scrollY = typeof window.scrollY !== "undefined" ? window.scrollY : window.pageYOffset;
            if (event.type === "touchstart" || event.type === "touchend" || event.type === "touchmove") {
              var touch = event.touch;
              if (touch === void 0) {
                return;
              }
              var adjustedX = touch.pageX - (scrollX + rect.left);
              var adjustedY = touch.pageY - (scrollY + rect.top);
              adjustedX = adjustedX * (cw / rect.width);
              adjustedY = adjustedY * (ch / rect.height);
              var coords = { x: adjustedX, y: adjustedY };
              if (event.type === "touchstart") {
                Browser.lastTouches[touch.identifier] = coords;
                Browser.touches[touch.identifier] = coords;
              } else if (event.type === "touchend" || event.type === "touchmove") {
                var last = Browser.touches[touch.identifier];
                if (!last)
                  last = coords;
                Browser.lastTouches[touch.identifier] = last;
                Browser.touches[touch.identifier] = coords;
              }
              return;
            }
            var x = event.pageX - (scrollX + rect.left);
            var y = event.pageY - (scrollY + rect.top);
            x = x * (cw / rect.width);
            y = y * (ch / rect.height);
            Browser.mouseMovementX = x - Browser.mouseX;
            Browser.mouseMovementY = y - Browser.mouseY;
            Browser.mouseX = x;
            Browser.mouseY = y;
          }
        }, asyncLoad: function(url, onload, onerror, noRunDep) {
          var dep = !noRunDep ? getUniqueRunDependency("al " + url) : "";
          Module["readAsync"](url, function(arrayBuffer) {
            assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
            onload(new Uint8Array(arrayBuffer));
            if (dep)
              removeRunDependency(dep);
          }, function(event) {
            if (onerror) {
              onerror();
            } else {
              throw 'Loading data file "' + url + '" failed.';
            }
          });
          if (dep)
            addRunDependency(dep);
        }, resizeListeners: [], updateResizeListeners: function() {
          var canvas = Module["canvas"];
          Browser.resizeListeners.forEach(function(listener) {
            listener(canvas.width, canvas.height);
          });
        }, setCanvasSize: function(width, height, noUpdates) {
          var canvas = Module["canvas"];
          Browser.updateCanvasDimensions(canvas, width, height);
          if (!noUpdates)
            Browser.updateResizeListeners();
        }, windowedWidth: 0, windowedHeight: 0, setFullscreenCanvasSize: function() {
          if (typeof SDL != "undefined") {
            var flags = HEAPU32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2];
            flags = flags | 8388608;
            HEAP32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2] = flags;
          }
          Browser.updateResizeListeners();
        }, setWindowedCanvasSize: function() {
          if (typeof SDL != "undefined") {
            var flags = HEAPU32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2];
            flags = flags & ~8388608;
            HEAP32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2] = flags;
          }
          Browser.updateResizeListeners();
        }, updateCanvasDimensions: function(canvas, wNative, hNative) {
          if (wNative && hNative) {
            canvas.widthNative = wNative;
            canvas.heightNative = hNative;
          } else {
            wNative = canvas.widthNative;
            hNative = canvas.heightNative;
          }
          var w = wNative;
          var h = hNative;
          if (Module["forcedAspectRatio"] && Module["forcedAspectRatio"] > 0) {
            if (w / h < Module["forcedAspectRatio"]) {
              w = Math.round(h * Module["forcedAspectRatio"]);
            } else {
              h = Math.round(w / Module["forcedAspectRatio"]);
            }
          }
          if ((document["fullscreenElement"] || document["mozFullScreenElement"] || document["msFullscreenElement"] || document["webkitFullscreenElement"] || document["webkitCurrentFullScreenElement"]) === canvas.parentNode && typeof screen != "undefined") {
            var factor = Math.min(screen.width / w, screen.height / h);
            w = Math.round(w * factor);
            h = Math.round(h * factor);
          }
          if (Browser.resizeCanvas) {
            if (canvas.width != w)
              canvas.width = w;
            if (canvas.height != h)
              canvas.height = h;
            if (typeof canvas.style != "undefined") {
              canvas.style.removeProperty("width");
              canvas.style.removeProperty("height");
            }
          } else {
            if (canvas.width != wNative)
              canvas.width = wNative;
            if (canvas.height != hNative)
              canvas.height = hNative;
            if (typeof canvas.style != "undefined") {
              if (w != wNative || h != hNative) {
                canvas.style.setProperty("width", w + "px", "important");
                canvas.style.setProperty("height", h + "px", "important");
              } else {
                canvas.style.removeProperty("width");
                canvas.style.removeProperty("height");
              }
            }
          }
        }, wgetRequests: {}, nextWgetRequestHandle: 0, getNextWgetRequestHandle: function() {
          var handle = Browser.nextWgetRequestHandle;
          Browser.nextWgetRequestHandle++;
          return handle;
        } };
        var SYSCALLS = { varargs: 0, get: function(varargs) {
          SYSCALLS.varargs += 4;
          var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
          return ret;
        }, getStr: function() {
          var ret = Pointer_stringify(SYSCALLS.get());
          return ret;
        }, get64: function() {
          var low = SYSCALLS.get(), high = SYSCALLS.get();
          if (low >= 0)
            assert(high === 0);
          else
            assert(high === -1);
          return low;
        }, getZero: function() {
          assert(SYSCALLS.get() === 0);
        } };
        function ___syscall6(which, varargs) {
          SYSCALLS.varargs = varargs;
          try {
            var stream = SYSCALLS.getStreamFromFD();
            FS.close(stream);
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
              abort(e);
            return -e.errno;
          }
        }
        function ___syscall54(which, varargs) {
          SYSCALLS.varargs = varargs;
          try {
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
              abort(e);
            return -e.errno;
          }
        }
        function _typeModule(self2) {
          var structureList = [[0, 1, "X"], [1, 1, "const X"], [128, 1, "X *"], [256, 1, "X &"], [384, 1, "X &&"], [512, 1, "std::shared_ptr<X>"], [640, 1, "std::unique_ptr<X>"], [5120, 1, "std::vector<X>"], [6144, 2, "std::array<X, Y>"], [9216, -1, "std::function<X (Y)>"]];
          function applyStructure(outerName, outerFlags, innerName, innerFlags, param, flip) {
            if (outerFlags == 1) {
              var ref = innerFlags & 896;
              if (ref == 128 || ref == 256 || ref == 384)
                outerName = "X const";
            }
            var name;
            if (flip) {
              name = innerName.replace("X", outerName).replace("Y", param);
            } else {
              name = outerName.replace("X", innerName).replace("Y", param);
            }
            return name.replace(/([*&]) (?=[*&])/g, "$1");
          }
          function reportProblem(problem, id, kind, structureType, place) {
            throw new Error(problem + " type " + kind.replace("X", id + "?") + (structureType ? " with flag " + structureType : "") + " in " + place);
          }
          function getComplexType(id, constructType2, getType2, queryType2, place, kind, prevStructure, depth) {
            if (kind === void 0) {
              kind = "X";
            }
            if (depth === void 0) {
              depth = 1;
            }
            var result = getType2(id);
            if (result)
              return result;
            var query = queryType2(id);
            var structureType = query.placeholderFlag;
            var structure = structureList[structureType];
            if (prevStructure && structure) {
              kind = applyStructure(prevStructure[2], prevStructure[0], kind, structure[0], "?", true);
            }
            var problem;
            if (structureType == 0)
              problem = "Unbound";
            if (structureType >= 10)
              problem = "Corrupt";
            if (depth > 20)
              problem = "Deeply nested";
            if (problem)
              reportProblem(problem, id, kind, structureType, place || "?");
            var subId = query.paramList[0];
            var subType = getComplexType(subId, constructType2, getType2, queryType2, place, kind, structure, depth + 1);
            var srcSpec;
            var spec = { flags: structure[0], id, name: "", paramList: [subType] };
            var argList2 = [];
            var structureParam = "?";
            switch (query.placeholderFlag) {
              case 1:
                srcSpec = subType.spec;
                break;
              case 2:
                if ((subType.flags & 15360) == 1024 && subType.spec.ptrSize == 1) {
                  spec.flags = 7168;
                  break;
                }
                ;
              case 3:
              case 6:
              case 5:
                srcSpec = subType.spec;
                if ((subType.flags & 15360) != 2048) {
                }
                break;
              case 8:
                structureParam = "" + query.paramList[1];
                spec.paramList.push(query.paramList[1]);
                break;
              case 9:
                for (var _i = 0, _a2 = query.paramList[1]; _i < _a2.length; _i++) {
                  var paramId = _a2[_i];
                  var paramType = getComplexType(paramId, constructType2, getType2, queryType2, place, kind, structure, depth + 1);
                  argList2.push(paramType.name);
                  spec.paramList.push(paramType);
                }
                structureParam = argList2.join(", ");
                break;
              default:
                break;
            }
            spec.name = applyStructure(structure[2], structure[0], subType.name, subType.flags, structureParam);
            if (srcSpec) {
              for (var _b = 0, _c = Object.keys(srcSpec); _b < _c.length; _b++) {
                var key2 = _c[_b];
                spec[key2] = spec[key2] || srcSpec[key2];
              }
              spec.flags |= srcSpec.flags;
            }
            return makeType(constructType2, spec);
          }
          function makeType(constructType2, spec) {
            var flags = spec.flags;
            var refKind = flags & 896;
            var kind = flags & 15360;
            if (!spec.name && kind == 1024) {
              if (spec.ptrSize == 1) {
                spec.name = (flags & 16 ? "" : (flags & 8 ? "un" : "") + "signed ") + "char";
              } else {
                spec.name = (flags & 8 ? "u" : "") + (flags & 32 ? "float" : "int") + (spec.ptrSize * 8 + "_t");
              }
            }
            if (spec.ptrSize == 8 && !(flags & 32))
              kind = 64;
            if (kind == 2048) {
              if (refKind == 512 || refKind == 640) {
                kind = 4096;
              } else if (refKind)
                kind = 3072;
            }
            return constructType2(kind, spec);
          }
          var Type = function() {
            function Type2(spec) {
              this.id = spec.id;
              this.name = spec.name;
              this.flags = spec.flags;
              this.spec = spec;
            }
            Type2.prototype.toString = function() {
              return this.name;
            };
            return Type2;
          }();
          var output = { Type, getComplexType, makeType, structureList };
          self2.output = output;
          return self2.output || output;
        }
        function __nbind_register_type(id, namePtr) {
          var name = _nbind.readAsciiString(namePtr);
          var spec = { flags: 10240, id, name };
          _nbind.makeType(_nbind.constructType, spec);
        }
        function __nbind_register_callback_signature(typeListPtr, typeCount) {
          var typeList = _nbind.readTypeIdList(typeListPtr, typeCount);
          var num2 = _nbind.callbackSignatureList.length;
          _nbind.callbackSignatureList[num2] = _nbind.makeJSCaller(typeList);
          return num2;
        }
        function __extends(Class, Parent) {
          for (var key2 in Parent)
            if (Parent.hasOwnProperty(key2))
              Class[key2] = Parent[key2];
          function Base() {
            this.constructor = Class;
          }
          Base.prototype = Parent.prototype;
          Class.prototype = new Base();
        }
        function __nbind_register_class(idListPtr, policyListPtr, superListPtr, upcastListPtr, superCount, destructorPtr, namePtr) {
          var name = _nbind.readAsciiString(namePtr);
          var policyTbl2 = _nbind.readPolicyList(policyListPtr);
          var idList = HEAPU32.subarray(idListPtr / 4, idListPtr / 4 + 2);
          var spec = { flags: 2048 | (policyTbl2["Value"] ? 2 : 0), id: idList[0], name };
          var bindClass = _nbind.makeType(_nbind.constructType, spec);
          bindClass.ptrType = _nbind.getComplexType(idList[1], _nbind.constructType, _nbind.getType, _nbind.queryType);
          bindClass.destroy = _nbind.makeMethodCaller(bindClass.ptrType, { boundID: spec.id, flags: 0, name: "destroy", num: 0, ptr: destructorPtr, title: bindClass.name + ".free", typeList: ["void", "uint32_t", "uint32_t"] });
          if (superCount) {
            bindClass.superIdList = Array.prototype.slice.call(HEAPU32.subarray(superListPtr / 4, superListPtr / 4 + superCount));
            bindClass.upcastList = Array.prototype.slice.call(HEAPU32.subarray(upcastListPtr / 4, upcastListPtr / 4 + superCount));
          }
          Module[bindClass.name] = bindClass.makeBound(policyTbl2);
          _nbind.BindClass.list.push(bindClass);
        }
        function _removeAccessorPrefix(name) {
          var prefixMatcher = /^[Gg]et_?([A-Z]?([A-Z]?))/;
          return name.replace(prefixMatcher, function(match, initial, second) {
            return second ? initial : initial.toLowerCase();
          });
        }
        function __nbind_register_function(boundID, policyListPtr, typeListPtr, typeCount, ptr2, direct, signatureType, namePtr, num2, flags) {
          var bindClass = _nbind.getType(boundID);
          var policyTbl2 = _nbind.readPolicyList(policyListPtr);
          var typeList = _nbind.readTypeIdList(typeListPtr, typeCount);
          var specList;
          if (signatureType == 5) {
            specList = [{ direct: ptr2, name: "__nbindConstructor", ptr: 0, title: bindClass.name + " constructor", typeList: ["uint32_t"].concat(typeList.slice(1)) }, { direct, name: "__nbindValueConstructor", ptr: 0, title: bindClass.name + " value constructor", typeList: ["void", "uint32_t"].concat(typeList.slice(1)) }];
          } else {
            var name_1 = _nbind.readAsciiString(namePtr);
            var title = (bindClass.name && bindClass.name + ".") + name_1;
            if (signatureType == 3 || signatureType == 4) {
              name_1 = _removeAccessorPrefix(name_1);
            }
            specList = [{ boundID, direct, name: name_1, ptr: ptr2, title, typeList }];
          }
          for (var _i = 0, specList_1 = specList; _i < specList_1.length; _i++) {
            var spec = specList_1[_i];
            spec.signatureType = signatureType;
            spec.policyTbl = policyTbl2;
            spec.num = num2;
            spec.flags = flags;
            bindClass.addMethod(spec);
          }
        }
        function _nbind_value(name, proto) {
          if (!_nbind.typeNameTbl[name])
            _nbind.throwError("Unknown value type " + name);
          Module["NBind"].bind_value(name, proto);
          _defineHidden(_nbind.typeNameTbl[name].proto.prototype.__nbindValueConstructor)(proto.prototype, "__nbindValueConstructor");
        }
        Module["_nbind_value"] = _nbind_value;
        function __nbind_get_value_object(num2, ptr2) {
          var obj = _nbind.popValue(num2);
          if (!obj.fromJS) {
            throw new Error("Object " + obj + " has no fromJS function");
          }
          obj.fromJS(function() {
            obj.__nbindValueConstructor.apply(this, Array.prototype.concat.apply([ptr2], arguments));
          });
        }
        function _emscripten_memcpy_big(dest, src, num2) {
          HEAPU8.set(HEAPU8.subarray(src, src + num2), dest);
          return dest;
        }
        function __nbind_register_primitive(id, size, flags) {
          var spec = { flags: 1024 | flags, id, ptrSize: size };
          _nbind.makeType(_nbind.constructType, spec);
        }
        var cttz_i8 = allocate([8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0], "i8", ALLOC_STATIC);
        function ___setErrNo(value) {
          if (Module["___errno_location"])
            HEAP32[Module["___errno_location"]() >> 2] = value;
          return value;
        }
        function _llvm_stacksave() {
          var self2 = _llvm_stacksave;
          if (!self2.LLVM_SAVEDSTACKS) {
            self2.LLVM_SAVEDSTACKS = [];
          }
          self2.LLVM_SAVEDSTACKS.push(Runtime.stackSave());
          return self2.LLVM_SAVEDSTACKS.length - 1;
        }
        function ___syscall140(which, varargs) {
          SYSCALLS.varargs = varargs;
          try {
            var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
            var offset = offset_low;
            FS.llseek(stream, offset, whence);
            HEAP32[result >> 2] = stream.position;
            if (stream.getdents && offset === 0 && whence === 0)
              stream.getdents = null;
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
              abort(e);
            return -e.errno;
          }
        }
        function ___syscall146(which, varargs) {
          SYSCALLS.varargs = varargs;
          try {
            var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
            var ret = 0;
            if (!___syscall146.buffer) {
              ___syscall146.buffers = [null, [], []];
              ___syscall146.printChar = function(stream2, curr) {
                var buffer2 = ___syscall146.buffers[stream2];
                assert(buffer2);
                if (curr === 0 || curr === 10) {
                  (stream2 === 1 ? Module["print"] : Module["printErr"])(UTF8ArrayToString(buffer2, 0));
                  buffer2.length = 0;
                } else {
                  buffer2.push(curr);
                }
              };
            }
            for (var i2 = 0; i2 < iovcnt; i2++) {
              var ptr2 = HEAP32[iov + i2 * 8 >> 2];
              var len = HEAP32[iov + (i2 * 8 + 4) >> 2];
              for (var j = 0; j < len; j++) {
                ___syscall146.printChar(stream, HEAPU8[ptr2 + j]);
              }
              ret += len;
            }
            return ret;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
              abort(e);
            return -e.errno;
          }
        }
        function __nbind_finish() {
          for (var _i = 0, _a2 = _nbind.BindClass.list; _i < _a2.length; _i++) {
            var bindClass = _a2[_i];
            bindClass.finish();
          }
        }
        var ___dso_handle = STATICTOP;
        STATICTOP += 16;
        (function(_nbind) {
          var typeIdTbl = {};
          _nbind.typeNameTbl = {};
          var Pool = function() {
            function Pool2() {
            }
            Pool2.lalloc = function(size) {
              size = size + 7 & ~7;
              var used = HEAPU32[Pool2.usedPtr];
              if (size > Pool2.pageSize / 2 || size > Pool2.pageSize - used) {
                var NBind = _nbind.typeNameTbl["NBind"].proto;
                return NBind.lalloc(size);
              } else {
                HEAPU32[Pool2.usedPtr] = used + size;
                return Pool2.rootPtr + used;
              }
            };
            Pool2.lreset = function(used, page) {
              var topPage = HEAPU32[Pool2.pagePtr];
              if (topPage) {
                var NBind = _nbind.typeNameTbl["NBind"].proto;
                NBind.lreset(used, page);
              } else {
                HEAPU32[Pool2.usedPtr] = used;
              }
            };
            return Pool2;
          }();
          _nbind.Pool = Pool;
          function constructType(kind, spec) {
            var construct = kind == 10240 ? _nbind.makeTypeNameTbl[spec.name] || _nbind.BindType : _nbind.makeTypeKindTbl[kind];
            var bindType = new construct(spec);
            typeIdTbl[spec.id] = bindType;
            _nbind.typeNameTbl[spec.name] = bindType;
            return bindType;
          }
          _nbind.constructType = constructType;
          function getType(id) {
            return typeIdTbl[id];
          }
          _nbind.getType = getType;
          function queryType(id) {
            var placeholderFlag = HEAPU8[id];
            var paramCount = _nbind.structureList[placeholderFlag][1];
            id /= 4;
            if (paramCount < 0) {
              ++id;
              paramCount = HEAPU32[id] + 1;
            }
            var paramList = Array.prototype.slice.call(HEAPU32.subarray(id + 1, id + 1 + paramCount));
            if (placeholderFlag == 9) {
              paramList = [paramList[0], paramList.slice(1)];
            }
            return { paramList, placeholderFlag };
          }
          _nbind.queryType = queryType;
          function getTypes(idList, place) {
            return idList.map(function(id) {
              return typeof id == "number" ? _nbind.getComplexType(id, constructType, getType, queryType, place) : _nbind.typeNameTbl[id];
            });
          }
          _nbind.getTypes = getTypes;
          function readTypeIdList(typeListPtr, typeCount) {
            return Array.prototype.slice.call(HEAPU32, typeListPtr / 4, typeListPtr / 4 + typeCount);
          }
          _nbind.readTypeIdList = readTypeIdList;
          function readAsciiString(ptr2) {
            var endPtr = ptr2;
            while (HEAPU8[endPtr++])
              ;
            return String.fromCharCode.apply("", HEAPU8.subarray(ptr2, endPtr - 1));
          }
          _nbind.readAsciiString = readAsciiString;
          function readPolicyList(policyListPtr) {
            var policyTbl2 = {};
            if (policyListPtr) {
              while (1) {
                var namePtr = HEAPU32[policyListPtr / 4];
                if (!namePtr)
                  break;
                policyTbl2[readAsciiString(namePtr)] = true;
                policyListPtr += 4;
              }
            }
            return policyTbl2;
          }
          _nbind.readPolicyList = readPolicyList;
          function getDynCall(typeList, name) {
            var mangleMap = { float32_t: "d", float64_t: "d", int64_t: "d", uint64_t: "d", "void": "v" };
            var signature = typeList.map(function(type2) {
              return mangleMap[type2.name] || "i";
            }).join("");
            var dynCall2 = Module["dynCall_" + signature];
            if (!dynCall2) {
              throw new Error("dynCall_" + signature + " not found for " + name + "(" + typeList.map(function(type2) {
                return type2.name;
              }).join(", ") + ")");
            }
            return dynCall2;
          }
          _nbind.getDynCall = getDynCall;
          function addMethod(obj, name, func2, arity) {
            var overload = obj[name];
            if (obj.hasOwnProperty(name) && overload) {
              if (overload.arity || overload.arity === 0) {
                overload = _nbind.makeOverloader(overload, overload.arity);
                obj[name] = overload;
              }
              overload.addMethod(func2, arity);
            } else {
              func2.arity = arity;
              obj[name] = func2;
            }
          }
          _nbind.addMethod = addMethod;
          function throwError(message) {
            throw new Error(message);
          }
          _nbind.throwError = throwError;
          _nbind.bigEndian = false;
          var _a;
          _a = _typeModule(_typeModule), _nbind.Type = _a.Type, _nbind.makeType = _a.makeType, _nbind.getComplexType = _a.getComplexType, _nbind.structureList = _a.structureList;
          var BindType = function(_super) {
            __extends(BindType2, _super);
            function BindType2() {
              var _this = _super !== null && _super.apply(this, arguments) || this;
              _this.heap = HEAPU32;
              _this.ptrSize = 4;
              return _this;
            }
            BindType2.prototype.needsWireRead = function(policyTbl2) {
              return !!this.wireRead || !!this.makeWireRead;
            };
            BindType2.prototype.needsWireWrite = function(policyTbl2) {
              return !!this.wireWrite || !!this.makeWireWrite;
            };
            return BindType2;
          }(_nbind.Type);
          _nbind.BindType = BindType;
          var PrimitiveType = function(_super) {
            __extends(PrimitiveType2, _super);
            function PrimitiveType2(spec) {
              var _this = _super.call(this, spec) || this;
              var heapTbl = spec.flags & 32 ? { 32: HEAPF32, 64: HEAPF64 } : spec.flags & 8 ? { 8: HEAPU8, 16: HEAPU16, 32: HEAPU32 } : { 8: HEAP8, 16: HEAP16, 32: HEAP32 };
              _this.heap = heapTbl[spec.ptrSize * 8];
              _this.ptrSize = spec.ptrSize;
              return _this;
            }
            PrimitiveType2.prototype.needsWireWrite = function(policyTbl2) {
              return !!policyTbl2 && !!policyTbl2["Strict"];
            };
            PrimitiveType2.prototype.makeWireWrite = function(expr, policyTbl2) {
              return policyTbl2 && policyTbl2["Strict"] && function(arg2) {
                if (typeof arg2 == "number")
                  return arg2;
                throw new Error("Type mismatch");
              };
            };
            return PrimitiveType2;
          }(BindType);
          _nbind.PrimitiveType = PrimitiveType;
          function pushCString(str, policyTbl2) {
            if (str === null || str === void 0) {
              if (policyTbl2 && policyTbl2["Nullable"]) {
                return 0;
              } else
                throw new Error("Type mismatch");
            }
            if (policyTbl2 && policyTbl2["Strict"]) {
              if (typeof str != "string")
                throw new Error("Type mismatch");
            } else
              str = str.toString();
            var length = Module.lengthBytesUTF8(str) + 1;
            var result = _nbind.Pool.lalloc(length);
            Module.stringToUTF8Array(str, HEAPU8, result, length);
            return result;
          }
          _nbind.pushCString = pushCString;
          function popCString(ptr2) {
            if (ptr2 === 0)
              return null;
            return Module.Pointer_stringify(ptr2);
          }
          _nbind.popCString = popCString;
          var CStringType = function(_super) {
            __extends(CStringType2, _super);
            function CStringType2() {
              var _this = _super !== null && _super.apply(this, arguments) || this;
              _this.wireRead = popCString;
              _this.wireWrite = pushCString;
              _this.readResources = [_nbind.resources.pool];
              _this.writeResources = [_nbind.resources.pool];
              return _this;
            }
            CStringType2.prototype.makeWireWrite = function(expr, policyTbl2) {
              return function(arg2) {
                return pushCString(arg2, policyTbl2);
              };
            };
            return CStringType2;
          }(BindType);
          _nbind.CStringType = CStringType;
          var BooleanType = function(_super) {
            __extends(BooleanType2, _super);
            function BooleanType2() {
              var _this = _super !== null && _super.apply(this, arguments) || this;
              _this.wireRead = function(arg2) {
                return !!arg2;
              };
              return _this;
            }
            BooleanType2.prototype.needsWireWrite = function(policyTbl2) {
              return !!policyTbl2 && !!policyTbl2["Strict"];
            };
            BooleanType2.prototype.makeWireRead = function(expr) {
              return "!!(" + expr + ")";
            };
            BooleanType2.prototype.makeWireWrite = function(expr, policyTbl2) {
              return policyTbl2 && policyTbl2["Strict"] && function(arg2) {
                if (typeof arg2 == "boolean")
                  return arg2;
                throw new Error("Type mismatch");
              } || expr;
            };
            return BooleanType2;
          }(BindType);
          _nbind.BooleanType = BooleanType;
          var Wrapper = function() {
            function Wrapper2() {
            }
            Wrapper2.prototype.persist = function() {
              this.__nbindState |= 1;
            };
            return Wrapper2;
          }();
          _nbind.Wrapper = Wrapper;
          function makeBound(policyTbl2, bindClass) {
            var Bound = function(_super) {
              __extends(Bound2, _super);
              function Bound2(marker, flags, ptr2, shared) {
                var _this = _super.call(this) || this;
                if (!(_this instanceof Bound2)) {
                  return new (Function.prototype.bind.apply(Bound2, Array.prototype.concat.apply([null], arguments)))();
                }
                var nbindFlags = flags;
                var nbindPtr = ptr2;
                var nbindShared = shared;
                if (marker !== _nbind.ptrMarker) {
                  var wirePtr = _this.__nbindConstructor.apply(_this, arguments);
                  nbindFlags = 4096 | 512;
                  nbindShared = HEAPU32[wirePtr / 4];
                  nbindPtr = HEAPU32[wirePtr / 4 + 1];
                }
                var spec = { configurable: true, enumerable: false, value: null, writable: false };
                var propTbl = { "__nbindFlags": nbindFlags, "__nbindPtr": nbindPtr };
                if (nbindShared) {
                  propTbl["__nbindShared"] = nbindShared;
                  _nbind.mark(_this);
                }
                for (var _i = 0, _a2 = Object.keys(propTbl); _i < _a2.length; _i++) {
                  var key2 = _a2[_i];
                  spec.value = propTbl[key2];
                  Object.defineProperty(_this, key2, spec);
                }
                _defineHidden(0)(_this, "__nbindState");
                return _this;
              }
              Bound2.prototype.free = function() {
                bindClass.destroy.call(this, this.__nbindShared, this.__nbindFlags);
                this.__nbindState |= 2;
                disableMember(this, "__nbindShared");
                disableMember(this, "__nbindPtr");
              };
              return Bound2;
            }(Wrapper);
            __decorate([_defineHidden()], Bound.prototype, "__nbindConstructor", void 0);
            __decorate([_defineHidden()], Bound.prototype, "__nbindValueConstructor", void 0);
            __decorate([_defineHidden(policyTbl2)], Bound.prototype, "__nbindPolicies", void 0);
            return Bound;
          }
          _nbind.makeBound = makeBound;
          function disableMember(obj, name) {
            function die() {
              throw new Error("Accessing deleted object");
            }
            Object.defineProperty(obj, name, { configurable: false, enumerable: false, get: die, set: die });
          }
          _nbind.ptrMarker = {};
          var BindClass = function(_super) {
            __extends(BindClass2, _super);
            function BindClass2(spec) {
              var _this = _super.call(this, spec) || this;
              _this.wireRead = function(arg2) {
                return _nbind.popValue(arg2, _this.ptrType);
              };
              _this.wireWrite = function(arg2) {
                return pushPointer(arg2, _this.ptrType, true);
              };
              _this.pendingSuperCount = 0;
              _this.ready = false;
              _this.methodTbl = {};
              if (spec.paramList) {
                _this.classType = spec.paramList[0].classType;
                _this.proto = _this.classType.proto;
              } else
                _this.classType = _this;
              return _this;
            }
            BindClass2.prototype.makeBound = function(policyTbl2) {
              var Bound = _nbind.makeBound(policyTbl2, this);
              this.proto = Bound;
              this.ptrType.proto = Bound;
              return Bound;
            };
            BindClass2.prototype.addMethod = function(spec) {
              var overloadList = this.methodTbl[spec.name] || [];
              overloadList.push(spec);
              this.methodTbl[spec.name] = overloadList;
            };
            BindClass2.prototype.registerMethods = function(src, staticOnly) {
              var setter;
              for (var _i = 0, _a2 = Object.keys(src.methodTbl); _i < _a2.length; _i++) {
                var name_1 = _a2[_i];
                var overloadList = src.methodTbl[name_1];
                for (var _b = 0, overloadList_1 = overloadList; _b < overloadList_1.length; _b++) {
                  var spec = overloadList_1[_b];
                  var target = void 0;
                  var caller = void 0;
                  target = this.proto.prototype;
                  if (staticOnly && spec.signatureType != 1)
                    continue;
                  switch (spec.signatureType) {
                    case 1:
                      target = this.proto;
                    case 5:
                      caller = _nbind.makeCaller(spec);
                      _nbind.addMethod(target, spec.name, caller, spec.typeList.length - 1);
                      break;
                    case 4:
                      setter = _nbind.makeMethodCaller(src.ptrType, spec);
                      break;
                    case 3:
                      Object.defineProperty(target, spec.name, { configurable: true, enumerable: false, get: _nbind.makeMethodCaller(src.ptrType, spec), set: setter });
                      break;
                    case 2:
                      caller = _nbind.makeMethodCaller(src.ptrType, spec);
                      _nbind.addMethod(target, spec.name, caller, spec.typeList.length - 1);
                      break;
                    default:
                      break;
                  }
                }
              }
            };
            BindClass2.prototype.registerSuperMethods = function(src, firstSuper, visitTbl) {
              if (visitTbl[src.name])
                return;
              visitTbl[src.name] = true;
              var superNum = 0;
              var nextFirst;
              for (var _i = 0, _a2 = src.superIdList || []; _i < _a2.length; _i++) {
                var superId = _a2[_i];
                var superClass = _nbind.getType(superId);
                if (superNum++ < firstSuper || firstSuper < 0) {
                  nextFirst = -1;
                } else {
                  nextFirst = 0;
                }
                this.registerSuperMethods(superClass, nextFirst, visitTbl);
              }
              this.registerMethods(src, firstSuper < 0);
            };
            BindClass2.prototype.finish = function() {
              if (this.ready)
                return this;
              this.ready = true;
              this.superList = (this.superIdList || []).map(function(superId) {
                return _nbind.getType(superId).finish();
              });
              var Bound = this.proto;
              if (this.superList.length) {
                var Proto = function() {
                  this.constructor = Bound;
                };
                Proto.prototype = this.superList[0].proto.prototype;
                Bound.prototype = new Proto();
              }
              if (Bound != Module)
                Bound.prototype.__nbindType = this;
              this.registerSuperMethods(this, 1, {});
              return this;
            };
            BindClass2.prototype.upcastStep = function(dst, ptr2) {
              if (dst == this)
                return ptr2;
              for (var i2 = 0; i2 < this.superList.length; ++i2) {
                var superPtr = this.superList[i2].upcastStep(dst, _nbind.callUpcast(this.upcastList[i2], ptr2));
                if (superPtr)
                  return superPtr;
              }
              return 0;
            };
            return BindClass2;
          }(_nbind.BindType);
          BindClass.list = [];
          _nbind.BindClass = BindClass;
          function popPointer(ptr2, type2) {
            return ptr2 ? new type2.proto(_nbind.ptrMarker, type2.flags, ptr2) : null;
          }
          _nbind.popPointer = popPointer;
          function pushPointer(obj, type2, tryValue) {
            if (!(obj instanceof _nbind.Wrapper)) {
              if (tryValue) {
                return _nbind.pushValue(obj);
              } else
                throw new Error("Type mismatch");
            }
            var ptr2 = obj.__nbindPtr;
            var objType = obj.__nbindType.classType;
            var classType = type2.classType;
            if (obj instanceof type2.proto) {
              while (objType != classType) {
                ptr2 = _nbind.callUpcast(objType.upcastList[0], ptr2);
                objType = objType.superList[0];
              }
            } else {
              ptr2 = objType.upcastStep(classType, ptr2);
              if (!ptr2)
                throw new Error("Type mismatch");
            }
            return ptr2;
          }
          _nbind.pushPointer = pushPointer;
          function pushMutablePointer(obj, type2) {
            var ptr2 = pushPointer(obj, type2);
            if (obj.__nbindFlags & 1) {
              throw new Error("Passing a const value as a non-const argument");
            }
            return ptr2;
          }
          var BindClassPtr = function(_super) {
            __extends(BindClassPtr2, _super);
            function BindClassPtr2(spec) {
              var _this = _super.call(this, spec) || this;
              _this.classType = spec.paramList[0].classType;
              _this.proto = _this.classType.proto;
              var isConst = spec.flags & 1;
              var isValue = (_this.flags & 896) == 256 && spec.flags & 2;
              var push = isConst ? pushPointer : pushMutablePointer;
              var pop = isValue ? _nbind.popValue : popPointer;
              _this.makeWireWrite = function(expr, policyTbl2) {
                return policyTbl2["Nullable"] ? function(arg2) {
                  return arg2 ? push(arg2, _this) : 0;
                } : function(arg2) {
                  return push(arg2, _this);
                };
              };
              _this.wireRead = function(arg2) {
                return pop(arg2, _this);
              };
              _this.wireWrite = function(arg2) {
                return push(arg2, _this);
              };
              return _this;
            }
            return BindClassPtr2;
          }(_nbind.BindType);
          _nbind.BindClassPtr = BindClassPtr;
          function popShared(ptr2, type2) {
            var shared = HEAPU32[ptr2 / 4];
            var unsafe = HEAPU32[ptr2 / 4 + 1];
            return unsafe ? new type2.proto(_nbind.ptrMarker, type2.flags, unsafe, shared) : null;
          }
          _nbind.popShared = popShared;
          function pushShared(obj, type2) {
            if (!(obj instanceof type2.proto))
              throw new Error("Type mismatch");
            return obj.__nbindShared;
          }
          function pushMutableShared(obj, type2) {
            if (!(obj instanceof type2.proto))
              throw new Error("Type mismatch");
            if (obj.__nbindFlags & 1) {
              throw new Error("Passing a const value as a non-const argument");
            }
            return obj.__nbindShared;
          }
          var SharedClassPtr = function(_super) {
            __extends(SharedClassPtr2, _super);
            function SharedClassPtr2(spec) {
              var _this = _super.call(this, spec) || this;
              _this.readResources = [_nbind.resources.pool];
              _this.classType = spec.paramList[0].classType;
              _this.proto = _this.classType.proto;
              var isConst = spec.flags & 1;
              var push = isConst ? pushShared : pushMutableShared;
              _this.wireRead = function(arg2) {
                return popShared(arg2, _this);
              };
              _this.wireWrite = function(arg2) {
                return push(arg2, _this);
              };
              return _this;
            }
            return SharedClassPtr2;
          }(_nbind.BindType);
          _nbind.SharedClassPtr = SharedClassPtr;
          _nbind.externalList = [0];
          var firstFreeExternal = 0;
          var External = function() {
            function External2(data) {
              this.refCount = 1;
              this.data = data;
            }
            External2.prototype.register = function() {
              var num2 = firstFreeExternal;
              if (num2) {
                firstFreeExternal = _nbind.externalList[num2];
              } else
                num2 = _nbind.externalList.length;
              _nbind.externalList[num2] = this;
              return num2;
            };
            External2.prototype.reference = function() {
              ++this.refCount;
            };
            External2.prototype.dereference = function(num2) {
              if (--this.refCount == 0) {
                if (this.free)
                  this.free();
                _nbind.externalList[num2] = firstFreeExternal;
                firstFreeExternal = num2;
              }
            };
            return External2;
          }();
          _nbind.External = External;
          function popExternal(num2) {
            var obj = _nbind.externalList[num2];
            obj.dereference(num2);
            return obj.data;
          }
          function pushExternal(obj) {
            var external = new External(obj);
            external.reference();
            return external.register();
          }
          var ExternalType = function(_super) {
            __extends(ExternalType2, _super);
            function ExternalType2() {
              var _this = _super !== null && _super.apply(this, arguments) || this;
              _this.wireRead = popExternal;
              _this.wireWrite = pushExternal;
              return _this;
            }
            return ExternalType2;
          }(_nbind.BindType);
          _nbind.ExternalType = ExternalType;
          _nbind.callbackSignatureList = [];
          var CallbackType = function(_super) {
            __extends(CallbackType2, _super);
            function CallbackType2() {
              var _this = _super !== null && _super.apply(this, arguments) || this;
              _this.wireWrite = function(func2) {
                if (typeof func2 != "function")
                  _nbind.throwError("Type mismatch");
                return new _nbind.External(func2).register();
              };
              return _this;
            }
            return CallbackType2;
          }(_nbind.BindType);
          _nbind.CallbackType = CallbackType;
          _nbind.valueList = [0];
          var firstFreeValue = 0;
          function pushValue(value) {
            var num2 = firstFreeValue;
            if (num2) {
              firstFreeValue = _nbind.valueList[num2];
            } else
              num2 = _nbind.valueList.length;
            _nbind.valueList[num2] = value;
            return num2 * 2 + 1;
          }
          _nbind.pushValue = pushValue;
          function popValue(num2, type2) {
            if (!num2)
              _nbind.throwError("Value type JavaScript class is missing or not registered");
            if (num2 & 1) {
              num2 >>= 1;
              var obj = _nbind.valueList[num2];
              _nbind.valueList[num2] = firstFreeValue;
              firstFreeValue = num2;
              return obj;
            } else if (type2) {
              return _nbind.popShared(num2, type2);
            } else
              throw new Error("Invalid value slot " + num2);
          }
          _nbind.popValue = popValue;
          var valueBase = 18446744073709552e3;
          function push64(num2) {
            if (typeof num2 == "number")
              return num2;
            return pushValue(num2) * 4096 + valueBase;
          }
          function pop64(num2) {
            if (num2 < valueBase)
              return num2;
            return popValue((num2 - valueBase) / 4096);
          }
          var CreateValueType = function(_super) {
            __extends(CreateValueType2, _super);
            function CreateValueType2() {
              return _super !== null && _super.apply(this, arguments) || this;
            }
            CreateValueType2.prototype.makeWireWrite = function(expr) {
              return "(_nbind.pushValue(new " + expr + "))";
            };
            return CreateValueType2;
          }(_nbind.BindType);
          _nbind.CreateValueType = CreateValueType;
          var Int64Type = function(_super) {
            __extends(Int64Type2, _super);
            function Int64Type2() {
              var _this = _super !== null && _super.apply(this, arguments) || this;
              _this.wireWrite = push64;
              _this.wireRead = pop64;
              return _this;
            }
            return Int64Type2;
          }(_nbind.BindType);
          _nbind.Int64Type = Int64Type;
          function pushArray(arr, type2) {
            if (!arr)
              return 0;
            var length = arr.length;
            if ((type2.size || type2.size === 0) && length < type2.size) {
              throw new Error("Type mismatch");
            }
            var ptrSize = type2.memberType.ptrSize;
            var result = _nbind.Pool.lalloc(4 + length * ptrSize);
            HEAPU32[result / 4] = length;
            var heap = type2.memberType.heap;
            var ptr2 = (result + 4) / ptrSize;
            var wireWrite = type2.memberType.wireWrite;
            var num2 = 0;
            if (wireWrite) {
              while (num2 < length) {
                heap[ptr2++] = wireWrite(arr[num2++]);
              }
            } else {
              while (num2 < length) {
                heap[ptr2++] = arr[num2++];
              }
            }
            return result;
          }
          _nbind.pushArray = pushArray;
          function popArray(ptr2, type2) {
            if (ptr2 === 0)
              return null;
            var length = HEAPU32[ptr2 / 4];
            var arr = new Array(length);
            var heap = type2.memberType.heap;
            ptr2 = (ptr2 + 4) / type2.memberType.ptrSize;
            var wireRead = type2.memberType.wireRead;
            var num2 = 0;
            if (wireRead) {
              while (num2 < length) {
                arr[num2++] = wireRead(heap[ptr2++]);
              }
            } else {
              while (num2 < length) {
                arr[num2++] = heap[ptr2++];
              }
            }
            return arr;
          }
          _nbind.popArray = popArray;
          var ArrayType = function(_super) {
            __extends(ArrayType2, _super);
            function ArrayType2(spec) {
              var _this = _super.call(this, spec) || this;
              _this.wireRead = function(arg2) {
                return popArray(arg2, _this);
              };
              _this.wireWrite = function(arg2) {
                return pushArray(arg2, _this);
              };
              _this.readResources = [_nbind.resources.pool];
              _this.writeResources = [_nbind.resources.pool];
              _this.memberType = spec.paramList[0];
              if (spec.paramList[1])
                _this.size = spec.paramList[1];
              return _this;
            }
            return ArrayType2;
          }(_nbind.BindType);
          _nbind.ArrayType = ArrayType;
          function pushString(str, policyTbl2) {
            if (str === null || str === void 0) {
              if (policyTbl2 && policyTbl2["Nullable"]) {
                str = "";
              } else
                throw new Error("Type mismatch");
            }
            if (policyTbl2 && policyTbl2["Strict"]) {
              if (typeof str != "string")
                throw new Error("Type mismatch");
            } else
              str = str.toString();
            var length = Module.lengthBytesUTF8(str);
            var result = _nbind.Pool.lalloc(4 + length + 1);
            HEAPU32[result / 4] = length;
            Module.stringToUTF8Array(str, HEAPU8, result + 4, length + 1);
            return result;
          }
          _nbind.pushString = pushString;
          function popString(ptr2) {
            if (ptr2 === 0)
              return null;
            var length = HEAPU32[ptr2 / 4];
            return Module.Pointer_stringify(ptr2 + 4, length);
          }
          _nbind.popString = popString;
          var StringType = function(_super) {
            __extends(StringType2, _super);
            function StringType2() {
              var _this = _super !== null && _super.apply(this, arguments) || this;
              _this.wireRead = popString;
              _this.wireWrite = pushString;
              _this.readResources = [_nbind.resources.pool];
              _this.writeResources = [_nbind.resources.pool];
              return _this;
            }
            StringType2.prototype.makeWireWrite = function(expr, policyTbl2) {
              return function(arg2) {
                return pushString(arg2, policyTbl2);
              };
            };
            return StringType2;
          }(_nbind.BindType);
          _nbind.StringType = StringType;
          function makeArgList(argCount) {
            return Array.apply(null, Array(argCount)).map(function(dummy, num2) {
              return "a" + (num2 + 1);
            });
          }
          function anyNeedsWireWrite(typeList, policyTbl2) {
            return typeList.reduce(function(result, type2) {
              return result || type2.needsWireWrite(policyTbl2);
            }, false);
          }
          function anyNeedsWireRead(typeList, policyTbl2) {
            return typeList.reduce(function(result, type2) {
              return result || !!type2.needsWireRead(policyTbl2);
            }, false);
          }
          function makeWireRead(convertParamList2, policyTbl2, type2, expr) {
            var paramNum = convertParamList2.length;
            if (type2.makeWireRead) {
              return type2.makeWireRead(expr, convertParamList2, paramNum);
            } else if (type2.wireRead) {
              convertParamList2[paramNum] = type2.wireRead;
              return "(convertParamList[" + paramNum + "](" + expr + "))";
            } else
              return expr;
          }
          function makeWireWrite(convertParamList2, policyTbl2, type2, expr) {
            var wireWrite;
            var paramNum = convertParamList2.length;
            if (type2.makeWireWrite) {
              wireWrite = type2.makeWireWrite(expr, policyTbl2, convertParamList2, paramNum);
            } else
              wireWrite = type2.wireWrite;
            if (wireWrite) {
              if (typeof wireWrite == "string") {
                return wireWrite;
              } else {
                convertParamList2[paramNum] = wireWrite;
                return "(convertParamList[" + paramNum + "](" + expr + "))";
              }
            } else
              return expr;
          }
          function buildCallerFunction(dynCall, ptrType, ptr, num, policyTbl, needsWireWrite, prefix, returnType, argTypeList, mask, err) {
            var argList = makeArgList(argTypeList.length);
            var convertParamList = [];
            var callExpression = makeWireRead(convertParamList, policyTbl, returnType, "dynCall(" + [prefix].concat(argList.map(function(name, index) {
              return makeWireWrite(convertParamList, policyTbl, argTypeList[index], name);
            })).join(",") + ")");
            var resourceSet = _nbind.listResources([returnType], argTypeList);
            var sourceCode = "function(" + argList.join(",") + "){" + (mask ? "this.__nbindFlags&mask&&err();" : "") + resourceSet.makeOpen() + "var r=" + callExpression + ";" + resourceSet.makeClose() + "return r;}";
            return eval("(" + sourceCode + ")");
          }
          function buildJSCallerFunction(returnType, argTypeList) {
            var argList = makeArgList(argTypeList.length);
            var convertParamList = [];
            var callExpression = makeWireWrite(convertParamList, null, returnType, "_nbind.externalList[num].data(" + argList.map(function(name, index) {
              return makeWireRead(convertParamList, null, argTypeList[index], name);
            }).join(",") + ")");
            var resourceSet = _nbind.listResources(argTypeList, [returnType]);
            resourceSet.remove(_nbind.resources.pool);
            var sourceCode = "function(" + ["dummy", "num"].concat(argList).join(",") + "){" + resourceSet.makeOpen() + "var r=" + callExpression + ";" + resourceSet.makeClose() + "return r;}";
            return eval("(" + sourceCode + ")");
          }
          _nbind.buildJSCallerFunction = buildJSCallerFunction;
          function makeJSCaller(idList) {
            var argCount = idList.length - 1;
            var typeList = _nbind.getTypes(idList, "callback");
            var returnType2 = typeList[0];
            var argTypeList2 = typeList.slice(1);
            var needsWireRead = anyNeedsWireRead(argTypeList2, null);
            var needsWireWrite2 = returnType2.needsWireWrite(null);
            if (!needsWireWrite2 && !needsWireRead) {
              switch (argCount) {
                case 0:
                  return function(dummy, num2) {
                    return _nbind.externalList[num2].data();
                  };
                case 1:
                  return function(dummy, num2, a1) {
                    return _nbind.externalList[num2].data(a1);
                  };
                case 2:
                  return function(dummy, num2, a1, a2) {
                    return _nbind.externalList[num2].data(a1, a2);
                  };
                case 3:
                  return function(dummy, num2, a1, a2, a3) {
                    return _nbind.externalList[num2].data(a1, a2, a3);
                  };
                default:
                  break;
              }
            }
            return buildJSCallerFunction(returnType2, argTypeList2);
          }
          _nbind.makeJSCaller = makeJSCaller;
          function makeMethodCaller(ptrType2, spec) {
            var argCount = spec.typeList.length - 1;
            var typeIdList = spec.typeList.slice(0);
            typeIdList.splice(1, 0, "uint32_t", spec.boundID);
            var typeList = _nbind.getTypes(typeIdList, spec.title);
            var returnType2 = typeList[0];
            var argTypeList2 = typeList.slice(3);
            var needsWireRead = returnType2.needsWireRead(spec.policyTbl);
            var needsWireWrite2 = anyNeedsWireWrite(argTypeList2, spec.policyTbl);
            var ptr2 = spec.ptr;
            var num2 = spec.num;
            var dynCall2 = _nbind.getDynCall(typeList, spec.title);
            var mask2 = ~spec.flags & 1;
            function err2() {
              throw new Error("Calling a non-const method on a const object");
            }
            if (!needsWireRead && !needsWireWrite2) {
              switch (argCount) {
                case 0:
                  return function() {
                    return this.__nbindFlags & mask2 ? err2() : dynCall2(ptr2, num2, _nbind.pushPointer(this, ptrType2));
                  };
                case 1:
                  return function(a1) {
                    return this.__nbindFlags & mask2 ? err2() : dynCall2(ptr2, num2, _nbind.pushPointer(this, ptrType2), a1);
                  };
                case 2:
                  return function(a1, a2) {
                    return this.__nbindFlags & mask2 ? err2() : dynCall2(ptr2, num2, _nbind.pushPointer(this, ptrType2), a1, a2);
                  };
                case 3:
                  return function(a1, a2, a3) {
                    return this.__nbindFlags & mask2 ? err2() : dynCall2(ptr2, num2, _nbind.pushPointer(this, ptrType2), a1, a2, a3);
                  };
                default:
                  break;
              }
            }
            return buildCallerFunction(dynCall2, ptrType2, ptr2, num2, spec.policyTbl, needsWireWrite2, "ptr,num,pushPointer(this,ptrType)", returnType2, argTypeList2, mask2, err2);
          }
          _nbind.makeMethodCaller = makeMethodCaller;
          function makeCaller(spec) {
            var argCount = spec.typeList.length - 1;
            var typeList = _nbind.getTypes(spec.typeList, spec.title);
            var returnType2 = typeList[0];
            var argTypeList2 = typeList.slice(1);
            var needsWireRead = returnType2.needsWireRead(spec.policyTbl);
            var needsWireWrite2 = anyNeedsWireWrite(argTypeList2, spec.policyTbl);
            var direct = spec.direct;
            var ptr2 = spec.ptr;
            if (spec.direct && !needsWireRead && !needsWireWrite2) {
              var dynCall_1 = _nbind.getDynCall(typeList, spec.title);
              switch (argCount) {
                case 0:
                  return function() {
                    return dynCall_1(direct);
                  };
                case 1:
                  return function(a1) {
                    return dynCall_1(direct, a1);
                  };
                case 2:
                  return function(a1, a2) {
                    return dynCall_1(direct, a1, a2);
                  };
                case 3:
                  return function(a1, a2, a3) {
                    return dynCall_1(direct, a1, a2, a3);
                  };
                default:
                  break;
              }
              ptr2 = 0;
            }
            var prefix2;
            if (ptr2) {
              var typeIdList = spec.typeList.slice(0);
              typeIdList.splice(1, 0, "uint32_t");
              typeList = _nbind.getTypes(typeIdList, spec.title);
              prefix2 = "ptr,num";
            } else {
              ptr2 = direct;
              prefix2 = "ptr";
            }
            var dynCall2 = _nbind.getDynCall(typeList, spec.title);
            return buildCallerFunction(dynCall2, null, ptr2, spec.num, spec.policyTbl, needsWireWrite2, prefix2, returnType2, argTypeList2);
          }
          _nbind.makeCaller = makeCaller;
          function makeOverloader(func2, arity) {
            var callerList = [];
            function call() {
              return callerList[arguments.length].apply(this, arguments);
            }
            call.addMethod = function(_func, _arity) {
              callerList[_arity] = _func;
            };
            call.addMethod(func2, arity);
            return call;
          }
          _nbind.makeOverloader = makeOverloader;
          var Resource = function() {
            function Resource2(open, close) {
              var _this = this;
              this.makeOpen = function() {
                return Object.keys(_this.openTbl).join("");
              };
              this.makeClose = function() {
                return Object.keys(_this.closeTbl).join("");
              };
              this.openTbl = {};
              this.closeTbl = {};
              if (open)
                this.openTbl[open] = true;
              if (close)
                this.closeTbl[close] = true;
            }
            Resource2.prototype.add = function(other) {
              for (var _i = 0, _a2 = Object.keys(other.openTbl); _i < _a2.length; _i++) {
                var key2 = _a2[_i];
                this.openTbl[key2] = true;
              }
              for (var _b = 0, _c = Object.keys(other.closeTbl); _b < _c.length; _b++) {
                var key2 = _c[_b];
                this.closeTbl[key2] = true;
              }
            };
            Resource2.prototype.remove = function(other) {
              for (var _i = 0, _a2 = Object.keys(other.openTbl); _i < _a2.length; _i++) {
                var key2 = _a2[_i];
                delete this.openTbl[key2];
              }
              for (var _b = 0, _c = Object.keys(other.closeTbl); _b < _c.length; _b++) {
                var key2 = _c[_b];
                delete this.closeTbl[key2];
              }
            };
            return Resource2;
          }();
          _nbind.Resource = Resource;
          function listResources(readList, writeList) {
            var result = new Resource();
            for (var _i = 0, readList_1 = readList; _i < readList_1.length; _i++) {
              var bindType = readList_1[_i];
              for (var _a2 = 0, _b = bindType.readResources || []; _a2 < _b.length; _a2++) {
                var resource = _b[_a2];
                result.add(resource);
              }
            }
            for (var _c = 0, writeList_1 = writeList; _c < writeList_1.length; _c++) {
              var bindType = writeList_1[_c];
              for (var _d = 0, _e = bindType.writeResources || []; _d < _e.length; _d++) {
                var resource = _e[_d];
                result.add(resource);
              }
            }
            return result;
          }
          _nbind.listResources = listResources;
          _nbind.resources = { pool: new Resource("var used=HEAPU32[_nbind.Pool.usedPtr],page=HEAPU32[_nbind.Pool.pagePtr];", "_nbind.Pool.lreset(used,page);") };
          var ExternalBuffer = function(_super) {
            __extends(ExternalBuffer2, _super);
            function ExternalBuffer2(buf, ptr2) {
              var _this = _super.call(this, buf) || this;
              _this.ptr = ptr2;
              return _this;
            }
            ExternalBuffer2.prototype.free = function() {
              _free(this.ptr);
            };
            return ExternalBuffer2;
          }(_nbind.External);
          function getBuffer(buf) {
            if (buf instanceof ArrayBuffer) {
              return new Uint8Array(buf);
            } else if (buf instanceof DataView) {
              return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
            } else
              return buf;
          }
          function pushBuffer(buf, policyTbl2) {
            if (buf === null || buf === void 0) {
              if (policyTbl2 && policyTbl2["Nullable"])
                buf = [];
            }
            if (typeof buf != "object")
              throw new Error("Type mismatch");
            var b = buf;
            var length = b.byteLength || b.length;
            if (!length && length !== 0 && b.byteLength !== 0)
              throw new Error("Type mismatch");
            var result = _nbind.Pool.lalloc(8);
            var data = _malloc(length);
            var ptr2 = result / 4;
            HEAPU32[ptr2++] = length;
            HEAPU32[ptr2++] = data;
            HEAPU32[ptr2++] = new ExternalBuffer(buf, data).register();
            HEAPU8.set(getBuffer(buf), data);
            return result;
          }
          var BufferType = function(_super) {
            __extends(BufferType2, _super);
            function BufferType2() {
              var _this = _super !== null && _super.apply(this, arguments) || this;
              _this.wireWrite = pushBuffer;
              _this.readResources = [_nbind.resources.pool];
              _this.writeResources = [_nbind.resources.pool];
              return _this;
            }
            BufferType2.prototype.makeWireWrite = function(expr, policyTbl2) {
              return function(arg2) {
                return pushBuffer(arg2, policyTbl2);
              };
            };
            return BufferType2;
          }(_nbind.BindType);
          _nbind.BufferType = BufferType;
          function commitBuffer(num2, data, length) {
            var buf = _nbind.externalList[num2].data;
            var NodeBuffer = Buffer;
            if (typeof Buffer != "function")
              NodeBuffer = function() {
              };
            if (buf instanceof Array) {
            } else {
              var src = HEAPU8.subarray(data, data + length);
              if (buf instanceof NodeBuffer) {
                var srcBuf = void 0;
                if (typeof Buffer.from == "function" && Buffer.from.length >= 3) {
                  srcBuf = Buffer.from(src);
                } else
                  srcBuf = new Buffer(src);
                srcBuf.copy(buf);
              } else
                getBuffer(buf).set(src);
            }
          }
          _nbind.commitBuffer = commitBuffer;
          var dirtyList = [];
          var gcTimer = 0;
          function sweep() {
            for (var _i = 0, dirtyList_1 = dirtyList; _i < dirtyList_1.length; _i++) {
              var obj = dirtyList_1[_i];
              if (!(obj.__nbindState & (1 | 2))) {
                obj.free();
              }
            }
            dirtyList = [];
            gcTimer = 0;
          }
          _nbind.mark = function(obj) {
          };
          function toggleLightGC(enable) {
            if (enable) {
              _nbind.mark = function(obj) {
                dirtyList.push(obj);
                if (!gcTimer)
                  gcTimer = setTimeout(sweep, 0);
              };
            } else {
              _nbind.mark = function(obj) {
              };
            }
          }
          _nbind.toggleLightGC = toggleLightGC;
        })(_nbind);
        Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) {
          Module.printErr("Module.requestFullScreen is deprecated. Please call Module.requestFullscreen instead.");
          Module["requestFullScreen"] = Module["requestFullscreen"];
          Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice);
        };
        Module["requestFullscreen"] = function Module_requestFullscreen(lockPointer, resizeCanvas, vrDevice) {
          Browser.requestFullscreen(lockPointer, resizeCanvas, vrDevice);
        };
        Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func2) {
          Browser.requestAnimationFrame(func2);
        };
        Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) {
          Browser.setCanvasSize(width, height, noUpdates);
        };
        Module["pauseMainLoop"] = function Module_pauseMainLoop() {
          Browser.mainLoop.pause();
        };
        Module["resumeMainLoop"] = function Module_resumeMainLoop() {
          Browser.mainLoop.resume();
        };
        Module["getUserMedia"] = function Module_getUserMedia() {
          Browser.getUserMedia();
        };
        Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) {
          return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes);
        };
        if (ENVIRONMENT_IS_NODE) {
          _emscripten_get_now = function _emscripten_get_now_actual() {
            var t = process["hrtime"]();
            return t[0] * 1e3 + t[1] / 1e6;
          };
        } else if (typeof dateNow !== "undefined") {
          _emscripten_get_now = dateNow;
        } else if (typeof self === "object" && self["performance"] && typeof self["performance"]["now"] === "function") {
          _emscripten_get_now = function() {
            return self["performance"]["now"]();
          };
        } else if (typeof performance === "object" && typeof performance["now"] === "function") {
          _emscripten_get_now = function() {
            return performance["now"]();
          };
        } else {
          _emscripten_get_now = Date.now;
        }
        __ATEXIT__.push(function() {
          var fflush = Module["_fflush"];
          if (fflush)
            fflush(0);
          var printChar = ___syscall146.printChar;
          if (!printChar)
            return;
          var buffers = ___syscall146.buffers;
          if (buffers[1].length)
            printChar(1, 10);
          if (buffers[2].length)
            printChar(2, 10);
        });
        DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);
        STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
        STACK_MAX = STACK_BASE + TOTAL_STACK;
        DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);
        HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;
        staticSealed = true;
        function invoke_viiiii(index, a1, a2, a3, a4, a5) {
          try {
            Module["dynCall_viiiii"](index, a1, a2, a3, a4, a5);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_vif(index, a1, a2) {
          try {
            Module["dynCall_vif"](index, a1, a2);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_vid(index, a1, a2) {
          try {
            Module["dynCall_vid"](index, a1, a2);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_fiff(index, a1, a2, a3) {
          try {
            return Module["dynCall_fiff"](index, a1, a2, a3);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_vi(index, a1) {
          try {
            Module["dynCall_vi"](index, a1);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_vii(index, a1, a2) {
          try {
            Module["dynCall_vii"](index, a1, a2);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_ii(index, a1) {
          try {
            return Module["dynCall_ii"](index, a1);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_viddi(index, a1, a2, a3, a4) {
          try {
            Module["dynCall_viddi"](index, a1, a2, a3, a4);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_vidd(index, a1, a2, a3) {
          try {
            Module["dynCall_vidd"](index, a1, a2, a3);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_iiii(index, a1, a2, a3) {
          try {
            return Module["dynCall_iiii"](index, a1, a2, a3);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_diii(index, a1, a2, a3) {
          try {
            return Module["dynCall_diii"](index, a1, a2, a3);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_di(index, a1) {
          try {
            return Module["dynCall_di"](index, a1);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_iid(index, a1, a2) {
          try {
            return Module["dynCall_iid"](index, a1, a2);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_iii(index, a1, a2) {
          try {
            return Module["dynCall_iii"](index, a1, a2);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_viiddi(index, a1, a2, a3, a4, a5) {
          try {
            Module["dynCall_viiddi"](index, a1, a2, a3, a4, a5);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
          try {
            Module["dynCall_viiiiii"](index, a1, a2, a3, a4, a5, a6);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_dii(index, a1, a2) {
          try {
            return Module["dynCall_dii"](index, a1, a2);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_i(index) {
          try {
            return Module["dynCall_i"](index);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
          try {
            return Module["dynCall_iiiiii"](index, a1, a2, a3, a4, a5);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_viiid(index, a1, a2, a3, a4) {
          try {
            Module["dynCall_viiid"](index, a1, a2, a3, a4);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_viififi(index, a1, a2, a3, a4, a5, a6) {
          try {
            Module["dynCall_viififi"](index, a1, a2, a3, a4, a5, a6);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_viii(index, a1, a2, a3) {
          try {
            Module["dynCall_viii"](index, a1, a2, a3);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_v(index) {
          try {
            Module["dynCall_v"](index);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_viid(index, a1, a2, a3) {
          try {
            Module["dynCall_viid"](index, a1, a2, a3);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_idd(index, a1, a2) {
          try {
            return Module["dynCall_idd"](index, a1, a2);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        function invoke_viiii(index, a1, a2, a3, a4) {
          try {
            Module["dynCall_viiii"](index, a1, a2, a3, a4);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            Module["setThrew"](1, 0);
          }
        }
        Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
        Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "invoke_viiiii": invoke_viiiii, "invoke_vif": invoke_vif, "invoke_vid": invoke_vid, "invoke_fiff": invoke_fiff, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_viddi": invoke_viddi, "invoke_vidd": invoke_vidd, "invoke_iiii": invoke_iiii, "invoke_diii": invoke_diii, "invoke_di": invoke_di, "invoke_iid": invoke_iid, "invoke_iii": invoke_iii, "invoke_viiddi": invoke_viiddi, "invoke_viiiiii": invoke_viiiiii, "invoke_dii": invoke_dii, "invoke_i": invoke_i, "invoke_iiiiii": invoke_iiiiii, "invoke_viiid": invoke_viiid, "invoke_viififi": invoke_viififi, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_viid": invoke_viid, "invoke_idd": invoke_idd, "invoke_viiii": invoke_viiii, "_emscripten_asm_const_iiiii": _emscripten_asm_const_iiiii, "_emscripten_asm_const_iiidddddd": _emscripten_asm_const_iiidddddd, "_emscripten_asm_const_iiiid": _emscripten_asm_const_iiiid, "__nbind_reference_external": __nbind_reference_external, "_emscripten_asm_const_iiiiiiii": _emscripten_asm_const_iiiiiiii, "_removeAccessorPrefix": _removeAccessorPrefix, "_typeModule": _typeModule, "__nbind_register_pool": __nbind_register_pool, "__decorate": __decorate, "_llvm_stackrestore": _llvm_stackrestore, "___cxa_atexit": ___cxa_atexit, "__extends": __extends, "__nbind_get_value_object": __nbind_get_value_object, "__ZN8facebook4yoga14YGNodeToStringEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP6YGNode14YGPrintOptionsj": __ZN8facebook4yoga14YGNodeToStringEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP6YGNode14YGPrintOptionsj, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "__nbind_register_primitive": __nbind_register_primitive, "__nbind_register_type": __nbind_register_type, "_emscripten_memcpy_big": _emscripten_memcpy_big, "__nbind_register_function": __nbind_register_function, "___setErrNo": ___setErrNo, "__nbind_register_class": __nbind_register_class, "__nbind_finish": __nbind_finish, "_abort": _abort, "_nbind_value": _nbind_value, "_llvm_stacksave": _llvm_stacksave, "___syscall54": ___syscall54, "_defineHidden": _defineHidden, "_emscripten_set_main_loop": _emscripten_set_main_loop, "_emscripten_get_now": _emscripten_get_now, "__nbind_register_callback_signature": __nbind_register_callback_signature, "_emscripten_asm_const_iiiiii": _emscripten_asm_const_iiiiii, "__nbind_free_external": __nbind_free_external, "_emscripten_asm_const_iiii": _emscripten_asm_const_iiii, "_emscripten_asm_const_iiididi": _emscripten_asm_const_iiididi, "___syscall6": ___syscall6, "_atexit": _atexit, "___syscall140": ___syscall140, "___syscall146": ___syscall146, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "cttz_i8": cttz_i8, "___dso_handle": ___dso_handle };
        var asm = function(global2, env, buffer2) {
          ;
          var a = new global2.Int8Array(buffer2);
          var b = new global2.Int16Array(buffer2);
          var c = new global2.Int32Array(buffer2);
          var d = new global2.Uint8Array(buffer2);
          var e = new global2.Uint16Array(buffer2);
          var f = new global2.Uint32Array(buffer2);
          var g = new global2.Float32Array(buffer2);
          var h = new global2.Float64Array(buffer2);
          var i2 = env.DYNAMICTOP_PTR | 0;
          var j = env.tempDoublePtr | 0;
          var k = env.ABORT | 0;
          var l = env.STACKTOP | 0;
          var m = env.STACK_MAX | 0;
          var n = env.cttz_i8 | 0;
          var o = env.___dso_handle | 0;
          var p = 0;
          var q = 0;
          var r = 0;
          var s = 0;
          var t = global2.NaN, u = global2.Infinity;
          var v = 0, w = 0, x = 0, y = 0, z = 0;
          var A = 0;
          var B = global2.Math.floor;
          var C = global2.Math.abs;
          var D = global2.Math.sqrt;
          var E = global2.Math.pow;
          var F = global2.Math.cos;
          var G = global2.Math.sin;
          var H = global2.Math.tan;
          var I = global2.Math.acos;
          var J = global2.Math.asin;
          var K = global2.Math.atan;
          var L = global2.Math.atan2;
          var M = global2.Math.exp;
          var N = global2.Math.log;
          var O = global2.Math.ceil;
          var P = global2.Math.imul;
          var Q = global2.Math.min;
          var R = global2.Math.max;
          var S = global2.Math.clz32;
          var T = global2.Math.fround;
          var U = env.abort;
          var V = env.assert;
          var W = env.enlargeMemory;
          var X = env.getTotalMemory;
          var Y = env.abortOnCannotGrowMemory;
          var Z = env.invoke_viiiii;
          var _ = env.invoke_vif;
          var $ = env.invoke_vid;
          var aa = env.invoke_fiff;
          var ba = env.invoke_vi;
          var ca = env.invoke_vii;
          var da = env.invoke_ii;
          var ea = env.invoke_viddi;
          var fa = env.invoke_vidd;
          var ga = env.invoke_iiii;
          var ha = env.invoke_diii;
          var ia = env.invoke_di;
          var ja = env.invoke_iid;
          var ka = env.invoke_iii;
          var la = env.invoke_viiddi;
          var ma = env.invoke_viiiiii;
          var na = env.invoke_dii;
          var oa = env.invoke_i;
          var pa = env.invoke_iiiiii;
          var qa = env.invoke_viiid;
          var ra = env.invoke_viififi;
          var sa = env.invoke_viii;
          var ta = env.invoke_v;
          var ua = env.invoke_viid;
          var va = env.invoke_idd;
          var wa = env.invoke_viiii;
          var xa = env._emscripten_asm_const_iiiii;
          var ya = env._emscripten_asm_const_iiidddddd;
          var za = env._emscripten_asm_const_iiiid;
          var Aa = env.__nbind_reference_external;
          var Ba = env._emscripten_asm_const_iiiiiiii;
          var Ca = env._removeAccessorPrefix;
          var Da = env._typeModule;
          var Ea = env.__nbind_register_pool;
          var Fa = env.__decorate;
          var Ga = env._llvm_stackrestore;
          var Ha = env.___cxa_atexit;
          var Ia = env.__extends;
          var Ja = env.__nbind_get_value_object;
          var Ka = env.__ZN8facebook4yoga14YGNodeToStringEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP6YGNode14YGPrintOptionsj;
          var La = env._emscripten_set_main_loop_timing;
          var Ma = env.__nbind_register_primitive;
          var Na = env.__nbind_register_type;
          var Oa = env._emscripten_memcpy_big;
          var Pa = env.__nbind_register_function;
          var Qa = env.___setErrNo;
          var Ra = env.__nbind_register_class;
          var Sa = env.__nbind_finish;
          var Ta = env._abort;
          var Ua = env._nbind_value;
          var Va = env._llvm_stacksave;
          var Wa = env.___syscall54;
          var Xa = env._defineHidden;
          var Ya = env._emscripten_set_main_loop;
          var Za = env._emscripten_get_now;
          var _a2 = env.__nbind_register_callback_signature;
          var $a = env._emscripten_asm_const_iiiiii;
          var ab = env.__nbind_free_external;
          var bb = env._emscripten_asm_const_iiii;
          var cb2 = env._emscripten_asm_const_iiididi;
          var db = env.___syscall6;
          var eb = env._atexit;
          var fb = env.___syscall140;
          var gb = env.___syscall146;
          var hb = T(0);
          const ib = T(0);
          function Jb(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = l;
            l = l + a2 | 0;
            l = l + 15 & -16;
            return b2 | 0;
          }
          function Kb() {
            return l | 0;
          }
          function Lb(a2) {
            a2 = a2 | 0;
            l = a2;
          }
          function Mb(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            l = a2;
            m = b2;
          }
          function Nb(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (!p) {
              p = a2;
              q = b2;
            }
          }
          function Ob(a2) {
            a2 = a2 | 0;
            A = a2;
          }
          function Pb() {
            return A | 0;
          }
          function Qb() {
            var b2 = 0, d2 = 0;
            BC(8104, 8, 400) | 0;
            BC(8504, 408, 540) | 0;
            b2 = 9044;
            d2 = b2 + 44 | 0;
            do {
              c[b2 >> 2] = 0;
              b2 = b2 + 4 | 0;
            } while ((b2 | 0) < (d2 | 0));
            a[9088] = 0;
            a[9089] = 1;
            c[2273] = 0;
            c[2274] = 948;
            c[2275] = 948;
            Ha(17, 8104, o | 0) | 0;
            return;
          }
          function Rb(a2) {
            a2 = a2 | 0;
            oc(a2 + 948 | 0);
            return;
          }
          function Sb(a2) {
            a2 = T(a2);
            return ((af(a2) | 0) & 2147483647) >>> 0 > 2139095040 | 0;
          }
          function Tb(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            a:
              do
                if (!(c[a2 + (b2 << 3) + 4 >> 2] | 0)) {
                  if ((b2 | 2 | 0) == 3 ? c[a2 + 60 >> 2] | 0 : 0) {
                    a2 = a2 + 56 | 0;
                    break;
                  }
                  switch (b2 | 0) {
                    case 0:
                    case 2:
                    case 4:
                    case 5: {
                      if (c[a2 + 52 >> 2] | 0) {
                        a2 = a2 + 48 | 0;
                        break a;
                      }
                      break;
                    }
                    default: {
                    }
                  }
                  if (!(c[a2 + 68 >> 2] | 0)) {
                    a2 = (b2 | 1 | 0) == 5 ? 948 : d2;
                    break;
                  } else {
                    a2 = a2 + 64 | 0;
                    break;
                  }
                } else
                  a2 = a2 + (b2 << 3) | 0;
              while (0);
            return a2 | 0;
          }
          function Ub(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            d2 = oB(1e3) | 0;
            Vb(b2, (d2 | 0) != 0, 2456);
            c[2276] = (c[2276] | 0) + 1;
            BC(d2 | 0, 8104, 1e3) | 0;
            if (a[b2 + 2 >> 0] | 0) {
              c[d2 + 4 >> 2] = 2;
              c[d2 + 12 >> 2] = 4;
            }
            c[d2 + 976 >> 2] = b2;
            return d2 | 0;
          }
          function Vb(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            f2 = l;
            l = l + 16 | 0;
            e2 = f2;
            if (!b2) {
              c[e2 >> 2] = d2;
              fe(a2, 5, 3197, e2);
            }
            l = f2;
            return;
          }
          function Wb() {
            return Ub(956) | 0;
          }
          function Xb(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = qC(1e3) | 0;
            Yb(b2, a2);
            Vb(c[a2 + 976 >> 2] | 0, 1, 2456);
            c[2276] = (c[2276] | 0) + 1;
            c[b2 + 944 >> 2] = 0;
            return b2 | 0;
          }
          function Yb(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            BC(a2 | 0, b2 | 0, 948) | 0;
            ie(a2 + 948 | 0, b2 + 948 | 0);
            d2 = a2 + 960 | 0;
            a2 = b2 + 960 | 0;
            b2 = d2 + 40 | 0;
            do {
              c[d2 >> 2] = c[a2 >> 2];
              d2 = d2 + 4 | 0;
              a2 = a2 + 4 | 0;
            } while ((d2 | 0) < (b2 | 0));
            return;
          }
          function Zb(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0;
            b2 = a2 + 944 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 | 0) {
              _b(d2 + 948 | 0, a2) | 0;
              c[b2 >> 2] = 0;
            }
            d2 = $b(a2) | 0;
            if (d2 | 0) {
              b2 = 0;
              do {
                c[(ac(a2, b2) | 0) + 944 >> 2] = 0;
                b2 = b2 + 1 | 0;
              } while ((b2 | 0) != (d2 | 0));
            }
            d2 = a2 + 948 | 0;
            e2 = c[d2 >> 2] | 0;
            f2 = a2 + 952 | 0;
            b2 = c[f2 >> 2] | 0;
            if ((b2 | 0) != (e2 | 0))
              c[f2 >> 2] = b2 + (~((b2 + -4 - e2 | 0) >>> 2) << 2);
            bc(d2);
            pB(a2);
            c[2276] = (c[2276] | 0) + -1;
            return;
          }
          function _b(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = c[a2 >> 2] | 0;
            i3 = a2 + 4 | 0;
            d2 = c[i3 >> 2] | 0;
            g2 = d2;
            a:
              do
                if ((e2 | 0) == (d2 | 0)) {
                  f2 = e2;
                  h2 = 4;
                } else {
                  a2 = e2;
                  while (1) {
                    if ((c[a2 >> 2] | 0) == (b2 | 0)) {
                      f2 = a2;
                      h2 = 4;
                      break a;
                    }
                    a2 = a2 + 4 | 0;
                    if ((a2 | 0) == (d2 | 0)) {
                      a2 = 0;
                      break;
                    }
                  }
                }
              while (0);
            if ((h2 | 0) == 4)
              if ((f2 | 0) != (d2 | 0)) {
                e2 = f2 + 4 | 0;
                a2 = g2 - e2 | 0;
                b2 = a2 >> 2;
                if (b2) {
                  GC(f2 | 0, e2 | 0, a2 | 0) | 0;
                  d2 = c[i3 >> 2] | 0;
                }
                a2 = f2 + (b2 << 2) | 0;
                if ((d2 | 0) == (a2 | 0))
                  a2 = 1;
                else {
                  c[i3 >> 2] = d2 + (~((d2 + -4 - a2 | 0) >>> 2) << 2);
                  a2 = 1;
                }
              } else
                a2 = 0;
            return a2 | 0;
          }
          function $b(a2) {
            a2 = a2 | 0;
            return (c[a2 + 952 >> 2] | 0) - (c[a2 + 948 >> 2] | 0) >> 2 | 0;
          }
          function ac(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = c[a2 + 948 >> 2] | 0;
            if ((c[a2 + 952 >> 2] | 0) - d2 >> 2 >>> 0 > b2 >>> 0)
              a2 = c[d2 + (b2 << 2) >> 2] | 0;
            else
              a2 = 0;
            return a2 | 0;
          }
          function bc(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0;
            e2 = l;
            l = l + 32 | 0;
            b2 = e2;
            f2 = c[a2 >> 2] | 0;
            d2 = (c[a2 + 4 >> 2] | 0) - f2 | 0;
            if (((c[a2 + 8 >> 2] | 0) - f2 | 0) >>> 0 > d2 >>> 0) {
              f2 = d2 >> 2;
              bf(b2, f2, f2, a2 + 8 | 0);
              cf(a2, b2);
              df(b2);
            }
            l = e2;
            return;
          }
          function cc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0;
            k2 = $b(a2) | 0;
            do
              if (k2 | 0) {
                if ((c[(ac(a2, 0) | 0) + 944 >> 2] | 0) == (a2 | 0)) {
                  if (!(_b(a2 + 948 | 0, b2) | 0))
                    break;
                  BC(b2 + 400 | 0, 8504, 540) | 0;
                  c[b2 + 944 >> 2] = 0;
                  nc(a2);
                  break;
                }
                h2 = c[(c[a2 + 976 >> 2] | 0) + 12 >> 2] | 0;
                i3 = a2 + 948 | 0;
                j2 = (h2 | 0) == 0;
                d2 = 0;
                g2 = 0;
                do {
                  e2 = c[(c[i3 >> 2] | 0) + (g2 << 2) >> 2] | 0;
                  if ((e2 | 0) == (b2 | 0))
                    nc(a2);
                  else {
                    f2 = Xb(e2) | 0;
                    c[(c[i3 >> 2] | 0) + (d2 << 2) >> 2] = f2;
                    c[f2 + 944 >> 2] = a2;
                    if (!j2)
                      Ib[h2 & 15](e2, f2, a2, d2);
                    d2 = d2 + 1 | 0;
                  }
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (k2 | 0));
                if (d2 >>> 0 < k2 >>> 0) {
                  j2 = a2 + 948 | 0;
                  i3 = a2 + 952 | 0;
                  h2 = d2;
                  d2 = c[i3 >> 2] | 0;
                  do {
                    g2 = (c[j2 >> 2] | 0) + (h2 << 2) | 0;
                    e2 = g2 + 4 | 0;
                    f2 = d2 - e2 | 0;
                    b2 = f2 >> 2;
                    if (!b2)
                      f2 = d2;
                    else {
                      GC(g2 | 0, e2 | 0, f2 | 0) | 0;
                      d2 = c[i3 >> 2] | 0;
                      f2 = d2;
                    }
                    e2 = g2 + (b2 << 2) | 0;
                    if ((f2 | 0) != (e2 | 0)) {
                      d2 = f2 + (~((f2 + -4 - e2 | 0) >>> 2) << 2) | 0;
                      c[i3 >> 2] = d2;
                    }
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (k2 | 0));
                }
              }
            while (0);
            return;
          }
          function dc(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            ec(b2, ($b(b2) | 0) == 0, 2491);
            ec(b2, (c[b2 + 944 >> 2] | 0) == 0, 2545);
            d2 = b2 + 948 | 0;
            e2 = c[d2 >> 2] | 0;
            f2 = b2 + 952 | 0;
            g2 = c[f2 >> 2] | 0;
            if ((g2 | 0) != (e2 | 0))
              c[f2 >> 2] = g2 + (~((g2 + -4 - e2 | 0) >>> 2) << 2);
            bc(d2);
            d2 = b2 + 976 | 0;
            e2 = c[d2 >> 2] | 0;
            BC(b2 | 0, 8104, 1e3) | 0;
            if (a[e2 + 2 >> 0] | 0) {
              c[b2 + 4 >> 2] = 2;
              c[b2 + 12 >> 2] = 4;
            }
            c[d2 >> 2] = e2;
            return;
          }
          function ec(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            f2 = l;
            l = l + 16 | 0;
            e2 = f2;
            if (!b2) {
              c[e2 >> 2] = d2;
              Vd(a2, 5, 3197, e2);
            }
            l = f2;
            return;
          }
          function fc() {
            return c[2276] | 0;
          }
          function gc() {
            var a2 = 0;
            a2 = oB(20) | 0;
            hc((a2 | 0) != 0, 2592);
            c[2277] = (c[2277] | 0) + 1;
            c[a2 >> 2] = c[239];
            c[a2 + 4 >> 2] = c[240];
            c[a2 + 8 >> 2] = c[241];
            c[a2 + 12 >> 2] = c[242];
            c[a2 + 16 >> 2] = c[243];
            return a2 | 0;
          }
          function hc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            e2 = l;
            l = l + 16 | 0;
            d2 = e2;
            if (!a2) {
              c[d2 >> 2] = b2;
              Vd(0, 5, 3197, d2);
            }
            l = e2;
            return;
          }
          function ic(a2) {
            a2 = a2 | 0;
            pB(a2);
            c[2277] = (c[2277] | 0) + -1;
            return;
          }
          function jc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            if (!b2) {
              d2 = 0;
              b2 = 0;
            } else {
              ec(a2, ($b(a2) | 0) == 0, 2629);
              d2 = 1;
            }
            c[a2 + 964 >> 2] = b2;
            c[a2 + 988 >> 2] = d2;
            return;
          }
          function kc(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            g2 = e2 + 8 | 0;
            f2 = e2 + 4 | 0;
            h2 = e2;
            c[f2 >> 2] = b2;
            ec(a2, (c[b2 + 944 >> 2] | 0) == 0, 2709);
            ec(a2, (c[a2 + 964 >> 2] | 0) == 0, 2763);
            lc(a2);
            b2 = a2 + 948 | 0;
            c[h2 >> 2] = (c[b2 >> 2] | 0) + (d2 << 2);
            c[g2 >> 2] = c[h2 >> 2];
            mc(b2, g2, f2) | 0;
            c[(c[f2 >> 2] | 0) + 944 >> 2] = a2;
            nc(a2);
            l = e2;
            return;
          }
          function lc(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            d2 = $b(a2) | 0;
            if (d2 | 0 ? (c[(ac(a2, 0) | 0) + 944 >> 2] | 0) != (a2 | 0) : 0) {
              e2 = c[(c[a2 + 976 >> 2] | 0) + 12 >> 2] | 0;
              f2 = a2 + 948 | 0;
              g2 = (e2 | 0) == 0;
              b2 = 0;
              do {
                h2 = c[(c[f2 >> 2] | 0) + (b2 << 2) >> 2] | 0;
                i3 = Xb(h2) | 0;
                c[(c[f2 >> 2] | 0) + (b2 << 2) >> 2] = i3;
                c[i3 + 944 >> 2] = a2;
                if (!g2)
                  Ib[e2 & 15](h2, i3, a2, b2);
                b2 = b2 + 1 | 0;
              } while ((b2 | 0) != (d2 | 0));
            }
            return;
          }
          function mc(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
            s2 = l;
            l = l + 64 | 0;
            n2 = s2 + 52 | 0;
            i3 = s2 + 48 | 0;
            o2 = s2 + 28 | 0;
            p2 = s2 + 24 | 0;
            q2 = s2 + 20 | 0;
            r2 = s2;
            e2 = c[a2 >> 2] | 0;
            g2 = e2;
            b2 = e2 + ((c[b2 >> 2] | 0) - g2 >> 2 << 2) | 0;
            e2 = a2 + 4 | 0;
            f2 = c[e2 >> 2] | 0;
            h2 = a2 + 8 | 0;
            do
              if (f2 >>> 0 < (c[h2 >> 2] | 0) >>> 0) {
                if ((b2 | 0) == (f2 | 0)) {
                  c[b2 >> 2] = c[d2 >> 2];
                  c[e2 >> 2] = (c[e2 >> 2] | 0) + 4;
                  break;
                }
                ef(a2, b2, f2, b2 + 4 | 0);
                if (b2 >>> 0 <= d2 >>> 0)
                  d2 = (c[e2 >> 2] | 0) >>> 0 > d2 >>> 0 ? d2 + 4 | 0 : d2;
                c[b2 >> 2] = c[d2 >> 2];
              } else {
                e2 = (f2 - g2 >> 2) + 1 | 0;
                f2 = le(a2) | 0;
                if (f2 >>> 0 < e2 >>> 0)
                  jC(a2);
                m2 = c[a2 >> 2] | 0;
                k2 = (c[h2 >> 2] | 0) - m2 | 0;
                g2 = k2 >> 1;
                bf(r2, k2 >> 2 >>> 0 < f2 >>> 1 >>> 0 ? g2 >>> 0 < e2 >>> 0 ? e2 : g2 : f2, b2 - m2 >> 2, a2 + 8 | 0);
                m2 = r2 + 8 | 0;
                e2 = c[m2 >> 2] | 0;
                g2 = r2 + 12 | 0;
                k2 = c[g2 >> 2] | 0;
                h2 = k2;
                j2 = e2;
                do
                  if ((e2 | 0) == (k2 | 0)) {
                    k2 = r2 + 4 | 0;
                    e2 = c[k2 >> 2] | 0;
                    t2 = c[r2 >> 2] | 0;
                    f2 = t2;
                    if (e2 >>> 0 <= t2 >>> 0) {
                      e2 = h2 - f2 >> 1;
                      e2 = (e2 | 0) == 0 ? 1 : e2;
                      bf(o2, e2, e2 >>> 2, c[r2 + 16 >> 2] | 0);
                      c[p2 >> 2] = c[k2 >> 2];
                      c[q2 >> 2] = c[m2 >> 2];
                      c[i3 >> 2] = c[p2 >> 2];
                      c[n2 >> 2] = c[q2 >> 2];
                      gf(o2, i3, n2);
                      e2 = c[r2 >> 2] | 0;
                      c[r2 >> 2] = c[o2 >> 2];
                      c[o2 >> 2] = e2;
                      e2 = o2 + 4 | 0;
                      t2 = c[k2 >> 2] | 0;
                      c[k2 >> 2] = c[e2 >> 2];
                      c[e2 >> 2] = t2;
                      e2 = o2 + 8 | 0;
                      t2 = c[m2 >> 2] | 0;
                      c[m2 >> 2] = c[e2 >> 2];
                      c[e2 >> 2] = t2;
                      e2 = o2 + 12 | 0;
                      t2 = c[g2 >> 2] | 0;
                      c[g2 >> 2] = c[e2 >> 2];
                      c[e2 >> 2] = t2;
                      df(o2);
                      e2 = c[m2 >> 2] | 0;
                      break;
                    }
                    g2 = e2;
                    h2 = ((g2 - f2 >> 2) + 1 | 0) / -2 | 0;
                    i3 = e2 + (h2 << 2) | 0;
                    f2 = j2 - g2 | 0;
                    g2 = f2 >> 2;
                    if (g2) {
                      GC(i3 | 0, e2 | 0, f2 | 0) | 0;
                      e2 = c[k2 >> 2] | 0;
                    }
                    t2 = i3 + (g2 << 2) | 0;
                    c[m2 >> 2] = t2;
                    c[k2 >> 2] = e2 + (h2 << 2);
                    e2 = t2;
                  }
                while (0);
                c[e2 >> 2] = c[d2 >> 2];
                c[m2 >> 2] = (c[m2 >> 2] | 0) + 4;
                b2 = ff(a2, r2, b2) | 0;
                df(r2);
              }
            while (0);
            l = s2;
            return b2 | 0;
          }
          function nc(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            do {
              d2 = b2 + 984 | 0;
              if (a[d2 >> 0] | 0)
                break;
              a[d2 >> 0] = 1;
              g[b2 + 504 >> 2] = T(t);
              b2 = c[b2 + 944 >> 2] | 0;
            } while ((b2 | 0) != 0);
            return;
          }
          function oc(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -4 - e2 | 0) >>> 2) << 2);
              sC(d2);
            }
            return;
          }
          function pc(a2) {
            a2 = a2 | 0;
            return c[a2 + 944 >> 2] | 0;
          }
          function qc(a2) {
            a2 = a2 | 0;
            ec(a2, (c[a2 + 964 >> 2] | 0) != 0, 2832);
            nc(a2);
            return;
          }
          function rc(b2) {
            b2 = b2 | 0;
            return (a[b2 + 984 >> 0] | 0) != 0 | 0;
          }
          function sc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (BB(a2, b2, 400) | 0) {
              BC(a2 | 0, b2 | 0, 400) | 0;
              nc(a2);
            }
            return;
          }
          function tc(a2) {
            a2 = a2 | 0;
            var b2 = ib;
            b2 = T(g[a2 + 44 >> 2]);
            a2 = Sb(b2) | 0;
            return T(a2 ? T(0) : b2);
          }
          function uc(b2) {
            b2 = b2 | 0;
            var d2 = ib;
            d2 = T(g[b2 + 48 >> 2]);
            if (Sb(d2) | 0)
              d2 = a[(c[b2 + 976 >> 2] | 0) + 2 >> 0] | 0 ? T(1) : T(0);
            return T(d2);
          }
          function vc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 980 >> 2] = b2;
            return;
          }
          function wc(a2) {
            a2 = a2 | 0;
            return c[a2 + 980 >> 2] | 0;
          }
          function xc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = a2 + 4 | 0;
            if ((c[d2 >> 2] | 0) != (b2 | 0)) {
              c[d2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function yc(a2) {
            a2 = a2 | 0;
            return c[a2 + 4 >> 2] | 0;
          }
          function zc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = a2 + 8 | 0;
            if ((c[d2 >> 2] | 0) != (b2 | 0)) {
              c[d2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function Ac(a2) {
            a2 = a2 | 0;
            return c[a2 + 8 >> 2] | 0;
          }
          function Bc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = a2 + 12 | 0;
            if ((c[d2 >> 2] | 0) != (b2 | 0)) {
              c[d2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function Cc(a2) {
            a2 = a2 | 0;
            return c[a2 + 12 >> 2] | 0;
          }
          function Dc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = a2 + 16 | 0;
            if ((c[d2 >> 2] | 0) != (b2 | 0)) {
              c[d2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function Ec(a2) {
            a2 = a2 | 0;
            return c[a2 + 16 >> 2] | 0;
          }
          function Fc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = a2 + 20 | 0;
            if ((c[d2 >> 2] | 0) != (b2 | 0)) {
              c[d2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function Gc(a2) {
            a2 = a2 | 0;
            return c[a2 + 20 >> 2] | 0;
          }
          function Hc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = a2 + 24 | 0;
            if ((c[d2 >> 2] | 0) != (b2 | 0)) {
              c[d2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function Ic(a2) {
            a2 = a2 | 0;
            return c[a2 + 24 >> 2] | 0;
          }
          function Jc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = a2 + 28 | 0;
            if ((c[d2 >> 2] | 0) != (b2 | 0)) {
              c[d2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function Kc(a2) {
            a2 = a2 | 0;
            return c[a2 + 28 >> 2] | 0;
          }
          function Lc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = a2 + 32 | 0;
            if ((c[d2 >> 2] | 0) != (b2 | 0)) {
              c[d2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function Mc(a2) {
            a2 = a2 | 0;
            return c[a2 + 32 >> 2] | 0;
          }
          function Nc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = a2 + 36 | 0;
            if ((c[d2 >> 2] | 0) != (b2 | 0)) {
              c[d2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function Oc(a2) {
            a2 = a2 | 0;
            return c[a2 + 36 >> 2] | 0;
          }
          function Pc(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var c2 = 0;
            c2 = a2 + 40 | 0;
            if (T(g[c2 >> 2]) != b2) {
              g[c2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function Qc(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var c2 = 0;
            c2 = a2 + 44 | 0;
            if (T(g[c2 >> 2]) != b2) {
              g[c2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function Rc(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var c2 = 0;
            c2 = a2 + 48 | 0;
            if (T(g[c2 >> 2]) != b2) {
              g[c2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function Sc(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(b2) | 0;
            d2 = (h2 ^ 1) & 1;
            e2 = a2 + 52 | 0;
            f2 = a2 + 56 | 0;
            if (!(h2 | T(g[e2 >> 2]) == b2 ? (c[f2 >> 2] | 0) == (d2 | 0) : 0)) {
              g[e2 >> 2] = b2;
              c[f2 >> 2] = d2;
              nc(a2);
            }
            return;
          }
          function Tc(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0;
            e2 = a2 + 52 | 0;
            d2 = a2 + 56 | 0;
            if (!(!(T(g[e2 >> 2]) != b2) ? (c[d2 >> 2] | 0) == 2 : 0)) {
              g[e2 >> 2] = b2;
              e2 = Sb(b2) | 0;
              c[d2 >> 2] = e2 ? 3 : 2;
              nc(a2);
            }
            return;
          }
          function Uc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            e2 = b2 + 52 | 0;
            d2 = c[e2 + 4 >> 2] | 0;
            b2 = a2;
            c[b2 >> 2] = c[e2 >> 2];
            c[b2 + 4 >> 2] = d2;
            return;
          }
          function Vc(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(d2) | 0;
            e2 = (h2 ^ 1) & 1;
            f2 = a2 + 132 + (b2 << 3) | 0;
            b2 = a2 + 132 + (b2 << 3) + 4 | 0;
            if (!(h2 | T(g[f2 >> 2]) == d2 ? (c[b2 >> 2] | 0) == (e2 | 0) : 0)) {
              g[f2 >> 2] = d2;
              c[b2 >> 2] = e2;
              nc(a2);
            }
            return;
          }
          function Wc(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(d2) | 0;
            e2 = h2 ? 0 : 2;
            f2 = a2 + 132 + (b2 << 3) | 0;
            b2 = a2 + 132 + (b2 << 3) + 4 | 0;
            if (!(h2 | T(g[f2 >> 2]) == d2 ? (c[b2 >> 2] | 0) == (e2 | 0) : 0)) {
              g[f2 >> 2] = d2;
              c[b2 >> 2] = e2;
              nc(a2);
            }
            return;
          }
          function Xc(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = b2 + 132 + (d2 << 3) | 0;
            b2 = c[e2 + 4 >> 2] | 0;
            d2 = a2;
            c[d2 >> 2] = c[e2 >> 2];
            c[d2 + 4 >> 2] = b2;
            return;
          }
          function Yc(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(d2) | 0;
            e2 = (h2 ^ 1) & 1;
            f2 = a2 + 60 + (b2 << 3) | 0;
            b2 = a2 + 60 + (b2 << 3) + 4 | 0;
            if (!(h2 | T(g[f2 >> 2]) == d2 ? (c[b2 >> 2] | 0) == (e2 | 0) : 0)) {
              g[f2 >> 2] = d2;
              c[b2 >> 2] = e2;
              nc(a2);
            }
            return;
          }
          function Zc(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(d2) | 0;
            e2 = h2 ? 0 : 2;
            f2 = a2 + 60 + (b2 << 3) | 0;
            b2 = a2 + 60 + (b2 << 3) + 4 | 0;
            if (!(h2 | T(g[f2 >> 2]) == d2 ? (c[b2 >> 2] | 0) == (e2 | 0) : 0)) {
              g[f2 >> 2] = d2;
              c[b2 >> 2] = e2;
              nc(a2);
            }
            return;
          }
          function _c(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = b2 + 60 + (d2 << 3) | 0;
            b2 = c[e2 + 4 >> 2] | 0;
            d2 = a2;
            c[d2 >> 2] = c[e2 >> 2];
            c[d2 + 4 >> 2] = b2;
            return;
          }
          function $c(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = a2 + 60 + (b2 << 3) + 4 | 0;
            if ((c[d2 >> 2] | 0) != 3) {
              g[a2 + 60 + (b2 << 3) >> 2] = T(t);
              c[d2 >> 2] = 3;
              nc(a2);
            }
            return;
          }
          function ad(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(d2) | 0;
            e2 = (h2 ^ 1) & 1;
            f2 = a2 + 204 + (b2 << 3) | 0;
            b2 = a2 + 204 + (b2 << 3) + 4 | 0;
            if (!(h2 | T(g[f2 >> 2]) == d2 ? (c[b2 >> 2] | 0) == (e2 | 0) : 0)) {
              g[f2 >> 2] = d2;
              c[b2 >> 2] = e2;
              nc(a2);
            }
            return;
          }
          function bd(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(d2) | 0;
            e2 = h2 ? 0 : 2;
            f2 = a2 + 204 + (b2 << 3) | 0;
            b2 = a2 + 204 + (b2 << 3) + 4 | 0;
            if (!(h2 | T(g[f2 >> 2]) == d2 ? (c[b2 >> 2] | 0) == (e2 | 0) : 0)) {
              g[f2 >> 2] = d2;
              c[b2 >> 2] = e2;
              nc(a2);
            }
            return;
          }
          function cd(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = b2 + 204 + (d2 << 3) | 0;
            b2 = c[e2 + 4 >> 2] | 0;
            d2 = a2;
            c[d2 >> 2] = c[e2 >> 2];
            c[d2 + 4 >> 2] = b2;
            return;
          }
          function dd(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(d2) | 0;
            e2 = (h2 ^ 1) & 1;
            f2 = a2 + 276 + (b2 << 3) | 0;
            b2 = a2 + 276 + (b2 << 3) + 4 | 0;
            if (!(h2 | T(g[f2 >> 2]) == d2 ? (c[b2 >> 2] | 0) == (e2 | 0) : 0)) {
              g[f2 >> 2] = d2;
              c[b2 >> 2] = e2;
              nc(a2);
            }
            return;
          }
          function ed(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return T(g[a2 + 276 + (b2 << 3) >> 2]);
          }
          function fd(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(b2) | 0;
            d2 = (h2 ^ 1) & 1;
            e2 = a2 + 348 | 0;
            f2 = a2 + 352 | 0;
            if (!(h2 | T(g[e2 >> 2]) == b2 ? (c[f2 >> 2] | 0) == (d2 | 0) : 0)) {
              g[e2 >> 2] = b2;
              c[f2 >> 2] = d2;
              nc(a2);
            }
            return;
          }
          function gd(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0;
            e2 = a2 + 348 | 0;
            d2 = a2 + 352 | 0;
            if (!(!(T(g[e2 >> 2]) != b2) ? (c[d2 >> 2] | 0) == 2 : 0)) {
              g[e2 >> 2] = b2;
              e2 = Sb(b2) | 0;
              c[d2 >> 2] = e2 ? 3 : 2;
              nc(a2);
            }
            return;
          }
          function hd(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = a2 + 352 | 0;
            if ((c[b2 >> 2] | 0) != 3) {
              g[a2 + 348 >> 2] = T(t);
              c[b2 >> 2] = 3;
              nc(a2);
            }
            return;
          }
          function id(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            e2 = b2 + 348 | 0;
            d2 = c[e2 + 4 >> 2] | 0;
            b2 = a2;
            c[b2 >> 2] = c[e2 >> 2];
            c[b2 + 4 >> 2] = d2;
            return;
          }
          function jd(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(b2) | 0;
            d2 = (h2 ^ 1) & 1;
            e2 = a2 + 356 | 0;
            f2 = a2 + 360 | 0;
            if (!(h2 | T(g[e2 >> 2]) == b2 ? (c[f2 >> 2] | 0) == (d2 | 0) : 0)) {
              g[e2 >> 2] = b2;
              c[f2 >> 2] = d2;
              nc(a2);
            }
            return;
          }
          function kd(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0;
            e2 = a2 + 356 | 0;
            d2 = a2 + 360 | 0;
            if (!(!(T(g[e2 >> 2]) != b2) ? (c[d2 >> 2] | 0) == 2 : 0)) {
              g[e2 >> 2] = b2;
              e2 = Sb(b2) | 0;
              c[d2 >> 2] = e2 ? 3 : 2;
              nc(a2);
            }
            return;
          }
          function ld(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = a2 + 360 | 0;
            if ((c[b2 >> 2] | 0) != 3) {
              g[a2 + 356 >> 2] = T(t);
              c[b2 >> 2] = 3;
              nc(a2);
            }
            return;
          }
          function md(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            e2 = b2 + 356 | 0;
            d2 = c[e2 + 4 >> 2] | 0;
            b2 = a2;
            c[b2 >> 2] = c[e2 >> 2];
            c[b2 + 4 >> 2] = d2;
            return;
          }
          function nd(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(b2) | 0;
            d2 = (h2 ^ 1) & 1;
            e2 = a2 + 364 | 0;
            f2 = a2 + 368 | 0;
            if (!(h2 | T(g[e2 >> 2]) == b2 ? (c[f2 >> 2] | 0) == (d2 | 0) : 0)) {
              g[e2 >> 2] = b2;
              c[f2 >> 2] = d2;
              nc(a2);
            }
            return;
          }
          function od(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(b2) | 0;
            d2 = h2 ? 0 : 2;
            e2 = a2 + 364 | 0;
            f2 = a2 + 368 | 0;
            if (!(h2 | T(g[e2 >> 2]) == b2 ? (c[f2 >> 2] | 0) == (d2 | 0) : 0)) {
              g[e2 >> 2] = b2;
              c[f2 >> 2] = d2;
              nc(a2);
            }
            return;
          }
          function pd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            e2 = b2 + 364 | 0;
            d2 = c[e2 + 4 >> 2] | 0;
            b2 = a2;
            c[b2 >> 2] = c[e2 >> 2];
            c[b2 + 4 >> 2] = d2;
            return;
          }
          function qd(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(b2) | 0;
            d2 = (h2 ^ 1) & 1;
            e2 = a2 + 372 | 0;
            f2 = a2 + 376 | 0;
            if (!(h2 | T(g[e2 >> 2]) == b2 ? (c[f2 >> 2] | 0) == (d2 | 0) : 0)) {
              g[e2 >> 2] = b2;
              c[f2 >> 2] = d2;
              nc(a2);
            }
            return;
          }
          function rd(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(b2) | 0;
            d2 = h2 ? 0 : 2;
            e2 = a2 + 372 | 0;
            f2 = a2 + 376 | 0;
            if (!(h2 | T(g[e2 >> 2]) == b2 ? (c[f2 >> 2] | 0) == (d2 | 0) : 0)) {
              g[e2 >> 2] = b2;
              c[f2 >> 2] = d2;
              nc(a2);
            }
            return;
          }
          function sd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            e2 = b2 + 372 | 0;
            d2 = c[e2 + 4 >> 2] | 0;
            b2 = a2;
            c[b2 >> 2] = c[e2 >> 2];
            c[b2 + 4 >> 2] = d2;
            return;
          }
          function td(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(b2) | 0;
            d2 = (h2 ^ 1) & 1;
            e2 = a2 + 380 | 0;
            f2 = a2 + 384 | 0;
            if (!(h2 | T(g[e2 >> 2]) == b2 ? (c[f2 >> 2] | 0) == (d2 | 0) : 0)) {
              g[e2 >> 2] = b2;
              c[f2 >> 2] = d2;
              nc(a2);
            }
            return;
          }
          function ud(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(b2) | 0;
            d2 = h2 ? 0 : 2;
            e2 = a2 + 380 | 0;
            f2 = a2 + 384 | 0;
            if (!(h2 | T(g[e2 >> 2]) == b2 ? (c[f2 >> 2] | 0) == (d2 | 0) : 0)) {
              g[e2 >> 2] = b2;
              c[f2 >> 2] = d2;
              nc(a2);
            }
            return;
          }
          function vd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            e2 = b2 + 380 | 0;
            d2 = c[e2 + 4 >> 2] | 0;
            b2 = a2;
            c[b2 >> 2] = c[e2 >> 2];
            c[b2 + 4 >> 2] = d2;
            return;
          }
          function wd(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(b2) | 0;
            d2 = (h2 ^ 1) & 1;
            e2 = a2 + 388 | 0;
            f2 = a2 + 392 | 0;
            if (!(h2 | T(g[e2 >> 2]) == b2 ? (c[f2 >> 2] | 0) == (d2 | 0) : 0)) {
              g[e2 >> 2] = b2;
              c[f2 >> 2] = d2;
              nc(a2);
            }
            return;
          }
          function xd(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = Sb(b2) | 0;
            d2 = h2 ? 0 : 2;
            e2 = a2 + 388 | 0;
            f2 = a2 + 392 | 0;
            if (!(h2 | T(g[e2 >> 2]) == b2 ? (c[f2 >> 2] | 0) == (d2 | 0) : 0)) {
              g[e2 >> 2] = b2;
              c[f2 >> 2] = d2;
              nc(a2);
            }
            return;
          }
          function yd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            e2 = b2 + 388 | 0;
            d2 = c[e2 + 4 >> 2] | 0;
            b2 = a2;
            c[b2 >> 2] = c[e2 >> 2];
            c[b2 + 4 >> 2] = d2;
            return;
          }
          function zd(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var c2 = 0;
            c2 = a2 + 396 | 0;
            if (T(g[c2 >> 2]) != b2) {
              g[c2 >> 2] = b2;
              nc(a2);
            }
            return;
          }
          function Ad(a2) {
            a2 = a2 | 0;
            return T(g[a2 + 396 >> 2]);
          }
          function Bd(a2) {
            a2 = a2 | 0;
            return T(g[a2 + 400 >> 2]);
          }
          function Cd(a2) {
            a2 = a2 | 0;
            return T(g[a2 + 404 >> 2]);
          }
          function Dd(a2) {
            a2 = a2 | 0;
            return T(g[a2 + 408 >> 2]);
          }
          function Ed(a2) {
            a2 = a2 | 0;
            return T(g[a2 + 412 >> 2]);
          }
          function Fd(a2) {
            a2 = a2 | 0;
            return T(g[a2 + 416 >> 2]);
          }
          function Gd(a2) {
            a2 = a2 | 0;
            return T(g[a2 + 420 >> 2]);
          }
          function Hd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            ec(a2, (b2 | 0) < 6, 2918);
            switch (b2 | 0) {
              case 0: {
                b2 = (c[a2 + 496 >> 2] | 0) == 2 ? 5 : 4;
                break;
              }
              case 2: {
                b2 = (c[a2 + 496 >> 2] | 0) == 2 ? 4 : 5;
                break;
              }
              default: {
              }
            }
            return T(g[a2 + 424 + (b2 << 2) >> 2]);
          }
          function Id(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            ec(a2, (b2 | 0) < 6, 2918);
            switch (b2 | 0) {
              case 0: {
                b2 = (c[a2 + 496 >> 2] | 0) == 2 ? 5 : 4;
                break;
              }
              case 2: {
                b2 = (c[a2 + 496 >> 2] | 0) == 2 ? 4 : 5;
                break;
              }
              default: {
              }
            }
            return T(g[a2 + 448 + (b2 << 2) >> 2]);
          }
          function Jd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            ec(a2, (b2 | 0) < 6, 2918);
            switch (b2 | 0) {
              case 0: {
                b2 = (c[a2 + 496 >> 2] | 0) == 2 ? 5 : 4;
                break;
              }
              case 2: {
                b2 = (c[a2 + 496 >> 2] | 0) == 2 ? 4 : 5;
                break;
              }
              default: {
              }
            }
            return T(g[a2 + 472 + (b2 << 2) >> 2]);
          }
          function Kd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = ib;
            d2 = c[a2 + 4 >> 2] | 0;
            if ((d2 | 0) == (c[b2 + 4 >> 2] | 0)) {
              if (!d2)
                a2 = 1;
              else {
                e2 = T(g[a2 >> 2]);
                a2 = T(C(T(e2 - T(g[b2 >> 2])))) < T(999999974e-13);
              }
            } else
              a2 = 0;
            return a2 | 0;
          }
          function Ld(a2, b2) {
            a2 = T(a2);
            b2 = T(b2);
            var c2 = 0;
            if (Sb(a2) | 0)
              c2 = Sb(b2) | 0;
            else
              c2 = T(C(T(a2 - b2))) < T(999999974e-13);
            return c2 | 0;
          }
          function Md(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Nd(a2, b2);
            return;
          }
          function Nd(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 4 | 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            Ka(f2 | 0, b2 | 0, d2 | 0, 0);
            Vd(b2, 3, (a[f2 + 11 >> 0] | 0) < 0 ? c[f2 >> 2] | 0 : f2, e2);
            tC(f2);
            l = e2;
            return;
          }
          function Od(a2, b2, c2, d2) {
            a2 = T(a2);
            b2 = T(b2);
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = ib;
            a2 = T(a2 * b2);
            e2 = T(gC(a2, T(1)));
            do
              if (!(Ld(e2, T(0)) | 0)) {
                a2 = T(a2 - e2);
                if (Ld(e2, T(1)) | 0) {
                  a2 = T(a2 + T(1));
                  break;
                }
                if (c2) {
                  a2 = T(a2 + T(1));
                  break;
                }
                if (!d2) {
                  if (e2 > T(0.5))
                    e2 = T(1);
                  else {
                    d2 = Ld(e2, T(0.5)) | 0;
                    e2 = d2 ? T(1) : T(0);
                  }
                  a2 = T(a2 + e2);
                }
              } else
                a2 = T(a2 - e2);
            while (0);
            return T(a2 / b2);
          }
          function Pd(a2, b2, c2, d2, e2, f2, h2, i3, j2, k2, l2, m2, n2) {
            a2 = a2 | 0;
            b2 = T(b2);
            c2 = c2 | 0;
            d2 = T(d2);
            e2 = e2 | 0;
            f2 = T(f2);
            h2 = h2 | 0;
            i3 = T(i3);
            j2 = T(j2);
            k2 = T(k2);
            l2 = T(l2);
            m2 = T(m2);
            n2 = n2 | 0;
            var o2 = 0, p2 = ib, q2 = ib, r2 = ib, s2 = ib, t2 = ib, u2 = ib;
            if (j2 < T(0) | k2 < T(0))
              n2 = 0;
            else {
              if ((n2 | 0) != 0 ? (p2 = T(g[n2 + 4 >> 2]), p2 != T(0)) : 0) {
                r2 = T(Od(b2, p2, 0, 0));
                s2 = T(Od(d2, p2, 0, 0));
                q2 = T(Od(f2, p2, 0, 0));
                p2 = T(Od(i3, p2, 0, 0));
              } else {
                q2 = f2;
                r2 = b2;
                p2 = i3;
                s2 = d2;
              }
              if ((e2 | 0) == (a2 | 0))
                o2 = Ld(q2, r2) | 0;
              else
                o2 = 0;
              if ((h2 | 0) == (c2 | 0))
                n2 = Ld(p2, s2) | 0;
              else
                n2 = 0;
              if ((!o2 ? (t2 = T(b2 - l2), !(Qd(a2, t2, j2) | 0)) : 0) ? !(Rd(a2, t2, e2, j2) | 0) : 0)
                o2 = Sd(a2, t2, e2, f2, j2) | 0;
              else
                o2 = 1;
              if ((!n2 ? (u2 = T(d2 - m2), !(Qd(c2, u2, k2) | 0)) : 0) ? !(Rd(c2, u2, h2, k2) | 0) : 0)
                n2 = Sd(c2, u2, h2, i3, k2) | 0;
              else
                n2 = 1;
              n2 = o2 & n2;
            }
            return n2 | 0;
          }
          function Qd(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = T(b2);
            c2 = T(c2);
            if ((a2 | 0) == 1)
              a2 = Ld(b2, c2) | 0;
            else
              a2 = 0;
            return a2 | 0;
          }
          function Rd(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = T(b2);
            c2 = c2 | 0;
            d2 = T(d2);
            if ((a2 | 0) == 2 & (c2 | 0) == 0) {
              if (!(b2 >= d2))
                a2 = Ld(b2, d2) | 0;
              else
                a2 = 1;
            } else
              a2 = 0;
            return a2 | 0;
          }
          function Sd(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = T(b2);
            c2 = c2 | 0;
            d2 = T(d2);
            e2 = T(e2);
            if ((a2 | 0) == 2 & (c2 | 0) == 2 & d2 > b2) {
              if (!(e2 <= b2))
                a2 = Ld(b2, e2) | 0;
              else
                a2 = 1;
            } else
              a2 = 0;
            return a2 | 0;
          }
          function Td(b2, d2, e2, f2, i3, j2, k2, m2, n2, o2, p2) {
            b2 = b2 | 0;
            d2 = T(d2);
            e2 = T(e2);
            f2 = f2 | 0;
            i3 = i3 | 0;
            j2 = j2 | 0;
            k2 = T(k2);
            m2 = T(m2);
            n2 = n2 | 0;
            o2 = o2 | 0;
            p2 = p2 | 0;
            var q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = ib, v2 = ib, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = ib, I2 = ib, J2 = ib, K2 = 0, L2 = 0;
            G2 = l;
            l = l + 160 | 0;
            D2 = G2 + 152 | 0;
            C2 = G2 + 120 | 0;
            B2 = G2 + 104 | 0;
            y2 = G2 + 72 | 0;
            t2 = G2 + 56 | 0;
            A2 = G2 + 8 | 0;
            x2 = G2;
            z2 = (c[2279] | 0) + 1 | 0;
            c[2279] = z2;
            E2 = b2 + 984 | 0;
            if ((a[E2 >> 0] | 0) != 0 ? (c[b2 + 512 >> 2] | 0) != (c[2278] | 0) : 0)
              w2 = 4;
            else if ((c[b2 + 516 >> 2] | 0) == (f2 | 0))
              F2 = 0;
            else
              w2 = 4;
            if ((w2 | 0) == 4) {
              c[b2 + 520 >> 2] = 0;
              c[b2 + 924 >> 2] = -1;
              c[b2 + 928 >> 2] = -1;
              g[b2 + 932 >> 2] = T(-1);
              g[b2 + 936 >> 2] = T(-1);
              F2 = 1;
            }
            a:
              do
                if (!(c[b2 + 964 >> 2] | 0)) {
                  if (n2) {
                    q2 = b2 + 916 | 0;
                    if (!(Ld(T(g[q2 >> 2]), d2) | 0)) {
                      w2 = 21;
                      break;
                    }
                    if (!(Ld(T(g[b2 + 920 >> 2]), e2) | 0)) {
                      w2 = 21;
                      break;
                    }
                    if ((c[b2 + 924 >> 2] | 0) != (i3 | 0)) {
                      w2 = 21;
                      break;
                    }
                    q2 = (c[b2 + 928 >> 2] | 0) == (j2 | 0) ? q2 : 0;
                    w2 = 22;
                    break;
                  }
                  s2 = c[b2 + 520 >> 2] | 0;
                  if (!s2)
                    w2 = 21;
                  else {
                    r2 = 0;
                    while (1) {
                      q2 = b2 + 524 + (r2 * 24 | 0) | 0;
                      if (((Ld(T(g[q2 >> 2]), d2) | 0 ? Ld(T(g[b2 + 524 + (r2 * 24 | 0) + 4 >> 2]), e2) | 0 : 0) ? (c[b2 + 524 + (r2 * 24 | 0) + 8 >> 2] | 0) == (i3 | 0) : 0) ? (c[b2 + 524 + (r2 * 24 | 0) + 12 >> 2] | 0) == (j2 | 0) : 0) {
                        w2 = 22;
                        break a;
                      }
                      r2 = r2 + 1 | 0;
                      if (r2 >>> 0 >= s2 >>> 0) {
                        w2 = 21;
                        break;
                      }
                    }
                  }
                } else {
                  u2 = T(Ud(b2, 2, k2));
                  v2 = T(Ud(b2, 0, k2));
                  q2 = b2 + 916 | 0;
                  J2 = T(g[q2 >> 2]);
                  I2 = T(g[b2 + 920 >> 2]);
                  H2 = T(g[b2 + 932 >> 2]);
                  if (!(Pd(i3, d2, j2, e2, c[b2 + 924 >> 2] | 0, J2, c[b2 + 928 >> 2] | 0, I2, H2, T(g[b2 + 936 >> 2]), u2, v2, p2) | 0)) {
                    s2 = c[b2 + 520 >> 2] | 0;
                    if (!s2)
                      w2 = 21;
                    else {
                      r2 = 0;
                      while (1) {
                        q2 = b2 + 524 + (r2 * 24 | 0) | 0;
                        H2 = T(g[q2 >> 2]);
                        I2 = T(g[b2 + 524 + (r2 * 24 | 0) + 4 >> 2]);
                        J2 = T(g[b2 + 524 + (r2 * 24 | 0) + 16 >> 2]);
                        if (Pd(i3, d2, j2, e2, c[b2 + 524 + (r2 * 24 | 0) + 8 >> 2] | 0, H2, c[b2 + 524 + (r2 * 24 | 0) + 12 >> 2] | 0, I2, J2, T(g[b2 + 524 + (r2 * 24 | 0) + 20 >> 2]), u2, v2, p2) | 0) {
                          w2 = 22;
                          break a;
                        }
                        r2 = r2 + 1 | 0;
                        if (r2 >>> 0 >= s2 >>> 0) {
                          w2 = 21;
                          break;
                        }
                      }
                    }
                  } else
                    w2 = 22;
                }
              while (0);
            do
              if ((w2 | 0) == 21) {
                if (!(a[11697] | 0)) {
                  q2 = 0;
                  w2 = 31;
                } else {
                  q2 = 0;
                  w2 = 28;
                }
              } else if ((w2 | 0) == 22) {
                r2 = (a[11697] | 0) != 0;
                if (!((q2 | 0) != 0 & (F2 ^ 1)))
                  if (r2) {
                    w2 = 28;
                    break;
                  } else {
                    w2 = 31;
                    break;
                  }
                t2 = q2 + 16 | 0;
                c[b2 + 908 >> 2] = c[t2 >> 2];
                s2 = q2 + 20 | 0;
                c[b2 + 912 >> 2] = c[s2 >> 2];
                if (!((a[11698] | 0) == 0 | r2 ^ 1)) {
                  c[x2 >> 2] = Wd(z2) | 0;
                  c[x2 + 4 >> 2] = z2;
                  Vd(b2, 4, 2972, x2);
                  r2 = c[b2 + 972 >> 2] | 0;
                  if (r2 | 0)
                    nb[r2 & 127](b2);
                  i3 = Xd(i3, n2) | 0;
                  j2 = Xd(j2, n2) | 0;
                  L2 = +T(g[t2 >> 2]);
                  K2 = +T(g[s2 >> 2]);
                  c[A2 >> 2] = i3;
                  c[A2 + 4 >> 2] = j2;
                  h[A2 + 8 >> 3] = +d2;
                  h[A2 + 16 >> 3] = +e2;
                  h[A2 + 24 >> 3] = L2;
                  h[A2 + 32 >> 3] = K2;
                  c[A2 + 40 >> 2] = o2;
                  Vd(b2, 4, 2989, A2);
                }
              }
            while (0);
            if ((w2 | 0) == 28) {
              r2 = Wd(z2) | 0;
              c[t2 >> 2] = r2;
              c[t2 + 4 >> 2] = z2;
              c[t2 + 8 >> 2] = F2 ? 3047 : 11699;
              Vd(b2, 4, 3038, t2);
              r2 = c[b2 + 972 >> 2] | 0;
              if (r2 | 0)
                nb[r2 & 127](b2);
              A2 = Xd(i3, n2) | 0;
              w2 = Xd(j2, n2) | 0;
              c[y2 >> 2] = A2;
              c[y2 + 4 >> 2] = w2;
              h[y2 + 8 >> 3] = +d2;
              h[y2 + 16 >> 3] = +e2;
              c[y2 + 24 >> 2] = o2;
              Vd(b2, 4, 3049, y2);
              w2 = 31;
            }
            if ((w2 | 0) == 31) {
              Yd(b2, d2, e2, f2, i3, j2, k2, m2, n2, p2);
              if (a[11697] | 0) {
                r2 = c[2279] | 0;
                A2 = Wd(r2) | 0;
                c[B2 >> 2] = A2;
                c[B2 + 4 >> 2] = r2;
                c[B2 + 8 >> 2] = F2 ? 3047 : 11699;
                Vd(b2, 4, 3083, B2);
                r2 = c[b2 + 972 >> 2] | 0;
                if (r2 | 0)
                  nb[r2 & 127](b2);
                A2 = Xd(i3, n2) | 0;
                B2 = Xd(j2, n2) | 0;
                K2 = +T(g[b2 + 908 >> 2]);
                L2 = +T(g[b2 + 912 >> 2]);
                c[C2 >> 2] = A2;
                c[C2 + 4 >> 2] = B2;
                h[C2 + 8 >> 3] = K2;
                h[C2 + 16 >> 3] = L2;
                c[C2 + 24 >> 2] = o2;
                Vd(b2, 4, 3092, C2);
              }
              c[b2 + 516 >> 2] = f2;
              if (!q2) {
                r2 = b2 + 520 | 0;
                q2 = c[r2 >> 2] | 0;
                if ((q2 | 0) == 16) {
                  if (a[11697] | 0)
                    Vd(b2, 4, 3124, D2);
                  c[r2 >> 2] = 0;
                  q2 = 0;
                }
                if (n2)
                  q2 = b2 + 916 | 0;
                else {
                  c[r2 >> 2] = q2 + 1;
                  q2 = b2 + 524 + (q2 * 24 | 0) | 0;
                }
                g[q2 >> 2] = d2;
                g[q2 + 4 >> 2] = e2;
                c[q2 + 8 >> 2] = i3;
                c[q2 + 12 >> 2] = j2;
                c[q2 + 16 >> 2] = c[b2 + 908 >> 2];
                c[q2 + 20 >> 2] = c[b2 + 912 >> 2];
                q2 = 0;
              }
            }
            if (n2) {
              c[b2 + 416 >> 2] = c[b2 + 908 >> 2];
              c[b2 + 420 >> 2] = c[b2 + 912 >> 2];
              a[b2 + 985 >> 0] = 1;
              a[E2 >> 0] = 0;
            }
            c[2279] = (c[2279] | 0) + -1;
            c[b2 + 512 >> 2] = c[2278];
            l = G2;
            return F2 | (q2 | 0) == 0 | 0;
          }
          function Ud(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = T(c2);
            var d2 = ib;
            d2 = T(me(a2, b2, c2));
            return T(d2 + T(ne(a2, b2, c2)));
          }
          function Vd(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = l;
            l = l + 16 | 0;
            f2 = g2;
            c[f2 >> 2] = e2;
            if (!a2)
              e2 = 0;
            else
              e2 = c[a2 + 976 >> 2] | 0;
            ge(e2, a2, b2, d2, f2);
            l = g2;
            return;
          }
          function Wd(a2) {
            a2 = a2 | 0;
            return (a2 >>> 0 > 60 ? 3201 : 3201 + (60 - a2) | 0) | 0;
          }
          function Xd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            f2 = l;
            l = l + 32 | 0;
            d2 = f2 + 12 | 0;
            e2 = f2;
            c[d2 >> 2] = c[254];
            c[d2 + 4 >> 2] = c[255];
            c[d2 + 8 >> 2] = c[256];
            c[e2 >> 2] = c[257];
            c[e2 + 4 >> 2] = c[258];
            c[e2 + 8 >> 2] = c[259];
            if ((a2 | 0) > 2)
              a2 = 11699;
            else
              a2 = c[(b2 ? e2 : d2) + (a2 << 2) >> 2] | 0;
            l = f2;
            return a2 | 0;
          }
          function Yd(b2, e2, f2, h2, i3, k2, m2, n2, o2, p2) {
            b2 = b2 | 0;
            e2 = T(e2);
            f2 = T(f2);
            h2 = h2 | 0;
            i3 = i3 | 0;
            k2 = k2 | 0;
            m2 = T(m2);
            n2 = T(n2);
            o2 = o2 | 0;
            p2 = p2 | 0;
            var q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = ib, v2 = ib, w2 = ib, x2 = ib, y2 = ib, z2 = ib, A2 = ib, B2 = 0, C2 = 0, D2 = 0, E2 = ib, F2 = ib, G2 = 0, H2 = ib, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = ib, aa2 = ib, ba2 = ib, ca2 = ib, da2 = ib, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = ib, ka2 = ib, la2 = ib, ma2 = ib, na2 = ib, oa2 = ib, pa2 = 0, qa2 = ib, ra2 = ib, sa2 = ib, ta2 = ib, ua2 = ib, va2 = ib, wa2 = 0, xa2 = 0, ya2 = ib, za2 = ib, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = ib, Fa2 = 0, Ga2 = 0, Ha2 = 0, Ia2 = 0, Ja2 = 0, Ka2 = 0, La2 = 0, Ma2 = ib, Na2 = 0, Oa2 = 0;
            La2 = l;
            l = l + 16 | 0;
            ea2 = La2 + 12 | 0;
            fa2 = La2 + 8 | 0;
            ga2 = La2 + 4 | 0;
            ha2 = La2;
            ec(b2, (i3 | 0) == 0 | (Sb(e2) | 0) ^ 1, 3326);
            ec(b2, (k2 | 0) == 0 | (Sb(f2) | 0) ^ 1, 3406);
            Ga2 = qe(b2, h2) | 0;
            c[b2 + 496 >> 2] = Ga2;
            Ja2 = re(2, Ga2) | 0;
            Ka2 = re(0, Ga2) | 0;
            g[b2 + 440 >> 2] = T(me(b2, Ja2, m2));
            g[b2 + 444 >> 2] = T(ne(b2, Ja2, m2));
            g[b2 + 428 >> 2] = T(me(b2, Ka2, m2));
            g[b2 + 436 >> 2] = T(ne(b2, Ka2, m2));
            g[b2 + 464 >> 2] = T(se(b2, Ja2));
            g[b2 + 468 >> 2] = T(te(b2, Ja2));
            g[b2 + 452 >> 2] = T(se(b2, Ka2));
            g[b2 + 460 >> 2] = T(te(b2, Ka2));
            g[b2 + 488 >> 2] = T(ue(b2, Ja2, m2));
            g[b2 + 492 >> 2] = T(ve(b2, Ja2, m2));
            g[b2 + 476 >> 2] = T(ue(b2, Ka2, m2));
            g[b2 + 484 >> 2] = T(ve(b2, Ka2, m2));
            do
              if (!(c[b2 + 964 >> 2] | 0)) {
                Ha2 = b2 + 948 | 0;
                Ia2 = (c[b2 + 952 >> 2] | 0) - (c[Ha2 >> 2] | 0) >> 2;
                if (!Ia2) {
                  xe(b2, e2, f2, i3, k2, m2, n2);
                  break;
                }
                if (!o2 ? ye(b2, e2, f2, i3, k2, m2, n2) | 0 : 0)
                  break;
                lc(b2);
                Y2 = b2 + 508 | 0;
                a[Y2 >> 0] = 0;
                Ja2 = re(c[b2 + 4 >> 2] | 0, Ga2) | 0;
                Ka2 = ze(Ja2, Ga2) | 0;
                Fa2 = oe(Ja2) | 0;
                Z2 = c[b2 + 8 >> 2] | 0;
                Ba2 = b2 + 28 | 0;
                _2 = (c[Ba2 >> 2] | 0) != 0;
                ua2 = Fa2 ? m2 : n2;
                ya2 = Fa2 ? n2 : m2;
                $2 = T(Ae(b2, Ja2, m2));
                aa2 = T(Be(b2, Ja2, m2));
                u2 = T(Ae(b2, Ka2, m2));
                va2 = T(Ce(b2, Ja2, m2));
                za2 = T(Ce(b2, Ka2, m2));
                D2 = Fa2 ? i3 : k2;
                Aa2 = Fa2 ? k2 : i3;
                Ea2 = Fa2 ? va2 : za2;
                y2 = Fa2 ? za2 : va2;
                ta2 = T(Ud(b2, 2, m2));
                x2 = T(Ud(b2, 0, m2));
                v2 = T(T(be(b2 + 364 | 0, m2)) - Ea2);
                w2 = T(T(be(b2 + 380 | 0, m2)) - Ea2);
                z2 = T(T(be(b2 + 372 | 0, n2)) - y2);
                A2 = T(T(be(b2 + 388 | 0, n2)) - y2);
                ba2 = Fa2 ? v2 : z2;
                ca2 = Fa2 ? w2 : A2;
                ta2 = T(e2 - ta2);
                e2 = T(ta2 - Ea2);
                if (Sb(e2) | 0)
                  Ea2 = e2;
                else
                  Ea2 = T(cC(T(eC(e2, w2)), v2));
                ra2 = T(f2 - x2);
                e2 = T(ra2 - y2);
                if (Sb(e2) | 0)
                  sa2 = e2;
                else
                  sa2 = T(cC(T(eC(e2, A2)), z2));
                v2 = Fa2 ? Ea2 : sa2;
                qa2 = Fa2 ? sa2 : Ea2;
                a:
                  do
                    if ((D2 | 0) == 1) {
                      h2 = 0;
                      r2 = 0;
                      while (1) {
                        q2 = ac(b2, r2) | 0;
                        if (!h2) {
                          if (T(Ee(q2)) > T(0) ? T(Fe(q2)) > T(0) : 0)
                            h2 = q2;
                          else
                            h2 = 0;
                        } else if (De(q2) | 0) {
                          t2 = 0;
                          break a;
                        }
                        r2 = r2 + 1 | 0;
                        if (r2 >>> 0 >= Ia2 >>> 0) {
                          t2 = h2;
                          break;
                        }
                      }
                    } else
                      t2 = 0;
                  while (0);
                B2 = t2 + 500 | 0;
                C2 = t2 + 504 | 0;
                h2 = 0;
                q2 = 0;
                e2 = T(0);
                s2 = 0;
                do {
                  r2 = c[(c[Ha2 >> 2] | 0) + (s2 << 2) >> 2] | 0;
                  if ((c[r2 + 36 >> 2] | 0) == 1) {
                    Ge(r2);
                    a[r2 + 985 >> 0] = 1;
                    a[r2 + 984 >> 0] = 0;
                  } else {
                    $d(r2);
                    if (o2)
                      ce(r2, qe(r2, Ga2) | 0, v2, qa2, Ea2);
                    do
                      if ((c[r2 + 24 >> 2] | 0) != 1) {
                        if ((r2 | 0) == (t2 | 0)) {
                          c[B2 >> 2] = c[2278];
                          g[C2 >> 2] = T(0);
                          break;
                        } else {
                          He(b2, r2, Ea2, i3, sa2, Ea2, sa2, k2, Ga2, p2);
                          break;
                        }
                      } else {
                        if (q2 | 0)
                          c[q2 + 960 >> 2] = r2;
                        c[r2 + 960 >> 2] = 0;
                        q2 = r2;
                        h2 = (h2 | 0) == 0 ? r2 : h2;
                      }
                    while (0);
                    oa2 = T(g[r2 + 504 >> 2]);
                    e2 = T(e2 + T(oa2 + T(Ud(r2, Ja2, Ea2))));
                  }
                  s2 = s2 + 1 | 0;
                } while ((s2 | 0) != (Ia2 | 0));
                K2 = e2 > v2;
                pa2 = _2 & ((D2 | 0) == 2 & K2) ? 1 : D2;
                I2 = (Aa2 | 0) == 1;
                M2 = I2 & (o2 ^ 1);
                N2 = (pa2 | 0) == 1;
                O2 = (pa2 | 0) == 2;
                P2 = 976 + (Ja2 << 2) | 0;
                Q2 = (Aa2 | 2 | 0) == 2;
                W2 = I2 & (_2 ^ 1);
                R2 = 1040 + (Ka2 << 2) | 0;
                S2 = 1040 + (Ja2 << 2) | 0;
                U2 = 976 + (Ka2 << 2) | 0;
                V2 = (Aa2 | 0) != 1;
                K2 = _2 & ((D2 | 0) != 0 & K2);
                J2 = b2 + 976 | 0;
                I2 = I2 ^ 1;
                e2 = v2;
                G2 = 0;
                L2 = 0;
                oa2 = T(0);
                da2 = T(0);
                while (1) {
                  b:
                    do
                      if (G2 >>> 0 < Ia2 >>> 0) {
                        C2 = c[Ha2 >> 2] | 0;
                        s2 = 0;
                        A2 = T(0);
                        z2 = T(0);
                        w2 = T(0);
                        v2 = T(0);
                        r2 = 0;
                        q2 = 0;
                        t2 = G2;
                        while (1) {
                          B2 = c[C2 + (t2 << 2) >> 2] | 0;
                          if ((c[B2 + 36 >> 2] | 0) != 1 ? (c[B2 + 940 >> 2] = L2, (c[B2 + 24 >> 2] | 0) != 1) : 0) {
                            x2 = T(Ud(B2, Ja2, Ea2));
                            X2 = c[P2 >> 2] | 0;
                            f2 = T(be(B2 + 380 + (X2 << 3) | 0, ua2));
                            y2 = T(g[B2 + 504 >> 2]);
                            f2 = T(eC(f2, y2));
                            f2 = T(cC(T(be(B2 + 364 + (X2 << 3) | 0, ua2)), f2));
                            if (_2 & (s2 | 0) != 0 & T(x2 + T(z2 + f2)) > e2) {
                              k2 = s2;
                              x2 = A2;
                              D2 = t2;
                              break b;
                            }
                            x2 = T(x2 + f2);
                            f2 = T(z2 + x2);
                            x2 = T(A2 + x2);
                            if (De(B2) | 0) {
                              w2 = T(w2 + T(Ee(B2)));
                              v2 = T(v2 - T(y2 * T(Fe(B2))));
                            }
                            if (q2 | 0)
                              c[q2 + 960 >> 2] = B2;
                            c[B2 + 960 >> 2] = 0;
                            s2 = s2 + 1 | 0;
                            q2 = B2;
                            r2 = (r2 | 0) == 0 ? B2 : r2;
                          } else {
                            x2 = A2;
                            f2 = z2;
                          }
                          t2 = t2 + 1 | 0;
                          if (t2 >>> 0 < Ia2 >>> 0) {
                            A2 = x2;
                            z2 = f2;
                          } else {
                            k2 = s2;
                            D2 = t2;
                            break;
                          }
                        }
                      } else {
                        k2 = 0;
                        x2 = T(0);
                        w2 = T(0);
                        v2 = T(0);
                        r2 = 0;
                        D2 = G2;
                      }
                    while (0);
                  X2 = w2 > T(0) & w2 < T(1);
                  E2 = X2 ? T(1) : w2;
                  X2 = v2 > T(0) & v2 < T(1);
                  A2 = X2 ? T(1) : v2;
                  do
                    if (!N2) {
                      if (!(x2 < ba2 & ((Sb(ba2) | 0) ^ 1))) {
                        if (!(x2 > ca2 & ((Sb(ca2) | 0) ^ 1))) {
                          if (!(a[(c[J2 >> 2] | 0) + 3 >> 0] | 0)) {
                            if (!(E2 == T(0)) ? !(T(Ee(b2)) == T(0)) : 0) {
                              X2 = 53;
                              break;
                            }
                            e2 = x2;
                            X2 = 53;
                          } else
                            X2 = 51;
                        } else {
                          e2 = ca2;
                          X2 = 51;
                        }
                      } else {
                        e2 = ba2;
                        X2 = 51;
                      }
                    } else
                      X2 = 51;
                  while (0);
                  if ((X2 | 0) == 51) {
                    X2 = 0;
                    if (Sb(e2) | 0)
                      X2 = 53;
                    else {
                      F2 = T(e2 - x2);
                      H2 = e2;
                    }
                  }
                  if ((X2 | 0) == 53) {
                    X2 = 0;
                    if (x2 < T(0)) {
                      F2 = T(-x2);
                      H2 = e2;
                    } else {
                      F2 = T(0);
                      H2 = e2;
                    }
                  }
                  if (!M2 ? (ia2 = (r2 | 0) == 0, !ia2) : 0) {
                    s2 = c[P2 >> 2] | 0;
                    t2 = F2 < T(0);
                    y2 = T(F2 / A2);
                    B2 = F2 > T(0);
                    z2 = T(F2 / E2);
                    w2 = T(0);
                    x2 = T(0);
                    e2 = T(0);
                    q2 = r2;
                    do {
                      f2 = T(be(q2 + 380 + (s2 << 3) | 0, ua2));
                      v2 = T(be(q2 + 364 + (s2 << 3) | 0, ua2));
                      v2 = T(eC(f2, T(cC(v2, T(g[q2 + 504 >> 2])))));
                      if (t2) {
                        f2 = T(v2 * T(Fe(q2)));
                        if (f2 != T(-0) ? (Ma2 = T(v2 - T(y2 * f2)), ja2 = T(Ie(q2, Ja2, Ma2, H2, Ea2)), Ma2 != ja2) : 0) {
                          w2 = T(w2 - T(ja2 - v2));
                          e2 = T(e2 + f2);
                        }
                      } else if ((B2 ? (ka2 = T(Ee(q2)), ka2 != T(0)) : 0) ? (Ma2 = T(v2 + T(z2 * ka2)), la2 = T(Ie(q2, Ja2, Ma2, H2, Ea2)), Ma2 != la2) : 0) {
                        w2 = T(w2 - T(la2 - v2));
                        x2 = T(x2 - ka2);
                      }
                      q2 = c[q2 + 960 >> 2] | 0;
                    } while ((q2 | 0) != 0);
                    e2 = T(A2 + e2);
                    v2 = T(F2 + w2);
                    if (!ia2) {
                      y2 = T(E2 + x2);
                      t2 = c[P2 >> 2] | 0;
                      B2 = v2 < T(0);
                      C2 = e2 == T(0);
                      z2 = T(v2 / e2);
                      s2 = v2 > T(0);
                      y2 = T(v2 / y2);
                      e2 = T(0);
                      do {
                        Ma2 = T(be(r2 + 380 + (t2 << 3) | 0, ua2));
                        w2 = T(be(r2 + 364 + (t2 << 3) | 0, ua2));
                        w2 = T(eC(Ma2, T(cC(w2, T(g[r2 + 504 >> 2])))));
                        if (B2) {
                          Ma2 = T(w2 * T(Fe(r2)));
                          v2 = T(-Ma2);
                          if (Ma2 != T(-0)) {
                            Ma2 = T(z2 * v2);
                            v2 = T(Ie(r2, Ja2, T(w2 + (C2 ? v2 : Ma2)), H2, Ea2));
                          } else
                            v2 = w2;
                        } else if (s2 ? (ma2 = T(Ee(r2)), ma2 != T(0)) : 0)
                          v2 = T(Ie(r2, Ja2, T(w2 + T(y2 * ma2)), H2, Ea2));
                        else
                          v2 = w2;
                        e2 = T(e2 - T(v2 - w2));
                        x2 = T(Ud(r2, Ja2, Ea2));
                        f2 = T(Ud(r2, Ka2, Ea2));
                        v2 = T(v2 + x2);
                        g[fa2 >> 2] = v2;
                        c[ha2 >> 2] = 1;
                        w2 = T(g[r2 + 396 >> 2]);
                        c:
                          do
                            if (Sb(w2) | 0) {
                              q2 = Sb(qa2) | 0;
                              do
                                if (!q2) {
                                  if (K2 | (ae(r2, Ka2, qa2) | 0 | I2))
                                    break;
                                  if ((Je(b2, r2) | 0) != 4)
                                    break;
                                  if ((c[(Ke(r2, Ka2) | 0) + 4 >> 2] | 0) == 3)
                                    break;
                                  if ((c[(Le(r2, Ka2) | 0) + 4 >> 2] | 0) == 3)
                                    break;
                                  g[ea2 >> 2] = qa2;
                                  c[ga2 >> 2] = 1;
                                  break c;
                                }
                              while (0);
                              if (ae(r2, Ka2, qa2) | 0) {
                                q2 = c[r2 + 992 + (c[U2 >> 2] << 2) >> 2] | 0;
                                Ma2 = T(f2 + T(be(q2, qa2)));
                                g[ea2 >> 2] = Ma2;
                                q2 = V2 & (c[q2 + 4 >> 2] | 0) == 2;
                                c[ga2 >> 2] = ((Sb(Ma2) | 0 | q2) ^ 1) & 1;
                                break;
                              } else {
                                g[ea2 >> 2] = qa2;
                                c[ga2 >> 2] = q2 ? 0 : 2;
                                break;
                              }
                            } else {
                              Ma2 = T(v2 - x2);
                              E2 = T(Ma2 / w2);
                              Ma2 = T(w2 * Ma2);
                              c[ga2 >> 2] = 1;
                              g[ea2 >> 2] = T(f2 + (Fa2 ? E2 : Ma2));
                            }
                          while (0);
                        Me(r2, Ja2, H2, Ea2, ha2, fa2);
                        Me(r2, Ka2, qa2, Ea2, ga2, ea2);
                        do
                          if (!(ae(r2, Ka2, qa2) | 0) ? (Je(b2, r2) | 0) == 4 : 0) {
                            if ((c[(Ke(r2, Ka2) | 0) + 4 >> 2] | 0) == 3) {
                              q2 = 0;
                              break;
                            }
                            q2 = (c[(Le(r2, Ka2) | 0) + 4 >> 2] | 0) != 3;
                          } else
                            q2 = 0;
                        while (0);
                        Ma2 = T(g[fa2 >> 2]);
                        E2 = T(g[ea2 >> 2]);
                        Na2 = c[ha2 >> 2] | 0;
                        Oa2 = c[ga2 >> 2] | 0;
                        Td(r2, Fa2 ? Ma2 : E2, Fa2 ? E2 : Ma2, Ga2, Fa2 ? Na2 : Oa2, Fa2 ? Oa2 : Na2, Ea2, sa2, o2 & (q2 ^ 1), 3488, p2) | 0;
                        a[Y2 >> 0] = a[Y2 >> 0] | a[r2 + 508 >> 0];
                        r2 = c[r2 + 960 >> 2] | 0;
                      } while ((r2 | 0) != 0);
                    } else
                      e2 = T(0);
                  } else
                    e2 = T(0);
                  e2 = T(F2 + e2);
                  Oa2 = e2 < T(0) & 1;
                  a[Y2 >> 0] = Oa2 | d[Y2 >> 0];
                  if (O2 & e2 > T(0)) {
                    q2 = c[P2 >> 2] | 0;
                    if ((c[b2 + 364 + (q2 << 3) + 4 >> 2] | 0) != 0 ? (na2 = T(be(b2 + 364 + (q2 << 3) | 0, ua2)), na2 >= T(0)) : 0)
                      v2 = T(cC(T(0), T(na2 - T(H2 - e2))));
                    else
                      v2 = T(0);
                  } else
                    v2 = e2;
                  B2 = G2 >>> 0 < D2 >>> 0;
                  if (B2) {
                    t2 = c[Ha2 >> 2] | 0;
                    s2 = G2;
                    q2 = 0;
                    do {
                      r2 = c[t2 + (s2 << 2) >> 2] | 0;
                      if (!(c[r2 + 24 >> 2] | 0)) {
                        q2 = ((c[(Ke(r2, Ja2) | 0) + 4 >> 2] | 0) == 3 & 1) + q2 | 0;
                        q2 = q2 + ((c[(Le(r2, Ja2) | 0) + 4 >> 2] | 0) == 3 & 1) | 0;
                      }
                      s2 = s2 + 1 | 0;
                    } while ((s2 | 0) != (D2 | 0));
                    if (q2) {
                      x2 = T(0);
                      f2 = T(0);
                    } else
                      X2 = 101;
                  } else
                    X2 = 101;
                  d:
                    do
                      if ((X2 | 0) == 101) {
                        X2 = 0;
                        switch (Z2 | 0) {
                          case 1: {
                            q2 = 0;
                            x2 = T(v2 * T(0.5));
                            f2 = T(0);
                            break d;
                          }
                          case 2: {
                            q2 = 0;
                            x2 = v2;
                            f2 = T(0);
                            break d;
                          }
                          case 3: {
                            if (k2 >>> 0 <= 1) {
                              q2 = 0;
                              x2 = T(0);
                              f2 = T(0);
                              break d;
                            }
                            f2 = T((k2 + -1 | 0) >>> 0);
                            q2 = 0;
                            x2 = T(0);
                            f2 = T(T(cC(v2, T(0))) / f2);
                            break d;
                          }
                          case 5: {
                            f2 = T(v2 / T((k2 + 1 | 0) >>> 0));
                            q2 = 0;
                            x2 = f2;
                            break d;
                          }
                          case 4: {
                            f2 = T(v2 / T(k2 >>> 0));
                            q2 = 0;
                            x2 = T(f2 * T(0.5));
                            break d;
                          }
                          default: {
                            q2 = 0;
                            x2 = T(0);
                            f2 = T(0);
                            break d;
                          }
                        }
                      }
                    while (0);
                  e2 = T($2 + x2);
                  if (B2) {
                    w2 = T(v2 / T(q2 | 0));
                    s2 = c[Ha2 >> 2] | 0;
                    r2 = G2;
                    v2 = T(0);
                    do {
                      q2 = c[s2 + (r2 << 2) >> 2] | 0;
                      e:
                        do
                          if ((c[q2 + 36 >> 2] | 0) != 1) {
                            switch (c[q2 + 24 >> 2] | 0) {
                              case 1: {
                                if (Ne(q2, Ja2) | 0) {
                                  if (!o2)
                                    break e;
                                  Ma2 = T(Oe(q2, Ja2, H2));
                                  Ma2 = T(Ma2 + T(se(b2, Ja2)));
                                  Ma2 = T(Ma2 + T(me(q2, Ja2, Ea2)));
                                  g[q2 + 400 + (c[S2 >> 2] << 2) >> 2] = Ma2;
                                  break e;
                                }
                                break;
                              }
                              case 0: {
                                Oa2 = (c[(Ke(q2, Ja2) | 0) + 4 >> 2] | 0) == 3;
                                Ma2 = T(w2 + e2);
                                e2 = Oa2 ? Ma2 : e2;
                                if (o2) {
                                  Oa2 = q2 + 400 + (c[S2 >> 2] << 2) | 0;
                                  g[Oa2 >> 2] = T(e2 + T(g[Oa2 >> 2]));
                                }
                                Oa2 = (c[(Le(q2, Ja2) | 0) + 4 >> 2] | 0) == 3;
                                Ma2 = T(w2 + e2);
                                e2 = Oa2 ? Ma2 : e2;
                                if (M2) {
                                  Ma2 = T(f2 + T(Ud(q2, Ja2, Ea2)));
                                  v2 = qa2;
                                  e2 = T(e2 + T(Ma2 + T(g[q2 + 504 >> 2])));
                                  break e;
                                } else {
                                  e2 = T(e2 + T(f2 + T(Pe(q2, Ja2, Ea2))));
                                  v2 = T(cC(v2, T(Pe(q2, Ka2, Ea2))));
                                  break e;
                                }
                              }
                              default: {
                              }
                            }
                            if (o2) {
                              Ma2 = T(x2 + T(se(b2, Ja2)));
                              Oa2 = q2 + 400 + (c[S2 >> 2] << 2) | 0;
                              g[Oa2 >> 2] = T(Ma2 + T(g[Oa2 >> 2]));
                            }
                          }
                        while (0);
                      r2 = r2 + 1 | 0;
                    } while ((r2 | 0) != (D2 | 0));
                  } else
                    v2 = T(0);
                  f2 = T(aa2 + e2);
                  if (Q2)
                    x2 = T(T(Ie(b2, Ka2, T(za2 + v2), ya2, m2)) - za2);
                  else
                    x2 = qa2;
                  w2 = T(T(Ie(b2, Ka2, T(za2 + (W2 ? qa2 : v2)), ya2, m2)) - za2);
                  if (B2 & o2) {
                    r2 = G2;
                    do {
                      s2 = c[(c[Ha2 >> 2] | 0) + (r2 << 2) >> 2] | 0;
                      do
                        if ((c[s2 + 36 >> 2] | 0) != 1) {
                          if ((c[s2 + 24 >> 2] | 0) == 1) {
                            if (Ne(s2, Ka2) | 0) {
                              Ma2 = T(Oe(s2, Ka2, qa2));
                              Ma2 = T(Ma2 + T(se(b2, Ka2)));
                              Ma2 = T(Ma2 + T(me(s2, Ka2, Ea2)));
                              q2 = c[R2 >> 2] | 0;
                              g[s2 + 400 + (q2 << 2) >> 2] = Ma2;
                              if (!(Sb(Ma2) | 0))
                                break;
                            } else
                              q2 = c[R2 >> 2] | 0;
                            Ma2 = T(se(b2, Ka2));
                            g[s2 + 400 + (q2 << 2) >> 2] = T(Ma2 + T(me(s2, Ka2, Ea2)));
                            break;
                          }
                          q2 = Je(b2, s2) | 0;
                          do
                            if ((q2 | 0) == 4) {
                              if ((c[(Ke(s2, Ka2) | 0) + 4 >> 2] | 0) == 3) {
                                X2 = 139;
                                break;
                              }
                              if ((c[(Le(s2, Ka2) | 0) + 4 >> 2] | 0) == 3) {
                                X2 = 139;
                                break;
                              }
                              if (ae(s2, Ka2, qa2) | 0) {
                                e2 = u2;
                                break;
                              }
                              Na2 = c[s2 + 908 + (c[P2 >> 2] << 2) >> 2] | 0;
                              c[ea2 >> 2] = Na2;
                              e2 = T(g[s2 + 396 >> 2]);
                              Oa2 = Sb(e2) | 0;
                              v2 = (c[j >> 2] = Na2, T(g[j >> 2]));
                              if (Oa2)
                                e2 = w2;
                              else {
                                F2 = T(Ud(s2, Ka2, Ea2));
                                Ma2 = T(v2 / e2);
                                e2 = T(e2 * v2);
                                e2 = T(F2 + (Fa2 ? Ma2 : e2));
                              }
                              g[fa2 >> 2] = e2;
                              g[ea2 >> 2] = T(T(Ud(s2, Ja2, Ea2)) + v2);
                              c[ga2 >> 2] = 1;
                              c[ha2 >> 2] = 1;
                              Me(s2, Ja2, H2, Ea2, ga2, ea2);
                              Me(s2, Ka2, qa2, Ea2, ha2, fa2);
                              e2 = T(g[ea2 >> 2]);
                              F2 = T(g[fa2 >> 2]);
                              Ma2 = Fa2 ? e2 : F2;
                              e2 = Fa2 ? F2 : e2;
                              Oa2 = ((Sb(Ma2) | 0) ^ 1) & 1;
                              Td(s2, Ma2, e2, Ga2, Oa2, ((Sb(e2) | 0) ^ 1) & 1, Ea2, sa2, 1, 3493, p2) | 0;
                              e2 = u2;
                            } else
                              X2 = 139;
                          while (0);
                          f:
                            do
                              if ((X2 | 0) == 139) {
                                X2 = 0;
                                e2 = T(x2 - T(Pe(s2, Ka2, Ea2)));
                                do
                                  if ((c[(Ke(s2, Ka2) | 0) + 4 >> 2] | 0) == 3) {
                                    if ((c[(Le(s2, Ka2) | 0) + 4 >> 2] | 0) != 3)
                                      break;
                                    e2 = T(u2 + T(cC(T(0), T(e2 * T(0.5)))));
                                    break f;
                                  }
                                while (0);
                                if ((c[(Le(s2, Ka2) | 0) + 4 >> 2] | 0) == 3) {
                                  e2 = u2;
                                  break;
                                }
                                if ((c[(Ke(s2, Ka2) | 0) + 4 >> 2] | 0) == 3) {
                                  e2 = T(u2 + T(cC(T(0), e2)));
                                  break;
                                }
                                switch (q2 | 0) {
                                  case 1: {
                                    e2 = u2;
                                    break f;
                                  }
                                  case 2: {
                                    e2 = T(u2 + T(e2 * T(0.5)));
                                    break f;
                                  }
                                  default: {
                                    e2 = T(u2 + e2);
                                    break f;
                                  }
                                }
                              }
                            while (0);
                          Ma2 = T(oa2 + e2);
                          Oa2 = s2 + 400 + (c[R2 >> 2] << 2) | 0;
                          g[Oa2 >> 2] = T(Ma2 + T(g[Oa2 >> 2]));
                        }
                      while (0);
                      r2 = r2 + 1 | 0;
                    } while ((r2 | 0) != (D2 | 0));
                  }
                  oa2 = T(oa2 + w2);
                  da2 = T(cC(da2, f2));
                  k2 = L2 + 1 | 0;
                  if (D2 >>> 0 >= Ia2 >>> 0)
                    break;
                  else {
                    e2 = H2;
                    G2 = D2;
                    L2 = k2;
                  }
                }
                do
                  if (o2) {
                    q2 = k2 >>> 0 > 1;
                    if (!q2 ? !(Qe(b2) | 0) : 0)
                      break;
                    if (!(Sb(qa2) | 0)) {
                      e2 = T(qa2 - oa2);
                      g:
                        do
                          switch (c[b2 + 12 >> 2] | 0) {
                            case 3: {
                              u2 = T(u2 + e2);
                              z2 = T(0);
                              break;
                            }
                            case 2: {
                              u2 = T(u2 + T(e2 * T(0.5)));
                              z2 = T(0);
                              break;
                            }
                            case 4: {
                              if (qa2 > oa2)
                                z2 = T(e2 / T(k2 >>> 0));
                              else
                                z2 = T(0);
                              break;
                            }
                            case 7:
                              if (qa2 > oa2) {
                                u2 = T(u2 + T(e2 / T(k2 << 1 >>> 0)));
                                z2 = T(e2 / T(k2 >>> 0));
                                z2 = q2 ? z2 : T(0);
                                break g;
                              } else {
                                u2 = T(u2 + T(e2 * T(0.5)));
                                z2 = T(0);
                                break g;
                              }
                            case 6: {
                              z2 = T(e2 / T(L2 >>> 0));
                              z2 = qa2 > oa2 & q2 ? z2 : T(0);
                              break;
                            }
                            default:
                              z2 = T(0);
                          }
                        while (0);
                      if (k2 | 0) {
                        B2 = 1040 + (Ka2 << 2) | 0;
                        C2 = 976 + (Ka2 << 2) | 0;
                        t2 = 0;
                        r2 = 0;
                        while (1) {
                          h:
                            do
                              if (r2 >>> 0 < Ia2 >>> 0) {
                                v2 = T(0);
                                w2 = T(0);
                                e2 = T(0);
                                s2 = r2;
                                while (1) {
                                  q2 = c[(c[Ha2 >> 2] | 0) + (s2 << 2) >> 2] | 0;
                                  do
                                    if ((c[q2 + 36 >> 2] | 0) != 1 ? (c[q2 + 24 >> 2] | 0) == 0 : 0) {
                                      if ((c[q2 + 940 >> 2] | 0) != (t2 | 0))
                                        break h;
                                      if (Re(q2, Ka2) | 0) {
                                        Ma2 = T(g[q2 + 908 + (c[C2 >> 2] << 2) >> 2]);
                                        e2 = T(cC(e2, T(Ma2 + T(Ud(q2, Ka2, Ea2)))));
                                      }
                                      if ((Je(b2, q2) | 0) != 5)
                                        break;
                                      na2 = T(Se(q2));
                                      na2 = T(na2 + T(me(q2, 0, Ea2)));
                                      Ma2 = T(g[q2 + 912 >> 2]);
                                      Ma2 = T(T(Ma2 + T(Ud(q2, 0, Ea2))) - na2);
                                      na2 = T(cC(w2, na2));
                                      Ma2 = T(cC(v2, Ma2));
                                      v2 = Ma2;
                                      w2 = na2;
                                      e2 = T(cC(e2, T(na2 + Ma2)));
                                    }
                                  while (0);
                                  q2 = s2 + 1 | 0;
                                  if (q2 >>> 0 < Ia2 >>> 0)
                                    s2 = q2;
                                  else {
                                    s2 = q2;
                                    break;
                                  }
                                }
                              } else {
                                w2 = T(0);
                                e2 = T(0);
                                s2 = r2;
                              }
                            while (0);
                          y2 = T(z2 + e2);
                          f2 = u2;
                          u2 = T(u2 + y2);
                          if (r2 >>> 0 < s2 >>> 0) {
                            x2 = T(f2 + w2);
                            q2 = r2;
                            do {
                              r2 = c[(c[Ha2 >> 2] | 0) + (q2 << 2) >> 2] | 0;
                              i:
                                do
                                  if ((c[r2 + 36 >> 2] | 0) != 1 ? (c[r2 + 24 >> 2] | 0) == 0 : 0)
                                    switch (Je(b2, r2) | 0) {
                                      case 1: {
                                        Ma2 = T(f2 + T(me(r2, Ka2, Ea2)));
                                        g[r2 + 400 + (c[B2 >> 2] << 2) >> 2] = Ma2;
                                        break i;
                                      }
                                      case 3: {
                                        Ma2 = T(T(u2 - T(ne(r2, Ka2, Ea2))) - T(g[r2 + 908 + (c[C2 >> 2] << 2) >> 2]));
                                        g[r2 + 400 + (c[B2 >> 2] << 2) >> 2] = Ma2;
                                        break i;
                                      }
                                      case 2: {
                                        Ma2 = T(f2 + T(T(y2 - T(g[r2 + 908 + (c[C2 >> 2] << 2) >> 2])) * T(0.5)));
                                        g[r2 + 400 + (c[B2 >> 2] << 2) >> 2] = Ma2;
                                        break i;
                                      }
                                      case 4: {
                                        Ma2 = T(f2 + T(me(r2, Ka2, Ea2)));
                                        g[r2 + 400 + (c[B2 >> 2] << 2) >> 2] = Ma2;
                                        if (ae(r2, Ka2, qa2) | 0)
                                          break i;
                                        if (Fa2) {
                                          v2 = T(g[r2 + 908 >> 2]);
                                          e2 = T(v2 + T(Ud(r2, Ja2, Ea2)));
                                          w2 = y2;
                                        } else {
                                          w2 = T(g[r2 + 912 >> 2]);
                                          w2 = T(w2 + T(Ud(r2, Ka2, Ea2)));
                                          e2 = y2;
                                          v2 = T(g[r2 + 908 >> 2]);
                                        }
                                        if (Ld(e2, v2) | 0 ? Ld(w2, T(g[r2 + 912 >> 2])) | 0 : 0)
                                          break i;
                                        Td(r2, e2, w2, Ga2, 1, 1, Ea2, sa2, 1, 3501, p2) | 0;
                                        break i;
                                      }
                                      case 5: {
                                        g[r2 + 404 >> 2] = T(T(x2 - T(Se(r2))) + T(Oe(r2, 0, qa2)));
                                        break i;
                                      }
                                      default:
                                        break i;
                                    }
                                while (0);
                              q2 = q2 + 1 | 0;
                            } while ((q2 | 0) != (s2 | 0));
                          }
                          t2 = t2 + 1 | 0;
                          if ((t2 | 0) == (k2 | 0))
                            break;
                          else
                            r2 = s2;
                        }
                      }
                    }
                  }
                while (0);
                g[b2 + 908 >> 2] = T(Ie(b2, 2, ta2, m2, m2));
                g[b2 + 912 >> 2] = T(Ie(b2, 0, ra2, n2, m2));
                if ((pa2 | 0) != 0 ? (wa2 = c[b2 + 32 >> 2] | 0, xa2 = (pa2 | 0) == 2, !(xa2 & (wa2 | 0) != 2)) : 0) {
                  if (xa2 & (wa2 | 0) == 2) {
                    e2 = T(va2 + H2);
                    e2 = T(cC(T(eC(e2, T(Te(b2, Ja2, da2, ua2)))), va2));
                    X2 = 198;
                  }
                } else {
                  e2 = T(Ie(b2, Ja2, da2, ua2, m2));
                  X2 = 198;
                }
                if ((X2 | 0) == 198)
                  g[b2 + 908 + (c[976 + (Ja2 << 2) >> 2] << 2) >> 2] = e2;
                if ((Aa2 | 0) != 0 ? (Ca2 = c[b2 + 32 >> 2] | 0, Da2 = (Aa2 | 0) == 2, !(Da2 & (Ca2 | 0) != 2)) : 0) {
                  if (Da2 & (Ca2 | 0) == 2) {
                    e2 = T(za2 + qa2);
                    e2 = T(cC(T(eC(e2, T(Te(b2, Ka2, T(za2 + oa2), ya2)))), za2));
                    X2 = 204;
                  }
                } else {
                  e2 = T(Ie(b2, Ka2, T(za2 + oa2), ya2, m2));
                  X2 = 204;
                }
                if ((X2 | 0) == 204)
                  g[b2 + 908 + (c[976 + (Ka2 << 2) >> 2] << 2) >> 2] = e2;
                if (o2) {
                  if ((c[Ba2 >> 2] | 0) == 2) {
                    r2 = 976 + (Ka2 << 2) | 0;
                    s2 = 1040 + (Ka2 << 2) | 0;
                    q2 = 0;
                    do {
                      t2 = ac(b2, q2) | 0;
                      if (!(c[t2 + 24 >> 2] | 0)) {
                        Na2 = c[r2 >> 2] | 0;
                        Ma2 = T(g[b2 + 908 + (Na2 << 2) >> 2]);
                        Oa2 = t2 + 400 + (c[s2 >> 2] << 2) | 0;
                        Ma2 = T(Ma2 - T(g[Oa2 >> 2]));
                        g[Oa2 >> 2] = T(Ma2 - T(g[t2 + 908 + (Na2 << 2) >> 2]));
                      }
                      q2 = q2 + 1 | 0;
                    } while ((q2 | 0) != (Ia2 | 0));
                  }
                  if (h2 | 0) {
                    q2 = Fa2 ? pa2 : i3;
                    do {
                      Ue(b2, h2, Ea2, q2, sa2, Ga2, p2);
                      h2 = c[h2 + 960 >> 2] | 0;
                    } while ((h2 | 0) != 0);
                  }
                  q2 = (Ja2 | 2 | 0) == 3;
                  r2 = (Ka2 | 2 | 0) == 3;
                  if (q2 | r2) {
                    h2 = 0;
                    do {
                      s2 = c[(c[Ha2 >> 2] | 0) + (h2 << 2) >> 2] | 0;
                      if ((c[s2 + 36 >> 2] | 0) != 1) {
                        if (q2)
                          Ve(b2, s2, Ja2);
                        if (r2)
                          Ve(b2, s2, Ka2);
                      }
                      h2 = h2 + 1 | 0;
                    } while ((h2 | 0) != (Ia2 | 0));
                  }
                }
              } else
                we(b2, e2, f2, i3, k2, m2, n2);
            while (0);
            l = La2;
            return;
          }
          function Zd(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            var c2 = 0;
            Vb(a2, b2 >= T(0), 3147);
            c2 = b2 == T(0);
            g[a2 + 4 >> 2] = c2 ? T(0) : b2;
            return;
          }
          function _d(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = T(d2);
            e2 = T(e2);
            f2 = f2 | 0;
            var h2 = ib, i3 = ib, j2 = 0, k2 = 0, l2 = 0;
            c[2278] = (c[2278] | 0) + 1;
            $d(b2);
            if (!(ae(b2, 2, d2) | 0)) {
              h2 = T(be(b2 + 380 | 0, d2));
              if (!(h2 >= T(0))) {
                l2 = ((Sb(d2) | 0) ^ 1) & 1;
                h2 = d2;
              } else
                l2 = 2;
            } else {
              h2 = T(be(c[b2 + 992 >> 2] | 0, d2));
              l2 = 1;
              h2 = T(h2 + T(Ud(b2, 2, d2)));
            }
            if (!(ae(b2, 0, e2) | 0)) {
              i3 = T(be(b2 + 388 | 0, e2));
              if (!(i3 >= T(0))) {
                k2 = ((Sb(e2) | 0) ^ 1) & 1;
                i3 = e2;
              } else
                k2 = 2;
            } else {
              i3 = T(be(c[b2 + 996 >> 2] | 0, e2));
              k2 = 1;
              i3 = T(i3 + T(Ud(b2, 0, d2)));
            }
            j2 = b2 + 976 | 0;
            if (Td(b2, h2, i3, f2, l2, k2, d2, e2, 1, 3189, c[j2 >> 2] | 0) | 0 ? (ce(b2, c[b2 + 496 >> 2] | 0, d2, e2, d2), de(b2, T(g[(c[j2 >> 2] | 0) + 4 >> 2]), T(0), T(0)), a[11696] | 0) : 0)
              Md(b2, 7);
            return;
          }
          function $d(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            i3 = l;
            l = l + 32 | 0;
            h2 = i3 + 24 | 0;
            g2 = i3 + 16 | 0;
            e2 = i3 + 8 | 0;
            f2 = i3;
            d2 = 0;
            do {
              b2 = a2 + 380 + (d2 << 3) | 0;
              if (!((c[a2 + 380 + (d2 << 3) + 4 >> 2] | 0) != 0 ? (j2 = b2, k2 = c[j2 + 4 >> 2] | 0, m2 = e2, c[m2 >> 2] = c[j2 >> 2], c[m2 + 4 >> 2] = k2, m2 = a2 + 364 + (d2 << 3) | 0, k2 = c[m2 + 4 >> 2] | 0, j2 = f2, c[j2 >> 2] = c[m2 >> 2], c[j2 + 4 >> 2] = k2, c[g2 >> 2] = c[e2 >> 2], c[g2 + 4 >> 2] = c[e2 + 4 >> 2], c[h2 >> 2] = c[f2 >> 2], c[h2 + 4 >> 2] = c[f2 + 4 >> 2], Kd(g2, h2) | 0) : 0))
                b2 = a2 + 348 + (d2 << 3) | 0;
              c[a2 + 992 + (d2 << 2) >> 2] = b2;
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != 2);
            l = i3;
            return;
          }
          function ae(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = 0;
            a2 = c[a2 + 992 + (c[976 + (b2 << 2) >> 2] << 2) >> 2] | 0;
            switch (c[a2 + 4 >> 2] | 0) {
              case 0:
              case 3: {
                a2 = 0;
                break;
              }
              case 1: {
                if (T(g[a2 >> 2]) < T(0))
                  a2 = 0;
                else
                  e2 = 5;
                break;
              }
              case 2: {
                if (T(g[a2 >> 2]) < T(0))
                  a2 = 0;
                else
                  a2 = (Sb(d2) | 0) ^ 1;
                break;
              }
              default:
                e2 = 5;
            }
            if ((e2 | 0) == 5)
              a2 = 1;
            return a2 | 0;
          }
          function be(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            switch (c[a2 + 4 >> 2] | 0) {
              case 2: {
                b2 = T(T(T(g[a2 >> 2]) * b2) / T(100));
                break;
              }
              case 1: {
                b2 = T(g[a2 >> 2]);
                break;
              }
              default:
                b2 = T(t);
            }
            return T(b2);
          }
          function ce(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            e2 = T(e2);
            f2 = T(f2);
            var h2 = 0, i3 = ib;
            b2 = c[a2 + 944 >> 2] | 0 ? b2 : 1;
            h2 = re(c[a2 + 4 >> 2] | 0, b2) | 0;
            b2 = ze(h2, b2) | 0;
            d2 = T($e(a2, h2, d2));
            e2 = T($e(a2, b2, e2));
            i3 = T(d2 + T(me(a2, h2, f2)));
            g[a2 + 400 + (c[1040 + (h2 << 2) >> 2] << 2) >> 2] = i3;
            d2 = T(d2 + T(ne(a2, h2, f2)));
            g[a2 + 400 + (c[1e3 + (h2 << 2) >> 2] << 2) >> 2] = d2;
            d2 = T(e2 + T(me(a2, b2, f2)));
            g[a2 + 400 + (c[1040 + (b2 << 2) >> 2] << 2) >> 2] = d2;
            f2 = T(e2 + T(ne(a2, b2, f2)));
            g[a2 + 400 + (c[1e3 + (b2 << 2) >> 2] << 2) >> 2] = f2;
            return;
          }
          function de(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = T(b2);
            d2 = T(d2);
            e2 = T(e2);
            var f2 = 0, h2 = 0, i3 = ib, j2 = ib, k2 = 0, l2 = 0, m2 = ib, n2 = 0, o2 = ib, p2 = ib, q2 = ib, r2 = ib;
            if (!(b2 == T(0))) {
              f2 = a2 + 400 | 0;
              r2 = T(g[f2 >> 2]);
              h2 = a2 + 404 | 0;
              q2 = T(g[h2 >> 2]);
              n2 = a2 + 416 | 0;
              p2 = T(g[n2 >> 2]);
              l2 = a2 + 420 | 0;
              i3 = T(g[l2 >> 2]);
              o2 = T(r2 + d2);
              m2 = T(q2 + e2);
              e2 = T(o2 + p2);
              j2 = T(m2 + i3);
              k2 = (c[a2 + 988 >> 2] | 0) == 1;
              g[f2 >> 2] = T(Od(r2, b2, 0, k2));
              g[h2 >> 2] = T(Od(q2, b2, 0, k2));
              d2 = T(gC(T(p2 * b2), T(1)));
              if (Ld(d2, T(0)) | 0)
                h2 = 0;
              else
                h2 = (Ld(d2, T(1)) | 0) ^ 1;
              d2 = T(gC(T(i3 * b2), T(1)));
              if (Ld(d2, T(0)) | 0)
                f2 = 0;
              else
                f2 = (Ld(d2, T(1)) | 0) ^ 1;
              r2 = T(Od(e2, b2, k2 & h2, k2 & (h2 ^ 1)));
              g[n2 >> 2] = T(r2 - T(Od(o2, b2, 0, k2)));
              r2 = T(Od(j2, b2, k2 & f2, k2 & (f2 ^ 1)));
              g[l2 >> 2] = T(r2 - T(Od(m2, b2, 0, k2)));
              h2 = (c[a2 + 952 >> 2] | 0) - (c[a2 + 948 >> 2] | 0) >> 2;
              if (h2 | 0) {
                f2 = 0;
                do {
                  de(ac(a2, f2) | 0, b2, o2, m2);
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (h2 | 0));
              }
            }
            return;
          }
          function ee(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            switch (d2 | 0) {
              case 5:
              case 0: {
                a2 = CB(c[489] | 0, e2, f2) | 0;
                break;
              }
              default:
                a2 = iC(e2, f2) | 0;
            }
            return a2 | 0;
          }
          function fe(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            f2 = l;
            l = l + 16 | 0;
            g2 = f2;
            c[g2 >> 2] = e2;
            ge(a2, 0, b2, d2, g2);
            l = f2;
            return;
          }
          function ge(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            a2 = a2 | 0 ? a2 : 956;
            Bb[c[a2 + 8 >> 2] & 1](a2, b2, d2, e2, f2) | 0;
            if ((d2 | 0) == 5)
              Ta();
            else
              return;
          }
          function he(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            a[b2 + c2 >> 0] = d2 & 1;
            return;
          }
          function ie(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 0;
            d2 = b2 + 4 | 0;
            e2 = (c[d2 >> 2] | 0) - (c[b2 >> 2] | 0) >> 2;
            if (e2 | 0) {
              je(a2, e2);
              ke(a2, c[b2 >> 2] | 0, c[d2 >> 2] | 0, e2);
            }
            return;
          }
          function je(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            if ((le(a2) | 0) >>> 0 < b2 >>> 0)
              jC(a2);
            if (b2 >>> 0 > 1073741823)
              Ta();
            else {
              d2 = qC(b2 << 2) | 0;
              c[a2 + 4 >> 2] = d2;
              c[a2 >> 2] = d2;
              c[a2 + 8 >> 2] = d2 + (b2 << 2);
              return;
            }
          }
          function ke(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            e2 = a2 + 4 | 0;
            a2 = d2 - b2 | 0;
            if ((a2 | 0) > 0) {
              BC(c[e2 >> 2] | 0, b2 | 0, a2 | 0) | 0;
              c[e2 >> 2] = (c[e2 >> 2] | 0) + (a2 >>> 2 << 2);
            }
            return;
          }
          function le(a2) {
            a2 = a2 | 0;
            return 1073741823;
          }
          function me(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            if (oe(b2) | 0 ? (c[a2 + 96 >> 2] | 0) != 0 : 0)
              a2 = a2 + 92 | 0;
            else
              a2 = Tb(a2 + 60 | 0, c[1040 + (b2 << 2) >> 2] | 0, 992) | 0;
            return T(pe(a2, d2));
          }
          function ne(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            if (oe(b2) | 0 ? (c[a2 + 104 >> 2] | 0) != 0 : 0)
              a2 = a2 + 100 | 0;
            else
              a2 = Tb(a2 + 60 | 0, c[1e3 + (b2 << 2) >> 2] | 0, 992) | 0;
            return T(pe(a2, d2));
          }
          function oe(a2) {
            a2 = a2 | 0;
            return (a2 | 1 | 0) == 3 | 0;
          }
          function pe(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            if ((c[a2 + 4 >> 2] | 0) == 3)
              b2 = T(0);
            else
              b2 = T(be(a2, b2));
            return T(b2);
          }
          function qe(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            a2 = c[a2 >> 2] | 0;
            return ((a2 | 0) == 0 ? (b2 | 0) > 1 ? b2 : 1 : a2) | 0;
          }
          function re(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0;
            a:
              do
                if ((b2 | 0) == 2) {
                  switch (a2 | 0) {
                    case 2: {
                      a2 = 3;
                      break a;
                    }
                    case 3:
                      break;
                    default: {
                      c2 = 4;
                      break a;
                    }
                  }
                  a2 = 2;
                } else
                  c2 = 4;
              while (0);
            return a2 | 0;
          }
          function se(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = ib;
            if (!((oe(b2) | 0 ? (c[a2 + 312 >> 2] | 0) != 0 : 0) ? (d2 = T(g[a2 + 308 >> 2]), d2 >= T(0)) : 0))
              d2 = T(cC(T(g[(Tb(a2 + 276 | 0, c[1040 + (b2 << 2) >> 2] | 0, 992) | 0) >> 2]), T(0)));
            return T(d2);
          }
          function te(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = ib;
            if (!((oe(b2) | 0 ? (c[a2 + 320 >> 2] | 0) != 0 : 0) ? (d2 = T(g[a2 + 316 >> 2]), d2 >= T(0)) : 0))
              d2 = T(cC(T(g[(Tb(a2 + 276 | 0, c[1e3 + (b2 << 2) >> 2] | 0, 992) | 0) >> 2]), T(0)));
            return T(d2);
          }
          function ue(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = ib;
            if (!((oe(b2) | 0 ? (c[a2 + 240 >> 2] | 0) != 0 : 0) ? (e2 = T(be(a2 + 236 | 0, d2)), e2 >= T(0)) : 0))
              e2 = T(cC(T(be(Tb(a2 + 204 | 0, c[1040 + (b2 << 2) >> 2] | 0, 992) | 0, d2)), T(0)));
            return T(e2);
          }
          function ve(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = ib;
            if (!((oe(b2) | 0 ? (c[a2 + 248 >> 2] | 0) != 0 : 0) ? (e2 = T(be(a2 + 244 | 0, d2)), e2 >= T(0)) : 0))
              e2 = T(cC(T(be(Tb(a2 + 204 | 0, c[1e3 + (b2 << 2) >> 2] | 0, 992) | 0, d2)), T(0)));
            return T(e2);
          }
          function we(a2, b2, d2, e2, f2, h2, i3) {
            a2 = a2 | 0;
            b2 = T(b2);
            d2 = T(d2);
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = T(h2);
            i3 = T(i3);
            var j2 = ib, k2 = ib, m2 = ib, n2 = ib, o2 = ib, p2 = ib, q2 = 0, r2 = 0, s2 = 0;
            s2 = l;
            l = l + 16 | 0;
            q2 = s2;
            r2 = a2 + 964 | 0;
            ec(a2, (c[r2 >> 2] | 0) != 0, 3519);
            j2 = T(Ce(a2, 2, b2));
            k2 = T(Ce(a2, 0, b2));
            m2 = T(Ud(a2, 2, b2));
            n2 = T(Ud(a2, 0, b2));
            if (Sb(b2) | 0)
              o2 = b2;
            else
              o2 = T(cC(T(0), T(T(b2 - m2) - j2)));
            if (Sb(d2) | 0)
              p2 = d2;
            else
              p2 = T(cC(T(0), T(T(d2 - n2) - k2)));
            if ((e2 | 0) == 1 & (f2 | 0) == 1) {
              g[a2 + 908 >> 2] = T(Ie(a2, 2, T(b2 - m2), h2, h2));
              b2 = T(Ie(a2, 0, T(d2 - n2), i3, h2));
            } else {
              Db[c[r2 >> 2] & 1](q2, a2, o2, e2, p2, f2);
              o2 = T(j2 + T(g[q2 >> 2]));
              p2 = T(b2 - m2);
              g[a2 + 908 >> 2] = T(Ie(a2, 2, (e2 | 2 | 0) == 2 ? o2 : p2, h2, h2));
              p2 = T(k2 + T(g[q2 + 4 >> 2]));
              b2 = T(d2 - n2);
              b2 = T(Ie(a2, 0, (f2 | 2 | 0) == 2 ? p2 : b2, i3, h2));
            }
            g[a2 + 912 >> 2] = b2;
            l = s2;
            return;
          }
          function xe(a2, b2, c2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            b2 = T(b2);
            c2 = T(c2);
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = T(f2);
            h2 = T(h2);
            var i3 = ib, j2 = ib, k2 = ib, l2 = ib;
            k2 = T(Ce(a2, 2, f2));
            i3 = T(Ce(a2, 0, f2));
            l2 = T(Ud(a2, 2, f2));
            j2 = T(Ud(a2, 0, f2));
            b2 = T(b2 - l2);
            g[a2 + 908 >> 2] = T(Ie(a2, 2, (d2 | 2 | 0) == 2 ? k2 : b2, f2, f2));
            c2 = T(c2 - j2);
            g[a2 + 912 >> 2] = T(Ie(a2, 0, (e2 | 2 | 0) == 2 ? i3 : c2, h2, f2));
            return;
          }
          function ye(a2, b2, c2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            b2 = T(b2);
            c2 = T(c2);
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = T(f2);
            h2 = T(h2);
            var i3 = 0, j2 = ib, k2 = ib;
            i3 = (d2 | 0) == 2;
            if ((!(b2 <= T(0) & i3) ? !(c2 <= T(0) & (e2 | 0) == 2) : 0) ? !((d2 | 0) == 1 & (e2 | 0) == 1) : 0)
              a2 = 0;
            else {
              j2 = T(Ud(a2, 0, f2));
              k2 = T(Ud(a2, 2, f2));
              i3 = b2 < T(0) & i3 | (Sb(b2) | 0);
              b2 = T(b2 - k2);
              g[a2 + 908 >> 2] = T(Ie(a2, 2, i3 ? T(0) : b2, f2, f2));
              b2 = T(c2 - j2);
              i3 = c2 < T(0) & (e2 | 0) == 2 | (Sb(c2) | 0);
              g[a2 + 912 >> 2] = T(Ie(a2, 0, i3 ? T(0) : b2, h2, f2));
              a2 = 1;
            }
            return a2 | 0;
          }
          function ze(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (We(a2) | 0)
              a2 = re(2, b2) | 0;
            else
              a2 = 0;
            return a2 | 0;
          }
          function Ae(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = T(c2);
            c2 = T(ue(a2, b2, c2));
            return T(c2 + T(se(a2, b2)));
          }
          function Be(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = T(c2);
            c2 = T(ve(a2, b2, c2));
            return T(c2 + T(te(a2, b2)));
          }
          function Ce(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = T(c2);
            var d2 = ib;
            d2 = T(Ae(a2, b2, c2));
            return T(d2 + T(Be(a2, b2, c2)));
          }
          function De(a2) {
            a2 = a2 | 0;
            if (!(c[a2 + 24 >> 2] | 0)) {
              if (T(Ee(a2)) != T(0))
                a2 = 1;
              else
                a2 = T(Fe(a2)) != T(0);
            } else
              a2 = 0;
            return a2 | 0;
          }
          function Ee(a2) {
            a2 = a2 | 0;
            var b2 = ib;
            if (c[a2 + 944 >> 2] | 0) {
              b2 = T(g[a2 + 44 >> 2]);
              if (Sb(b2) | 0) {
                b2 = T(g[a2 + 40 >> 2]);
                a2 = b2 > T(0) & ((Sb(b2) | 0) ^ 1);
                return T(a2 ? b2 : T(0));
              }
            } else
              b2 = T(0);
            return T(b2);
          }
          function Fe(b2) {
            b2 = b2 | 0;
            var d2 = ib, e2 = 0, f2 = ib;
            do
              if (c[b2 + 944 >> 2] | 0) {
                d2 = T(g[b2 + 48 >> 2]);
                if (Sb(d2) | 0) {
                  e2 = a[(c[b2 + 976 >> 2] | 0) + 2 >> 0] | 0;
                  if (e2 << 24 >> 24 == 0 ? (f2 = T(g[b2 + 40 >> 2]), f2 < T(0) & ((Sb(f2) | 0) ^ 1)) : 0) {
                    d2 = T(-f2);
                    break;
                  }
                  d2 = e2 << 24 >> 24 ? T(1) : T(0);
                }
              } else
                d2 = T(0);
            while (0);
            return T(d2);
          }
          function Ge(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            yC(b2 + 400 | 0, 0, 540) | 0;
            a[b2 + 985 >> 0] = 1;
            lc(b2);
            e2 = $b(b2) | 0;
            if (e2 | 0) {
              d2 = b2 + 948 | 0;
              b2 = 0;
              do {
                Ge(c[(c[d2 >> 2] | 0) + (b2 << 2) >> 2] | 0);
                b2 = b2 + 1 | 0;
              } while ((b2 | 0) != (e2 | 0));
            }
            return;
          }
          function He(a2, b2, d2, e2, f2, h2, i3, j2, k2, m2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            e2 = e2 | 0;
            f2 = T(f2);
            h2 = T(h2);
            i3 = T(i3);
            j2 = j2 | 0;
            k2 = k2 | 0;
            m2 = m2 | 0;
            var n2 = 0, o2 = ib, p2 = 0, q2 = 0, r2 = ib, s2 = ib, u2 = 0, v2 = ib, w2 = 0, x2 = ib, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0;
            G2 = l;
            l = l + 16 | 0;
            A2 = G2 + 12 | 0;
            B2 = G2 + 8 | 0;
            C2 = G2 + 4 | 0;
            D2 = G2;
            F2 = re(c[a2 + 4 >> 2] | 0, k2) | 0;
            y2 = oe(F2) | 0;
            o2 = T(be(Xe(b2) | 0, y2 ? h2 : i3));
            z2 = ae(b2, 2, h2) | 0;
            E2 = ae(b2, 0, i3) | 0;
            do
              if (!(Sb(o2) | 0) ? !(Sb(y2 ? d2 : f2) | 0) : 0) {
                n2 = b2 + 504 | 0;
                if (!(Sb(T(g[n2 >> 2])) | 0)) {
                  if (!(Ye(c[b2 + 976 >> 2] | 0, 0) | 0))
                    break;
                  if ((c[b2 + 500 >> 2] | 0) == (c[2278] | 0))
                    break;
                }
                g[n2 >> 2] = T(cC(o2, T(Ce(b2, F2, h2))));
              } else
                p2 = 7;
            while (0);
            do
              if ((p2 | 0) == 7) {
                w2 = y2 ^ 1;
                if (!(w2 | z2 ^ 1)) {
                  i3 = T(be(c[b2 + 992 >> 2] | 0, h2));
                  g[b2 + 504 >> 2] = T(cC(i3, T(Ce(b2, 2, h2))));
                  break;
                }
                if (!(y2 | E2 ^ 1)) {
                  i3 = T(be(c[b2 + 996 >> 2] | 0, i3));
                  g[b2 + 504 >> 2] = T(cC(i3, T(Ce(b2, 0, h2))));
                  break;
                }
                g[A2 >> 2] = T(t);
                g[B2 >> 2] = T(t);
                c[C2 >> 2] = 0;
                c[D2 >> 2] = 0;
                v2 = T(Ud(b2, 2, h2));
                x2 = T(Ud(b2, 0, h2));
                if (z2) {
                  r2 = T(v2 + T(be(c[b2 + 992 >> 2] | 0, h2)));
                  g[A2 >> 2] = r2;
                  c[C2 >> 2] = 1;
                  q2 = 1;
                } else {
                  q2 = 0;
                  r2 = T(t);
                }
                if (E2) {
                  o2 = T(x2 + T(be(c[b2 + 996 >> 2] | 0, i3)));
                  g[B2 >> 2] = o2;
                  c[D2 >> 2] = 1;
                  n2 = 1;
                } else {
                  n2 = 0;
                  o2 = T(t);
                }
                p2 = c[a2 + 32 >> 2] | 0;
                if (!(y2 & (p2 | 0) == 2)) {
                  if (Sb(r2) | 0 ? !(Sb(d2) | 0) : 0) {
                    g[A2 >> 2] = d2;
                    c[C2 >> 2] = 2;
                    q2 = 2;
                    r2 = d2;
                  }
                } else
                  p2 = 2;
                if ((!((p2 | 0) == 2 & w2) ? Sb(o2) | 0 : 0) ? !(Sb(f2) | 0) : 0) {
                  g[B2 >> 2] = f2;
                  c[D2 >> 2] = 2;
                  n2 = 2;
                  o2 = f2;
                }
                s2 = T(g[b2 + 396 >> 2]);
                u2 = Sb(s2) | 0;
                do
                  if (!u2) {
                    if ((q2 | 0) == 1 & w2) {
                      g[B2 >> 2] = T(T(r2 - v2) / s2);
                      c[D2 >> 2] = 1;
                      n2 = 1;
                      p2 = 1;
                      break;
                    }
                    if (y2 & (n2 | 0) == 1) {
                      g[A2 >> 2] = T(s2 * T(o2 - x2));
                      c[C2 >> 2] = 1;
                      n2 = 1;
                      p2 = 1;
                    } else
                      p2 = q2;
                  } else
                    p2 = q2;
                while (0);
                H2 = Sb(d2) | 0;
                q2 = (Je(a2, b2) | 0) != 4;
                if (!(y2 | z2 | ((e2 | 0) != 1 | H2) | (q2 | (p2 | 0) == 1)) ? (g[A2 >> 2] = d2, c[C2 >> 2] = 1, !u2) : 0) {
                  g[B2 >> 2] = T(T(d2 - v2) / s2);
                  c[D2 >> 2] = 1;
                  n2 = 1;
                }
                if (!(E2 | w2 | ((j2 | 0) != 1 | (Sb(f2) | 0)) | (q2 | (n2 | 0) == 1)) ? (g[B2 >> 2] = f2, c[D2 >> 2] = 1, !u2) : 0) {
                  g[A2 >> 2] = T(s2 * T(f2 - x2));
                  c[C2 >> 2] = 1;
                }
                Me(b2, 2, h2, h2, C2, A2);
                Me(b2, 0, i3, h2, D2, B2);
                d2 = T(g[A2 >> 2]);
                f2 = T(g[B2 >> 2]);
                Td(b2, d2, f2, k2, c[C2 >> 2] | 0, c[D2 >> 2] | 0, h2, i3, 0, 3565, m2) | 0;
                i3 = T(g[b2 + 908 + (c[976 + (F2 << 2) >> 2] << 2) >> 2]);
                g[b2 + 504 >> 2] = T(cC(i3, T(Ce(b2, F2, h2))));
              }
            while (0);
            c[b2 + 500 >> 2] = c[2278];
            l = G2;
            return;
          }
          function Ie(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = T(c2);
            d2 = T(d2);
            e2 = T(e2);
            d2 = T(Te(a2, b2, c2, d2));
            return T(cC(d2, T(Ce(a2, b2, e2))));
          }
          function Je(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            b2 = b2 + 20 | 0;
            b2 = c[((c[b2 >> 2] | 0) == 0 ? a2 + 16 | 0 : b2) >> 2] | 0;
            if ((b2 | 0) == 5 ? We(c[a2 + 4 >> 2] | 0) | 0 : 0)
              b2 = 1;
            return b2 | 0;
          }
          function Ke(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (oe(b2) | 0 ? (c[a2 + 96 >> 2] | 0) != 0 : 0)
              b2 = 4;
            else
              b2 = c[1040 + (b2 << 2) >> 2] | 0;
            return a2 + 60 + (b2 << 3) | 0;
          }
          function Le(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (oe(b2) | 0 ? (c[a2 + 104 >> 2] | 0) != 0 : 0)
              b2 = 5;
            else
              b2 = c[1e3 + (b2 << 2) >> 2] | 0;
            return a2 + 60 + (b2 << 3) | 0;
          }
          function Me(a2, b2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            e2 = T(e2);
            f2 = f2 | 0;
            h2 = h2 | 0;
            d2 = T(be(a2 + 380 + (c[976 + (b2 << 2) >> 2] << 3) | 0, d2));
            d2 = T(d2 + T(Ud(a2, b2, e2)));
            switch (c[f2 >> 2] | 0) {
              case 2:
              case 1: {
                f2 = Sb(d2) | 0;
                e2 = T(g[h2 >> 2]);
                g[h2 >> 2] = f2 | e2 < d2 ? e2 : d2;
                break;
              }
              case 0: {
                if (!(Sb(d2) | 0)) {
                  c[f2 >> 2] = 2;
                  g[h2 >> 2] = d2;
                }
                break;
              }
              default: {
              }
            }
            return;
          }
          function Ne(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            a2 = a2 + 132 | 0;
            if (oe(b2) | 0 ? (c[(Tb(a2, 4, 948) | 0) + 4 >> 2] | 0) != 0 : 0)
              a2 = 1;
            else
              a2 = (c[(Tb(a2, c[1040 + (b2 << 2) >> 2] | 0, 948) | 0) + 4 >> 2] | 0) != 0;
            return a2 | 0;
          }
          function Oe(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = 0, f2 = 0;
            a2 = a2 + 132 | 0;
            if (oe(b2) | 0 ? (e2 = Tb(a2, 4, 948) | 0, (c[e2 + 4 >> 2] | 0) != 0) : 0)
              f2 = 4;
            else {
              e2 = Tb(a2, c[1040 + (b2 << 2) >> 2] | 0, 948) | 0;
              if (!(c[e2 + 4 >> 2] | 0))
                d2 = T(0);
              else
                f2 = 4;
            }
            if ((f2 | 0) == 4)
              d2 = T(be(e2, d2));
            return T(d2);
          }
          function Pe(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = ib;
            e2 = T(g[a2 + 908 + (c[976 + (b2 << 2) >> 2] << 2) >> 2]);
            e2 = T(e2 + T(me(a2, b2, d2)));
            return T(e2 + T(ne(a2, b2, d2)));
          }
          function Qe(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            a:
              do
                if (!(We(c[a2 + 4 >> 2] | 0) | 0)) {
                  if ((c[a2 + 16 >> 2] | 0) != 5) {
                    d2 = $b(a2) | 0;
                    if (!d2)
                      b2 = 0;
                    else {
                      b2 = 0;
                      while (1) {
                        e2 = ac(a2, b2) | 0;
                        if ((c[e2 + 24 >> 2] | 0) == 0 ? (c[e2 + 20 >> 2] | 0) == 5 : 0) {
                          b2 = 1;
                          break a;
                        }
                        b2 = b2 + 1 | 0;
                        if (b2 >>> 0 >= d2 >>> 0) {
                          b2 = 0;
                          break;
                        }
                      }
                    }
                  } else
                    b2 = 1;
                } else
                  b2 = 0;
              while (0);
            return b2 | 0;
          }
          function Re(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = ib;
            d2 = T(g[a2 + 908 + (c[976 + (b2 << 2) >> 2] << 2) >> 2]);
            return d2 >= T(0) & ((Sb(d2) | 0) ^ 1) | 0;
          }
          function Se(a2) {
            a2 = a2 | 0;
            var b2 = ib, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = ib;
            d2 = c[a2 + 968 >> 2] | 0;
            if (!d2) {
              h2 = $b(a2) | 0;
              do
                if (h2 | 0) {
                  d2 = 0;
                  f2 = 0;
                  while (1) {
                    e2 = ac(a2, f2) | 0;
                    if (c[e2 + 940 >> 2] | 0) {
                      i3 = 8;
                      break;
                    }
                    if ((c[e2 + 24 >> 2] | 0) != 1) {
                      j2 = (Je(a2, e2) | 0) == 5;
                      if (j2) {
                        d2 = e2;
                        break;
                      } else
                        d2 = (d2 | 0) == 0 ? e2 : d2;
                    }
                    f2 = f2 + 1 | 0;
                    if (f2 >>> 0 >= h2 >>> 0) {
                      i3 = 8;
                      break;
                    }
                  }
                  if ((i3 | 0) == 8) {
                    if (!d2)
                      break;
                  }
                  b2 = T(Se(d2));
                  return T(b2 + T(g[d2 + 404 >> 2]));
                }
              while (0);
              b2 = T(g[a2 + 912 >> 2]);
            } else {
              k2 = T(g[a2 + 908 >> 2]);
              b2 = T(g[a2 + 912 >> 2]);
              b2 = T(mb[d2 & 0](a2, k2, b2));
              ec(a2, (Sb(b2) | 0) ^ 1, 3573);
            }
            return T(b2);
          }
          function Te(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = T(c2);
            d2 = T(d2);
            var e2 = ib, f2 = 0;
            if (!(We(b2) | 0)) {
              if (oe(b2) | 0) {
                b2 = 0;
                f2 = 3;
              } else {
                d2 = T(t);
                e2 = T(t);
              }
            } else {
              b2 = 1;
              f2 = 3;
            }
            if ((f2 | 0) == 3) {
              e2 = T(be(a2 + 364 + (b2 << 3) | 0, d2));
              d2 = T(be(a2 + 380 + (b2 << 3) | 0, d2));
            }
            f2 = d2 < c2 & (d2 >= T(0) & ((Sb(d2) | 0) ^ 1));
            c2 = f2 ? d2 : c2;
            f2 = e2 >= T(0) & ((Sb(e2) | 0) ^ 1) & c2 < e2;
            return T(f2 ? e2 : c2);
          }
          function Ue(a2, b2, d2, e2, f2, h2, i3) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            e2 = e2 | 0;
            f2 = T(f2);
            h2 = h2 | 0;
            i3 = i3 | 0;
            var j2 = ib, k2 = ib, l2 = 0, m2 = 0, n2 = ib, o2 = ib, p2 = ib, q2 = 0, r2 = 0, s2 = 0, u2 = 0, v2 = ib, w2 = 0;
            s2 = re(c[a2 + 4 >> 2] | 0, h2) | 0;
            q2 = ze(s2, h2) | 0;
            r2 = oe(s2) | 0;
            n2 = T(Ud(b2, 2, d2));
            o2 = T(Ud(b2, 0, d2));
            if (!(ae(b2, 2, d2) | 0)) {
              if (Ne(b2, 2) | 0 ? Ze(b2, 2) | 0 : 0) {
                j2 = T(g[a2 + 908 >> 2]);
                k2 = T(se(a2, 2));
                k2 = T(j2 - T(k2 + T(te(a2, 2))));
                j2 = T(Oe(b2, 2, d2));
                j2 = T(Ie(b2, 2, T(k2 - T(j2 + T(_e(b2, 2, d2)))), d2, d2));
              } else
                j2 = T(t);
            } else
              j2 = T(n2 + T(be(c[b2 + 992 >> 2] | 0, d2)));
            if (!(ae(b2, 0, f2) | 0)) {
              if (Ne(b2, 0) | 0 ? Ze(b2, 0) | 0 : 0) {
                k2 = T(g[a2 + 912 >> 2]);
                v2 = T(se(a2, 0));
                v2 = T(k2 - T(v2 + T(te(a2, 0))));
                k2 = T(Oe(b2, 0, f2));
                k2 = T(Ie(b2, 0, T(v2 - T(k2 + T(_e(b2, 0, f2)))), f2, d2));
              } else
                k2 = T(t);
            } else
              k2 = T(o2 + T(be(c[b2 + 996 >> 2] | 0, f2)));
            l2 = Sb(j2) | 0;
            m2 = Sb(k2) | 0;
            do
              if (l2 ^ m2 ? (p2 = T(g[b2 + 396 >> 2]), !(Sb(p2) | 0)) : 0)
                if (l2) {
                  j2 = T(n2 + T(T(k2 - o2) * p2));
                  break;
                } else {
                  v2 = T(o2 + T(T(j2 - n2) / p2));
                  k2 = m2 ? v2 : k2;
                  break;
                }
            while (0);
            m2 = Sb(j2) | 0;
            l2 = Sb(k2) | 0;
            if (m2 | l2) {
              w2 = (m2 ^ 1) & 1;
              e2 = d2 > T(0) & ((e2 | 0) != 0 & m2);
              j2 = r2 ? j2 : e2 ? d2 : j2;
              Td(b2, j2, k2, h2, r2 ? w2 : e2 ? 2 : w2, m2 & (l2 ^ 1) & 1, j2, k2, 0, 3623, i3) | 0;
              j2 = T(g[b2 + 908 >> 2]);
              j2 = T(j2 + T(Ud(b2, 2, d2)));
              k2 = T(g[b2 + 912 >> 2]);
              k2 = T(k2 + T(Ud(b2, 0, d2)));
            }
            Td(b2, j2, k2, h2, 1, 1, j2, k2, 1, 3635, i3) | 0;
            if (Ze(b2, s2) | 0 ? !(Ne(b2, s2) | 0) : 0) {
              w2 = c[976 + (s2 << 2) >> 2] | 0;
              v2 = T(g[a2 + 908 + (w2 << 2) >> 2]);
              v2 = T(v2 - T(g[b2 + 908 + (w2 << 2) >> 2]));
              v2 = T(v2 - T(te(a2, s2)));
              v2 = T(v2 - T(ne(b2, s2, d2)));
              v2 = T(v2 - T(_e(b2, s2, r2 ? d2 : f2)));
              g[b2 + 400 + (c[1040 + (s2 << 2) >> 2] << 2) >> 2] = v2;
            } else
              u2 = 21;
            do
              if ((u2 | 0) == 21) {
                if (!(Ne(b2, s2) | 0) ? (c[a2 + 8 >> 2] | 0) == 1 : 0) {
                  w2 = c[976 + (s2 << 2) >> 2] | 0;
                  v2 = T(g[a2 + 908 + (w2 << 2) >> 2]);
                  v2 = T(T(v2 - T(g[b2 + 908 + (w2 << 2) >> 2])) * T(0.5));
                  g[b2 + 400 + (c[1040 + (s2 << 2) >> 2] << 2) >> 2] = v2;
                  break;
                }
                if (!(Ne(b2, s2) | 0) ? (c[a2 + 8 >> 2] | 0) == 2 : 0) {
                  w2 = c[976 + (s2 << 2) >> 2] | 0;
                  v2 = T(g[a2 + 908 + (w2 << 2) >> 2]);
                  v2 = T(v2 - T(g[b2 + 908 + (w2 << 2) >> 2]));
                  g[b2 + 400 + (c[1040 + (s2 << 2) >> 2] << 2) >> 2] = v2;
                }
              }
            while (0);
            if (Ze(b2, q2) | 0 ? !(Ne(b2, q2) | 0) : 0) {
              w2 = c[976 + (q2 << 2) >> 2] | 0;
              v2 = T(g[a2 + 908 + (w2 << 2) >> 2]);
              v2 = T(v2 - T(g[b2 + 908 + (w2 << 2) >> 2]));
              v2 = T(v2 - T(te(a2, q2)));
              v2 = T(v2 - T(ne(b2, q2, d2)));
              v2 = T(v2 - T(_e(b2, q2, r2 ? f2 : d2)));
              g[b2 + 400 + (c[1040 + (q2 << 2) >> 2] << 2) >> 2] = v2;
            } else
              u2 = 30;
            do
              if ((u2 | 0) == 30 ? !(Ne(b2, q2) | 0) : 0) {
                if ((Je(a2, b2) | 0) == 2) {
                  w2 = c[976 + (q2 << 2) >> 2] | 0;
                  v2 = T(g[a2 + 908 + (w2 << 2) >> 2]);
                  v2 = T(T(v2 - T(g[b2 + 908 + (w2 << 2) >> 2])) * T(0.5));
                  g[b2 + 400 + (c[1040 + (q2 << 2) >> 2] << 2) >> 2] = v2;
                  break;
                }
                w2 = (Je(a2, b2) | 0) == 3;
                if (w2 ^ (c[a2 + 28 >> 2] | 0) == 2) {
                  w2 = c[976 + (q2 << 2) >> 2] | 0;
                  v2 = T(g[a2 + 908 + (w2 << 2) >> 2]);
                  v2 = T(v2 - T(g[b2 + 908 + (w2 << 2) >> 2]));
                  g[b2 + 400 + (c[1040 + (q2 << 2) >> 2] << 2) >> 2] = v2;
                }
              }
            while (0);
            return;
          }
          function Ve(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = ib, f2 = 0;
            f2 = c[976 + (d2 << 2) >> 2] | 0;
            e2 = T(g[b2 + 908 + (f2 << 2) >> 2]);
            e2 = T(T(g[a2 + 908 + (f2 << 2) >> 2]) - e2);
            e2 = T(e2 - T(g[b2 + 400 + (c[1040 + (d2 << 2) >> 2] << 2) >> 2]));
            g[b2 + 400 + (c[1e3 + (d2 << 2) >> 2] << 2) >> 2] = e2;
            return;
          }
          function We(a2) {
            a2 = a2 | 0;
            return (a2 | 1 | 0) == 1 | 0;
          }
          function Xe(b2) {
            b2 = b2 | 0;
            var d2 = ib;
            switch (c[b2 + 56 >> 2] | 0) {
              case 0:
              case 3: {
                d2 = T(g[b2 + 40 >> 2]);
                if (d2 > T(0) & ((Sb(d2) | 0) ^ 1))
                  b2 = a[(c[b2 + 976 >> 2] | 0) + 2 >> 0] | 0 ? 1056 : 992;
                else
                  b2 = 1056;
                break;
              }
              default:
                b2 = b2 + 52 | 0;
            }
            return b2 | 0;
          }
          function Ye(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            return (a[b2 + c2 >> 0] | 0) != 0 | 0;
          }
          function Ze(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            a2 = a2 + 132 | 0;
            if (oe(b2) | 0 ? (c[(Tb(a2, 5, 948) | 0) + 4 >> 2] | 0) != 0 : 0)
              a2 = 1;
            else
              a2 = (c[(Tb(a2, c[1e3 + (b2 << 2) >> 2] | 0, 948) | 0) + 4 >> 2] | 0) != 0;
            return a2 | 0;
          }
          function _e(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = T(d2);
            var e2 = 0, f2 = 0;
            a2 = a2 + 132 | 0;
            if (oe(b2) | 0 ? (e2 = Tb(a2, 5, 948) | 0, (c[e2 + 4 >> 2] | 0) != 0) : 0)
              f2 = 4;
            else {
              e2 = Tb(a2, c[1e3 + (b2 << 2) >> 2] | 0, 948) | 0;
              if (!(c[e2 + 4 >> 2] | 0))
                d2 = T(0);
              else
                f2 = 4;
            }
            if ((f2 | 0) == 4)
              d2 = T(be(e2, d2));
            return T(d2);
          }
          function $e(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = T(c2);
            if (Ne(a2, b2) | 0)
              c2 = T(Oe(a2, b2, c2));
            else
              c2 = T(-T(_e(a2, b2, c2)));
            return T(c2);
          }
          function af(a2) {
            a2 = T(a2);
            return (g[j >> 2] = a2, c[j >> 2] | 0) | 0;
          }
          function bf(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 1073741823)
                  Ta();
                else {
                  f2 = qC(b2 << 2) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 2) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 2);
            return;
          }
          function cf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 2) << 2) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function df(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -4 - b2 | 0) >>> 2) << 2);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function ef(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            h2 = a2 + 4 | 0;
            i3 = c[h2 >> 2] | 0;
            f2 = i3 - e2 | 0;
            g2 = f2 >> 2;
            a2 = b2 + (g2 << 2) | 0;
            if (a2 >>> 0 < d2 >>> 0) {
              e2 = i3;
              do {
                c[e2 >> 2] = c[a2 >> 2];
                a2 = a2 + 4 | 0;
                e2 = (c[h2 >> 2] | 0) + 4 | 0;
                c[h2 >> 2] = e2;
              } while (a2 >>> 0 < d2 >>> 0);
            }
            if (g2 | 0)
              GC(i3 + (0 - g2 << 2) | 0, b2 | 0, f2 | 0) | 0;
            return;
          }
          function ff(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            i3 = b2 + 4 | 0;
            j2 = c[i3 >> 2] | 0;
            f2 = c[a2 >> 2] | 0;
            h2 = d2;
            g2 = h2 - f2 | 0;
            e2 = j2 + (0 - (g2 >> 2) << 2) | 0;
            c[i3 >> 2] = e2;
            if ((g2 | 0) > 0)
              BC(e2 | 0, f2 | 0, g2 | 0) | 0;
            f2 = a2 + 4 | 0;
            g2 = b2 + 8 | 0;
            e2 = (c[f2 >> 2] | 0) - h2 | 0;
            if ((e2 | 0) > 0) {
              BC(c[g2 >> 2] | 0, d2 | 0, e2 | 0) | 0;
              c[g2 >> 2] = (c[g2 >> 2] | 0) + (e2 >>> 2 << 2);
            }
            h2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = c[i3 >> 2];
            c[i3 >> 2] = h2;
            h2 = c[f2 >> 2] | 0;
            c[f2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = h2;
            h2 = a2 + 8 | 0;
            d2 = b2 + 12 | 0;
            a2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[d2 >> 2];
            c[d2 >> 2] = a2;
            c[b2 >> 2] = c[i3 >> 2];
            return j2 | 0;
          }
          function gf(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            h2 = c[b2 >> 2] | 0;
            g2 = c[d2 >> 2] | 0;
            if ((h2 | 0) != (g2 | 0)) {
              f2 = a2 + 8 | 0;
              d2 = ((g2 + -4 - h2 | 0) >>> 2) + 1 | 0;
              a2 = h2;
              e2 = c[f2 >> 2] | 0;
              do {
                c[e2 >> 2] = c[a2 >> 2];
                e2 = (c[f2 >> 2] | 0) + 4 | 0;
                c[f2 >> 2] = e2;
                a2 = a2 + 4 | 0;
              } while ((a2 | 0) != (g2 | 0));
              c[b2 >> 2] = h2 + (d2 << 2);
            }
            return;
          }
          function hf() {
            Qb();
            return;
          }
          function jf() {
            var a2 = 0;
            a2 = qC(4) | 0;
            kf(a2);
            return a2 | 0;
          }
          function kf(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = gc() | 0;
            return;
          }
          function lf(a2) {
            a2 = a2 | 0;
            if (a2 | 0) {
              mf(a2);
              sC(a2);
            }
            return;
          }
          function mf(a2) {
            a2 = a2 | 0;
            ic(c[a2 >> 2] | 0);
            return;
          }
          function nf(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            he(c[a2 >> 2] | 0, b2, d2);
            return;
          }
          function of(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            Zd(c[a2 >> 2] | 0, b2);
            return;
          }
          function pf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return Ye(c[a2 >> 2] | 0, b2) | 0;
          }
          function qf() {
            var a2 = 0;
            a2 = qC(8) | 0;
            rf(a2, 0);
            return a2 | 0;
          }
          function rf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (!b2)
              b2 = Wb() | 0;
            else
              b2 = Ub(c[b2 >> 2] | 0) | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = 0;
            vc(b2, a2);
            return;
          }
          function sf(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = qC(8) | 0;
            rf(b2, a2);
            return b2 | 0;
          }
          function tf(a2) {
            a2 = a2 | 0;
            if (a2 | 0) {
              uf(a2);
              sC(a2);
            }
            return;
          }
          function uf(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            Zb(c[a2 >> 2] | 0);
            b2 = a2 + 4 | 0;
            a2 = c[b2 >> 2] | 0;
            c[b2 >> 2] = 0;
            if (a2 | 0) {
              vf(a2);
              sC(a2);
            }
            return;
          }
          function vf(a2) {
            a2 = a2 | 0;
            wf(a2);
            return;
          }
          function wf(a2) {
            a2 = a2 | 0;
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              ab(a2 | 0);
            return;
          }
          function xf(a2) {
            a2 = a2 | 0;
            return wc(a2) | 0;
          }
          function yf(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            d2 = a2 + 4 | 0;
            b2 = c[d2 >> 2] | 0;
            c[d2 >> 2] = 0;
            if (b2 | 0) {
              vf(b2);
              sC(b2);
            }
            dc(c[a2 >> 2] | 0);
            return;
          }
          function zf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            sc(c[a2 >> 2] | 0, c[b2 >> 2] | 0);
            return;
          }
          function Af(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Hc(c[a2 >> 2] | 0, b2);
            return;
          }
          function Bf(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            Vc(c[a2 >> 2] | 0, b2, T(d2));
            return;
          }
          function Cf(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            Wc(c[a2 >> 2] | 0, b2, T(d2));
            return;
          }
          function Df(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Bc(c[a2 >> 2] | 0, b2);
            return;
          }
          function Ef(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Dc(c[a2 >> 2] | 0, b2);
            return;
          }
          function Ff(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Fc(c[a2 >> 2] | 0, b2);
            return;
          }
          function Gf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            xc(c[a2 >> 2] | 0, b2);
            return;
          }
          function Hf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Jc(c[a2 >> 2] | 0, b2);
            return;
          }
          function If(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            zc(c[a2 >> 2] | 0, b2);
            return;
          }
          function Jf(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            Yc(c[a2 >> 2] | 0, b2, T(d2));
            return;
          }
          function Kf(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            Zc(c[a2 >> 2] | 0, b2, T(d2));
            return;
          }
          function Lf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            $c(c[a2 >> 2] | 0, b2);
            return;
          }
          function Mf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Lc(c[a2 >> 2] | 0, b2);
            return;
          }
          function Nf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Nc(c[a2 >> 2] | 0, b2);
            return;
          }
          function Of(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            Pc(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function Pf(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            Sc(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function Qf(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            Tc(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function Rf(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            Qc(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function Sf(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            Rc(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function Tf(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            fd(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function Uf(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            gd(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function Vf(a2) {
            a2 = a2 | 0;
            hd(c[a2 >> 2] | 0);
            return;
          }
          function Wf(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            jd(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function Xf(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            kd(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function Yf(a2) {
            a2 = a2 | 0;
            ld(c[a2 >> 2] | 0);
            return;
          }
          function Zf(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            nd(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function _f(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            od(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function $f(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            qd(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function ag(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            rd(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function bg(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            td(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function cg(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            ud(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function dg(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            wd(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function eg(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            xd(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function fg(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            zd(c[a2 >> 2] | 0, T(b2));
            return;
          }
          function gg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            dd(c[a2 >> 2] | 0, b2, T(d2));
            return;
          }
          function hg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            ad(c[a2 >> 2] | 0, b2, T(d2));
            return;
          }
          function ig(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            bd(c[a2 >> 2] | 0, b2, T(d2));
            return;
          }
          function jg(a2) {
            a2 = a2 | 0;
            return Ic(c[a2 >> 2] | 0) | 0;
          }
          function kg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2;
            Xc(f2, c[b2 >> 2] | 0, d2);
            lg(a2, f2);
            l = e2;
            return;
          }
          function lg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            mg(a2, c[b2 + 4 >> 2] | 0, +T(g[b2 >> 2]));
            return;
          }
          function mg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            c[a2 >> 2] = b2;
            h[a2 + 8 >> 3] = d2;
            return;
          }
          function ng(a2) {
            a2 = a2 | 0;
            return Cc(c[a2 >> 2] | 0) | 0;
          }
          function og(a2) {
            a2 = a2 | 0;
            return Ec(c[a2 >> 2] | 0) | 0;
          }
          function pg(a2) {
            a2 = a2 | 0;
            return Gc(c[a2 >> 2] | 0) | 0;
          }
          function qg(a2) {
            a2 = a2 | 0;
            return yc(c[a2 >> 2] | 0) | 0;
          }
          function rg(a2) {
            a2 = a2 | 0;
            return Kc(c[a2 >> 2] | 0) | 0;
          }
          function sg(a2) {
            a2 = a2 | 0;
            return Ac(c[a2 >> 2] | 0) | 0;
          }
          function tg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2;
            _c(f2, c[b2 >> 2] | 0, d2);
            lg(a2, f2);
            l = e2;
            return;
          }
          function ug(a2) {
            a2 = a2 | 0;
            return Mc(c[a2 >> 2] | 0) | 0;
          }
          function vg(a2) {
            a2 = a2 | 0;
            return Oc(c[a2 >> 2] | 0) | 0;
          }
          function wg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2;
            Uc(e2, c[b2 >> 2] | 0);
            lg(a2, e2);
            l = d2;
            return;
          }
          function xg(a2) {
            a2 = a2 | 0;
            return + +T(tc(c[a2 >> 2] | 0));
          }
          function yg(a2) {
            a2 = a2 | 0;
            return + +T(uc(c[a2 >> 2] | 0));
          }
          function zg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2;
            id(e2, c[b2 >> 2] | 0);
            lg(a2, e2);
            l = d2;
            return;
          }
          function Ag(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2;
            md(e2, c[b2 >> 2] | 0);
            lg(a2, e2);
            l = d2;
            return;
          }
          function Bg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2;
            pd(e2, c[b2 >> 2] | 0);
            lg(a2, e2);
            l = d2;
            return;
          }
          function Cg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2;
            sd(e2, c[b2 >> 2] | 0);
            lg(a2, e2);
            l = d2;
            return;
          }
          function Dg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2;
            vd(e2, c[b2 >> 2] | 0);
            lg(a2, e2);
            l = d2;
            return;
          }
          function Eg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2;
            yd(e2, c[b2 >> 2] | 0);
            lg(a2, e2);
            l = d2;
            return;
          }
          function Fg(a2) {
            a2 = a2 | 0;
            return + +T(Ad(c[a2 >> 2] | 0));
          }
          function Gg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return + +T(ed(c[a2 >> 2] | 0, b2));
          }
          function Hg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2;
            cd(f2, c[b2 >> 2] | 0, d2);
            lg(a2, f2);
            l = e2;
            return;
          }
          function Ig(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            kc(c[a2 >> 2] | 0, c[b2 >> 2] | 0, d2);
            return;
          }
          function Jg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            cc(c[a2 >> 2] | 0, c[b2 >> 2] | 0);
            return;
          }
          function Kg(a2) {
            a2 = a2 | 0;
            return $b(c[a2 >> 2] | 0) | 0;
          }
          function Lg(a2) {
            a2 = a2 | 0;
            a2 = pc(c[a2 >> 2] | 0) | 0;
            if (!a2)
              a2 = 0;
            else
              a2 = xf(a2) | 0;
            return a2 | 0;
          }
          function Mg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            a2 = ac(c[a2 >> 2] | 0, b2) | 0;
            if (!a2)
              a2 = 0;
            else
              a2 = xf(a2) | 0;
            return a2 | 0;
          }
          function Ng(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            e2 = qC(4) | 0;
            Og(e2, b2);
            d2 = a2 + 4 | 0;
            b2 = c[d2 >> 2] | 0;
            c[d2 >> 2] = e2;
            if (b2 | 0) {
              vf(b2);
              sC(b2);
            }
            jc(c[a2 >> 2] | 0, 1);
            return;
          }
          function Og(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            gh(a2, b2);
            return;
          }
          function Pg(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = T(c2);
            d2 = d2 | 0;
            e2 = T(e2);
            f2 = f2 | 0;
            var i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            j2 = i3;
            Qg(j2, wc(b2) | 0, +c2, d2, +e2, f2);
            g[a2 >> 2] = T(+h[j2 >> 3]);
            g[a2 + 4 >> 2] = T(+h[j2 + 8 >> 3]);
            l = i3;
            return;
          }
          function Qg(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            f2 = +f2;
            g2 = g2 | 0;
            var i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            i3 = l;
            l = l + 32 | 0;
            n2 = i3 + 8 | 0;
            m2 = i3 + 20 | 0;
            k2 = i3;
            j2 = i3 + 16 | 0;
            h[n2 >> 3] = d2;
            c[m2 >> 2] = e2;
            h[k2 >> 3] = f2;
            c[j2 >> 2] = g2;
            Rg(a2, c[b2 + 4 >> 2] | 0, n2, m2, k2, j2);
            l = i3;
            return;
          }
          function Rg(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            var i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            j2 = i3;
            UA(j2);
            b2 = Sg(b2) | 0;
            Tg(a2, b2, +h[d2 >> 3], c[e2 >> 2] | 0, +h[f2 >> 3], c[g2 >> 2] | 0);
            WA(j2);
            l = i3;
            return;
          }
          function Sg(a2) {
            a2 = a2 | 0;
            return c[a2 >> 2] | 0;
          }
          function Tg(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            d2 = d2 | 0;
            e2 = +e2;
            f2 = f2 | 0;
            var g2 = 0;
            g2 = Vg(Ug() | 0) | 0;
            c2 = +Wg(c2);
            d2 = Xg(d2) | 0;
            e2 = +Wg(e2);
            Yg(a2, cb2(0, g2 | 0, b2 | 0, +c2, d2 | 0, +e2, Xg(f2) | 0) | 0);
            return;
          }
          function Ug() {
            var b2 = 0;
            if (!(a[7608] | 0)) {
              dh(9120);
              b2 = 7608;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 9120;
          }
          function Vg(a2) {
            a2 = a2 | 0;
            return c[a2 + 8 >> 2] | 0;
          }
          function Wg(a2) {
            a2 = +a2;
            return + +ch(a2);
          }
          function Xg(a2) {
            a2 = a2 | 0;
            return bh(a2) | 0;
          }
          function Yg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            f2 = l;
            l = l + 32 | 0;
            d2 = f2;
            e2 = b2;
            if (!(e2 & 1)) {
              c[a2 >> 2] = c[b2 >> 2];
              c[a2 + 4 >> 2] = c[b2 + 4 >> 2];
              c[a2 + 8 >> 2] = c[b2 + 8 >> 2];
              c[a2 + 12 >> 2] = c[b2 + 12 >> 2];
            } else {
              Zg(d2, 0);
              Ja(e2 | 0, d2 | 0) | 0;
              _g(a2, d2);
              $g(d2);
            }
            l = f2;
            return;
          }
          function Zg(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            ah(b2, d2);
            c[b2 + 8 >> 2] = 0;
            a[b2 + 24 >> 0] = 0;
            return;
          }
          function _g(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            b2 = b2 + 8 | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function $g(b2) {
            b2 = b2 | 0;
            a[b2 + 24 >> 0] = 0;
            return;
          }
          function ah(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = b2;
            return;
          }
          function bh(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function ch(a2) {
            a2 = +a2;
            return +a2;
          }
          function dh(a2) {
            a2 = a2 | 0;
            fh(a2, eh() | 0, 4);
            return;
          }
          function eh() {
            return 1064;
          }
          function fh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            c[a2 + 8 >> 2] = _a2(b2 | 0, d2 + 1 | 0) | 0;
            return;
          }
          function gh(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            b2 = c[b2 >> 2] | 0;
            c[a2 >> 2] = b2;
            Aa(b2 | 0);
            return;
          }
          function hh(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            d2 = a2 + 4 | 0;
            b2 = c[d2 >> 2] | 0;
            c[d2 >> 2] = 0;
            if (b2 | 0) {
              vf(b2);
              sC(b2);
            }
            jc(c[a2 >> 2] | 0, 0);
            return;
          }
          function ih(a2) {
            a2 = a2 | 0;
            qc(c[a2 >> 2] | 0);
            return;
          }
          function jh(a2) {
            a2 = a2 | 0;
            return rc(c[a2 >> 2] | 0) | 0;
          }
          function kh(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = +d2;
            e2 = e2 | 0;
            _d(c[a2 >> 2] | 0, T(b2), T(d2), e2);
            return;
          }
          function lh(a2) {
            a2 = a2 | 0;
            return + +T(Bd(c[a2 >> 2] | 0));
          }
          function mh(a2) {
            a2 = a2 | 0;
            return + +T(Dd(c[a2 >> 2] | 0));
          }
          function nh(a2) {
            a2 = a2 | 0;
            return + +T(Cd(c[a2 >> 2] | 0));
          }
          function oh(a2) {
            a2 = a2 | 0;
            return + +T(Ed(c[a2 >> 2] | 0));
          }
          function ph(a2) {
            a2 = a2 | 0;
            return + +T(Fd(c[a2 >> 2] | 0));
          }
          function qh(a2) {
            a2 = a2 | 0;
            return + +T(Gd(c[a2 >> 2] | 0));
          }
          function rh(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            h[a2 >> 3] = +T(Bd(c[b2 >> 2] | 0));
            h[a2 + 8 >> 3] = +T(Dd(c[b2 >> 2] | 0));
            h[a2 + 16 >> 3] = +T(Cd(c[b2 >> 2] | 0));
            h[a2 + 24 >> 3] = +T(Ed(c[b2 >> 2] | 0));
            h[a2 + 32 >> 3] = +T(Fd(c[b2 >> 2] | 0));
            h[a2 + 40 >> 3] = +T(Gd(c[b2 >> 2] | 0));
            return;
          }
          function sh(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return + +T(Hd(c[a2 >> 2] | 0, b2));
          }
          function th(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return + +T(Id(c[a2 >> 2] | 0, b2));
          }
          function uh(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return + +T(Jd(c[a2 >> 2] | 0, b2));
          }
          function vh() {
            return fc() | 0;
          }
          function wh() {
            xh();
            yh();
            zh();
            Ah();
            Bh();
            Ch();
            return;
          }
          function xh() {
            kv(11713, 4938, 1);
            return;
          }
          function yh() {
            yu(10448);
            return;
          }
          function zh() {
            eu(10408);
            return;
          }
          function Ah() {
            vt(10324);
            return;
          }
          function Bh() {
            or(10096);
            return;
          }
          function Ch() {
            Dh(9132);
            return;
          }
          function Dh(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = 0, Fa2 = 0, Ga2 = 0;
            b2 = l;
            l = l + 672 | 0;
            d2 = b2 + 656 | 0;
            Ga2 = b2 + 648 | 0;
            Fa2 = b2 + 640 | 0;
            Ea2 = b2 + 632 | 0;
            Da2 = b2 + 624 | 0;
            Ca2 = b2 + 616 | 0;
            Ba2 = b2 + 608 | 0;
            Aa2 = b2 + 600 | 0;
            za2 = b2 + 592 | 0;
            ya2 = b2 + 584 | 0;
            xa2 = b2 + 576 | 0;
            wa2 = b2 + 568 | 0;
            va2 = b2 + 560 | 0;
            ua2 = b2 + 552 | 0;
            ta2 = b2 + 544 | 0;
            sa2 = b2 + 536 | 0;
            ra2 = b2 + 528 | 0;
            qa2 = b2 + 520 | 0;
            pa2 = b2 + 512 | 0;
            oa2 = b2 + 504 | 0;
            na2 = b2 + 496 | 0;
            ma2 = b2 + 488 | 0;
            la2 = b2 + 480 | 0;
            ka2 = b2 + 472 | 0;
            ja2 = b2 + 464 | 0;
            ia2 = b2 + 456 | 0;
            ha2 = b2 + 448 | 0;
            ga2 = b2 + 440 | 0;
            fa2 = b2 + 432 | 0;
            ea2 = b2 + 424 | 0;
            da2 = b2 + 416 | 0;
            ca2 = b2 + 408 | 0;
            ba2 = b2 + 400 | 0;
            aa2 = b2 + 392 | 0;
            $2 = b2 + 384 | 0;
            _2 = b2 + 376 | 0;
            Z2 = b2 + 368 | 0;
            Y2 = b2 + 360 | 0;
            X2 = b2 + 352 | 0;
            W2 = b2 + 344 | 0;
            V2 = b2 + 336 | 0;
            U2 = b2 + 328 | 0;
            T2 = b2 + 320 | 0;
            S2 = b2 + 312 | 0;
            R2 = b2 + 304 | 0;
            Q2 = b2 + 296 | 0;
            P2 = b2 + 288 | 0;
            O2 = b2 + 280 | 0;
            N2 = b2 + 272 | 0;
            M2 = b2 + 264 | 0;
            L2 = b2 + 256 | 0;
            K2 = b2 + 248 | 0;
            J2 = b2 + 240 | 0;
            I2 = b2 + 232 | 0;
            H2 = b2 + 224 | 0;
            G2 = b2 + 216 | 0;
            F2 = b2 + 208 | 0;
            E2 = b2 + 200 | 0;
            D2 = b2 + 192 | 0;
            C2 = b2 + 184 | 0;
            B2 = b2 + 176 | 0;
            A2 = b2 + 168 | 0;
            z2 = b2 + 160 | 0;
            y2 = b2 + 152 | 0;
            x2 = b2 + 144 | 0;
            w2 = b2 + 136 | 0;
            v2 = b2 + 128 | 0;
            u2 = b2 + 120 | 0;
            t2 = b2 + 112 | 0;
            s2 = b2 + 104 | 0;
            r2 = b2 + 96 | 0;
            q2 = b2 + 88 | 0;
            p2 = b2 + 80 | 0;
            o2 = b2 + 72 | 0;
            n2 = b2 + 64 | 0;
            m2 = b2 + 56 | 0;
            k2 = b2 + 48 | 0;
            j2 = b2 + 40 | 0;
            i3 = b2 + 32 | 0;
            h2 = b2 + 24 | 0;
            g2 = b2 + 16 | 0;
            f2 = b2 + 8 | 0;
            e2 = b2;
            Eh(a2, 3646);
            Fh(a2, 3651, 2) | 0;
            Gh(a2, 3665, 2) | 0;
            Hh(a2, 3682, 18) | 0;
            c[Ga2 >> 2] = 19;
            c[Ga2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[Ga2 >> 2];
            c[d2 + 4 >> 2] = c[Ga2 + 4 >> 2];
            Ih(a2, 3690, d2) | 0;
            c[Fa2 >> 2] = 1;
            c[Fa2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[Fa2 >> 2];
            c[d2 + 4 >> 2] = c[Fa2 + 4 >> 2];
            Jh(a2, 3696, d2) | 0;
            c[Ea2 >> 2] = 2;
            c[Ea2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[Ea2 >> 2];
            c[d2 + 4 >> 2] = c[Ea2 + 4 >> 2];
            Kh(a2, 3706, d2) | 0;
            c[Da2 >> 2] = 1;
            c[Da2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[Da2 >> 2];
            c[d2 + 4 >> 2] = c[Da2 + 4 >> 2];
            Lh(a2, 3722, d2) | 0;
            c[Ca2 >> 2] = 2;
            c[Ca2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[Ca2 >> 2];
            c[d2 + 4 >> 2] = c[Ca2 + 4 >> 2];
            Lh(a2, 3734, d2) | 0;
            c[Ba2 >> 2] = 3;
            c[Ba2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[Ba2 >> 2];
            c[d2 + 4 >> 2] = c[Ba2 + 4 >> 2];
            Kh(a2, 3753, d2) | 0;
            c[Aa2 >> 2] = 4;
            c[Aa2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[Aa2 >> 2];
            c[d2 + 4 >> 2] = c[Aa2 + 4 >> 2];
            Kh(a2, 3769, d2) | 0;
            c[za2 >> 2] = 5;
            c[za2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[za2 >> 2];
            c[d2 + 4 >> 2] = c[za2 + 4 >> 2];
            Kh(a2, 3783, d2) | 0;
            c[ya2 >> 2] = 6;
            c[ya2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ya2 >> 2];
            c[d2 + 4 >> 2] = c[ya2 + 4 >> 2];
            Kh(a2, 3796, d2) | 0;
            c[xa2 >> 2] = 7;
            c[xa2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[xa2 >> 2];
            c[d2 + 4 >> 2] = c[xa2 + 4 >> 2];
            Kh(a2, 3813, d2) | 0;
            c[wa2 >> 2] = 8;
            c[wa2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[wa2 >> 2];
            c[d2 + 4 >> 2] = c[wa2 + 4 >> 2];
            Kh(a2, 3825, d2) | 0;
            c[va2 >> 2] = 3;
            c[va2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[va2 >> 2];
            c[d2 + 4 >> 2] = c[va2 + 4 >> 2];
            Lh(a2, 3843, d2) | 0;
            c[ua2 >> 2] = 4;
            c[ua2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ua2 >> 2];
            c[d2 + 4 >> 2] = c[ua2 + 4 >> 2];
            Lh(a2, 3853, d2) | 0;
            c[ta2 >> 2] = 9;
            c[ta2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ta2 >> 2];
            c[d2 + 4 >> 2] = c[ta2 + 4 >> 2];
            Kh(a2, 3870, d2) | 0;
            c[sa2 >> 2] = 10;
            c[sa2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[sa2 >> 2];
            c[d2 + 4 >> 2] = c[sa2 + 4 >> 2];
            Kh(a2, 3884, d2) | 0;
            c[ra2 >> 2] = 11;
            c[ra2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ra2 >> 2];
            c[d2 + 4 >> 2] = c[ra2 + 4 >> 2];
            Kh(a2, 3896, d2) | 0;
            c[qa2 >> 2] = 1;
            c[qa2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[qa2 >> 2];
            c[d2 + 4 >> 2] = c[qa2 + 4 >> 2];
            Mh(a2, 3907, d2) | 0;
            c[pa2 >> 2] = 2;
            c[pa2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[pa2 >> 2];
            c[d2 + 4 >> 2] = c[pa2 + 4 >> 2];
            Mh(a2, 3915, d2) | 0;
            c[oa2 >> 2] = 3;
            c[oa2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[oa2 >> 2];
            c[d2 + 4 >> 2] = c[oa2 + 4 >> 2];
            Mh(a2, 3928, d2) | 0;
            c[na2 >> 2] = 4;
            c[na2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[na2 >> 2];
            c[d2 + 4 >> 2] = c[na2 + 4 >> 2];
            Mh(a2, 3948, d2) | 0;
            c[ma2 >> 2] = 5;
            c[ma2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ma2 >> 2];
            c[d2 + 4 >> 2] = c[ma2 + 4 >> 2];
            Mh(a2, 3960, d2) | 0;
            c[la2 >> 2] = 6;
            c[la2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[la2 >> 2];
            c[d2 + 4 >> 2] = c[la2 + 4 >> 2];
            Mh(a2, 3974, d2) | 0;
            c[ka2 >> 2] = 7;
            c[ka2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ka2 >> 2];
            c[d2 + 4 >> 2] = c[ka2 + 4 >> 2];
            Mh(a2, 3983, d2) | 0;
            c[ja2 >> 2] = 20;
            c[ja2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ja2 >> 2];
            c[d2 + 4 >> 2] = c[ja2 + 4 >> 2];
            Ih(a2, 3999, d2) | 0;
            c[ia2 >> 2] = 8;
            c[ia2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ia2 >> 2];
            c[d2 + 4 >> 2] = c[ia2 + 4 >> 2];
            Mh(a2, 4012, d2) | 0;
            c[ha2 >> 2] = 9;
            c[ha2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ha2 >> 2];
            c[d2 + 4 >> 2] = c[ha2 + 4 >> 2];
            Mh(a2, 4022, d2) | 0;
            c[ga2 >> 2] = 21;
            c[ga2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ga2 >> 2];
            c[d2 + 4 >> 2] = c[ga2 + 4 >> 2];
            Ih(a2, 4039, d2) | 0;
            c[fa2 >> 2] = 10;
            c[fa2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[fa2 >> 2];
            c[d2 + 4 >> 2] = c[fa2 + 4 >> 2];
            Mh(a2, 4053, d2) | 0;
            c[ea2 >> 2] = 11;
            c[ea2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ea2 >> 2];
            c[d2 + 4 >> 2] = c[ea2 + 4 >> 2];
            Mh(a2, 4065, d2) | 0;
            c[da2 >> 2] = 12;
            c[da2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[da2 >> 2];
            c[d2 + 4 >> 2] = c[da2 + 4 >> 2];
            Mh(a2, 4084, d2) | 0;
            c[ca2 >> 2] = 13;
            c[ca2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ca2 >> 2];
            c[d2 + 4 >> 2] = c[ca2 + 4 >> 2];
            Mh(a2, 4097, d2) | 0;
            c[ba2 >> 2] = 14;
            c[ba2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[ba2 >> 2];
            c[d2 + 4 >> 2] = c[ba2 + 4 >> 2];
            Mh(a2, 4117, d2) | 0;
            c[aa2 >> 2] = 15;
            c[aa2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[aa2 >> 2];
            c[d2 + 4 >> 2] = c[aa2 + 4 >> 2];
            Mh(a2, 4129, d2) | 0;
            c[$2 >> 2] = 16;
            c[$2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[$2 >> 2];
            c[d2 + 4 >> 2] = c[$2 + 4 >> 2];
            Mh(a2, 4148, d2) | 0;
            c[_2 >> 2] = 17;
            c[_2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[_2 >> 2];
            c[d2 + 4 >> 2] = c[_2 + 4 >> 2];
            Mh(a2, 4161, d2) | 0;
            c[Z2 >> 2] = 18;
            c[Z2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[Z2 >> 2];
            c[d2 + 4 >> 2] = c[Z2 + 4 >> 2];
            Mh(a2, 4181, d2) | 0;
            c[Y2 >> 2] = 5;
            c[Y2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[Y2 >> 2];
            c[d2 + 4 >> 2] = c[Y2 + 4 >> 2];
            Lh(a2, 4196, d2) | 0;
            c[X2 >> 2] = 6;
            c[X2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[X2 >> 2];
            c[d2 + 4 >> 2] = c[X2 + 4 >> 2];
            Lh(a2, 4206, d2) | 0;
            c[W2 >> 2] = 7;
            c[W2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[W2 >> 2];
            c[d2 + 4 >> 2] = c[W2 + 4 >> 2];
            Lh(a2, 4217, d2) | 0;
            c[V2 >> 2] = 3;
            c[V2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[V2 >> 2];
            c[d2 + 4 >> 2] = c[V2 + 4 >> 2];
            Nh(a2, 4235, d2) | 0;
            c[U2 >> 2] = 1;
            c[U2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[U2 >> 2];
            c[d2 + 4 >> 2] = c[U2 + 4 >> 2];
            Oh(a2, 4251, d2) | 0;
            c[T2 >> 2] = 4;
            c[T2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[T2 >> 2];
            c[d2 + 4 >> 2] = c[T2 + 4 >> 2];
            Nh(a2, 4263, d2) | 0;
            c[S2 >> 2] = 5;
            c[S2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[S2 >> 2];
            c[d2 + 4 >> 2] = c[S2 + 4 >> 2];
            Nh(a2, 4279, d2) | 0;
            c[R2 >> 2] = 6;
            c[R2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[R2 >> 2];
            c[d2 + 4 >> 2] = c[R2 + 4 >> 2];
            Nh(a2, 4293, d2) | 0;
            c[Q2 >> 2] = 7;
            c[Q2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[Q2 >> 2];
            c[d2 + 4 >> 2] = c[Q2 + 4 >> 2];
            Nh(a2, 4306, d2) | 0;
            c[P2 >> 2] = 8;
            c[P2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[P2 >> 2];
            c[d2 + 4 >> 2] = c[P2 + 4 >> 2];
            Nh(a2, 4323, d2) | 0;
            c[O2 >> 2] = 9;
            c[O2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[O2 >> 2];
            c[d2 + 4 >> 2] = c[O2 + 4 >> 2];
            Nh(a2, 4335, d2) | 0;
            c[N2 >> 2] = 2;
            c[N2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[N2 >> 2];
            c[d2 + 4 >> 2] = c[N2 + 4 >> 2];
            Oh(a2, 4353, d2) | 0;
            c[M2 >> 2] = 12;
            c[M2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[M2 >> 2];
            c[d2 + 4 >> 2] = c[M2 + 4 >> 2];
            Ph(a2, 4363, d2) | 0;
            c[L2 >> 2] = 1;
            c[L2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[L2 >> 2];
            c[d2 + 4 >> 2] = c[L2 + 4 >> 2];
            Qh(a2, 4376, d2) | 0;
            c[K2 >> 2] = 2;
            c[K2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[K2 >> 2];
            c[d2 + 4 >> 2] = c[K2 + 4 >> 2];
            Qh(a2, 4388, d2) | 0;
            c[J2 >> 2] = 13;
            c[J2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[J2 >> 2];
            c[d2 + 4 >> 2] = c[J2 + 4 >> 2];
            Ph(a2, 4402, d2) | 0;
            c[I2 >> 2] = 14;
            c[I2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[I2 >> 2];
            c[d2 + 4 >> 2] = c[I2 + 4 >> 2];
            Ph(a2, 4411, d2) | 0;
            c[H2 >> 2] = 15;
            c[H2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[H2 >> 2];
            c[d2 + 4 >> 2] = c[H2 + 4 >> 2];
            Ph(a2, 4421, d2) | 0;
            c[G2 >> 2] = 16;
            c[G2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[G2 >> 2];
            c[d2 + 4 >> 2] = c[G2 + 4 >> 2];
            Ph(a2, 4433, d2) | 0;
            c[F2 >> 2] = 17;
            c[F2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[F2 >> 2];
            c[d2 + 4 >> 2] = c[F2 + 4 >> 2];
            Ph(a2, 4446, d2) | 0;
            c[E2 >> 2] = 18;
            c[E2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[E2 >> 2];
            c[d2 + 4 >> 2] = c[E2 + 4 >> 2];
            Ph(a2, 4458, d2) | 0;
            c[D2 >> 2] = 3;
            c[D2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[D2 >> 2];
            c[d2 + 4 >> 2] = c[D2 + 4 >> 2];
            Qh(a2, 4471, d2) | 0;
            c[C2 >> 2] = 1;
            c[C2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[C2 >> 2];
            c[d2 + 4 >> 2] = c[C2 + 4 >> 2];
            Rh(a2, 4486, d2) | 0;
            c[B2 >> 2] = 10;
            c[B2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[B2 >> 2];
            c[d2 + 4 >> 2] = c[B2 + 4 >> 2];
            Nh(a2, 4496, d2) | 0;
            c[A2 >> 2] = 11;
            c[A2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[A2 >> 2];
            c[d2 + 4 >> 2] = c[A2 + 4 >> 2];
            Nh(a2, 4508, d2) | 0;
            c[z2 >> 2] = 3;
            c[z2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[z2 >> 2];
            c[d2 + 4 >> 2] = c[z2 + 4 >> 2];
            Oh(a2, 4519, d2) | 0;
            c[y2 >> 2] = 4;
            c[y2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[y2 >> 2];
            c[d2 + 4 >> 2] = c[y2 + 4 >> 2];
            Sh(a2, 4530, d2) | 0;
            c[x2 >> 2] = 19;
            c[x2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[x2 >> 2];
            c[d2 + 4 >> 2] = c[x2 + 4 >> 2];
            Th(a2, 4542, d2) | 0;
            c[w2 >> 2] = 12;
            c[w2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[w2 >> 2];
            c[d2 + 4 >> 2] = c[w2 + 4 >> 2];
            Uh(a2, 4554, d2) | 0;
            c[v2 >> 2] = 13;
            c[v2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[v2 >> 2];
            c[d2 + 4 >> 2] = c[v2 + 4 >> 2];
            Vh(a2, 4568, d2) | 0;
            c[u2 >> 2] = 2;
            c[u2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[u2 >> 2];
            c[d2 + 4 >> 2] = c[u2 + 4 >> 2];
            Wh(a2, 4578, d2) | 0;
            c[t2 >> 2] = 20;
            c[t2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[t2 >> 2];
            c[d2 + 4 >> 2] = c[t2 + 4 >> 2];
            Xh(a2, 4587, d2) | 0;
            c[s2 >> 2] = 22;
            c[s2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[s2 >> 2];
            c[d2 + 4 >> 2] = c[s2 + 4 >> 2];
            Ih(a2, 4602, d2) | 0;
            c[r2 >> 2] = 23;
            c[r2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[r2 >> 2];
            c[d2 + 4 >> 2] = c[r2 + 4 >> 2];
            Ih(a2, 4619, d2) | 0;
            c[q2 >> 2] = 14;
            c[q2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[q2 >> 2];
            c[d2 + 4 >> 2] = c[q2 + 4 >> 2];
            Yh(a2, 4629, d2) | 0;
            c[p2 >> 2] = 1;
            c[p2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[p2 >> 2];
            c[d2 + 4 >> 2] = c[p2 + 4 >> 2];
            Zh(a2, 4637, d2) | 0;
            c[o2 >> 2] = 4;
            c[o2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[o2 >> 2];
            c[d2 + 4 >> 2] = c[o2 + 4 >> 2];
            Qh(a2, 4653, d2) | 0;
            c[n2 >> 2] = 5;
            c[n2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[n2 >> 2];
            c[d2 + 4 >> 2] = c[n2 + 4 >> 2];
            Qh(a2, 4669, d2) | 0;
            c[m2 >> 2] = 6;
            c[m2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[m2 >> 2];
            c[d2 + 4 >> 2] = c[m2 + 4 >> 2];
            Qh(a2, 4686, d2) | 0;
            c[k2 >> 2] = 7;
            c[k2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[k2 >> 2];
            c[d2 + 4 >> 2] = c[k2 + 4 >> 2];
            Qh(a2, 4701, d2) | 0;
            c[j2 >> 2] = 8;
            c[j2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[j2 >> 2];
            c[d2 + 4 >> 2] = c[j2 + 4 >> 2];
            Qh(a2, 4719, d2) | 0;
            c[i3 >> 2] = 9;
            c[i3 + 4 >> 2] = 0;
            c[d2 >> 2] = c[i3 >> 2];
            c[d2 + 4 >> 2] = c[i3 + 4 >> 2];
            Qh(a2, 4736, d2) | 0;
            c[h2 >> 2] = 21;
            c[h2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[h2 >> 2];
            c[d2 + 4 >> 2] = c[h2 + 4 >> 2];
            _h(a2, 4754, d2) | 0;
            c[g2 >> 2] = 2;
            c[g2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[g2 >> 2];
            c[d2 + 4 >> 2] = c[g2 + 4 >> 2];
            Rh(a2, 4772, d2) | 0;
            c[f2 >> 2] = 3;
            c[f2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[f2 >> 2];
            c[d2 + 4 >> 2] = c[f2 + 4 >> 2];
            Rh(a2, 4790, d2) | 0;
            c[e2 >> 2] = 4;
            c[e2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[e2 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
            Rh(a2, 4808, d2) | 0;
            l = b2;
            return;
          }
          function Eh(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = dr() | 0;
            c[a2 >> 2] = d2;
            er(d2, b2);
            Hv(c[a2 >> 2] | 0);
            return;
          }
          function Fh(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            Oq(a2, ai(b2) | 0, c2, 0);
            return a2 | 0;
          }
          function Gh(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            tq(a2, ai(b2) | 0, c2, 0);
            return a2 | 0;
          }
          function Hh(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            cq(a2, ai(b2) | 0, c2, 0);
            return a2 | 0;
          }
          function Ih(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Lp(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Jh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            pp(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Kh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Yo(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Lh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Fo(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Mh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            mo(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Nh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Un(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Oh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Bn(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Ph(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Um(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Qh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Bm(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Rh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            im(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Sh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Rl(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Th(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            vl(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Uh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            bl(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Vh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Kk(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Wh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            nk(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Xh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Rj(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Yh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            xj(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function Zh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            _i(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function _h(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            $h(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function $h(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            bi(a2, d2, f2, 1);
            l = e2;
            return;
          }
          function ai(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function bi(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = ci() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = di(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, ei(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function ci() {
            var b2 = 0, d2 = 0;
            if (!(a[7616] | 0)) {
              qi(9136);
              Ha(24, 9136, o | 0) | 0;
              d2 = 7616;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9136) | 0)) {
              b2 = 9136;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              qi(9136);
            }
            return 9136;
          }
          function di(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function ei(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = ci() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              ki(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              li(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function fi(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            var h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
            h2 = l;
            l = l + 32 | 0;
            o2 = h2 + 24 | 0;
            n2 = h2 + 20 | 0;
            j2 = h2 + 16 | 0;
            m2 = h2 + 12 | 0;
            k2 = h2 + 8 | 0;
            i3 = h2 + 4 | 0;
            p2 = h2;
            c[n2 >> 2] = b2;
            c[j2 >> 2] = d2;
            c[m2 >> 2] = e2;
            c[k2 >> 2] = f2;
            c[i3 >> 2] = g2;
            g2 = a2 + 28 | 0;
            c[p2 >> 2] = c[g2 >> 2];
            c[o2 >> 2] = c[p2 >> 2];
            gi(a2 + 24 | 0, o2, n2, m2, k2, j2, i3) | 0;
            c[g2 >> 2] = c[c[g2 >> 2] >> 2];
            l = h2;
            return;
          }
          function gi(a2, b2, d2, e2, f2, g2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            a2 = hi(b2) | 0;
            b2 = qC(24) | 0;
            ii(b2 + 4 | 0, c[d2 >> 2] | 0, c[e2 >> 2] | 0, c[f2 >> 2] | 0, c[g2 >> 2] | 0, c[h2 >> 2] | 0);
            c[b2 >> 2] = c[a2 >> 2];
            c[a2 >> 2] = b2;
            return b2 | 0;
          }
          function hi(a2) {
            a2 = a2 | 0;
            return c[a2 >> 2] | 0;
          }
          function ii(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 12 >> 2] = f2;
            c[a2 + 16 >> 2] = g2;
            return;
          }
          function ji(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return b2 | a2 | 0;
          }
          function ki(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function li(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = mi(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              ni(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              ki(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              oi(a2, i3);
              pi(i3);
              l = k2;
              return;
            }
          }
          function mi(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function ni(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function oi(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function pi(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function qi(a2) {
            a2 = a2 | 0;
            ui(a2);
            return;
          }
          function ri(a2) {
            a2 = a2 | 0;
            ti(a2 + 24 | 0);
            return;
          }
          function si(a2) {
            a2 = a2 | 0;
            return c[a2 >> 2] | 0;
          }
          function ti(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function ui(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 3, b2, wi() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function vi() {
            return 9228;
          }
          function wi() {
            return 1140;
          }
          function xi(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2 + 8 | 0;
            f2 = d2;
            g2 = zi(a2) | 0;
            a2 = c[g2 + 4 >> 2] | 0;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = a2;
            c[e2 >> 2] = c[f2 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            b2 = Ai(b2, e2) | 0;
            l = d2;
            return b2 | 0;
          }
          function yi(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 12 >> 2] = f2;
            c[a2 + 16 >> 2] = g2;
            return;
          }
          function zi(a2) {
            a2 = a2 | 0;
            return (c[(ci() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function Ai(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            f2 = l;
            l = l + 48 | 0;
            e2 = f2;
            d2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              d2 = c[(c[a2 >> 2] | 0) + d2 >> 2] | 0;
            ob[d2 & 31](e2, a2);
            e2 = Bi(e2) | 0;
            l = f2;
            return e2 | 0;
          }
          function Bi(a2) {
            a2 = a2 | 0;
            var b2 = 0, c2 = 0, d2 = 0, e2 = 0;
            e2 = l;
            l = l + 32 | 0;
            b2 = e2 + 12 | 0;
            c2 = e2;
            d2 = Di(Ci() | 0) | 0;
            if (!d2)
              a2 = Ii(a2) | 0;
            else {
              Ei(b2, d2);
              Fi(c2, b2);
              Gi(a2, c2);
              a2 = Hi(b2) | 0;
            }
            l = e2;
            return a2 | 0;
          }
          function Ci() {
            var b2 = 0;
            if (!(a[7632] | 0)) {
              Ti(9184);
              Ha(25, 9184, o | 0) | 0;
              b2 = 7632;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 9184;
          }
          function Di(a2) {
            a2 = a2 | 0;
            return c[a2 + 36 >> 2] | 0;
          }
          function Ei(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = a2;
            c[a2 + 8 >> 2] = 0;
            return;
          }
          function Fi(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 8 >> 2] = 0;
            return;
          }
          function Gi(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Ni(b2, a2, a2 + 8 | 0, a2 + 16 | 0, a2 + 24 | 0, a2 + 32 | 0, a2 + 40 | 0) | 0;
            return;
          }
          function Hi(a2) {
            a2 = a2 | 0;
            return c[(c[a2 + 4 >> 2] | 0) + 8 >> 2] | 0;
          }
          function Ii(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            j2 = l;
            l = l + 16 | 0;
            d2 = j2 + 4 | 0;
            e2 = j2;
            f2 = jy(8) | 0;
            g2 = f2;
            h2 = qC(48) | 0;
            i3 = h2;
            b2 = i3 + 48 | 0;
            do {
              c[i3 >> 2] = c[a2 >> 2];
              i3 = i3 + 4 | 0;
              a2 = a2 + 4 | 0;
            } while ((i3 | 0) < (b2 | 0));
            b2 = g2 + 4 | 0;
            c[b2 >> 2] = h2;
            i3 = qC(8) | 0;
            h2 = c[b2 >> 2] | 0;
            c[e2 >> 2] = 0;
            c[d2 >> 2] = c[e2 >> 2];
            Ji(i3, h2, d2);
            c[f2 >> 2] = i3;
            l = j2;
            return g2 | 0;
          }
          function Ji(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            d2 = qC(16) | 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 >> 2] = 1092;
            c[d2 + 12 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function Ki(a2) {
            a2 = a2 | 0;
            kC(a2);
            sC(a2);
            return;
          }
          function Li(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 12 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Mi(a2) {
            a2 = a2 | 0;
            sC(a2);
            return;
          }
          function Ni(a2, b2, d2, e2, f2, g2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            g2 = Oi(c[a2 >> 2] | 0, b2, d2, e2, f2, g2, h2) | 0;
            h2 = a2 + 4 | 0;
            c[(c[h2 >> 2] | 0) + 8 >> 2] = g2;
            return c[(c[h2 >> 2] | 0) + 8 >> 2] | 0;
          }
          function Oi(a2, b2, c2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            var i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            j2 = i3;
            UA(j2);
            a2 = Sg(a2) | 0;
            g2 = Pi(a2, +h[b2 >> 3], +h[c2 >> 3], +h[d2 >> 3], +h[e2 >> 3], +h[f2 >> 3], +h[g2 >> 3]) | 0;
            WA(j2);
            l = i3;
            return g2 | 0;
          }
          function Pi(a2, b2, c2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            d2 = +d2;
            e2 = +e2;
            f2 = +f2;
            g2 = +g2;
            var h2 = 0;
            h2 = Vg(Qi() | 0) | 0;
            b2 = +Wg(b2);
            c2 = +Wg(c2);
            d2 = +Wg(d2);
            e2 = +Wg(e2);
            f2 = +Wg(f2);
            return ya(0, h2 | 0, a2 | 0, +b2, +c2, +d2, +e2, +f2, + +Wg(g2)) | 0;
          }
          function Qi() {
            var b2 = 0;
            if (!(a[7624] | 0)) {
              Ri(9172);
              b2 = 7624;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 9172;
          }
          function Ri(a2) {
            a2 = a2 | 0;
            fh(a2, Si() | 0, 6);
            return;
          }
          function Si() {
            return 1112;
          }
          function Ti(a2) {
            a2 = a2 | 0;
            Zi(a2);
            return;
          }
          function Ui(a2) {
            a2 = a2 | 0;
            Vi(a2 + 24 | 0);
            Wi(a2 + 16 | 0);
            return;
          }
          function Vi(a2) {
            a2 = a2 | 0;
            Yi(a2);
            return;
          }
          function Wi(a2) {
            a2 = a2 | 0;
            Xi(a2);
            return;
          }
          function Xi(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            b2 = c[a2 >> 2] | 0;
            if (b2 | 0)
              do {
                d2 = b2;
                b2 = c[b2 >> 2] | 0;
                sC(d2);
              } while ((b2 | 0) != 0);
            c[a2 >> 2] = 0;
            return;
          }
          function Yi(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            b2 = c[a2 >> 2] | 0;
            if (b2 | 0)
              do {
                d2 = b2;
                b2 = c[b2 >> 2] | 0;
                sC(d2);
              } while ((b2 | 0) != 0);
            c[a2 >> 2] = 0;
            return;
          }
          function Zi(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 20 >> 2] = 0;
            d2 = b2 + 24 | 0;
            c[d2 >> 2] = 0;
            c[b2 + 28 >> 2] = d2;
            c[b2 + 36 >> 2] = 0;
            a[b2 + 40 >> 0] = 0;
            a[b2 + 41 >> 0] = 0;
            return;
          }
          function _i(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            $i(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function $i(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = aj() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = bj(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, cj(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function aj() {
            var b2 = 0, d2 = 0;
            if (!(a[7640] | 0)) {
              jj(9232);
              Ha(26, 9232, o | 0) | 0;
              d2 = 7640;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9232) | 0)) {
              b2 = 9232;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              jj(9232);
            }
            return 9232;
          }
          function bj(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function cj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = aj() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              dj(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              ej(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function dj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function ej(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = fj(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              gj(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              dj(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              hj(a2, i3);
              ij(i3);
              l = k2;
              return;
            }
          }
          function fj(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function gj(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function hj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function ij(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function jj(a2) {
            a2 = a2 | 0;
            mj(a2);
            return;
          }
          function kj(a2) {
            a2 = a2 | 0;
            lj(a2 + 24 | 0);
            return;
          }
          function lj(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function mj(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 1, b2, nj() | 0, 3);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function nj() {
            return 1144;
          }
          function oj(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = +e2;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            g2 = l;
            l = l + 16 | 0;
            h2 = g2 + 8 | 0;
            i3 = g2;
            j2 = pj(a2) | 0;
            a2 = c[j2 + 4 >> 2] | 0;
            c[i3 >> 2] = c[j2 >> 2];
            c[i3 + 4 >> 2] = a2;
            c[h2 >> 2] = c[i3 >> 2];
            c[h2 + 4 >> 2] = c[i3 + 4 >> 2];
            qj(b2, h2, d2, e2, f2);
            l = g2;
            return;
          }
          function pj(a2) {
            a2 = a2 | 0;
            return (c[(aj() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function qj(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = +e2;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0;
            k2 = l;
            l = l + 16 | 0;
            h2 = k2 + 2 | 0;
            i3 = k2 + 1 | 0;
            j2 = k2;
            g2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              g2 = c[(c[a2 >> 2] | 0) + g2 >> 2] | 0;
            rj(h2, d2);
            d2 = +sj(h2, d2);
            rj(i3, e2);
            e2 = +sj(i3, e2);
            tj(j2, f2);
            j2 = uj(j2, f2) | 0;
            qb[g2 & 1](a2, d2, e2, j2);
            l = k2;
            return;
          }
          function rj(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            return;
          }
          function sj(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            return + +wj(b2);
          }
          function tj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function uj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return vj(b2) | 0;
          }
          function vj(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function wj(a2) {
            a2 = +a2;
            return +a2;
          }
          function xj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            yj(a2, d2, f2, 1);
            l = e2;
            return;
          }
          function yj(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = zj() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = Aj(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, Bj(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function zj() {
            var b2 = 0, d2 = 0;
            if (!(a[7648] | 0)) {
              Ij(9268);
              Ha(27, 9268, o | 0) | 0;
              d2 = 7648;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9268) | 0)) {
              b2 = 9268;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Ij(9268);
            }
            return 9268;
          }
          function Aj(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Bj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = zj() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Cj(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              Dj(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Cj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function Dj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = Ej(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              Fj(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Cj(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              Gj(a2, i3);
              Hj(i3);
              l = k2;
              return;
            }
          }
          function Ej(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function Fj(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function Gj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Hj(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Ij(a2) {
            a2 = a2 | 0;
            Lj(a2);
            return;
          }
          function Jj(a2) {
            a2 = a2 | 0;
            Kj(a2 + 24 | 0);
            return;
          }
          function Kj(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function Lj(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 4, b2, Mj() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Mj() {
            return 1160;
          }
          function Nj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2 + 8 | 0;
            f2 = d2;
            g2 = Oj(a2) | 0;
            a2 = c[g2 + 4 >> 2] | 0;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = a2;
            c[e2 >> 2] = c[f2 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            b2 = Pj(b2, e2) | 0;
            l = d2;
            return b2 | 0;
          }
          function Oj(a2) {
            a2 = a2 | 0;
            return (c[(zj() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function Pj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              d2 = c[(c[a2 >> 2] | 0) + d2 >> 2] | 0;
            return Qj(pb[d2 & 31](a2) | 0) | 0;
          }
          function Qj(a2) {
            a2 = a2 | 0;
            return a2 & 1 | 0;
          }
          function Rj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Sj(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function Sj(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = Tj() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = Uj(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, Vj(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function Tj() {
            var b2 = 0, d2 = 0;
            if (!(a[7656] | 0)) {
              ak(9304);
              Ha(28, 9304, o | 0) | 0;
              d2 = 7656;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9304) | 0)) {
              b2 = 9304;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              ak(9304);
            }
            return 9304;
          }
          function Uj(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Vj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = Tj() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Wj(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              Xj(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Wj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function Xj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = Yj(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              Zj(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Wj(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              _j(a2, i3);
              $j(i3);
              l = k2;
              return;
            }
          }
          function Yj(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function Zj(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function _j(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function $j(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function ak(a2) {
            a2 = a2 | 0;
            dk(a2);
            return;
          }
          function bk(a2) {
            a2 = a2 | 0;
            ck(a2 + 24 | 0);
            return;
          }
          function ck(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function dk(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 5, b2, ek() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function ek() {
            return 1164;
          }
          function fk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = gk(a2) | 0;
            a2 = c[h2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = a2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            hk(b2, f2, d2);
            l = e2;
            return;
          }
          function gk(a2) {
            a2 = a2 | 0;
            return (c[(Tj() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function hk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            g2 = l;
            l = l + 16 | 0;
            f2 = g2;
            e2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              e2 = c[(c[a2 >> 2] | 0) + e2 >> 2] | 0;
            ik(f2, d2);
            d2 = jk(f2, d2) | 0;
            ob[e2 & 31](a2, d2);
            kk(f2);
            l = g2;
            return;
          }
          function ik(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            lk(a2, b2);
            return;
          }
          function jk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return a2 | 0;
          }
          function kk(a2) {
            a2 = a2 | 0;
            vf(a2);
            return;
          }
          function lk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            mk(a2, b2);
            return;
          }
          function mk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = b2;
            return;
          }
          function nk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            ok(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function ok(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = pk() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = qk(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, rk(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function pk() {
            var b2 = 0, d2 = 0;
            if (!(a[7664] | 0)) {
              yk(9340);
              Ha(29, 9340, o | 0) | 0;
              d2 = 7664;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9340) | 0)) {
              b2 = 9340;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              yk(9340);
            }
            return 9340;
          }
          function qk(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function rk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = pk() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              sk(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              tk(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function sk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function tk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = uk(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              vk(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              sk(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              wk(a2, i3);
              xk(i3);
              l = k2;
              return;
            }
          }
          function uk(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function vk(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function wk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function xk(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function yk(a2) {
            a2 = a2 | 0;
            Bk(a2);
            return;
          }
          function zk(a2) {
            a2 = a2 | 0;
            Ak(a2 + 24 | 0);
            return;
          }
          function Ak(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function Bk(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 4, b2, Ck() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Ck() {
            return 1180;
          }
          function Dk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = Ek(a2) | 0;
            a2 = c[h2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = a2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            d2 = Fk(b2, f2, d2) | 0;
            l = e2;
            return d2 | 0;
          }
          function Ek(a2) {
            a2 = a2 | 0;
            return (c[(pk() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function Fk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            g2 = l;
            l = l + 16 | 0;
            f2 = g2;
            e2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              e2 = c[(c[a2 >> 2] | 0) + e2 >> 2] | 0;
            Gk(f2, d2);
            f2 = Hk(f2, d2) | 0;
            f2 = Ik(wb[e2 & 15](a2, f2) | 0) | 0;
            l = g2;
            return f2 | 0;
          }
          function Gk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Hk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return Jk(b2) | 0;
          }
          function Ik(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Jk(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Kk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Lk(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function Lk(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = Mk() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = Nk(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, Ok(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function Mk() {
            var b2 = 0, d2 = 0;
            if (!(a[7672] | 0)) {
              Vk(9376);
              Ha(30, 9376, o | 0) | 0;
              d2 = 7672;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9376) | 0)) {
              b2 = 9376;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Vk(9376);
            }
            return 9376;
          }
          function Nk(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Ok(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = Mk() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Pk(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              Qk(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Pk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function Qk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = Rk(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              Sk(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Pk(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              Tk(a2, i3);
              Uk(i3);
              l = k2;
              return;
            }
          }
          function Rk(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function Sk(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function Tk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Uk(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Vk(a2) {
            a2 = a2 | 0;
            Yk(a2);
            return;
          }
          function Wk(a2) {
            a2 = a2 | 0;
            Xk(a2 + 24 | 0);
            return;
          }
          function Xk(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function Yk(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 5, b2, Zk() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Zk() {
            return 1196;
          }
          function _k(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2 + 8 | 0;
            f2 = d2;
            g2 = $k(a2) | 0;
            a2 = c[g2 + 4 >> 2] | 0;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = a2;
            c[e2 >> 2] = c[f2 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            b2 = al(b2, e2) | 0;
            l = d2;
            return b2 | 0;
          }
          function $k(a2) {
            a2 = a2 | 0;
            return (c[(Mk() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function al(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              d2 = c[(c[a2 >> 2] | 0) + d2 >> 2] | 0;
            return Ik(pb[d2 & 31](a2) | 0) | 0;
          }
          function bl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            cl(a2, d2, f2, 1);
            l = e2;
            return;
          }
          function cl(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = dl() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = el(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, fl(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function dl() {
            var b2 = 0, d2 = 0;
            if (!(a[7680] | 0)) {
              ml(9412);
              Ha(31, 9412, o | 0) | 0;
              d2 = 7680;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9412) | 0)) {
              b2 = 9412;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              ml(9412);
            }
            return 9412;
          }
          function el(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function fl(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = dl() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              gl(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              hl(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function gl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function hl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = il(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              jl(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              gl(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              kl(a2, i3);
              ll(i3);
              l = k2;
              return;
            }
          }
          function il(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function jl(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function kl(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function ll(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function ml(a2) {
            a2 = a2 | 0;
            pl(a2);
            return;
          }
          function nl(a2) {
            a2 = a2 | 0;
            ol(a2 + 24 | 0);
            return;
          }
          function ol(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function pl(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 6, b2, ql() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function ql() {
            return 1200;
          }
          function rl(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2 + 8 | 0;
            f2 = d2;
            g2 = sl(a2) | 0;
            a2 = c[g2 + 4 >> 2] | 0;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = a2;
            c[e2 >> 2] = c[f2 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            b2 = tl(b2, e2) | 0;
            l = d2;
            return b2 | 0;
          }
          function sl(a2) {
            a2 = a2 | 0;
            return (c[(dl() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function tl(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              d2 = c[(c[a2 >> 2] | 0) + d2 >> 2] | 0;
            return ul(pb[d2 & 31](a2) | 0) | 0;
          }
          function ul(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function vl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            wl(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function wl(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = xl() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = yl(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, zl(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function xl() {
            var b2 = 0, d2 = 0;
            if (!(a[7688] | 0)) {
              Gl(9448);
              Ha(32, 9448, o | 0) | 0;
              d2 = 7688;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9448) | 0)) {
              b2 = 9448;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Gl(9448);
            }
            return 9448;
          }
          function yl(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function zl(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = xl() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Al(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              Bl(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Al(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function Bl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = Cl(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              Dl(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Al(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              El(a2, i3);
              Fl(i3);
              l = k2;
              return;
            }
          }
          function Cl(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function Dl(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function El(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Fl(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Gl(a2) {
            a2 = a2 | 0;
            Jl(a2);
            return;
          }
          function Hl(a2) {
            a2 = a2 | 0;
            Il(a2 + 24 | 0);
            return;
          }
          function Il(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function Jl(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 6, b2, Kl() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Kl() {
            return 1204;
          }
          function Ll(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = Ml(a2) | 0;
            a2 = c[h2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = a2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Nl(b2, f2, d2);
            l = e2;
            return;
          }
          function Ml(a2) {
            a2 = a2 | 0;
            return (c[(xl() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function Nl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            g2 = l;
            l = l + 16 | 0;
            f2 = g2;
            e2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              e2 = c[(c[a2 >> 2] | 0) + e2 >> 2] | 0;
            Ol(f2, d2);
            f2 = Pl(f2, d2) | 0;
            ob[e2 & 31](a2, f2);
            l = g2;
            return;
          }
          function Ol(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Pl(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return Ql(b2) | 0;
          }
          function Ql(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Rl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Sl(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function Sl(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = Tl() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = Ul(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, Vl(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function Tl() {
            var b2 = 0, d2 = 0;
            if (!(a[7696] | 0)) {
              am(9484);
              Ha(33, 9484, o | 0) | 0;
              d2 = 7696;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9484) | 0)) {
              b2 = 9484;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              am(9484);
            }
            return 9484;
          }
          function Ul(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Vl(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = Tl() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Wl(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              Xl(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Wl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function Xl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = Yl(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              Zl(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Wl(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              _l(a2, i3);
              $l(i3);
              l = k2;
              return;
            }
          }
          function Yl(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function Zl(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function _l(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function $l(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function am(a2) {
            a2 = a2 | 0;
            dm(a2);
            return;
          }
          function bm(a2) {
            a2 = a2 | 0;
            cm(a2 + 24 | 0);
            return;
          }
          function cm(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function dm(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 1, b2, em() | 0, 2);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function em() {
            return 1212;
          }
          function fm(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            f2 = l;
            l = l + 16 | 0;
            g2 = f2 + 8 | 0;
            h2 = f2;
            i3 = gm(a2) | 0;
            a2 = c[i3 + 4 >> 2] | 0;
            c[h2 >> 2] = c[i3 >> 2];
            c[h2 + 4 >> 2] = a2;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = c[h2 + 4 >> 2];
            hm(b2, g2, d2, e2);
            l = f2;
            return;
          }
          function gm(a2) {
            a2 = a2 | 0;
            return (c[(Tl() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function hm(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            i3 = l;
            l = l + 16 | 0;
            g2 = i3 + 1 | 0;
            h2 = i3;
            f2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              f2 = c[(c[a2 >> 2] | 0) + f2 >> 2] | 0;
            Ol(g2, d2);
            g2 = Pl(g2, d2) | 0;
            Gk(h2, e2);
            h2 = Hk(h2, e2) | 0;
            Eb[f2 & 15](a2, g2, h2);
            l = i3;
            return;
          }
          function im(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            jm(a2, d2, f2, 1);
            l = e2;
            return;
          }
          function jm(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = km() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = lm(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, mm(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function km() {
            var b2 = 0, d2 = 0;
            if (!(a[7704] | 0)) {
              tm(9520);
              Ha(34, 9520, o | 0) | 0;
              d2 = 7704;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9520) | 0)) {
              b2 = 9520;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              tm(9520);
            }
            return 9520;
          }
          function lm(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function mm(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = km() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              nm(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              om(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function nm(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function om(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = pm(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              qm(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              nm(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              rm(a2, i3);
              sm(i3);
              l = k2;
              return;
            }
          }
          function pm(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function qm(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function rm(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function sm(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function tm(a2) {
            a2 = a2 | 0;
            wm(a2);
            return;
          }
          function um(a2) {
            a2 = a2 | 0;
            vm(a2 + 24 | 0);
            return;
          }
          function vm(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function wm(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 1, b2, xm() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function xm() {
            return 1224;
          }
          function ym(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            f2 = l;
            l = l + 16 | 0;
            g2 = f2 + 8 | 0;
            h2 = f2;
            i3 = zm(a2) | 0;
            a2 = c[i3 + 4 >> 2] | 0;
            c[h2 >> 2] = c[i3 >> 2];
            c[h2 + 4 >> 2] = a2;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = c[h2 + 4 >> 2];
            e2 = +Am(b2, g2, d2);
            l = f2;
            return +e2;
          }
          function zm(a2) {
            a2 = a2 | 0;
            return (c[(km() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function Am(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            g2 = l;
            l = l + 16 | 0;
            f2 = g2;
            e2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              e2 = c[(c[a2 >> 2] | 0) + e2 >> 2] | 0;
            tj(f2, d2);
            f2 = uj(f2, d2) | 0;
            h2 = +ch(+zb[e2 & 7](a2, f2));
            l = g2;
            return +h2;
          }
          function Bm(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Cm(a2, d2, f2, 1);
            l = e2;
            return;
          }
          function Cm(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = Dm() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = Em(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, Fm(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function Dm() {
            var b2 = 0, d2 = 0;
            if (!(a[7712] | 0)) {
              Mm(9556);
              Ha(35, 9556, o | 0) | 0;
              d2 = 7712;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9556) | 0)) {
              b2 = 9556;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Mm(9556);
            }
            return 9556;
          }
          function Em(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Fm(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = Dm() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Gm(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              Hm(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Gm(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function Hm(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = Im(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              Jm(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Gm(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              Km(a2, i3);
              Lm(i3);
              l = k2;
              return;
            }
          }
          function Im(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function Jm(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function Km(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Lm(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Mm(a2) {
            a2 = a2 | 0;
            Pm(a2);
            return;
          }
          function Nm(a2) {
            a2 = a2 | 0;
            Om(a2 + 24 | 0);
            return;
          }
          function Om(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function Pm(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 5, b2, Qm() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Qm() {
            return 1232;
          }
          function Rm(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = Sm(a2) | 0;
            a2 = c[h2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = a2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            d2 = +Tm(b2, f2);
            l = e2;
            return +d2;
          }
          function Sm(a2) {
            a2 = a2 | 0;
            return (c[(Dm() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function Tm(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              d2 = c[(c[a2 >> 2] | 0) + d2 >> 2] | 0;
            return + +ch(+ub[d2 & 15](a2));
          }
          function Um(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Vm(a2, d2, f2, 1);
            l = e2;
            return;
          }
          function Vm(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = Wm() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = Xm(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, Ym(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function Wm() {
            var b2 = 0, d2 = 0;
            if (!(a[7720] | 0)) {
              dn(9592);
              Ha(36, 9592, o | 0) | 0;
              d2 = 7720;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9592) | 0)) {
              b2 = 9592;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              dn(9592);
            }
            return 9592;
          }
          function Xm(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Ym(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = Wm() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Zm(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              _m(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Zm(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function _m(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = $m(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              an(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Zm(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              bn(a2, i3);
              cn(i3);
              l = k2;
              return;
            }
          }
          function $m(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function an(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function bn(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function cn(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function dn(a2) {
            a2 = a2 | 0;
            gn(a2);
            return;
          }
          function en(a2) {
            a2 = a2 | 0;
            fn(a2 + 24 | 0);
            return;
          }
          function fn(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function gn(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 7, b2, hn() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function hn() {
            return 1276;
          }
          function jn(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2 + 8 | 0;
            f2 = d2;
            g2 = kn(a2) | 0;
            a2 = c[g2 + 4 >> 2] | 0;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = a2;
            c[e2 >> 2] = c[f2 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            b2 = ln(b2, e2) | 0;
            l = d2;
            return b2 | 0;
          }
          function kn(a2) {
            a2 = a2 | 0;
            return (c[(Wm() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function ln(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            f2 = l;
            l = l + 16 | 0;
            e2 = f2;
            d2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              d2 = c[(c[a2 >> 2] | 0) + d2 >> 2] | 0;
            ob[d2 & 31](e2, a2);
            e2 = mn(e2) | 0;
            l = f2;
            return e2 | 0;
          }
          function mn(a2) {
            a2 = a2 | 0;
            var b2 = 0, c2 = 0, d2 = 0, e2 = 0;
            e2 = l;
            l = l + 32 | 0;
            b2 = e2 + 12 | 0;
            c2 = e2;
            d2 = Di(nn() | 0) | 0;
            if (!d2)
              a2 = pn(a2) | 0;
            else {
              Ei(b2, d2);
              Fi(c2, b2);
              on(a2, c2);
              a2 = Hi(b2) | 0;
            }
            l = e2;
            return a2 | 0;
          }
          function nn() {
            var b2 = 0;
            if (!(a[7736] | 0)) {
              An(9640);
              Ha(25, 9640, o | 0) | 0;
              b2 = 7736;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 9640;
          }
          function on(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            un(b2, a2, a2 + 8 | 0) | 0;
            return;
          }
          function pn(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            d2 = l;
            l = l + 16 | 0;
            f2 = d2 + 4 | 0;
            h2 = d2;
            e2 = jy(8) | 0;
            b2 = e2;
            i3 = qC(16) | 0;
            c[i3 >> 2] = c[a2 >> 2];
            c[i3 + 4 >> 2] = c[a2 + 4 >> 2];
            c[i3 + 8 >> 2] = c[a2 + 8 >> 2];
            c[i3 + 12 >> 2] = c[a2 + 12 >> 2];
            g2 = b2 + 4 | 0;
            c[g2 >> 2] = i3;
            a2 = qC(8) | 0;
            g2 = c[g2 >> 2] | 0;
            c[h2 >> 2] = 0;
            c[f2 >> 2] = c[h2 >> 2];
            qn(a2, g2, f2);
            c[e2 >> 2] = a2;
            l = d2;
            return b2 | 0;
          }
          function qn(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            d2 = qC(16) | 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 >> 2] = 1244;
            c[d2 + 12 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function rn(a2) {
            a2 = a2 | 0;
            kC(a2);
            sC(a2);
            return;
          }
          function sn(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 12 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function tn(a2) {
            a2 = a2 | 0;
            sC(a2);
            return;
          }
          function un(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            b2 = vn(c[a2 >> 2] | 0, b2, d2) | 0;
            d2 = a2 + 4 | 0;
            c[(c[d2 >> 2] | 0) + 8 >> 2] = b2;
            return c[(c[d2 >> 2] | 0) + 8 >> 2] | 0;
          }
          function vn(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2;
            UA(f2);
            a2 = Sg(a2) | 0;
            d2 = wn(a2, c[b2 >> 2] | 0, +h[d2 >> 3]) | 0;
            WA(f2);
            l = e2;
            return d2 | 0;
          }
          function wn(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            var d2 = 0;
            d2 = Vg(xn() | 0) | 0;
            b2 = Xg(b2) | 0;
            return za(0, d2 | 0, a2 | 0, b2 | 0, + +Wg(c2)) | 0;
          }
          function xn() {
            var b2 = 0;
            if (!(a[7728] | 0)) {
              yn(9628);
              b2 = 7728;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 9628;
          }
          function yn(a2) {
            a2 = a2 | 0;
            fh(a2, zn() | 0, 2);
            return;
          }
          function zn() {
            return 1264;
          }
          function An(a2) {
            a2 = a2 | 0;
            Zi(a2);
            return;
          }
          function Bn(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Cn(a2, d2, f2, 1);
            l = e2;
            return;
          }
          function Cn(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = Dn() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = En(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, Fn(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function Dn() {
            var b2 = 0, d2 = 0;
            if (!(a[7744] | 0)) {
              Mn(9684);
              Ha(37, 9684, o | 0) | 0;
              d2 = 7744;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9684) | 0)) {
              b2 = 9684;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Mn(9684);
            }
            return 9684;
          }
          function En(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Fn(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = Dn() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Gn(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              Hn(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Gn(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function Hn(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = In(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              Jn(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Gn(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              Kn(a2, i3);
              Ln(i3);
              l = k2;
              return;
            }
          }
          function In(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function Jn(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function Kn(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Ln(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Mn(a2) {
            a2 = a2 | 0;
            Pn(a2);
            return;
          }
          function Nn(a2) {
            a2 = a2 | 0;
            On(a2 + 24 | 0);
            return;
          }
          function On(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function Pn(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 5, b2, Qn() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Qn() {
            return 1280;
          }
          function Rn(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = Sn(a2) | 0;
            a2 = c[h2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = a2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            d2 = Tn(b2, f2, d2) | 0;
            l = e2;
            return d2 | 0;
          }
          function Sn(a2) {
            a2 = a2 | 0;
            return (c[(Dn() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function Tn(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            h2 = l;
            l = l + 32 | 0;
            f2 = h2;
            g2 = h2 + 16 | 0;
            e2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              e2 = c[(c[a2 >> 2] | 0) + e2 >> 2] | 0;
            tj(g2, d2);
            g2 = uj(g2, d2) | 0;
            Eb[e2 & 15](f2, a2, g2);
            g2 = mn(f2) | 0;
            l = h2;
            return g2 | 0;
          }
          function Un(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Vn(a2, d2, f2, 1);
            l = e2;
            return;
          }
          function Vn(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = Wn() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = Xn(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, Yn(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function Wn() {
            var b2 = 0, d2 = 0;
            if (!(a[7752] | 0)) {
              eo(9720);
              Ha(38, 9720, o | 0) | 0;
              d2 = 7752;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9720) | 0)) {
              b2 = 9720;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              eo(9720);
            }
            return 9720;
          }
          function Xn(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Yn(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = Wn() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Zn(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              _n(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Zn(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function _n(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = $n(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              ao(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Zn(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              bo(a2, i3);
              co(i3);
              l = k2;
              return;
            }
          }
          function $n(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function ao(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function bo(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function co(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function eo(a2) {
            a2 = a2 | 0;
            ho(a2);
            return;
          }
          function fo(a2) {
            a2 = a2 | 0;
            go(a2 + 24 | 0);
            return;
          }
          function go(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function ho(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 8, b2, io() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function io() {
            return 1288;
          }
          function jo(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2 + 8 | 0;
            f2 = d2;
            g2 = ko(a2) | 0;
            a2 = c[g2 + 4 >> 2] | 0;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = a2;
            c[e2 >> 2] = c[f2 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            b2 = lo(b2, e2) | 0;
            l = d2;
            return b2 | 0;
          }
          function ko(a2) {
            a2 = a2 | 0;
            return (c[(Wn() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function lo(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              d2 = c[(c[a2 >> 2] | 0) + d2 >> 2] | 0;
            return bh(pb[d2 & 31](a2) | 0) | 0;
          }
          function mo(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            no(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function no(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = oo() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = po(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, qo(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function oo() {
            var b2 = 0, d2 = 0;
            if (!(a[7760] | 0)) {
              xo(9756);
              Ha(39, 9756, o | 0) | 0;
              d2 = 7760;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9756) | 0)) {
              b2 = 9756;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              xo(9756);
            }
            return 9756;
          }
          function po(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function qo(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = oo() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              ro(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              so(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function ro(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function so(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = to(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              uo(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              ro(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              vo(a2, i3);
              wo(i3);
              l = k2;
              return;
            }
          }
          function to(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function uo(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function vo(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function wo(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function xo(a2) {
            a2 = a2 | 0;
            Ao(a2);
            return;
          }
          function yo(a2) {
            a2 = a2 | 0;
            zo(a2 + 24 | 0);
            return;
          }
          function zo(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function Ao(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 8, b2, Bo() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Bo() {
            return 1292;
          }
          function Co(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = Do(a2) | 0;
            a2 = c[h2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = a2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Eo(b2, f2, d2);
            l = e2;
            return;
          }
          function Do(a2) {
            a2 = a2 | 0;
            return (c[(oo() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function Eo(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            var e2 = 0, f2 = 0, g2 = 0;
            g2 = l;
            l = l + 16 | 0;
            f2 = g2;
            e2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              e2 = c[(c[a2 >> 2] | 0) + e2 >> 2] | 0;
            rj(f2, d2);
            d2 = +sj(f2, d2);
            lb[e2 & 31](a2, d2);
            l = g2;
            return;
          }
          function Fo(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Go(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function Go(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = Ho() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = Io(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, Jo(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function Ho() {
            var b2 = 0, d2 = 0;
            if (!(a[7768] | 0)) {
              Qo(9792);
              Ha(40, 9792, o | 0) | 0;
              d2 = 7768;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9792) | 0)) {
              b2 = 9792;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Qo(9792);
            }
            return 9792;
          }
          function Io(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Jo(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = Ho() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Ko(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              Lo(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Ko(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function Lo(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = Mo(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              No(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Ko(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              Oo(a2, i3);
              Po(i3);
              l = k2;
              return;
            }
          }
          function Mo(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function No(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function Oo(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Po(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Qo(a2) {
            a2 = a2 | 0;
            To(a2);
            return;
          }
          function Ro(a2) {
            a2 = a2 | 0;
            So(a2 + 24 | 0);
            return;
          }
          function So(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function To(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 1, b2, Uo() | 0, 2);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Uo() {
            return 1300;
          }
          function Vo(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            f2 = l;
            l = l + 16 | 0;
            g2 = f2 + 8 | 0;
            h2 = f2;
            i3 = Wo(a2) | 0;
            a2 = c[i3 + 4 >> 2] | 0;
            c[h2 >> 2] = c[i3 >> 2];
            c[h2 + 4 >> 2] = a2;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = c[h2 + 4 >> 2];
            Xo(b2, g2, d2, e2);
            l = f2;
            return;
          }
          function Wo(a2) {
            a2 = a2 | 0;
            return (c[(Ho() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function Xo(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            i3 = l;
            l = l + 16 | 0;
            g2 = i3 + 1 | 0;
            h2 = i3;
            f2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              f2 = c[(c[a2 >> 2] | 0) + f2 >> 2] | 0;
            tj(g2, d2);
            g2 = uj(g2, d2) | 0;
            rj(h2, e2);
            e2 = +sj(h2, e2);
            Gb[f2 & 15](a2, g2, e2);
            l = i3;
            return;
          }
          function Yo(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Zo(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function Zo(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = _o() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = $o(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, ap(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function _o() {
            var b2 = 0, d2 = 0;
            if (!(a[7776] | 0)) {
              hp(9828);
              Ha(41, 9828, o | 0) | 0;
              d2 = 7776;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9828) | 0)) {
              b2 = 9828;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              hp(9828);
            }
            return 9828;
          }
          function $o(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function ap(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = _o() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              bp(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              cp(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function bp(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function cp(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = dp(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              ep(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              bp(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              fp(a2, i3);
              gp(i3);
              l = k2;
              return;
            }
          }
          function dp(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function ep(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function fp(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function gp(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function hp(a2) {
            a2 = a2 | 0;
            kp(a2);
            return;
          }
          function ip(a2) {
            a2 = a2 | 0;
            jp(a2 + 24 | 0);
            return;
          }
          function jp(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function kp(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 7, b2, lp() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function lp() {
            return 1312;
          }
          function mp(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = np(a2) | 0;
            a2 = c[h2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = a2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            op(b2, f2, d2);
            l = e2;
            return;
          }
          function np(a2) {
            a2 = a2 | 0;
            return (c[(_o() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function op(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            g2 = l;
            l = l + 16 | 0;
            f2 = g2;
            e2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              e2 = c[(c[a2 >> 2] | 0) + e2 >> 2] | 0;
            tj(f2, d2);
            f2 = uj(f2, d2) | 0;
            ob[e2 & 31](a2, f2);
            l = g2;
            return;
          }
          function pp(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            qp(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function qp(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = rp() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = sp(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, tp(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function rp() {
            var b2 = 0, d2 = 0;
            if (!(a[7784] | 0)) {
              Ap(9864);
              Ha(42, 9864, o | 0) | 0;
              d2 = 7784;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9864) | 0)) {
              b2 = 9864;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Ap(9864);
            }
            return 9864;
          }
          function sp(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function tp(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = rp() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              up(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              vp(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function up(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function vp(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = wp(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              xp(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              up(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              yp(a2, i3);
              zp(i3);
              l = k2;
              return;
            }
          }
          function wp(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function xp(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function yp(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function zp(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Ap(a2) {
            a2 = a2 | 0;
            Dp(a2);
            return;
          }
          function Bp(a2) {
            a2 = a2 | 0;
            Cp(a2 + 24 | 0);
            return;
          }
          function Cp(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function Dp(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 8, b2, Ep() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Ep() {
            return 1320;
          }
          function Fp(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = Gp(a2) | 0;
            a2 = c[h2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = a2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Hp(b2, f2, d2);
            l = e2;
            return;
          }
          function Gp(a2) {
            a2 = a2 | 0;
            return (c[(rp() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function Hp(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            g2 = l;
            l = l + 16 | 0;
            f2 = g2;
            e2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              e2 = c[(c[a2 >> 2] | 0) + e2 >> 2] | 0;
            Ip(f2, d2);
            f2 = Jp(f2, d2) | 0;
            ob[e2 & 31](a2, f2);
            l = g2;
            return;
          }
          function Ip(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Jp(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return Kp(b2) | 0;
          }
          function Kp(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Lp(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Mp(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function Mp(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = Np() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = Op(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, Pp(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function Np() {
            var b2 = 0, d2 = 0;
            if (!(a[7792] | 0)) {
              Wp(9900);
              Ha(43, 9900, o | 0) | 0;
              d2 = 7792;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9900) | 0)) {
              b2 = 9900;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Wp(9900);
            }
            return 9900;
          }
          function Op(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Pp(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = Np() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Qp(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              Rp(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Qp(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function Rp(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = Sp(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              Tp(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Qp(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              Up(a2, i3);
              Vp(i3);
              l = k2;
              return;
            }
          }
          function Sp(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function Tp(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function Up(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Vp(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Wp(a2) {
            a2 = a2 | 0;
            Zp(a2);
            return;
          }
          function Xp(a2) {
            a2 = a2 | 0;
            Yp(a2 + 24 | 0);
            return;
          }
          function Yp(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function Zp(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 22, b2, _p() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function _p() {
            return 1344;
          }
          function $p(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2 + 8 | 0;
            f2 = d2;
            g2 = aq(a2) | 0;
            a2 = c[g2 + 4 >> 2] | 0;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = a2;
            c[e2 >> 2] = c[f2 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            bq(b2, e2);
            l = d2;
            return;
          }
          function aq(a2) {
            a2 = a2 | 0;
            return (c[(Np() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function bq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              d2 = c[(c[a2 >> 2] | 0) + d2 >> 2] | 0;
            nb[d2 & 127](a2);
            return;
          }
          function cq(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = c[a2 >> 2] | 0;
            f2 = dq() | 0;
            a2 = eq(d2) | 0;
            fi(g2, b2, f2, a2, fq(d2, e2) | 0, e2);
            return;
          }
          function dq() {
            var b2 = 0, d2 = 0;
            if (!(a[7800] | 0)) {
              mq(9936);
              Ha(44, 9936, o | 0) | 0;
              d2 = 7800;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9936) | 0)) {
              b2 = 9936;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              mq(9936);
            }
            return 9936;
          }
          function eq(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function fq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            f2 = i3;
            g2 = i3 + 4 | 0;
            c[f2 >> 2] = a2;
            j2 = dq() | 0;
            h2 = j2 + 24 | 0;
            b2 = ji(b2, 4) | 0;
            c[g2 >> 2] = b2;
            d2 = j2 + 28 | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 + 32 >> 2] | 0) >>> 0) {
              gq(e2, a2, b2);
              b2 = (c[d2 >> 2] | 0) + 8 | 0;
              c[d2 >> 2] = b2;
            } else {
              hq(h2, f2, g2);
              b2 = c[d2 >> 2] | 0;
            }
            l = i3;
            return (b2 - (c[h2 >> 2] | 0) >> 3) + -1 | 0;
          }
          function gq(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function hq(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            i3 = l;
            l = l + 32 | 0;
            f2 = i3;
            g2 = a2 + 4 | 0;
            h2 = ((c[g2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 3) + 1 | 0;
            e2 = iq(a2) | 0;
            if (e2 >>> 0 < h2 >>> 0)
              jC(a2);
            else {
              j2 = c[a2 >> 2] | 0;
              m2 = (c[a2 + 8 >> 2] | 0) - j2 | 0;
              k2 = m2 >> 2;
              jq(f2, m2 >> 3 >>> 0 < e2 >>> 1 >>> 0 ? k2 >>> 0 < h2 >>> 0 ? h2 : k2 : e2, (c[g2 >> 2] | 0) - j2 >> 3, a2 + 8 | 0);
              h2 = f2 + 8 | 0;
              gq(c[h2 >> 2] | 0, c[b2 >> 2] | 0, c[d2 >> 2] | 0);
              c[h2 >> 2] = (c[h2 >> 2] | 0) + 8;
              kq(a2, f2);
              lq(f2);
              l = i3;
              return;
            }
          }
          function iq(a2) {
            a2 = a2 | 0;
            return 536870911;
          }
          function jq(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 536870911)
                  Ta();
                else {
                  f2 = qC(b2 << 3) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 3) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 3);
            return;
          }
          function kq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 3) << 3) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function lq(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -8 - b2 | 0) >>> 3) << 3);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function mq(a2) {
            a2 = a2 | 0;
            pq(a2);
            return;
          }
          function nq(a2) {
            a2 = a2 | 0;
            oq(a2 + 24 | 0);
            return;
          }
          function oq(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function pq(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 1, 23, b2, Kl() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function qq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            sq(c[(rq(a2) | 0) >> 2] | 0, b2);
            return;
          }
          function rq(a2) {
            a2 = a2 | 0;
            return (c[(dq() | 0) + 24 >> 2] | 0) + (a2 << 3) | 0;
          }
          function sq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0;
            c2 = l;
            l = l + 16 | 0;
            d2 = c2;
            Ol(d2, b2);
            b2 = Pl(d2, b2) | 0;
            nb[a2 & 127](b2);
            l = c2;
            return;
          }
          function tq(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = c[a2 >> 2] | 0;
            f2 = uq() | 0;
            a2 = vq(d2) | 0;
            fi(g2, b2, f2, a2, wq(d2, e2) | 0, e2);
            return;
          }
          function uq() {
            var b2 = 0, d2 = 0;
            if (!(a[7808] | 0)) {
              Dq(9972);
              Ha(45, 9972, o | 0) | 0;
              d2 = 7808;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(9972) | 0)) {
              b2 = 9972;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Dq(9972);
            }
            return 9972;
          }
          function vq(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function wq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            f2 = i3;
            g2 = i3 + 4 | 0;
            c[f2 >> 2] = a2;
            j2 = uq() | 0;
            h2 = j2 + 24 | 0;
            b2 = ji(b2, 4) | 0;
            c[g2 >> 2] = b2;
            d2 = j2 + 28 | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 + 32 >> 2] | 0) >>> 0) {
              xq(e2, a2, b2);
              b2 = (c[d2 >> 2] | 0) + 8 | 0;
              c[d2 >> 2] = b2;
            } else {
              yq(h2, f2, g2);
              b2 = c[d2 >> 2] | 0;
            }
            l = i3;
            return (b2 - (c[h2 >> 2] | 0) >> 3) + -1 | 0;
          }
          function xq(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function yq(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            i3 = l;
            l = l + 32 | 0;
            f2 = i3;
            g2 = a2 + 4 | 0;
            h2 = ((c[g2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 3) + 1 | 0;
            e2 = zq(a2) | 0;
            if (e2 >>> 0 < h2 >>> 0)
              jC(a2);
            else {
              j2 = c[a2 >> 2] | 0;
              m2 = (c[a2 + 8 >> 2] | 0) - j2 | 0;
              k2 = m2 >> 2;
              Aq(f2, m2 >> 3 >>> 0 < e2 >>> 1 >>> 0 ? k2 >>> 0 < h2 >>> 0 ? h2 : k2 : e2, (c[g2 >> 2] | 0) - j2 >> 3, a2 + 8 | 0);
              h2 = f2 + 8 | 0;
              xq(c[h2 >> 2] | 0, c[b2 >> 2] | 0, c[d2 >> 2] | 0);
              c[h2 >> 2] = (c[h2 >> 2] | 0) + 8;
              Bq(a2, f2);
              Cq(f2);
              l = i3;
              return;
            }
          }
          function zq(a2) {
            a2 = a2 | 0;
            return 536870911;
          }
          function Aq(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 536870911)
                  Ta();
                else {
                  f2 = qC(b2 << 3) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 3) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 3);
            return;
          }
          function Bq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 3) << 3) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Cq(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -8 - b2 | 0) >>> 3) << 3);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Dq(a2) {
            a2 = a2 | 0;
            Gq(a2);
            return;
          }
          function Eq(a2) {
            a2 = a2 | 0;
            Fq(a2 + 24 | 0);
            return;
          }
          function Fq(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function Gq(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 1, 9, b2, Hq() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Hq() {
            return 1348;
          }
          function Iq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return Kq(c[(Jq(a2) | 0) >> 2] | 0, b2) | 0;
          }
          function Jq(a2) {
            a2 = a2 | 0;
            return (c[(uq() | 0) + 24 >> 2] | 0) + (a2 << 3) | 0;
          }
          function Kq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0;
            c2 = l;
            l = l + 16 | 0;
            d2 = c2;
            Lq(d2, b2);
            b2 = Mq(d2, b2) | 0;
            b2 = Ik(pb[a2 & 31](b2) | 0) | 0;
            l = c2;
            return b2 | 0;
          }
          function Lq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Mq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return Nq(b2) | 0;
          }
          function Nq(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Oq(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = c[a2 >> 2] | 0;
            f2 = Pq() | 0;
            a2 = Qq(d2) | 0;
            fi(g2, b2, f2, a2, Rq(d2, e2) | 0, e2);
            return;
          }
          function Pq() {
            var b2 = 0, d2 = 0;
            if (!(a[7816] | 0)) {
              Yq(10008);
              Ha(46, 10008, o | 0) | 0;
              d2 = 7816;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(10008) | 0)) {
              b2 = 10008;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Yq(10008);
            }
            return 10008;
          }
          function Qq(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Rq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            f2 = i3;
            g2 = i3 + 4 | 0;
            c[f2 >> 2] = a2;
            j2 = Pq() | 0;
            h2 = j2 + 24 | 0;
            b2 = ji(b2, 4) | 0;
            c[g2 >> 2] = b2;
            d2 = j2 + 28 | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 + 32 >> 2] | 0) >>> 0) {
              Sq(e2, a2, b2);
              b2 = (c[d2 >> 2] | 0) + 8 | 0;
              c[d2 >> 2] = b2;
            } else {
              Tq(h2, f2, g2);
              b2 = c[d2 >> 2] | 0;
            }
            l = i3;
            return (b2 - (c[h2 >> 2] | 0) >> 3) + -1 | 0;
          }
          function Sq(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function Tq(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            i3 = l;
            l = l + 32 | 0;
            f2 = i3;
            g2 = a2 + 4 | 0;
            h2 = ((c[g2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 3) + 1 | 0;
            e2 = Uq(a2) | 0;
            if (e2 >>> 0 < h2 >>> 0)
              jC(a2);
            else {
              j2 = c[a2 >> 2] | 0;
              m2 = (c[a2 + 8 >> 2] | 0) - j2 | 0;
              k2 = m2 >> 2;
              Vq(f2, m2 >> 3 >>> 0 < e2 >>> 1 >>> 0 ? k2 >>> 0 < h2 >>> 0 ? h2 : k2 : e2, (c[g2 >> 2] | 0) - j2 >> 3, a2 + 8 | 0);
              h2 = f2 + 8 | 0;
              Sq(c[h2 >> 2] | 0, c[b2 >> 2] | 0, c[d2 >> 2] | 0);
              c[h2 >> 2] = (c[h2 >> 2] | 0) + 8;
              Wq(a2, f2);
              Xq(f2);
              l = i3;
              return;
            }
          }
          function Uq(a2) {
            a2 = a2 | 0;
            return 536870911;
          }
          function Vq(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 536870911)
                  Ta();
                else {
                  f2 = qC(b2 << 3) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 3) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 3);
            return;
          }
          function Wq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 3) << 3) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Xq(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -8 - b2 | 0) >>> 3) << 3);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Yq(a2) {
            a2 = a2 | 0;
            $q(a2);
            return;
          }
          function Zq(a2) {
            a2 = a2 | 0;
            _q(a2 + 24 | 0);
            return;
          }
          function _q(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function $q(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 1, 15, b2, Zk() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function ar(a2) {
            a2 = a2 | 0;
            return cr(c[(br(a2) | 0) >> 2] | 0) | 0;
          }
          function br(a2) {
            a2 = a2 | 0;
            return (c[(Pq() | 0) + 24 >> 2] | 0) + (a2 << 3) | 0;
          }
          function cr(a2) {
            a2 = a2 | 0;
            return Ik(Ab[a2 & 7]() | 0) | 0;
          }
          function dr() {
            var b2 = 0;
            if (!(a[7832] | 0)) {
              nr(10052);
              Ha(25, 10052, o | 0) | 0;
              b2 = 7832;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10052;
          }
          function er(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = fr() | 0;
            c[a2 + 4 >> 2] = gr() | 0;
            c[a2 + 12 >> 2] = b2;
            c[a2 + 8 >> 2] = hr() | 0;
            c[a2 + 32 >> 2] = 2;
            return;
          }
          function fr() {
            return 11709;
          }
          function gr() {
            return 1188;
          }
          function hr() {
            return lr() | 0;
          }
          function ir(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            if ((jr(d2, 896) | 0) == 512) {
              if (c2 | 0) {
                kr(c2);
                sC(c2);
              }
            } else if (b2 | 0) {
              uf(b2);
              sC(b2);
            }
            return;
          }
          function jr(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return b2 & a2 | 0;
          }
          function kr(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 4 >> 2] | 0;
            if (a2 | 0)
              oC(a2);
            return;
          }
          function lr() {
            var b2 = 0;
            if (!(a[7824] | 0)) {
              c[2511] = mr() | 0;
              c[2512] = 0;
              b2 = 7824;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10044;
          }
          function mr() {
            return 0;
          }
          function nr(a2) {
            a2 = a2 | 0;
            Zi(a2);
            return;
          }
          function or(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            b2 = l;
            l = l + 32 | 0;
            d2 = b2 + 24 | 0;
            g2 = b2 + 16 | 0;
            f2 = b2 + 8 | 0;
            e2 = b2;
            pr(a2, 4827);
            qr(a2, 4834, 3) | 0;
            rr(a2, 3682, 47) | 0;
            c[g2 >> 2] = 9;
            c[g2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[g2 >> 2];
            c[d2 + 4 >> 2] = c[g2 + 4 >> 2];
            sr(a2, 4841, d2) | 0;
            c[f2 >> 2] = 1;
            c[f2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[f2 >> 2];
            c[d2 + 4 >> 2] = c[f2 + 4 >> 2];
            tr(a2, 4871, d2) | 0;
            c[e2 >> 2] = 10;
            c[e2 + 4 >> 2] = 0;
            c[d2 >> 2] = c[e2 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
            ur(a2, 4891, d2) | 0;
            l = b2;
            return;
          }
          function pr(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = nt() | 0;
            c[a2 >> 2] = d2;
            ot(d2, b2);
            Hv(c[a2 >> 2] | 0);
            return;
          }
          function qr(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            Ws(a2, ai(b2) | 0, c2, 0);
            return a2 | 0;
          }
          function rr(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            Es(a2, ai(b2) | 0, c2, 0);
            return a2 | 0;
          }
          function sr(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            is(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function tr(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Or(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function ur(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = c[d2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[d2 >> 2];
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            vr(a2, b2, f2);
            l = e2;
            return a2 | 0;
          }
          function vr(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            wr(a2, d2, f2, 1);
            l = e2;
            return;
          }
          function wr(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = xr() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = yr(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, zr(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function xr() {
            var b2 = 0, d2 = 0;
            if (!(a[7840] | 0)) {
              Gr(10100);
              Ha(48, 10100, o | 0) | 0;
              d2 = 7840;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(10100) | 0)) {
              b2 = 10100;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Gr(10100);
            }
            return 10100;
          }
          function yr(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function zr(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = xr() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Ar(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              Br(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Ar(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function Br(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = Cr(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              Dr(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Ar(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              Er(a2, i3);
              Fr(i3);
              l = k2;
              return;
            }
          }
          function Cr(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function Dr(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function Er(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Fr(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Gr(a2) {
            a2 = a2 | 0;
            Jr(a2);
            return;
          }
          function Hr(a2) {
            a2 = a2 | 0;
            Ir(a2 + 24 | 0);
            return;
          }
          function Ir(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function Jr(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 6, b2, Kr() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Kr() {
            return 1364;
          }
          function Lr(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = Mr(a2) | 0;
            a2 = c[h2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = a2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            d2 = Nr(b2, f2, d2) | 0;
            l = e2;
            return d2 | 0;
          }
          function Mr(a2) {
            a2 = a2 | 0;
            return (c[(xr() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function Nr(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            g2 = l;
            l = l + 16 | 0;
            f2 = g2;
            e2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              e2 = c[(c[a2 >> 2] | 0) + e2 >> 2] | 0;
            tj(f2, d2);
            f2 = uj(f2, d2) | 0;
            f2 = Qj(wb[e2 & 15](a2, f2) | 0) | 0;
            l = g2;
            return f2 | 0;
          }
          function Or(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            Pr(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function Pr(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = Qr() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = Rr(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, Sr(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function Qr() {
            var b2 = 0, d2 = 0;
            if (!(a[7848] | 0)) {
              Zr(10136);
              Ha(49, 10136, o | 0) | 0;
              d2 = 7848;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(10136) | 0)) {
              b2 = 10136;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Zr(10136);
            }
            return 10136;
          }
          function Rr(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Sr(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = Qr() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              Tr(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              Ur(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function Tr(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function Ur(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = Vr(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              Wr(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              Tr(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              Xr(a2, i3);
              Yr(i3);
              l = k2;
              return;
            }
          }
          function Vr(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function Wr(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function Xr(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Yr(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Zr(a2) {
            a2 = a2 | 0;
            as(a2);
            return;
          }
          function _r(a2) {
            a2 = a2 | 0;
            $r(a2 + 24 | 0);
            return;
          }
          function $r(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function as(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 9, b2, bs() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function bs() {
            return 1372;
          }
          function cs(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            h2 = ds(a2) | 0;
            a2 = c[h2 + 4 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = a2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            es(b2, f2, d2);
            l = e2;
            return;
          }
          function ds(a2) {
            a2 = a2 | 0;
            return (c[(Qr() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function es(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            var e2 = 0, f2 = 0, g2 = 0, h2 = ib;
            g2 = l;
            l = l + 16 | 0;
            f2 = g2;
            e2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              e2 = c[(c[a2 >> 2] | 0) + e2 >> 2] | 0;
            fs(f2, d2);
            h2 = T(gs(f2, d2));
            kb[e2 & 1](a2, h2);
            l = g2;
            return;
          }
          function fs(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            return;
          }
          function gs(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            return T(hs(b2));
          }
          function hs(a2) {
            a2 = +a2;
            return T(a2);
          }
          function is(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2 + 8 | 0;
            g2 = e2;
            i3 = c[d2 >> 2] | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            d2 = ai(b2) | 0;
            c[g2 >> 2] = i3;
            c[g2 + 4 >> 2] = h2;
            c[f2 >> 2] = c[g2 >> 2];
            c[f2 + 4 >> 2] = c[g2 + 4 >> 2];
            js(a2, d2, f2, 0);
            l = e2;
            return;
          }
          function js(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2 + 16 | 0;
            m2 = f2 + 8 | 0;
            i3 = f2;
            k2 = c[d2 >> 2] | 0;
            j2 = c[d2 + 4 >> 2] | 0;
            h2 = c[a2 >> 2] | 0;
            a2 = ks() | 0;
            c[m2 >> 2] = k2;
            c[m2 + 4 >> 2] = j2;
            c[g2 >> 2] = c[m2 >> 2];
            c[g2 + 4 >> 2] = c[m2 + 4 >> 2];
            d2 = ls(g2) | 0;
            c[i3 >> 2] = k2;
            c[i3 + 4 >> 2] = j2;
            c[g2 >> 2] = c[i3 >> 2];
            c[g2 + 4 >> 2] = c[i3 + 4 >> 2];
            fi(h2, b2, a2, d2, ms(g2, e2) | 0, e2);
            l = f2;
            return;
          }
          function ks() {
            var b2 = 0, d2 = 0;
            if (!(a[7856] | 0)) {
              ts(10172);
              Ha(50, 10172, o | 0) | 0;
              d2 = 7856;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(10172) | 0)) {
              b2 = 10172;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              ts(10172);
            }
            return 10172;
          }
          function ls(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function ms(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            m2 = l;
            l = l + 32 | 0;
            f2 = m2 + 24 | 0;
            h2 = m2 + 16 | 0;
            i3 = m2;
            j2 = m2 + 8 | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            c[i3 >> 2] = g2;
            c[i3 + 4 >> 2] = e2;
            n2 = ks() | 0;
            k2 = n2 + 24 | 0;
            a2 = ji(b2, 4) | 0;
            c[j2 >> 2] = a2;
            b2 = n2 + 28 | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[n2 + 32 >> 2] | 0) >>> 0) {
              c[h2 >> 2] = g2;
              c[h2 + 4 >> 2] = e2;
              c[f2 >> 2] = c[h2 >> 2];
              c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
              ns(d2, f2, a2);
              a2 = (c[b2 >> 2] | 0) + 12 | 0;
              c[b2 >> 2] = a2;
            } else {
              os(k2, i3, j2);
              a2 = c[b2 >> 2] | 0;
            }
            l = m2;
            return ((a2 - (c[k2 >> 2] | 0) | 0) / 12 | 0) + -1 | 0;
          }
          function ns(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = e2;
            c[a2 + 8 >> 2] = d2;
            return;
          }
          function os(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
            k2 = l;
            l = l + 48 | 0;
            e2 = k2 + 32 | 0;
            h2 = k2 + 24 | 0;
            i3 = k2;
            j2 = a2 + 4 | 0;
            f2 = (((c[j2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
            g2 = ps(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              m2 = c[a2 >> 2] | 0;
              o2 = ((c[a2 + 8 >> 2] | 0) - m2 | 0) / 12 | 0;
              n2 = o2 << 1;
              qs(i3, o2 >>> 0 < g2 >>> 1 >>> 0 ? n2 >>> 0 < f2 >>> 0 ? f2 : n2 : g2, ((c[j2 >> 2] | 0) - m2 | 0) / 12 | 0, a2 + 8 | 0);
              j2 = i3 + 8 | 0;
              g2 = c[j2 >> 2] | 0;
              f2 = c[b2 + 4 >> 2] | 0;
              d2 = c[d2 >> 2] | 0;
              c[h2 >> 2] = c[b2 >> 2];
              c[h2 + 4 >> 2] = f2;
              c[e2 >> 2] = c[h2 >> 2];
              c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
              ns(g2, e2, d2);
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 12;
              rs(a2, i3);
              ss(i3);
              l = k2;
              return;
            }
          }
          function ps(a2) {
            a2 = a2 | 0;
            return 357913941;
          }
          function qs(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 357913941)
                  Ta();
                else {
                  f2 = qC(b2 * 12 | 0) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 * 12 | 0) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 * 12 | 0);
            return;
          }
          function rs(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (((f2 | 0) / -12 | 0) * 12 | 0) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function ss(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~(((e2 + -12 - b2 | 0) >>> 0) / 12 | 0) * 12 | 0);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function ts(a2) {
            a2 = a2 | 0;
            ws(a2);
            return;
          }
          function us(a2) {
            a2 = a2 | 0;
            vs(a2 + 24 | 0);
            return;
          }
          function vs(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~(((b2 + -12 - e2 | 0) >>> 0) / 12 | 0) * 12 | 0);
              sC(d2);
            }
            return;
          }
          function ws(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 2, 3, b2, xs() | 0, 2);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function xs() {
            return 1380;
          }
          function ys(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            f2 = l;
            l = l + 16 | 0;
            g2 = f2 + 8 | 0;
            h2 = f2;
            i3 = zs(a2) | 0;
            a2 = c[i3 + 4 >> 2] | 0;
            c[h2 >> 2] = c[i3 >> 2];
            c[h2 + 4 >> 2] = a2;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = c[h2 + 4 >> 2];
            As(b2, g2, d2, e2);
            l = f2;
            return;
          }
          function zs(a2) {
            a2 = a2 | 0;
            return (c[(ks() | 0) + 24 >> 2] | 0) + (a2 * 12 | 0) | 0;
          }
          function As(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            i3 = l;
            l = l + 16 | 0;
            g2 = i3 + 1 | 0;
            h2 = i3;
            f2 = c[b2 >> 2] | 0;
            b2 = c[b2 + 4 >> 2] | 0;
            a2 = a2 + (b2 >> 1) | 0;
            if (b2 & 1)
              f2 = c[(c[a2 >> 2] | 0) + f2 >> 2] | 0;
            tj(g2, d2);
            g2 = uj(g2, d2) | 0;
            Bs(h2, e2);
            h2 = Cs(h2, e2) | 0;
            Eb[f2 & 15](a2, g2, h2);
            l = i3;
            return;
          }
          function Bs(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Cs(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return Ds(b2) | 0;
          }
          function Ds(a2) {
            a2 = a2 | 0;
            return (a2 | 0) != 0 | 0;
          }
          function Es(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = c[a2 >> 2] | 0;
            f2 = Fs() | 0;
            a2 = Gs(d2) | 0;
            fi(g2, b2, f2, a2, Hs(d2, e2) | 0, e2);
            return;
          }
          function Fs() {
            var b2 = 0, d2 = 0;
            if (!(a[7864] | 0)) {
              Os(10208);
              Ha(51, 10208, o | 0) | 0;
              d2 = 7864;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(10208) | 0)) {
              b2 = 10208;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Os(10208);
            }
            return 10208;
          }
          function Gs(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Hs(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            f2 = i3;
            g2 = i3 + 4 | 0;
            c[f2 >> 2] = a2;
            j2 = Fs() | 0;
            h2 = j2 + 24 | 0;
            b2 = ji(b2, 4) | 0;
            c[g2 >> 2] = b2;
            d2 = j2 + 28 | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 + 32 >> 2] | 0) >>> 0) {
              Is(e2, a2, b2);
              b2 = (c[d2 >> 2] | 0) + 8 | 0;
              c[d2 >> 2] = b2;
            } else {
              Js(h2, f2, g2);
              b2 = c[d2 >> 2] | 0;
            }
            l = i3;
            return (b2 - (c[h2 >> 2] | 0) >> 3) + -1 | 0;
          }
          function Is(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function Js(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            i3 = l;
            l = l + 32 | 0;
            f2 = i3;
            g2 = a2 + 4 | 0;
            h2 = ((c[g2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 3) + 1 | 0;
            e2 = Ks(a2) | 0;
            if (e2 >>> 0 < h2 >>> 0)
              jC(a2);
            else {
              j2 = c[a2 >> 2] | 0;
              m2 = (c[a2 + 8 >> 2] | 0) - j2 | 0;
              k2 = m2 >> 2;
              Ls(f2, m2 >> 3 >>> 0 < e2 >>> 1 >>> 0 ? k2 >>> 0 < h2 >>> 0 ? h2 : k2 : e2, (c[g2 >> 2] | 0) - j2 >> 3, a2 + 8 | 0);
              h2 = f2 + 8 | 0;
              Is(c[h2 >> 2] | 0, c[b2 >> 2] | 0, c[d2 >> 2] | 0);
              c[h2 >> 2] = (c[h2 >> 2] | 0) + 8;
              Ms(a2, f2);
              Ns(f2);
              l = i3;
              return;
            }
          }
          function Ks(a2) {
            a2 = a2 | 0;
            return 536870911;
          }
          function Ls(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 536870911)
                  Ta();
                else {
                  f2 = qC(b2 << 3) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 3) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 3);
            return;
          }
          function Ms(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 3) << 3) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Ns(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -8 - b2 | 0) >>> 3) << 3);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Os(a2) {
            a2 = a2 | 0;
            Rs(a2);
            return;
          }
          function Ps(a2) {
            a2 = a2 | 0;
            Qs(a2 + 24 | 0);
            return;
          }
          function Qs(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function Rs(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 1, 24, b2, Ss() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Ss() {
            return 1392;
          }
          function Ts(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Vs(c[(Us(a2) | 0) >> 2] | 0, b2);
            return;
          }
          function Us(a2) {
            a2 = a2 | 0;
            return (c[(Fs() | 0) + 24 >> 2] | 0) + (a2 << 3) | 0;
          }
          function Vs(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0;
            c2 = l;
            l = l + 16 | 0;
            d2 = c2;
            Lq(d2, b2);
            b2 = Mq(d2, b2) | 0;
            nb[a2 & 127](b2);
            l = c2;
            return;
          }
          function Ws(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = c[a2 >> 2] | 0;
            f2 = Xs() | 0;
            a2 = Ys(d2) | 0;
            fi(g2, b2, f2, a2, Zs(d2, e2) | 0, e2);
            return;
          }
          function Xs() {
            var b2 = 0, d2 = 0;
            if (!(a[7872] | 0)) {
              et(10244);
              Ha(52, 10244, o | 0) | 0;
              d2 = 7872;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(10244) | 0)) {
              b2 = 10244;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              et(10244);
            }
            return 10244;
          }
          function Ys(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Zs(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            f2 = i3;
            g2 = i3 + 4 | 0;
            c[f2 >> 2] = a2;
            j2 = Xs() | 0;
            h2 = j2 + 24 | 0;
            b2 = ji(b2, 4) | 0;
            c[g2 >> 2] = b2;
            d2 = j2 + 28 | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 + 32 >> 2] | 0) >>> 0) {
              _s(e2, a2, b2);
              b2 = (c[d2 >> 2] | 0) + 8 | 0;
              c[d2 >> 2] = b2;
            } else {
              $s(h2, f2, g2);
              b2 = c[d2 >> 2] | 0;
            }
            l = i3;
            return (b2 - (c[h2 >> 2] | 0) >> 3) + -1 | 0;
          }
          function _s(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function $s(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            i3 = l;
            l = l + 32 | 0;
            f2 = i3;
            g2 = a2 + 4 | 0;
            h2 = ((c[g2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 3) + 1 | 0;
            e2 = at(a2) | 0;
            if (e2 >>> 0 < h2 >>> 0)
              jC(a2);
            else {
              j2 = c[a2 >> 2] | 0;
              m2 = (c[a2 + 8 >> 2] | 0) - j2 | 0;
              k2 = m2 >> 2;
              bt(f2, m2 >> 3 >>> 0 < e2 >>> 1 >>> 0 ? k2 >>> 0 < h2 >>> 0 ? h2 : k2 : e2, (c[g2 >> 2] | 0) - j2 >> 3, a2 + 8 | 0);
              h2 = f2 + 8 | 0;
              _s(c[h2 >> 2] | 0, c[b2 >> 2] | 0, c[d2 >> 2] | 0);
              c[h2 >> 2] = (c[h2 >> 2] | 0) + 8;
              ct(a2, f2);
              dt(f2);
              l = i3;
              return;
            }
          }
          function at(a2) {
            a2 = a2 | 0;
            return 536870911;
          }
          function bt(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 536870911)
                  Ta();
                else {
                  f2 = qC(b2 << 3) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 3) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 3);
            return;
          }
          function ct(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 3) << 3) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function dt(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -8 - b2 | 0) >>> 3) << 3);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function et(a2) {
            a2 = a2 | 0;
            ht(a2);
            return;
          }
          function ft(a2) {
            a2 = a2 | 0;
            gt(a2 + 24 | 0);
            return;
          }
          function gt(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function ht(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 1, 16, b2, it() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function it() {
            return 1400;
          }
          function jt(a2) {
            a2 = a2 | 0;
            return lt(c[(kt(a2) | 0) >> 2] | 0) | 0;
          }
          function kt(a2) {
            a2 = a2 | 0;
            return (c[(Xs() | 0) + 24 >> 2] | 0) + (a2 << 3) | 0;
          }
          function lt(a2) {
            a2 = a2 | 0;
            return mt(Ab[a2 & 7]() | 0) | 0;
          }
          function mt(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function nt() {
            var b2 = 0;
            if (!(a[7880] | 0)) {
              ut(10280);
              Ha(25, 10280, o | 0) | 0;
              b2 = 7880;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10280;
          }
          function ot(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = pt() | 0;
            c[a2 + 4 >> 2] = qt() | 0;
            c[a2 + 12 >> 2] = b2;
            c[a2 + 8 >> 2] = rt() | 0;
            c[a2 + 32 >> 2] = 4;
            return;
          }
          function pt() {
            return 11711;
          }
          function qt() {
            return 1356;
          }
          function rt() {
            return lr() | 0;
          }
          function st(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            if ((jr(d2, 896) | 0) == 512) {
              if (c2 | 0) {
                tt(c2);
                sC(c2);
              }
            } else if (b2 | 0) {
              mf(b2);
              sC(b2);
            }
            return;
          }
          function tt(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 4 >> 2] | 0;
            if (a2 | 0)
              oC(a2);
            return;
          }
          function ut(a2) {
            a2 = a2 | 0;
            Zi(a2);
            return;
          }
          function vt(a2) {
            a2 = a2 | 0;
            wt(a2, 4920);
            xt(a2) | 0;
            yt(a2) | 0;
            return;
          }
          function wt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = nn() | 0;
            c[a2 >> 2] = d2;
            Yt(d2, b2);
            Hv(c[a2 >> 2] | 0);
            return;
          }
          function xt(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = c[a2 >> 2] | 0;
            At(b2, Mt() | 0);
            return a2 | 0;
          }
          function yt(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = c[a2 >> 2] | 0;
            At(b2, zt() | 0);
            return a2 | 0;
          }
          function zt() {
            var b2 = 0;
            if (!(a[7888] | 0)) {
              Bt(10328);
              Ha(53, 10328, o | 0) | 0;
              b2 = 7888;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            if (!(si(10328) | 0))
              Bt(10328);
            return 10328;
          }
          function At(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            fi(a2, 0, b2, 0, 0, 0);
            return;
          }
          function Bt(a2) {
            a2 = a2 | 0;
            Et(a2);
            Gt(a2, 10);
            return;
          }
          function Ct(a2) {
            a2 = a2 | 0;
            Dt(a2 + 24 | 0);
            return;
          }
          function Dt(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function Et(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 5, 1, b2, Jt() | 0, 2);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Ft(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            Ht(a2, b2, c2);
            return;
          }
          function Gt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 20 >> 2] = b2;
            return;
          }
          function Ht(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            var e2 = 0, f2 = 0, g2 = 0, i3 = 0, j2 = 0;
            e2 = l;
            l = l + 16 | 0;
            g2 = e2 + 8 | 0;
            j2 = e2 + 13 | 0;
            f2 = e2;
            i3 = e2 + 12 | 0;
            tj(j2, b2);
            c[g2 >> 2] = uj(j2, b2) | 0;
            rj(i3, d2);
            h[f2 >> 3] = +sj(i3, d2);
            It(a2, g2, f2);
            l = e2;
            return;
          }
          function It(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            mg(b2 + 8 | 0, c[d2 >> 2] | 0, +h[e2 >> 3]);
            a[b2 + 24 >> 0] = 1;
            return;
          }
          function Jt() {
            return 1404;
          }
          function Kt(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            return Lt(a2, b2) | 0;
          }
          function Lt(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            e2 = l;
            l = l + 16 | 0;
            g2 = e2 + 4 | 0;
            h2 = e2 + 8 | 0;
            i3 = e2;
            f2 = jy(8) | 0;
            d2 = f2;
            j2 = qC(16) | 0;
            tj(g2, a2);
            a2 = uj(g2, a2) | 0;
            rj(h2, b2);
            mg(j2, a2, +sj(h2, b2));
            h2 = d2 + 4 | 0;
            c[h2 >> 2] = j2;
            a2 = qC(8) | 0;
            h2 = c[h2 >> 2] | 0;
            c[i3 >> 2] = 0;
            c[g2 >> 2] = c[i3 >> 2];
            qn(a2, h2, g2);
            c[f2 >> 2] = a2;
            l = e2;
            return d2 | 0;
          }
          function Mt() {
            var b2 = 0;
            if (!(a[7896] | 0)) {
              Nt(10364);
              Ha(54, 10364, o | 0) | 0;
              b2 = 7896;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            if (!(si(10364) | 0))
              Nt(10364);
            return 10364;
          }
          function Nt(a2) {
            a2 = a2 | 0;
            Qt(a2);
            Gt(a2, 55);
            return;
          }
          function Ot(a2) {
            a2 = a2 | 0;
            Pt(a2 + 24 | 0);
            return;
          }
          function Pt(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function Qt(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 5, 4, b2, Vt() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Rt(a2) {
            a2 = a2 | 0;
            St(a2);
            return;
          }
          function St(a2) {
            a2 = a2 | 0;
            Tt(a2);
            return;
          }
          function Tt(b2) {
            b2 = b2 | 0;
            Ut(b2 + 8 | 0);
            a[b2 + 24 >> 0] = 1;
            return;
          }
          function Ut(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = 0;
            h[a2 + 8 >> 3] = 0;
            return;
          }
          function Vt() {
            return 1424;
          }
          function Wt() {
            return Xt() | 0;
          }
          function Xt() {
            var a2 = 0, b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            b2 = l;
            l = l + 16 | 0;
            f2 = b2 + 4 | 0;
            h2 = b2;
            d2 = jy(8) | 0;
            a2 = d2;
            e2 = qC(16) | 0;
            Ut(e2);
            g2 = a2 + 4 | 0;
            c[g2 >> 2] = e2;
            e2 = qC(8) | 0;
            g2 = c[g2 >> 2] | 0;
            c[h2 >> 2] = 0;
            c[f2 >> 2] = c[h2 >> 2];
            qn(e2, g2, f2);
            c[d2 >> 2] = e2;
            l = b2;
            return a2 | 0;
          }
          function Yt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = Zt() | 0;
            c[a2 + 4 >> 2] = _t() | 0;
            c[a2 + 12 >> 2] = b2;
            c[a2 + 8 >> 2] = $t() | 0;
            c[a2 + 32 >> 2] = 5;
            return;
          }
          function Zt() {
            return 11710;
          }
          function _t() {
            return 1416;
          }
          function $t() {
            return cu() | 0;
          }
          function au(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            if ((jr(d2, 896) | 0) == 512) {
              if (c2 | 0) {
                bu(c2);
                sC(c2);
              }
            } else if (b2 | 0)
              sC(b2);
            return;
          }
          function bu(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 4 >> 2] | 0;
            if (a2 | 0)
              oC(a2);
            return;
          }
          function cu() {
            var b2 = 0;
            if (!(a[7904] | 0)) {
              c[2600] = du() | 0;
              c[2601] = 0;
              b2 = 7904;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10400;
          }
          function du() {
            return c[357] | 0;
          }
          function eu(a2) {
            a2 = a2 | 0;
            fu(a2, 4926);
            gu(a2) | 0;
            return;
          }
          function fu(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = Ci() | 0;
            c[a2 >> 2] = d2;
            su(d2, b2);
            Hv(c[a2 >> 2] | 0);
            return;
          }
          function gu(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = c[a2 >> 2] | 0;
            At(b2, hu() | 0);
            return a2 | 0;
          }
          function hu() {
            var b2 = 0;
            if (!(a[7912] | 0)) {
              iu(10412);
              Ha(56, 10412, o | 0) | 0;
              b2 = 7912;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            if (!(si(10412) | 0))
              iu(10412);
            return 10412;
          }
          function iu(a2) {
            a2 = a2 | 0;
            lu(a2);
            Gt(a2, 57);
            return;
          }
          function ju(a2) {
            a2 = a2 | 0;
            ku(a2 + 24 | 0);
            return;
          }
          function ku(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function lu(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 5, 5, b2, pu() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function mu(a2) {
            a2 = a2 | 0;
            nu(a2);
            return;
          }
          function nu(a2) {
            a2 = a2 | 0;
            ou(a2);
            return;
          }
          function ou(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = b2 + 8 | 0;
            e2 = d2 + 48 | 0;
            do {
              c[d2 >> 2] = 0;
              d2 = d2 + 4 | 0;
            } while ((d2 | 0) < (e2 | 0));
            a[b2 + 56 >> 0] = 1;
            return;
          }
          function pu() {
            return 1432;
          }
          function qu() {
            return ru() | 0;
          }
          function ru() {
            var a2 = 0, b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            h2 = l;
            l = l + 16 | 0;
            a2 = h2 + 4 | 0;
            b2 = h2;
            d2 = jy(8) | 0;
            e2 = d2;
            f2 = qC(48) | 0;
            g2 = f2;
            i3 = g2 + 48 | 0;
            do {
              c[g2 >> 2] = 0;
              g2 = g2 + 4 | 0;
            } while ((g2 | 0) < (i3 | 0));
            g2 = e2 + 4 | 0;
            c[g2 >> 2] = f2;
            i3 = qC(8) | 0;
            g2 = c[g2 >> 2] | 0;
            c[b2 >> 2] = 0;
            c[a2 >> 2] = c[b2 >> 2];
            Ji(i3, g2, a2);
            c[d2 >> 2] = i3;
            l = h2;
            return e2 | 0;
          }
          function su(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = tu() | 0;
            c[a2 + 4 >> 2] = uu() | 0;
            c[a2 + 12 >> 2] = b2;
            c[a2 + 8 >> 2] = vu() | 0;
            c[a2 + 32 >> 2] = 6;
            return;
          }
          function tu() {
            return 11704;
          }
          function uu() {
            return 1436;
          }
          function vu() {
            return cu() | 0;
          }
          function wu(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            if ((jr(d2, 896) | 0) == 512) {
              if (c2 | 0) {
                xu(c2);
                sC(c2);
              }
            } else if (b2 | 0)
              sC(b2);
            return;
          }
          function xu(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 4 >> 2] | 0;
            if (a2 | 0)
              oC(a2);
            return;
          }
          function yu(a2) {
            a2 = a2 | 0;
            zu(a2, 4933);
            Au(a2) | 0;
            Bu(a2) | 0;
            return;
          }
          function zu(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = cv() | 0;
            c[a2 >> 2] = d2;
            dv(d2, b2);
            Hv(c[a2 >> 2] | 0);
            return;
          }
          function Au(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = c[a2 >> 2] | 0;
            At(b2, Su() | 0);
            return a2 | 0;
          }
          function Bu(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = c[a2 >> 2] | 0;
            At(b2, Cu() | 0);
            return a2 | 0;
          }
          function Cu() {
            var b2 = 0;
            if (!(a[7920] | 0)) {
              Du(10452);
              Ha(58, 10452, o | 0) | 0;
              b2 = 7920;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            if (!(si(10452) | 0))
              Du(10452);
            return 10452;
          }
          function Du(a2) {
            a2 = a2 | 0;
            Gu(a2);
            Gt(a2, 1);
            return;
          }
          function Eu(a2) {
            a2 = a2 | 0;
            Fu(a2 + 24 | 0);
            return;
          }
          function Fu(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function Gu(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 5, 1, b2, Lu() | 0, 2);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Hu(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            Iu(a2, b2, c2);
            return;
          }
          function Iu(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, i3 = 0;
            d2 = l;
            l = l + 32 | 0;
            f2 = d2 + 8 | 0;
            i3 = d2 + 17 | 0;
            e2 = d2;
            g2 = d2 + 16 | 0;
            rj(i3, b2);
            h[f2 >> 3] = +sj(i3, b2);
            rj(g2, c2);
            h[e2 >> 3] = +sj(g2, c2);
            Ju(a2, f2, e2);
            l = d2;
            return;
          }
          function Ju(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            Ku(b2 + 8 | 0, +h[c2 >> 3], +h[d2 >> 3]);
            a[b2 + 24 >> 0] = 1;
            return;
          }
          function Ku(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            h[a2 >> 3] = b2;
            h[a2 + 8 >> 3] = c2;
            return;
          }
          function Lu() {
            return 1472;
          }
          function Mu(a2, b2) {
            a2 = +a2;
            b2 = +b2;
            return Nu(a2, b2) | 0;
          }
          function Nu(a2, b2) {
            a2 = +a2;
            b2 = +b2;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            e2 = l;
            l = l + 16 | 0;
            h2 = e2 + 4 | 0;
            i3 = e2 + 8 | 0;
            j2 = e2;
            f2 = jy(8) | 0;
            d2 = f2;
            g2 = qC(16) | 0;
            rj(h2, a2);
            a2 = +sj(h2, a2);
            rj(i3, b2);
            Ku(g2, a2, +sj(i3, b2));
            i3 = d2 + 4 | 0;
            c[i3 >> 2] = g2;
            g2 = qC(8) | 0;
            i3 = c[i3 >> 2] | 0;
            c[j2 >> 2] = 0;
            c[h2 >> 2] = c[j2 >> 2];
            Ou(g2, i3, h2);
            c[f2 >> 2] = g2;
            l = e2;
            return d2 | 0;
          }
          function Ou(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            d2 = qC(16) | 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 >> 2] = 1452;
            c[d2 + 12 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function Pu(a2) {
            a2 = a2 | 0;
            kC(a2);
            sC(a2);
            return;
          }
          function Qu(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 12 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Ru(a2) {
            a2 = a2 | 0;
            sC(a2);
            return;
          }
          function Su() {
            var b2 = 0;
            if (!(a[7928] | 0)) {
              Tu(10488);
              Ha(59, 10488, o | 0) | 0;
              b2 = 7928;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            if (!(si(10488) | 0))
              Tu(10488);
            return 10488;
          }
          function Tu(a2) {
            a2 = a2 | 0;
            Wu(a2);
            Gt(a2, 60);
            return;
          }
          function Uu(a2) {
            a2 = a2 | 0;
            Vu(a2 + 24 | 0);
            return;
          }
          function Vu(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function Wu(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 5, 6, b2, $u() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Xu(a2) {
            a2 = a2 | 0;
            Yu(a2);
            return;
          }
          function Yu(a2) {
            a2 = a2 | 0;
            Zu(a2);
            return;
          }
          function Zu(b2) {
            b2 = b2 | 0;
            _u(b2 + 8 | 0);
            a[b2 + 24 >> 0] = 1;
            return;
          }
          function _u(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 0;
            c[a2 + 12 >> 2] = 0;
            return;
          }
          function $u() {
            return 1492;
          }
          function av() {
            return bv() | 0;
          }
          function bv() {
            var a2 = 0, b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            b2 = l;
            l = l + 16 | 0;
            f2 = b2 + 4 | 0;
            h2 = b2;
            d2 = jy(8) | 0;
            a2 = d2;
            e2 = qC(16) | 0;
            _u(e2);
            g2 = a2 + 4 | 0;
            c[g2 >> 2] = e2;
            e2 = qC(8) | 0;
            g2 = c[g2 >> 2] | 0;
            c[h2 >> 2] = 0;
            c[f2 >> 2] = c[h2 >> 2];
            Ou(e2, g2, f2);
            c[d2 >> 2] = e2;
            l = b2;
            return a2 | 0;
          }
          function cv() {
            var b2 = 0;
            if (!(a[7936] | 0)) {
              jv(10524);
              Ha(25, 10524, o | 0) | 0;
              b2 = 7936;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10524;
          }
          function dv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = ev() | 0;
            c[a2 + 4 >> 2] = fv() | 0;
            c[a2 + 12 >> 2] = b2;
            c[a2 + 8 >> 2] = gv() | 0;
            c[a2 + 32 >> 2] = 7;
            return;
          }
          function ev() {
            return 11700;
          }
          function fv() {
            return 1484;
          }
          function gv() {
            return cu() | 0;
          }
          function hv(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            if ((jr(d2, 896) | 0) == 512) {
              if (c2 | 0) {
                iv(c2);
                sC(c2);
              }
            } else if (b2 | 0)
              sC(b2);
            return;
          }
          function iv(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 4 >> 2] | 0;
            if (a2 | 0)
              oC(a2);
            return;
          }
          function jv(a2) {
            a2 = a2 | 0;
            Zi(a2);
            return;
          }
          function kv(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            a2 = ai(b2) | 0;
            b2 = lv(c2) | 0;
            c2 = mv(c2, 0) | 0;
            Zv(a2, b2, c2, nv() | 0, 0);
            return;
          }
          function lv(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function mv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            f2 = i3;
            g2 = i3 + 4 | 0;
            c[f2 >> 2] = a2;
            j2 = nv() | 0;
            h2 = j2 + 24 | 0;
            b2 = ji(b2, 4) | 0;
            c[g2 >> 2] = b2;
            d2 = j2 + 28 | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 + 32 >> 2] | 0) >>> 0) {
              vv(e2, a2, b2);
              b2 = (c[d2 >> 2] | 0) + 8 | 0;
              c[d2 >> 2] = b2;
            } else {
              wv(h2, f2, g2);
              b2 = c[d2 >> 2] | 0;
            }
            l = i3;
            return (b2 - (c[h2 >> 2] | 0) >> 3) + -1 | 0;
          }
          function nv() {
            var b2 = 0, d2 = 0;
            if (!(a[7944] | 0)) {
              ov(10568);
              Ha(61, 10568, o | 0) | 0;
              d2 = 7944;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(10568) | 0)) {
              b2 = 10568;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              ov(10568);
            }
            return 10568;
          }
          function ov(a2) {
            a2 = a2 | 0;
            rv(a2);
            return;
          }
          function pv(a2) {
            a2 = a2 | 0;
            qv(a2 + 24 | 0);
            return;
          }
          function qv(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function rv(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 1, 17, b2, ql() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function sv(a2) {
            a2 = a2 | 0;
            return uv(c[(tv(a2) | 0) >> 2] | 0) | 0;
          }
          function tv(a2) {
            a2 = a2 | 0;
            return (c[(nv() | 0) + 24 >> 2] | 0) + (a2 << 3) | 0;
          }
          function uv(a2) {
            a2 = a2 | 0;
            return ul(Ab[a2 & 7]() | 0) | 0;
          }
          function vv(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function wv(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            i3 = l;
            l = l + 32 | 0;
            f2 = i3;
            g2 = a2 + 4 | 0;
            h2 = ((c[g2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 3) + 1 | 0;
            e2 = xv(a2) | 0;
            if (e2 >>> 0 < h2 >>> 0)
              jC(a2);
            else {
              j2 = c[a2 >> 2] | 0;
              m2 = (c[a2 + 8 >> 2] | 0) - j2 | 0;
              k2 = m2 >> 2;
              yv(f2, m2 >> 3 >>> 0 < e2 >>> 1 >>> 0 ? k2 >>> 0 < h2 >>> 0 ? h2 : k2 : e2, (c[g2 >> 2] | 0) - j2 >> 3, a2 + 8 | 0);
              h2 = f2 + 8 | 0;
              vv(c[h2 >> 2] | 0, c[b2 >> 2] | 0, c[d2 >> 2] | 0);
              c[h2 >> 2] = (c[h2 >> 2] | 0) + 8;
              zv(a2, f2);
              Av(f2);
              l = i3;
              return;
            }
          }
          function xv(a2) {
            a2 = a2 | 0;
            return 536870911;
          }
          function yv(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 536870911)
                  Ta();
                else {
                  f2 = qC(b2 << 3) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 3) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 3);
            return;
          }
          function zv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 3) << 3) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Av(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -8 - b2 | 0) >>> 3) << 3);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Bv() {
            Cv();
            return;
          }
          function Cv() {
            Dv(10604);
            return;
          }
          function Dv(a2) {
            a2 = a2 | 0;
            Ev(a2, 4955);
            return;
          }
          function Ev(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = Fv() | 0;
            c[a2 >> 2] = d2;
            Gv(d2, b2);
            Hv(c[a2 >> 2] | 0);
            return;
          }
          function Fv() {
            var b2 = 0;
            if (!(a[7952] | 0)) {
              Rv(10612);
              Ha(25, 10612, o | 0) | 0;
              b2 = 7952;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10612;
          }
          function Gv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = Mv() | 0;
            c[a2 + 4 >> 2] = Nv() | 0;
            c[a2 + 12 >> 2] = b2;
            c[a2 + 8 >> 2] = Ov() | 0;
            c[a2 + 32 >> 2] = 8;
            return;
          }
          function Hv(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            b2 = l;
            l = l + 16 | 0;
            d2 = b2;
            Iv() | 0;
            c[d2 >> 2] = a2;
            Jv(10608, d2);
            l = b2;
            return;
          }
          function Iv() {
            if (!(a[11714] | 0)) {
              c[2652] = 0;
              Ha(62, 10608, o | 0) | 0;
              a[11714] = 1;
            }
            return 10608;
          }
          function Jv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = qC(8) | 0;
            c[d2 + 4 >> 2] = c[b2 >> 2];
            c[d2 >> 2] = c[a2 >> 2];
            c[a2 >> 2] = d2;
            return;
          }
          function Kv(a2) {
            a2 = a2 | 0;
            Lv(a2);
            return;
          }
          function Lv(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            b2 = c[a2 >> 2] | 0;
            if (b2 | 0)
              do {
                d2 = b2;
                b2 = c[b2 >> 2] | 0;
                sC(d2);
              } while ((b2 | 0) != 0);
            c[a2 >> 2] = 0;
            return;
          }
          function Mv() {
            return 11715;
          }
          function Nv() {
            return 1496;
          }
          function Ov() {
            return lr() | 0;
          }
          function Pv(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            if ((jr(d2, 896) | 0) == 512) {
              if (c2 | 0) {
                Qv(c2);
                sC(c2);
              }
            } else if (b2 | 0)
              sC(b2);
            return;
          }
          function Qv(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 4 >> 2] | 0;
            if (a2 | 0)
              oC(a2);
            return;
          }
          function Rv(a2) {
            a2 = a2 | 0;
            Zi(a2);
            return;
          }
          function Sv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            Iv() | 0;
            d2 = c[2652] | 0;
            a:
              do
                if (d2 | 0) {
                  while (1) {
                    e2 = c[d2 + 4 >> 2] | 0;
                    if (e2 | 0 ? (AB(Tv(e2) | 0, a2) | 0) == 0 : 0)
                      break;
                    d2 = c[d2 >> 2] | 0;
                    if (!d2)
                      break a;
                  }
                  Uv(e2, b2);
                }
              while (0);
            return;
          }
          function Tv(a2) {
            a2 = a2 | 0;
            return c[a2 + 12 >> 2] | 0;
          }
          function Uv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            a2 = a2 + 36 | 0;
            d2 = c[a2 >> 2] | 0;
            if (d2 | 0) {
              vf(d2);
              sC(d2);
            }
            d2 = qC(4) | 0;
            Og(d2, b2);
            c[a2 >> 2] = d2;
            return;
          }
          function Vv() {
            if (!(a[11716] | 0)) {
              c[2664] = 0;
              Ha(63, 10656, o | 0) | 0;
              a[11716] = 1;
            }
            return 10656;
          }
          function Wv() {
            var b2 = 0;
            if (!(a[11717] | 0)) {
              Xv();
              c[2665] = 1504;
              a[11717] = 1;
              b2 = 1504;
            } else
              b2 = c[2665] | 0;
            return b2 | 0;
          }
          function Xv() {
            if (!(a[11740] | 0)) {
              a[11718] = ji(ji(8, 0) | 0, 0) | 0;
              a[11719] = ji(ji(0, 0) | 0, 0) | 0;
              a[11720] = ji(ji(0, 16) | 0, 0) | 0;
              a[11721] = ji(ji(8, 0) | 0, 0) | 0;
              a[11722] = ji(ji(0, 0) | 0, 0) | 0;
              a[11723] = ji(ji(8, 0) | 0, 0) | 0;
              a[11724] = ji(ji(0, 0) | 0, 0) | 0;
              a[11725] = ji(ji(8, 0) | 0, 0) | 0;
              a[11726] = ji(ji(0, 0) | 0, 0) | 0;
              a[11727] = ji(ji(8, 0) | 0, 0) | 0;
              a[11728] = ji(ji(0, 0) | 0, 0) | 0;
              a[11729] = ji(ji(0, 0) | 0, 32) | 0;
              a[11730] = ji(ji(0, 0) | 0, 32) | 0;
              a[11740] = 1;
            }
            return;
          }
          function Yv() {
            return 1572;
          }
          function Zv(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            g2 = l;
            l = l + 32 | 0;
            m2 = g2 + 16 | 0;
            k2 = g2 + 12 | 0;
            j2 = g2 + 8 | 0;
            i3 = g2 + 4 | 0;
            h2 = g2;
            c[m2 >> 2] = a2;
            c[k2 >> 2] = b2;
            c[j2 >> 2] = d2;
            c[i3 >> 2] = e2;
            c[h2 >> 2] = f2;
            Vv() | 0;
            _v(10656, m2, k2, j2, i3, h2);
            l = g2;
            return;
          }
          function _v(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            var h2 = 0;
            h2 = qC(24) | 0;
            ii(h2 + 4 | 0, c[b2 >> 2] | 0, c[d2 >> 2] | 0, c[e2 >> 2] | 0, c[f2 >> 2] | 0, c[g2 >> 2] | 0);
            c[h2 >> 2] = c[a2 >> 2];
            c[a2 >> 2] = h2;
            return;
          }
          function $v(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
            u2 = l;
            l = l + 32 | 0;
            q2 = u2 + 20 | 0;
            r2 = u2 + 8 | 0;
            s2 = u2 + 4 | 0;
            t2 = u2;
            b2 = c[b2 >> 2] | 0;
            if (b2 | 0) {
              p2 = q2 + 4 | 0;
              j2 = q2 + 8 | 0;
              k2 = r2 + 4 | 0;
              m2 = r2 + 8 | 0;
              n2 = r2 + 8 | 0;
              o2 = q2 + 8 | 0;
              do {
                h2 = b2 + 4 | 0;
                i3 = aw(h2) | 0;
                if (i3 | 0) {
                  f2 = bw(i3) | 0;
                  c[q2 >> 2] = 0;
                  c[p2 >> 2] = 0;
                  c[j2 >> 2] = 0;
                  e2 = (cw(i3) | 0) + 1 | 0;
                  dw(q2, e2);
                  if (e2 | 0)
                    while (1) {
                      e2 = e2 + -1 | 0;
                      OA(r2, c[f2 >> 2] | 0);
                      g2 = c[p2 >> 2] | 0;
                      if (g2 >>> 0 < (c[o2 >> 2] | 0) >>> 0) {
                        c[g2 >> 2] = c[r2 >> 2];
                        c[p2 >> 2] = (c[p2 >> 2] | 0) + 4;
                      } else
                        ew(q2, r2);
                      if (!e2)
                        break;
                      else
                        f2 = f2 + 4 | 0;
                    }
                  e2 = fw(i3) | 0;
                  c[r2 >> 2] = 0;
                  c[k2 >> 2] = 0;
                  c[m2 >> 2] = 0;
                  a:
                    do
                      if (c[e2 >> 2] | 0) {
                        f2 = 0;
                        g2 = 0;
                        while (1) {
                          if ((f2 | 0) == (g2 | 0))
                            gw(r2, e2);
                          else {
                            c[f2 >> 2] = c[e2 >> 2];
                            c[k2 >> 2] = (c[k2 >> 2] | 0) + 4;
                          }
                          e2 = e2 + 4 | 0;
                          if (!(c[e2 >> 2] | 0))
                            break a;
                          f2 = c[k2 >> 2] | 0;
                          g2 = c[n2 >> 2] | 0;
                        }
                      }
                    while (0);
                  c[s2 >> 2] = hw(h2) | 0;
                  c[t2 >> 2] = si(i3) | 0;
                  iw(d2, a2, s2, t2, q2, r2);
                  jw(r2);
                  kw(q2);
                }
                b2 = c[b2 >> 2] | 0;
              } while ((b2 | 0) != 0);
            }
            l = u2;
            return;
          }
          function aw(a2) {
            a2 = a2 | 0;
            return c[a2 + 12 >> 2] | 0;
          }
          function bw(a2) {
            a2 = a2 | 0;
            return c[a2 + 12 >> 2] | 0;
          }
          function cw(a2) {
            a2 = a2 | 0;
            return c[a2 + 16 >> 2] | 0;
          }
          function dw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            f2 = l;
            l = l + 32 | 0;
            d2 = f2;
            e2 = c[a2 >> 2] | 0;
            if ((c[a2 + 8 >> 2] | 0) - e2 >> 2 >>> 0 < b2 >>> 0) {
              Rw(d2, b2, (c[a2 + 4 >> 2] | 0) - e2 >> 2, a2 + 8 | 0);
              Sw(a2, d2);
              Tw(d2);
            }
            l = f2;
            return;
          }
          function ew(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0;
            h2 = l;
            l = l + 32 | 0;
            d2 = h2;
            e2 = a2 + 4 | 0;
            f2 = ((c[e2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 2) + 1 | 0;
            g2 = Nw(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              i3 = c[a2 >> 2] | 0;
              k2 = (c[a2 + 8 >> 2] | 0) - i3 | 0;
              j2 = k2 >> 1;
              Rw(d2, k2 >> 2 >>> 0 < g2 >>> 1 >>> 0 ? j2 >>> 0 < f2 >>> 0 ? f2 : j2 : g2, (c[e2 >> 2] | 0) - i3 >> 2, a2 + 8 | 0);
              g2 = d2 + 8 | 0;
              c[c[g2 >> 2] >> 2] = c[b2 >> 2];
              c[g2 >> 2] = (c[g2 >> 2] | 0) + 4;
              Sw(a2, d2);
              Tw(d2);
              l = h2;
              return;
            }
          }
          function fw(a2) {
            a2 = a2 | 0;
            return c[a2 + 8 >> 2] | 0;
          }
          function gw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0;
            h2 = l;
            l = l + 32 | 0;
            d2 = h2;
            e2 = a2 + 4 | 0;
            f2 = ((c[e2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 2) + 1 | 0;
            g2 = Kw(a2) | 0;
            if (g2 >>> 0 < f2 >>> 0)
              jC(a2);
            else {
              i3 = c[a2 >> 2] | 0;
              k2 = (c[a2 + 8 >> 2] | 0) - i3 | 0;
              j2 = k2 >> 1;
              Ow(d2, k2 >> 2 >>> 0 < g2 >>> 1 >>> 0 ? j2 >>> 0 < f2 >>> 0 ? f2 : j2 : g2, (c[e2 >> 2] | 0) - i3 >> 2, a2 + 8 | 0);
              g2 = d2 + 8 | 0;
              c[c[g2 >> 2] >> 2] = c[b2 >> 2];
              c[g2 >> 2] = (c[g2 >> 2] | 0) + 4;
              Pw(a2, d2);
              Qw(d2);
              l = h2;
              return;
            }
          }
          function hw(a2) {
            a2 = a2 | 0;
            return c[a2 >> 2] | 0;
          }
          function iw(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            lw(a2, b2, c2, d2, e2, f2);
            return;
          }
          function jw(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -4 - e2 | 0) >>> 2) << 2);
              sC(d2);
            }
            return;
          }
          function kw(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -4 - e2 | 0) >>> 2) << 2);
              sC(d2);
            }
            return;
          }
          function lw(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            var h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            h2 = l;
            l = l + 48 | 0;
            m2 = h2 + 40 | 0;
            i3 = h2 + 32 | 0;
            n2 = h2 + 24 | 0;
            j2 = h2 + 12 | 0;
            k2 = h2;
            UA(i3);
            a2 = Sg(a2) | 0;
            c[n2 >> 2] = c[b2 >> 2];
            d2 = c[d2 >> 2] | 0;
            e2 = c[e2 >> 2] | 0;
            mw(j2, f2);
            nw(k2, g2);
            c[m2 >> 2] = c[n2 >> 2];
            ow(a2, m2, d2, e2, j2, k2);
            jw(k2);
            kw(j2);
            WA(i3);
            l = h2;
            return;
          }
          function mw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 0;
            d2 = b2 + 4 | 0;
            e2 = (c[d2 >> 2] | 0) - (c[b2 >> 2] | 0) >> 2;
            if (e2 | 0) {
              Lw(a2, e2);
              Mw(a2, c[b2 >> 2] | 0, c[d2 >> 2] | 0, e2);
            }
            return;
          }
          function nw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 0;
            d2 = b2 + 4 | 0;
            e2 = (c[d2 >> 2] | 0) - (c[b2 >> 2] | 0) >> 2;
            if (e2 | 0) {
              Iw(a2, e2);
              Jw(a2, c[b2 >> 2] | 0, c[d2 >> 2] | 0, e2);
            }
            return;
          }
          function ow(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            var h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
            h2 = l;
            l = l + 32 | 0;
            m2 = h2 + 28 | 0;
            n2 = h2 + 24 | 0;
            i3 = h2 + 12 | 0;
            j2 = h2;
            k2 = Vg(pw() | 0) | 0;
            c[n2 >> 2] = c[b2 >> 2];
            c[m2 >> 2] = c[n2 >> 2];
            b2 = qw(m2) | 0;
            d2 = rw(d2) | 0;
            e2 = sw(e2) | 0;
            c[i3 >> 2] = c[f2 >> 2];
            m2 = f2 + 4 | 0;
            c[i3 + 4 >> 2] = c[m2 >> 2];
            n2 = f2 + 8 | 0;
            c[i3 + 8 >> 2] = c[n2 >> 2];
            c[n2 >> 2] = 0;
            c[m2 >> 2] = 0;
            c[f2 >> 2] = 0;
            f2 = tw(i3) | 0;
            c[j2 >> 2] = c[g2 >> 2];
            m2 = g2 + 4 | 0;
            c[j2 + 4 >> 2] = c[m2 >> 2];
            n2 = g2 + 8 | 0;
            c[j2 + 8 >> 2] = c[n2 >> 2];
            c[n2 >> 2] = 0;
            c[m2 >> 2] = 0;
            c[g2 >> 2] = 0;
            Ba(0, k2 | 0, a2 | 0, b2 | 0, d2 | 0, e2 | 0, f2 | 0, uw(j2) | 0) | 0;
            jw(j2);
            kw(i3);
            l = h2;
            return;
          }
          function pw() {
            var b2 = 0;
            if (!(a[7968] | 0)) {
              Gw(10708);
              b2 = 7968;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10708;
          }
          function qw(a2) {
            a2 = a2 | 0;
            return yw(a2) | 0;
          }
          function rw(a2) {
            a2 = a2 | 0;
            return ww(a2) | 0;
          }
          function sw(a2) {
            a2 = a2 | 0;
            return ul(a2) | 0;
          }
          function tw(a2) {
            a2 = a2 | 0;
            return xw(a2) | 0;
          }
          function uw(a2) {
            a2 = a2 | 0;
            return vw(a2) | 0;
          }
          function vw(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            e2 = (c[a2 + 4 >> 2] | 0) - (c[a2 >> 2] | 0) | 0;
            d2 = e2 >> 2;
            e2 = jy(e2 + 4 | 0) | 0;
            c[e2 >> 2] = d2;
            if (d2 | 0) {
              b2 = 0;
              do {
                c[e2 + 4 + (b2 << 2) >> 2] = ww(c[(c[a2 >> 2] | 0) + (b2 << 2) >> 2] | 0) | 0;
                b2 = b2 + 1 | 0;
              } while ((b2 | 0) != (d2 | 0));
            }
            return e2 | 0;
          }
          function ww(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function xw(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            e2 = (c[a2 + 4 >> 2] | 0) - (c[a2 >> 2] | 0) | 0;
            d2 = e2 >> 2;
            e2 = jy(e2 + 4 | 0) | 0;
            c[e2 >> 2] = d2;
            if (d2 | 0) {
              b2 = 0;
              do {
                c[e2 + 4 + (b2 << 2) >> 2] = yw((c[a2 >> 2] | 0) + (b2 << 2) | 0) | 0;
                b2 = b2 + 1 | 0;
              } while ((b2 | 0) != (d2 | 0));
            }
            return e2 | 0;
          }
          function yw(a2) {
            a2 = a2 | 0;
            var b2 = 0, c2 = 0, d2 = 0, e2 = 0;
            e2 = l;
            l = l + 32 | 0;
            b2 = e2 + 12 | 0;
            c2 = e2;
            d2 = Di(zw() | 0) | 0;
            if (!d2)
              a2 = Aw(a2) | 0;
            else {
              Ei(b2, d2);
              Fi(c2, b2);
              RA(a2, c2);
              a2 = Hi(b2) | 0;
            }
            l = e2;
            return a2 | 0;
          }
          function zw() {
            var b2 = 0;
            if (!(a[7960] | 0)) {
              Fw(10664);
              Ha(25, 10664, o | 0) | 0;
              b2 = 7960;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10664;
          }
          function Aw(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            d2 = l;
            l = l + 16 | 0;
            f2 = d2 + 4 | 0;
            h2 = d2;
            e2 = jy(8) | 0;
            b2 = e2;
            i3 = qC(4) | 0;
            c[i3 >> 2] = c[a2 >> 2];
            g2 = b2 + 4 | 0;
            c[g2 >> 2] = i3;
            a2 = qC(8) | 0;
            g2 = c[g2 >> 2] | 0;
            c[h2 >> 2] = 0;
            c[f2 >> 2] = c[h2 >> 2];
            Bw(a2, g2, f2);
            c[e2 >> 2] = a2;
            l = d2;
            return b2 | 0;
          }
          function Bw(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            d2 = qC(16) | 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 >> 2] = 1656;
            c[d2 + 12 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function Cw(a2) {
            a2 = a2 | 0;
            kC(a2);
            sC(a2);
            return;
          }
          function Dw(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 12 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Ew(a2) {
            a2 = a2 | 0;
            sC(a2);
            return;
          }
          function Fw(a2) {
            a2 = a2 | 0;
            Zi(a2);
            return;
          }
          function Gw(a2) {
            a2 = a2 | 0;
            fh(a2, Hw() | 0, 5);
            return;
          }
          function Hw() {
            return 1676;
          }
          function Iw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            if ((Kw(a2) | 0) >>> 0 < b2 >>> 0)
              jC(a2);
            if (b2 >>> 0 > 1073741823)
              Ta();
            else {
              d2 = qC(b2 << 2) | 0;
              c[a2 + 4 >> 2] = d2;
              c[a2 >> 2] = d2;
              c[a2 + 8 >> 2] = d2 + (b2 << 2);
              return;
            }
          }
          function Jw(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            e2 = a2 + 4 | 0;
            a2 = d2 - b2 | 0;
            if ((a2 | 0) > 0) {
              BC(c[e2 >> 2] | 0, b2 | 0, a2 | 0) | 0;
              c[e2 >> 2] = (c[e2 >> 2] | 0) + (a2 >>> 2 << 2);
            }
            return;
          }
          function Kw(a2) {
            a2 = a2 | 0;
            return 1073741823;
          }
          function Lw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            if ((Nw(a2) | 0) >>> 0 < b2 >>> 0)
              jC(a2);
            if (b2 >>> 0 > 1073741823)
              Ta();
            else {
              d2 = qC(b2 << 2) | 0;
              c[a2 + 4 >> 2] = d2;
              c[a2 >> 2] = d2;
              c[a2 + 8 >> 2] = d2 + (b2 << 2);
              return;
            }
          }
          function Mw(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            e2 = a2 + 4 | 0;
            a2 = d2 - b2 | 0;
            if ((a2 | 0) > 0) {
              BC(c[e2 >> 2] | 0, b2 | 0, a2 | 0) | 0;
              c[e2 >> 2] = (c[e2 >> 2] | 0) + (a2 >>> 2 << 2);
            }
            return;
          }
          function Nw(a2) {
            a2 = a2 | 0;
            return 1073741823;
          }
          function Ow(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 1073741823)
                  Ta();
                else {
                  f2 = qC(b2 << 2) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 2) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 2);
            return;
          }
          function Pw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 2) << 2) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Qw(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -4 - b2 | 0) >>> 2) << 2);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Rw(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 1073741823)
                  Ta();
                else {
                  f2 = qC(b2 << 2) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 2) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 2);
            return;
          }
          function Sw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 2) << 2) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Tw(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -4 - b2 | 0) >>> 2) << 2);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Uw(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
            r2 = l;
            l = l + 32 | 0;
            m2 = r2 + 20 | 0;
            n2 = r2 + 12 | 0;
            k2 = r2 + 16 | 0;
            o2 = r2 + 4 | 0;
            p2 = r2;
            q2 = r2 + 8 | 0;
            i3 = Wv() | 0;
            g2 = c[i3 >> 2] | 0;
            h2 = c[g2 >> 2] | 0;
            if (h2 | 0) {
              j2 = c[i3 + 8 >> 2] | 0;
              i3 = c[i3 + 4 >> 2] | 0;
              while (1) {
                OA(m2, h2);
                Vw(a2, m2, i3, j2);
                g2 = g2 + 4 | 0;
                h2 = c[g2 >> 2] | 0;
                if (!h2)
                  break;
                else {
                  j2 = j2 + 1 | 0;
                  i3 = i3 + 1 | 0;
                }
              }
            }
            g2 = Yv() | 0;
            h2 = c[g2 >> 2] | 0;
            if (h2 | 0)
              do {
                OA(m2, h2);
                c[n2 >> 2] = c[g2 + 4 >> 2];
                Ww(b2, m2, n2);
                g2 = g2 + 8 | 0;
                h2 = c[g2 >> 2] | 0;
              } while ((h2 | 0) != 0);
            g2 = c[(Iv() | 0) >> 2] | 0;
            if (g2 | 0)
              do {
                b2 = c[g2 + 4 >> 2] | 0;
                OA(m2, c[(Xw(b2) | 0) >> 2] | 0);
                c[n2 >> 2] = Tv(b2) | 0;
                Yw(d2, m2, n2);
                g2 = c[g2 >> 2] | 0;
              } while ((g2 | 0) != 0);
            OA(k2, 0);
            g2 = Vv() | 0;
            c[m2 >> 2] = c[k2 >> 2];
            $v(m2, g2, f2);
            g2 = c[(Iv() | 0) >> 2] | 0;
            if (g2 | 0) {
              a2 = m2 + 4 | 0;
              b2 = m2 + 8 | 0;
              d2 = m2 + 8 | 0;
              do {
                j2 = c[g2 + 4 >> 2] | 0;
                OA(n2, c[(Xw(j2) | 0) >> 2] | 0);
                _w(o2, Zw(j2) | 0);
                h2 = c[o2 >> 2] | 0;
                if (h2 | 0) {
                  c[m2 >> 2] = 0;
                  c[a2 >> 2] = 0;
                  c[b2 >> 2] = 0;
                  do {
                    OA(p2, c[(Xw(c[h2 + 4 >> 2] | 0) | 0) >> 2] | 0);
                    i3 = c[a2 >> 2] | 0;
                    if (i3 >>> 0 < (c[d2 >> 2] | 0) >>> 0) {
                      c[i3 >> 2] = c[p2 >> 2];
                      c[a2 >> 2] = (c[a2 >> 2] | 0) + 4;
                    } else
                      ew(m2, p2);
                    h2 = c[h2 >> 2] | 0;
                  } while ((h2 | 0) != 0);
                  $w(e2, n2, m2);
                  kw(m2);
                }
                c[q2 >> 2] = c[n2 >> 2];
                k2 = ax(j2) | 0;
                c[m2 >> 2] = c[q2 >> 2];
                $v(m2, k2, f2);
                Wi(o2);
                g2 = c[g2 >> 2] | 0;
              } while ((g2 | 0) != 0);
            }
            l = r2;
            return;
          }
          function Vw(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            ox(a2, b2, c2, d2);
            return;
          }
          function Ww(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            nx(a2, b2, c2);
            return;
          }
          function Xw(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Yw(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            ix(a2, b2, c2);
            return;
          }
          function Zw(a2) {
            a2 = a2 | 0;
            return a2 + 16 | 0;
          }
          function _w(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            g2 = l;
            l = l + 16 | 0;
            f2 = g2 + 8 | 0;
            d2 = g2;
            c[a2 >> 2] = 0;
            e2 = c[b2 >> 2] | 0;
            c[f2 >> 2] = e2;
            c[d2 >> 2] = a2;
            d2 = gx(d2) | 0;
            if (e2 | 0) {
              e2 = qC(12) | 0;
              h2 = (hx(f2) | 0) + 4 | 0;
              a2 = c[h2 + 4 >> 2] | 0;
              b2 = e2 + 4 | 0;
              c[b2 >> 2] = c[h2 >> 2];
              c[b2 + 4 >> 2] = a2;
              b2 = c[c[f2 >> 2] >> 2] | 0;
              c[f2 >> 2] = b2;
              if (!b2)
                a2 = e2;
              else {
                b2 = e2;
                while (1) {
                  a2 = qC(12) | 0;
                  j2 = (hx(f2) | 0) + 4 | 0;
                  i3 = c[j2 + 4 >> 2] | 0;
                  h2 = a2 + 4 | 0;
                  c[h2 >> 2] = c[j2 >> 2];
                  c[h2 + 4 >> 2] = i3;
                  c[b2 >> 2] = a2;
                  h2 = c[c[f2 >> 2] >> 2] | 0;
                  c[f2 >> 2] = h2;
                  if (!h2)
                    break;
                  else
                    b2 = a2;
                }
              }
              c[a2 >> 2] = c[d2 >> 2];
              c[d2 >> 2] = e2;
            }
            l = g2;
            return;
          }
          function $w(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            bx(a2, b2, c2);
            return;
          }
          function ax(a2) {
            a2 = a2 | 0;
            return a2 + 24 | 0;
          }
          function bx(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 32 | 0;
            h2 = e2 + 24 | 0;
            f2 = e2 + 16 | 0;
            i3 = e2 + 12 | 0;
            g2 = e2;
            UA(f2);
            a2 = Sg(a2) | 0;
            c[i3 >> 2] = c[b2 >> 2];
            mw(g2, d2);
            c[h2 >> 2] = c[i3 >> 2];
            cx(a2, h2, g2);
            kw(g2);
            WA(f2);
            l = e2;
            return;
          }
          function cx(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            e2 = l;
            l = l + 32 | 0;
            h2 = e2 + 16 | 0;
            i3 = e2 + 12 | 0;
            f2 = e2;
            g2 = Vg(dx() | 0) | 0;
            c[i3 >> 2] = c[b2 >> 2];
            c[h2 >> 2] = c[i3 >> 2];
            b2 = qw(h2) | 0;
            c[f2 >> 2] = c[d2 >> 2];
            h2 = d2 + 4 | 0;
            c[f2 + 4 >> 2] = c[h2 >> 2];
            i3 = d2 + 8 | 0;
            c[f2 + 8 >> 2] = c[i3 >> 2];
            c[i3 >> 2] = 0;
            c[h2 >> 2] = 0;
            c[d2 >> 2] = 0;
            xa(0, g2 | 0, a2 | 0, b2 | 0, tw(f2) | 0) | 0;
            kw(f2);
            l = e2;
            return;
          }
          function dx() {
            var b2 = 0;
            if (!(a[7976] | 0)) {
              ex(10720);
              b2 = 7976;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10720;
          }
          function ex(a2) {
            a2 = a2 | 0;
            fh(a2, fx() | 0, 2);
            return;
          }
          function fx() {
            return 1732;
          }
          function gx(a2) {
            a2 = a2 | 0;
            return c[a2 >> 2] | 0;
          }
          function hx(a2) {
            a2 = a2 | 0;
            return c[a2 >> 2] | 0;
          }
          function ix(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 32 | 0;
            g2 = e2 + 16 | 0;
            f2 = e2 + 8 | 0;
            h2 = e2;
            UA(f2);
            a2 = Sg(a2) | 0;
            c[h2 >> 2] = c[b2 >> 2];
            d2 = c[d2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            jx(a2, g2, d2);
            WA(f2);
            l = e2;
            return;
          }
          function jx(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 16 | 0;
            g2 = e2 + 4 | 0;
            h2 = e2;
            f2 = Vg(kx() | 0) | 0;
            c[h2 >> 2] = c[b2 >> 2];
            c[g2 >> 2] = c[h2 >> 2];
            b2 = qw(g2) | 0;
            xa(0, f2 | 0, a2 | 0, b2 | 0, rw(d2) | 0) | 0;
            l = e2;
            return;
          }
          function kx() {
            var b2 = 0;
            if (!(a[7984] | 0)) {
              lx(10732);
              b2 = 7984;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10732;
          }
          function lx(a2) {
            a2 = a2 | 0;
            fh(a2, mx() | 0, 2);
            return;
          }
          function mx() {
            return 1744;
          }
          function nx(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = l;
            l = l + 32 | 0;
            g2 = e2 + 16 | 0;
            f2 = e2 + 8 | 0;
            h2 = e2;
            UA(f2);
            a2 = Sg(a2) | 0;
            c[h2 >> 2] = c[b2 >> 2];
            d2 = c[d2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            jx(a2, g2, d2);
            WA(f2);
            l = e2;
            return;
          }
          function ox(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            g2 = l;
            l = l + 32 | 0;
            i3 = g2 + 16 | 0;
            h2 = g2 + 8 | 0;
            j2 = g2;
            UA(h2);
            b2 = Sg(b2) | 0;
            c[j2 >> 2] = c[d2 >> 2];
            e2 = a[e2 >> 0] | 0;
            f2 = a[f2 >> 0] | 0;
            c[i3 >> 2] = c[j2 >> 2];
            px(b2, i3, e2, f2);
            WA(h2);
            l = g2;
            return;
          }
          function px(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            f2 = l;
            l = l + 16 | 0;
            h2 = f2 + 4 | 0;
            i3 = f2;
            g2 = Vg(qx() | 0) | 0;
            c[i3 >> 2] = c[b2 >> 2];
            c[h2 >> 2] = c[i3 >> 2];
            b2 = qw(h2) | 0;
            d2 = rx(d2) | 0;
            $a(0, g2 | 0, a2 | 0, b2 | 0, d2 | 0, rx(e2) | 0) | 0;
            l = f2;
            return;
          }
          function qx() {
            var b2 = 0;
            if (!(a[7992] | 0)) {
              tx(10744);
              b2 = 7992;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10744;
          }
          function rx(a2) {
            a2 = a2 | 0;
            return sx(a2) | 0;
          }
          function sx(a2) {
            a2 = a2 | 0;
            return a2 & 255 | 0;
          }
          function tx(a2) {
            a2 = a2 | 0;
            fh(a2, ux() | 0, 3);
            return;
          }
          function ux() {
            return 1756;
          }
          function vx(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
            p2 = l;
            l = l + 32 | 0;
            j2 = p2 + 8 | 0;
            k2 = p2 + 4 | 0;
            m2 = p2 + 20 | 0;
            n2 = p2;
            mk(b2, 0);
            f2 = QA(d2) | 0;
            c[j2 >> 2] = 0;
            o2 = j2 + 4 | 0;
            c[o2 >> 2] = 0;
            c[j2 + 8 >> 2] = 0;
            switch (f2 << 24 >> 24) {
              case 0: {
                a[m2 >> 0] = 0;
                wx(k2, e2, m2);
                xx(b2, k2) | 0;
                wf(k2);
                break;
              }
              case 8: {
                o2 = PA(d2) | 0;
                a[m2 >> 0] = 8;
                OA(n2, c[o2 + 4 >> 2] | 0);
                yx(k2, e2, m2, n2, o2 + 8 | 0);
                xx(b2, k2) | 0;
                wf(k2);
                break;
              }
              case 9: {
                h2 = PA(d2) | 0;
                d2 = c[h2 + 4 >> 2] | 0;
                if (d2 | 0) {
                  i3 = j2 + 8 | 0;
                  g2 = h2 + 12 | 0;
                  while (1) {
                    d2 = d2 + -1 | 0;
                    OA(k2, c[g2 >> 2] | 0);
                    f2 = c[o2 >> 2] | 0;
                    if (f2 >>> 0 < (c[i3 >> 2] | 0) >>> 0) {
                      c[f2 >> 2] = c[k2 >> 2];
                      c[o2 >> 2] = (c[o2 >> 2] | 0) + 4;
                    } else
                      ew(j2, k2);
                    if (!d2)
                      break;
                    else
                      g2 = g2 + 4 | 0;
                  }
                }
                a[m2 >> 0] = 9;
                OA(n2, c[h2 + 8 >> 2] | 0);
                zx(k2, e2, m2, n2, j2);
                xx(b2, k2) | 0;
                wf(k2);
                break;
              }
              default: {
                o2 = PA(d2) | 0;
                a[m2 >> 0] = f2;
                OA(n2, c[o2 + 4 >> 2] | 0);
                Ax(k2, e2, m2, n2);
                xx(b2, k2) | 0;
                wf(k2);
              }
            }
            kw(j2);
            l = p2;
            return;
          }
          function wx(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = l;
            l = l + 16 | 0;
            f2 = e2;
            UA(f2);
            c2 = Sg(c2) | 0;
            Ox(b2, c2, a[d2 >> 0] | 0);
            WA(f2);
            l = e2;
            return;
          }
          function xx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = c[a2 >> 2] | 0;
            if (d2 | 0)
              ab(d2 | 0);
            c[a2 >> 2] = c[b2 >> 2];
            c[b2 >> 2] = 0;
            return a2 | 0;
          }
          function yx(b2, d2, e2, f2, g2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            var h2 = 0, i3 = 0, j2 = 0, k2 = 0;
            h2 = l;
            l = l + 32 | 0;
            j2 = h2 + 16 | 0;
            i3 = h2 + 8 | 0;
            k2 = h2;
            UA(i3);
            d2 = Sg(d2) | 0;
            e2 = a[e2 >> 0] | 0;
            c[k2 >> 2] = c[f2 >> 2];
            g2 = c[g2 >> 2] | 0;
            c[j2 >> 2] = c[k2 >> 2];
            Kx(b2, d2, e2, j2, g2);
            WA(i3);
            l = h2;
            return;
          }
          function zx(b2, d2, e2, f2, g2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            var h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            h2 = l;
            l = l + 32 | 0;
            k2 = h2 + 24 | 0;
            i3 = h2 + 16 | 0;
            m2 = h2 + 12 | 0;
            j2 = h2;
            UA(i3);
            d2 = Sg(d2) | 0;
            e2 = a[e2 >> 0] | 0;
            c[m2 >> 2] = c[f2 >> 2];
            mw(j2, g2);
            c[k2 >> 2] = c[m2 >> 2];
            Gx(b2, d2, e2, k2, j2);
            kw(j2);
            WA(i3);
            l = h2;
            return;
          }
          function Ax(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            g2 = l;
            l = l + 32 | 0;
            i3 = g2 + 16 | 0;
            h2 = g2 + 8 | 0;
            j2 = g2;
            UA(h2);
            d2 = Sg(d2) | 0;
            e2 = a[e2 >> 0] | 0;
            c[j2 >> 2] = c[f2 >> 2];
            c[i3 >> 2] = c[j2 >> 2];
            Bx(b2, d2, e2, i3);
            WA(h2);
            l = g2;
            return;
          }
          function Bx(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            f2 = l;
            l = l + 16 | 0;
            g2 = f2 + 4 | 0;
            i3 = f2;
            h2 = Vg(Cx() | 0) | 0;
            d2 = rx(d2) | 0;
            c[i3 >> 2] = c[e2 >> 2];
            c[g2 >> 2] = c[i3 >> 2];
            Dx(a2, xa(0, h2 | 0, b2 | 0, d2 | 0, qw(g2) | 0) | 0);
            l = f2;
            return;
          }
          function Cx() {
            var b2 = 0;
            if (!(a[8e3] | 0)) {
              Ex(10756);
              b2 = 8e3;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10756;
          }
          function Dx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            mk(a2, b2);
            return;
          }
          function Ex(a2) {
            a2 = a2 | 0;
            fh(a2, Fx() | 0, 2);
            return;
          }
          function Fx() {
            return 1772;
          }
          function Gx(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0;
            g2 = l;
            l = l + 32 | 0;
            j2 = g2 + 16 | 0;
            k2 = g2 + 12 | 0;
            h2 = g2;
            i3 = Vg(Hx() | 0) | 0;
            d2 = rx(d2) | 0;
            c[k2 >> 2] = c[e2 >> 2];
            c[j2 >> 2] = c[k2 >> 2];
            e2 = qw(j2) | 0;
            c[h2 >> 2] = c[f2 >> 2];
            j2 = f2 + 4 | 0;
            c[h2 + 4 >> 2] = c[j2 >> 2];
            k2 = f2 + 8 | 0;
            c[h2 + 8 >> 2] = c[k2 >> 2];
            c[k2 >> 2] = 0;
            c[j2 >> 2] = 0;
            c[f2 >> 2] = 0;
            Dx(a2, $a(0, i3 | 0, b2 | 0, d2 | 0, e2 | 0, tw(h2) | 0) | 0);
            kw(h2);
            l = g2;
            return;
          }
          function Hx() {
            var b2 = 0;
            if (!(a[8008] | 0)) {
              Ix(10768);
              b2 = 8008;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10768;
          }
          function Ix(a2) {
            a2 = a2 | 0;
            fh(a2, Jx() | 0, 3);
            return;
          }
          function Jx() {
            return 1784;
          }
          function Kx(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            g2 = l;
            l = l + 16 | 0;
            i3 = g2 + 4 | 0;
            j2 = g2;
            h2 = Vg(Lx() | 0) | 0;
            d2 = rx(d2) | 0;
            c[j2 >> 2] = c[e2 >> 2];
            c[i3 >> 2] = c[j2 >> 2];
            e2 = qw(i3) | 0;
            Dx(a2, $a(0, h2 | 0, b2 | 0, d2 | 0, e2 | 0, sw(f2) | 0) | 0);
            l = g2;
            return;
          }
          function Lx() {
            var b2 = 0;
            if (!(a[8016] | 0)) {
              Mx(10780);
              b2 = 8016;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10780;
          }
          function Mx(a2) {
            a2 = a2 | 0;
            fh(a2, Nx() | 0, 3);
            return;
          }
          function Nx() {
            return 1800;
          }
          function Ox(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0;
            d2 = Vg(Px() | 0) | 0;
            Dx(a2, bb(0, d2 | 0, b2 | 0, rx(c2) | 0) | 0);
            return;
          }
          function Px() {
            var b2 = 0;
            if (!(a[8024] | 0)) {
              Qx(10792);
              b2 = 8024;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 10792;
          }
          function Qx(a2) {
            a2 = a2 | 0;
            fh(a2, Rx() | 0, 1);
            return;
          }
          function Rx() {
            return 1816;
          }
          function Sx() {
            Tx();
            Ux();
            Vx();
            return;
          }
          function Tx() {
            c[2702] = rC(65536) | 0;
            return;
          }
          function Ux() {
            qy(10856);
            return;
          }
          function Vx() {
            Wx(10816);
            return;
          }
          function Wx(a2) {
            a2 = a2 | 0;
            Xx(a2, 5044);
            Yx(a2) | 0;
            return;
          }
          function Xx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = zw() | 0;
            c[a2 >> 2] = d2;
            ky(d2, b2);
            Hv(c[a2 >> 2] | 0);
            return;
          }
          function Yx(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = c[a2 >> 2] | 0;
            At(b2, Zx() | 0);
            return a2 | 0;
          }
          function Zx() {
            var b2 = 0;
            if (!(a[8032] | 0)) {
              _x(10820);
              Ha(64, 10820, o | 0) | 0;
              b2 = 8032;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            if (!(si(10820) | 0))
              _x(10820);
            return 10820;
          }
          function _x(a2) {
            a2 = a2 | 0;
            by(a2);
            Gt(a2, 25);
            return;
          }
          function $x(a2) {
            a2 = a2 | 0;
            ay(a2 + 24 | 0);
            return;
          }
          function ay(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function by(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 5, 18, b2, gy() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function cy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            dy(a2, b2);
            return;
          }
          function dy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2;
            f2 = d2 + 4 | 0;
            Gk(f2, b2);
            c[e2 >> 2] = Hk(f2, b2) | 0;
            ey(a2, e2);
            l = d2;
            return;
          }
          function ey(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            fy(b2 + 4 | 0, c[d2 >> 2] | 0);
            a[b2 + 8 >> 0] = 1;
            return;
          }
          function fy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = b2;
            return;
          }
          function gy() {
            return 1824;
          }
          function hy(a2) {
            a2 = a2 | 0;
            return iy(a2) | 0;
          }
          function iy(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            d2 = l;
            l = l + 16 | 0;
            f2 = d2 + 4 | 0;
            h2 = d2;
            e2 = jy(8) | 0;
            b2 = e2;
            i3 = qC(4) | 0;
            Gk(f2, a2);
            fy(i3, Hk(f2, a2) | 0);
            g2 = b2 + 4 | 0;
            c[g2 >> 2] = i3;
            a2 = qC(8) | 0;
            g2 = c[g2 >> 2] | 0;
            c[h2 >> 2] = 0;
            c[f2 >> 2] = c[h2 >> 2];
            Bw(a2, g2, f2);
            c[e2 >> 2] = a2;
            l = d2;
            return b2 | 0;
          }
          function jy(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            a2 = a2 + 7 & -8;
            if (a2 >>> 0 <= 32768 ? (b2 = c[2701] | 0, a2 >>> 0 <= (65536 - b2 | 0) >>> 0) : 0) {
              d2 = (c[2702] | 0) + b2 | 0;
              c[2701] = b2 + a2;
              a2 = d2;
            } else {
              a2 = rC(a2 + 8 | 0) | 0;
              c[a2 >> 2] = c[2703];
              c[2703] = a2;
              a2 = a2 + 8 | 0;
            }
            return a2 | 0;
          }
          function ky(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = ly() | 0;
            c[a2 + 4 >> 2] = my() | 0;
            c[a2 + 12 >> 2] = b2;
            c[a2 + 8 >> 2] = ny() | 0;
            c[a2 + 32 >> 2] = 9;
            return;
          }
          function ly() {
            return 11744;
          }
          function my() {
            return 1832;
          }
          function ny() {
            return cu() | 0;
          }
          function oy(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            if ((jr(d2, 896) | 0) == 512) {
              if (c2 | 0) {
                py(c2);
                sC(c2);
              }
            } else if (b2 | 0)
              sC(b2);
            return;
          }
          function py(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 4 >> 2] | 0;
            if (a2 | 0)
              oC(a2);
            return;
          }
          function qy(a2) {
            a2 = a2 | 0;
            ry(a2, 5052);
            sy(a2) | 0;
            ty(a2, 5058, 26) | 0;
            uy(a2, 5069, 1) | 0;
            vy(a2, 5077, 10) | 0;
            wy(a2, 5087, 19) | 0;
            yy(a2, 5094, 27) | 0;
            return;
          }
          function ry(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = GA() | 0;
            c[a2 >> 2] = d2;
            HA(d2, b2);
            Hv(c[a2 >> 2] | 0);
            return;
          }
          function sy(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = c[a2 >> 2] | 0;
            At(b2, rA() | 0);
            return a2 | 0;
          }
          function ty(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            Yz(a2, ai(b2) | 0, c2, 0);
            return a2 | 0;
          }
          function uy(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            Gz(a2, ai(b2) | 0, c2, 0);
            return a2 | 0;
          }
          function vy(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            hz(a2, ai(b2) | 0, c2, 0);
            return a2 | 0;
          }
          function wy(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            Ry(a2, ai(b2) | 0, c2, 0);
            return a2 | 0;
          }
          function xy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            a:
              while (1) {
                d2 = c[2703] | 0;
                while (1) {
                  if ((d2 | 0) == (b2 | 0))
                    break a;
                  e2 = c[d2 >> 2] | 0;
                  c[2703] = e2;
                  if (!d2)
                    d2 = e2;
                  else
                    break;
                }
                sC(d2);
              }
            c[2701] = a2;
            return;
          }
          function yy(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            zy(a2, ai(b2) | 0, c2, 0);
            return a2 | 0;
          }
          function zy(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = c[a2 >> 2] | 0;
            f2 = Ay() | 0;
            a2 = By(d2) | 0;
            fi(g2, b2, f2, a2, Cy(d2, e2) | 0, e2);
            return;
          }
          function Ay() {
            var b2 = 0, d2 = 0;
            if (!(a[8040] | 0)) {
              Jy(10860);
              Ha(65, 10860, o | 0) | 0;
              d2 = 8040;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(10860) | 0)) {
              b2 = 10860;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Jy(10860);
            }
            return 10860;
          }
          function By(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Cy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            f2 = i3;
            g2 = i3 + 4 | 0;
            c[f2 >> 2] = a2;
            j2 = Ay() | 0;
            h2 = j2 + 24 | 0;
            b2 = ji(b2, 4) | 0;
            c[g2 >> 2] = b2;
            d2 = j2 + 28 | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 + 32 >> 2] | 0) >>> 0) {
              Dy(e2, a2, b2);
              b2 = (c[d2 >> 2] | 0) + 8 | 0;
              c[d2 >> 2] = b2;
            } else {
              Ey(h2, f2, g2);
              b2 = c[d2 >> 2] | 0;
            }
            l = i3;
            return (b2 - (c[h2 >> 2] | 0) >> 3) + -1 | 0;
          }
          function Dy(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function Ey(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            i3 = l;
            l = l + 32 | 0;
            f2 = i3;
            g2 = a2 + 4 | 0;
            h2 = ((c[g2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 3) + 1 | 0;
            e2 = Fy(a2) | 0;
            if (e2 >>> 0 < h2 >>> 0)
              jC(a2);
            else {
              j2 = c[a2 >> 2] | 0;
              m2 = (c[a2 + 8 >> 2] | 0) - j2 | 0;
              k2 = m2 >> 2;
              Gy(f2, m2 >> 3 >>> 0 < e2 >>> 1 >>> 0 ? k2 >>> 0 < h2 >>> 0 ? h2 : k2 : e2, (c[g2 >> 2] | 0) - j2 >> 3, a2 + 8 | 0);
              h2 = f2 + 8 | 0;
              Dy(c[h2 >> 2] | 0, c[b2 >> 2] | 0, c[d2 >> 2] | 0);
              c[h2 >> 2] = (c[h2 >> 2] | 0) + 8;
              Hy(a2, f2);
              Iy(f2);
              l = i3;
              return;
            }
          }
          function Fy(a2) {
            a2 = a2 | 0;
            return 536870911;
          }
          function Gy(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 536870911)
                  Ta();
                else {
                  f2 = qC(b2 << 3) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 3) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 3);
            return;
          }
          function Hy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 3) << 3) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Iy(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -8 - b2 | 0) >>> 3) << 3);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Jy(a2) {
            a2 = a2 | 0;
            My(a2);
            return;
          }
          function Ky(a2) {
            a2 = a2 | 0;
            Ly(a2 + 24 | 0);
            return;
          }
          function Ly(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function My(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 1, 11, b2, Ny() | 0, 2);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Ny() {
            return 1840;
          }
          function Oy(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            Qy(c[(Py(a2) | 0) >> 2] | 0, b2, d2);
            return;
          }
          function Py(a2) {
            a2 = a2 | 0;
            return (c[(Ay() | 0) + 24 >> 2] | 0) + (a2 << 3) | 0;
          }
          function Qy(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            d2 = l;
            l = l + 16 | 0;
            f2 = d2 + 1 | 0;
            e2 = d2;
            Gk(f2, b2);
            b2 = Hk(f2, b2) | 0;
            Gk(e2, c2);
            c2 = Hk(e2, c2) | 0;
            ob[a2 & 31](b2, c2);
            l = d2;
            return;
          }
          function Ry(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = c[a2 >> 2] | 0;
            f2 = Sy() | 0;
            a2 = Ty(d2) | 0;
            fi(g2, b2, f2, a2, Uy(d2, e2) | 0, e2);
            return;
          }
          function Sy() {
            var b2 = 0, d2 = 0;
            if (!(a[8048] | 0)) {
              $y(10896);
              Ha(66, 10896, o | 0) | 0;
              d2 = 8048;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(10896) | 0)) {
              b2 = 10896;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              $y(10896);
            }
            return 10896;
          }
          function Ty(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Uy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            f2 = i3;
            g2 = i3 + 4 | 0;
            c[f2 >> 2] = a2;
            j2 = Sy() | 0;
            h2 = j2 + 24 | 0;
            b2 = ji(b2, 4) | 0;
            c[g2 >> 2] = b2;
            d2 = j2 + 28 | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 + 32 >> 2] | 0) >>> 0) {
              Vy(e2, a2, b2);
              b2 = (c[d2 >> 2] | 0) + 8 | 0;
              c[d2 >> 2] = b2;
            } else {
              Wy(h2, f2, g2);
              b2 = c[d2 >> 2] | 0;
            }
            l = i3;
            return (b2 - (c[h2 >> 2] | 0) >> 3) + -1 | 0;
          }
          function Vy(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function Wy(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            i3 = l;
            l = l + 32 | 0;
            f2 = i3;
            g2 = a2 + 4 | 0;
            h2 = ((c[g2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 3) + 1 | 0;
            e2 = Xy(a2) | 0;
            if (e2 >>> 0 < h2 >>> 0)
              jC(a2);
            else {
              j2 = c[a2 >> 2] | 0;
              m2 = (c[a2 + 8 >> 2] | 0) - j2 | 0;
              k2 = m2 >> 2;
              Yy(f2, m2 >> 3 >>> 0 < e2 >>> 1 >>> 0 ? k2 >>> 0 < h2 >>> 0 ? h2 : k2 : e2, (c[g2 >> 2] | 0) - j2 >> 3, a2 + 8 | 0);
              h2 = f2 + 8 | 0;
              Vy(c[h2 >> 2] | 0, c[b2 >> 2] | 0, c[d2 >> 2] | 0);
              c[h2 >> 2] = (c[h2 >> 2] | 0) + 8;
              Zy(a2, f2);
              _y(f2);
              l = i3;
              return;
            }
          }
          function Xy(a2) {
            a2 = a2 | 0;
            return 536870911;
          }
          function Yy(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 536870911)
                  Ta();
                else {
                  f2 = qC(b2 << 3) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 3) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 3);
            return;
          }
          function Zy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 3) << 3) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function _y(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -8 - b2 | 0) >>> 3) << 3);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function $y(a2) {
            a2 = a2 | 0;
            cz(a2);
            return;
          }
          function az(a2) {
            a2 = a2 | 0;
            bz(a2 + 24 | 0);
            return;
          }
          function bz(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function cz(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 1, 11, b2, dz() | 0, 1);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function dz() {
            return 1852;
          }
          function ez(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return gz(c[(fz(a2) | 0) >> 2] | 0, b2) | 0;
          }
          function fz(a2) {
            a2 = a2 | 0;
            return (c[(Sy() | 0) + 24 >> 2] | 0) + (a2 << 3) | 0;
          }
          function gz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0;
            c2 = l;
            l = l + 16 | 0;
            d2 = c2;
            Gk(d2, b2);
            b2 = Hk(d2, b2) | 0;
            b2 = ul(pb[a2 & 31](b2) | 0) | 0;
            l = c2;
            return b2 | 0;
          }
          function hz(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = c[a2 >> 2] | 0;
            f2 = iz() | 0;
            a2 = jz(d2) | 0;
            fi(g2, b2, f2, a2, kz(d2, e2) | 0, e2);
            return;
          }
          function iz() {
            var b2 = 0, d2 = 0;
            if (!(a[8056] | 0)) {
              rz(10932);
              Ha(67, 10932, o | 0) | 0;
              d2 = 8056;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(10932) | 0)) {
              b2 = 10932;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              rz(10932);
            }
            return 10932;
          }
          function jz(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function kz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            f2 = i3;
            g2 = i3 + 4 | 0;
            c[f2 >> 2] = a2;
            j2 = iz() | 0;
            h2 = j2 + 24 | 0;
            b2 = ji(b2, 4) | 0;
            c[g2 >> 2] = b2;
            d2 = j2 + 28 | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 + 32 >> 2] | 0) >>> 0) {
              lz(e2, a2, b2);
              b2 = (c[d2 >> 2] | 0) + 8 | 0;
              c[d2 >> 2] = b2;
            } else {
              mz(h2, f2, g2);
              b2 = c[d2 >> 2] | 0;
            }
            l = i3;
            return (b2 - (c[h2 >> 2] | 0) >> 3) + -1 | 0;
          }
          function lz(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function mz(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            i3 = l;
            l = l + 32 | 0;
            f2 = i3;
            g2 = a2 + 4 | 0;
            h2 = ((c[g2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 3) + 1 | 0;
            e2 = nz(a2) | 0;
            if (e2 >>> 0 < h2 >>> 0)
              jC(a2);
            else {
              j2 = c[a2 >> 2] | 0;
              m2 = (c[a2 + 8 >> 2] | 0) - j2 | 0;
              k2 = m2 >> 2;
              oz(f2, m2 >> 3 >>> 0 < e2 >>> 1 >>> 0 ? k2 >>> 0 < h2 >>> 0 ? h2 : k2 : e2, (c[g2 >> 2] | 0) - j2 >> 3, a2 + 8 | 0);
              h2 = f2 + 8 | 0;
              lz(c[h2 >> 2] | 0, c[b2 >> 2] | 0, c[d2 >> 2] | 0);
              c[h2 >> 2] = (c[h2 >> 2] | 0) + 8;
              pz(a2, f2);
              qz(f2);
              l = i3;
              return;
            }
          }
          function nz(a2) {
            a2 = a2 | 0;
            return 536870911;
          }
          function oz(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 536870911)
                  Ta();
                else {
                  f2 = qC(b2 << 3) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 3) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 3);
            return;
          }
          function pz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 3) << 3) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function qz(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -8 - b2 | 0) >>> 3) << 3);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function rz(a2) {
            a2 = a2 | 0;
            uz(a2);
            return;
          }
          function sz(a2) {
            a2 = a2 | 0;
            tz(a2 + 24 | 0);
            return;
          }
          function tz(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function uz(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 1, 7, b2, vz() | 0, 2);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function vz() {
            return 1860;
          }
          function wz(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            return yz(c[(xz(a2) | 0) >> 2] | 0, b2, d2) | 0;
          }
          function xz(a2) {
            a2 = a2 | 0;
            return (c[(iz() | 0) + 24 >> 2] | 0) + (a2 << 3) | 0;
          }
          function yz(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            e2 = l;
            l = l + 32 | 0;
            h2 = e2 + 12 | 0;
            g2 = e2 + 8 | 0;
            i3 = e2;
            j2 = e2 + 16 | 0;
            f2 = e2 + 4 | 0;
            zz(j2, b2);
            Az(i3, j2, b2);
            ik(f2, d2);
            d2 = jk(f2, d2) | 0;
            c[h2 >> 2] = c[i3 >> 2];
            Eb[a2 & 15](g2, h2, d2);
            d2 = Bz(g2) | 0;
            wf(g2);
            kk(f2);
            l = e2;
            return d2 | 0;
          }
          function zz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Az(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            Cz(a2, c2);
            return;
          }
          function Bz(a2) {
            a2 = a2 | 0;
            return Sg(a2) | 0;
          }
          function Cz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            f2 = l;
            l = l + 16 | 0;
            d2 = f2;
            e2 = b2;
            if (!(e2 & 1))
              c[a2 >> 2] = c[b2 >> 2];
            else {
              Dz(d2, 0);
              Ja(e2 | 0, d2 | 0) | 0;
              Ez(a2, d2);
              Fz(d2);
            }
            l = f2;
            return;
          }
          function Dz(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            ah(b2, d2);
            c[b2 + 4 >> 2] = 0;
            a[b2 + 8 >> 0] = 0;
            return;
          }
          function Ez(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = c[b2 + 4 >> 2];
            return;
          }
          function Fz(b2) {
            b2 = b2 | 0;
            a[b2 + 8 >> 0] = 0;
            return;
          }
          function Gz(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = c[a2 >> 2] | 0;
            f2 = Hz() | 0;
            a2 = Iz(d2) | 0;
            fi(g2, b2, f2, a2, Jz(d2, e2) | 0, e2);
            return;
          }
          function Hz() {
            var b2 = 0, d2 = 0;
            if (!(a[8064] | 0)) {
              Qz(10968);
              Ha(68, 10968, o | 0) | 0;
              d2 = 8064;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(10968) | 0)) {
              b2 = 10968;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              Qz(10968);
            }
            return 10968;
          }
          function Iz(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Jz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            f2 = i3;
            g2 = i3 + 4 | 0;
            c[f2 >> 2] = a2;
            j2 = Hz() | 0;
            h2 = j2 + 24 | 0;
            b2 = ji(b2, 4) | 0;
            c[g2 >> 2] = b2;
            d2 = j2 + 28 | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 + 32 >> 2] | 0) >>> 0) {
              Kz(e2, a2, b2);
              b2 = (c[d2 >> 2] | 0) + 8 | 0;
              c[d2 >> 2] = b2;
            } else {
              Lz(h2, f2, g2);
              b2 = c[d2 >> 2] | 0;
            }
            l = i3;
            return (b2 - (c[h2 >> 2] | 0) >> 3) + -1 | 0;
          }
          function Kz(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function Lz(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            i3 = l;
            l = l + 32 | 0;
            f2 = i3;
            g2 = a2 + 4 | 0;
            h2 = ((c[g2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 3) + 1 | 0;
            e2 = Mz(a2) | 0;
            if (e2 >>> 0 < h2 >>> 0)
              jC(a2);
            else {
              j2 = c[a2 >> 2] | 0;
              m2 = (c[a2 + 8 >> 2] | 0) - j2 | 0;
              k2 = m2 >> 2;
              Nz(f2, m2 >> 3 >>> 0 < e2 >>> 1 >>> 0 ? k2 >>> 0 < h2 >>> 0 ? h2 : k2 : e2, (c[g2 >> 2] | 0) - j2 >> 3, a2 + 8 | 0);
              h2 = f2 + 8 | 0;
              Kz(c[h2 >> 2] | 0, c[b2 >> 2] | 0, c[d2 >> 2] | 0);
              c[h2 >> 2] = (c[h2 >> 2] | 0) + 8;
              Oz(a2, f2);
              Pz(f2);
              l = i3;
              return;
            }
          }
          function Mz(a2) {
            a2 = a2 | 0;
            return 536870911;
          }
          function Nz(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 536870911)
                  Ta();
                else {
                  f2 = qC(b2 << 3) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 3) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 3);
            return;
          }
          function Oz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 3) << 3) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function Pz(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -8 - b2 | 0) >>> 3) << 3);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function Qz(a2) {
            a2 = a2 | 0;
            Tz(a2);
            return;
          }
          function Rz(a2) {
            a2 = a2 | 0;
            Sz(a2 + 24 | 0);
            return;
          }
          function Sz(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function Tz(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 1, 1, b2, Uz() | 0, 5);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function Uz() {
            return 1872;
          }
          function Vz(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            Xz(c[(Wz(a2) | 0) >> 2] | 0, b2, d2, e2, f2, g2);
            return;
          }
          function Wz(a2) {
            a2 = a2 | 0;
            return (c[(Hz() | 0) + 24 >> 2] | 0) + (a2 << 3) | 0;
          }
          function Xz(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            g2 = l;
            l = l + 32 | 0;
            h2 = g2 + 16 | 0;
            i3 = g2 + 12 | 0;
            j2 = g2 + 8 | 0;
            k2 = g2 + 4 | 0;
            m2 = g2;
            ik(h2, b2);
            b2 = jk(h2, b2) | 0;
            ik(i3, c2);
            c2 = jk(i3, c2) | 0;
            ik(j2, d2);
            d2 = jk(j2, d2) | 0;
            ik(k2, e2);
            e2 = jk(k2, e2) | 0;
            ik(m2, f2);
            f2 = jk(m2, f2) | 0;
            jb[a2 & 1](b2, c2, d2, e2, f2);
            kk(m2);
            kk(k2);
            kk(j2);
            kk(i3);
            kk(h2);
            l = g2;
            return;
          }
          function Yz(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = c[a2 >> 2] | 0;
            f2 = Zz() | 0;
            a2 = _z(d2) | 0;
            fi(g2, b2, f2, a2, $z(d2, e2) | 0, e2);
            return;
          }
          function Zz() {
            var b2 = 0, d2 = 0;
            if (!(a[8072] | 0)) {
              gA(11004);
              Ha(69, 11004, o | 0) | 0;
              d2 = 8072;
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 0;
            }
            if (!(si(11004) | 0)) {
              b2 = 11004;
              d2 = b2 + 36 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (d2 | 0));
              gA(11004);
            }
            return 11004;
          }
          function _z(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function $z(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            i3 = l;
            l = l + 16 | 0;
            f2 = i3;
            g2 = i3 + 4 | 0;
            c[f2 >> 2] = a2;
            j2 = Zz() | 0;
            h2 = j2 + 24 | 0;
            b2 = ji(b2, 4) | 0;
            c[g2 >> 2] = b2;
            d2 = j2 + 28 | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 + 32 >> 2] | 0) >>> 0) {
              aA(e2, a2, b2);
              b2 = (c[d2 >> 2] | 0) + 8 | 0;
              c[d2 >> 2] = b2;
            } else {
              bA(h2, f2, g2);
              b2 = c[d2 >> 2] | 0;
            }
            l = i3;
            return (b2 - (c[h2 >> 2] | 0) >> 3) + -1 | 0;
          }
          function aA(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function bA(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0;
            i3 = l;
            l = l + 32 | 0;
            f2 = i3;
            g2 = a2 + 4 | 0;
            h2 = ((c[g2 >> 2] | 0) - (c[a2 >> 2] | 0) >> 3) + 1 | 0;
            e2 = cA(a2) | 0;
            if (e2 >>> 0 < h2 >>> 0)
              jC(a2);
            else {
              j2 = c[a2 >> 2] | 0;
              m2 = (c[a2 + 8 >> 2] | 0) - j2 | 0;
              k2 = m2 >> 2;
              dA(f2, m2 >> 3 >>> 0 < e2 >>> 1 >>> 0 ? k2 >>> 0 < h2 >>> 0 ? h2 : k2 : e2, (c[g2 >> 2] | 0) - j2 >> 3, a2 + 8 | 0);
              h2 = f2 + 8 | 0;
              aA(c[h2 >> 2] | 0, c[b2 >> 2] | 0, c[d2 >> 2] | 0);
              c[h2 >> 2] = (c[h2 >> 2] | 0) + 8;
              eA(a2, f2);
              fA(f2);
              l = i3;
              return;
            }
          }
          function cA(a2) {
            a2 = a2 | 0;
            return 536870911;
          }
          function dA(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[a2 + 12 >> 2] = 0;
            c[a2 + 16 >> 2] = e2;
            do
              if (b2) {
                if (b2 >>> 0 > 536870911)
                  Ta();
                else {
                  f2 = qC(b2 << 3) | 0;
                  break;
                }
              } else
                f2 = 0;
            while (0);
            c[a2 >> 2] = f2;
            e2 = f2 + (d2 << 3) | 0;
            c[a2 + 8 >> 2] = e2;
            c[a2 + 4 >> 2] = e2;
            c[a2 + 12 >> 2] = f2 + (b2 << 3);
            return;
          }
          function eA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[a2 >> 2] | 0;
            h2 = a2 + 4 | 0;
            g2 = b2 + 4 | 0;
            f2 = (c[h2 >> 2] | 0) - e2 | 0;
            d2 = (c[g2 >> 2] | 0) + (0 - (f2 >> 3) << 3) | 0;
            c[g2 >> 2] = d2;
            if ((f2 | 0) > 0) {
              BC(d2 | 0, e2 | 0, f2 | 0) | 0;
              e2 = g2;
              d2 = c[g2 >> 2] | 0;
            } else
              e2 = g2;
            g2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = d2;
            c[e2 >> 2] = g2;
            g2 = b2 + 8 | 0;
            f2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = c[g2 >> 2];
            c[g2 >> 2] = f2;
            g2 = a2 + 8 | 0;
            h2 = b2 + 12 | 0;
            a2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[h2 >> 2] = a2;
            c[b2 >> 2] = c[e2 >> 2];
            return;
          }
          function fA(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            b2 = c[a2 + 4 >> 2] | 0;
            d2 = a2 + 8 | 0;
            e2 = c[d2 >> 2] | 0;
            if ((e2 | 0) != (b2 | 0))
              c[d2 >> 2] = e2 + (~((e2 + -8 - b2 | 0) >>> 3) << 3);
            a2 = c[a2 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function gA(a2) {
            a2 = a2 | 0;
            jA(a2);
            return;
          }
          function hA(a2) {
            a2 = a2 | 0;
            iA(a2 + 24 | 0);
            return;
          }
          function iA(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function jA(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 1, 12, b2, kA() | 0, 2);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function kA() {
            return 1896;
          }
          function lA(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            nA(c[(mA(a2) | 0) >> 2] | 0, b2, d2);
            return;
          }
          function mA(a2) {
            a2 = a2 | 0;
            return (c[(Zz() | 0) + 24 >> 2] | 0) + (a2 << 3) | 0;
          }
          function nA(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            d2 = l;
            l = l + 16 | 0;
            f2 = d2 + 4 | 0;
            e2 = d2;
            oA(f2, b2);
            b2 = pA(f2, b2) | 0;
            ik(e2, c2);
            c2 = jk(e2, c2) | 0;
            ob[a2 & 31](b2, c2);
            kk(e2);
            l = d2;
            return;
          }
          function oA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function pA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return qA(b2) | 0;
          }
          function qA(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function rA() {
            var b2 = 0;
            if (!(a[8080] | 0)) {
              sA(11040);
              Ha(70, 11040, o | 0) | 0;
              b2 = 8080;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            if (!(si(11040) | 0))
              sA(11040);
            return 11040;
          }
          function sA(a2) {
            a2 = a2 | 0;
            vA(a2);
            Gt(a2, 71);
            return;
          }
          function tA(a2) {
            a2 = a2 | 0;
            uA(a2 + 24 | 0);
            return;
          }
          function uA(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            d2 = c[a2 >> 2] | 0;
            e2 = d2;
            if (d2 | 0) {
              a2 = a2 + 4 | 0;
              b2 = c[a2 >> 2] | 0;
              if ((b2 | 0) != (d2 | 0))
                c[a2 >> 2] = b2 + (~((b2 + -8 - e2 | 0) >>> 3) << 3);
              sC(d2);
            }
            return;
          }
          function vA(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = vi() | 0;
            yi(a2, 5, 7, b2, zA() | 0, 0);
            c[a2 + 24 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 32 >> 2] = 0;
            return;
          }
          function wA(a2) {
            a2 = a2 | 0;
            xA(a2);
            return;
          }
          function xA(a2) {
            a2 = a2 | 0;
            yA(a2);
            return;
          }
          function yA(b2) {
            b2 = b2 | 0;
            a[b2 + 8 >> 0] = 1;
            return;
          }
          function zA() {
            return 1936;
          }
          function AA() {
            return BA() | 0;
          }
          function BA() {
            var a2 = 0, b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            b2 = l;
            l = l + 16 | 0;
            f2 = b2 + 4 | 0;
            h2 = b2;
            d2 = jy(8) | 0;
            a2 = d2;
            g2 = a2 + 4 | 0;
            c[g2 >> 2] = qC(1) | 0;
            e2 = qC(8) | 0;
            g2 = c[g2 >> 2] | 0;
            c[h2 >> 2] = 0;
            c[f2 >> 2] = c[h2 >> 2];
            CA(e2, g2, f2);
            c[d2 >> 2] = e2;
            l = b2;
            return a2 | 0;
          }
          function CA(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = b2;
            d2 = qC(16) | 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 >> 2] = 1916;
            c[d2 + 12 >> 2] = b2;
            c[a2 + 4 >> 2] = d2;
            return;
          }
          function DA(a2) {
            a2 = a2 | 0;
            kC(a2);
            sC(a2);
            return;
          }
          function EA(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 12 >> 2] | 0;
            if (a2 | 0)
              sC(a2);
            return;
          }
          function FA(a2) {
            a2 = a2 | 0;
            sC(a2);
            return;
          }
          function GA() {
            var b2 = 0;
            if (!(a[8088] | 0)) {
              NA(11076);
              Ha(25, 11076, o | 0) | 0;
              b2 = 8088;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 11076;
          }
          function HA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = IA() | 0;
            c[a2 + 4 >> 2] = JA() | 0;
            c[a2 + 12 >> 2] = b2;
            c[a2 + 8 >> 2] = KA() | 0;
            c[a2 + 32 >> 2] = 10;
            return;
          }
          function IA() {
            return 11745;
          }
          function JA() {
            return 1940;
          }
          function KA() {
            return lr() | 0;
          }
          function LA(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            if ((jr(d2, 896) | 0) == 512) {
              if (c2 | 0) {
                MA(c2);
                sC(c2);
              }
            } else if (b2 | 0)
              sC(b2);
            return;
          }
          function MA(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 4 >> 2] | 0;
            if (a2 | 0)
              oC(a2);
            return;
          }
          function NA(a2) {
            a2 = a2 | 0;
            Zi(a2);
            return;
          }
          function OA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = b2;
            return;
          }
          function PA(a2) {
            a2 = a2 | 0;
            return c[a2 >> 2] | 0;
          }
          function QA(b2) {
            b2 = b2 | 0;
            return a[c[b2 >> 2] >> 0] | 0;
          }
          function RA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2;
            c[e2 >> 2] = c[a2 >> 2];
            SA(b2, e2) | 0;
            l = d2;
            return;
          }
          function SA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = TA(c[a2 >> 2] | 0, b2) | 0;
            b2 = a2 + 4 | 0;
            c[(c[b2 >> 2] | 0) + 8 >> 2] = d2;
            return c[(c[b2 >> 2] | 0) + 8 >> 2] | 0;
          }
          function TA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = l;
            l = l + 16 | 0;
            e2 = d2;
            UA(e2);
            a2 = Sg(a2) | 0;
            b2 = VA(a2, c[b2 >> 2] | 0) | 0;
            WA(e2);
            l = d2;
            return b2 | 0;
          }
          function UA(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = c[2701];
            c[a2 + 4 >> 2] = c[2703];
            return;
          }
          function VA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0;
            c2 = Vg(XA() | 0) | 0;
            return bb(0, c2 | 0, a2 | 0, sw(b2) | 0) | 0;
          }
          function WA(a2) {
            a2 = a2 | 0;
            xy(c[a2 >> 2] | 0, c[a2 + 4 >> 2] | 0);
            return;
          }
          function XA() {
            var b2 = 0;
            if (!(a[8096] | 0)) {
              YA(11120);
              b2 = 8096;
              c[b2 >> 2] = 1;
              c[b2 + 4 >> 2] = 0;
            }
            return 11120;
          }
          function YA(a2) {
            a2 = a2 | 0;
            fh(a2, ZA() | 0, 1);
            return;
          }
          function ZA() {
            return 1948;
          }
          function _A() {
            $A();
            return;
          }
          function $A() {
            var b2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
            s2 = l;
            l = l + 16 | 0;
            o2 = s2 + 4 | 0;
            p2 = s2;
            Ea(65536, 10804, c[2702] | 0, 10812);
            f2 = Wv() | 0;
            e2 = c[f2 >> 2] | 0;
            b2 = c[e2 >> 2] | 0;
            if (b2 | 0) {
              g2 = c[f2 + 8 >> 2] | 0;
              f2 = c[f2 + 4 >> 2] | 0;
              while (1) {
                Ma(b2 | 0, d[f2 >> 0] | 0 | 0, a[g2 >> 0] | 0);
                e2 = e2 + 4 | 0;
                b2 = c[e2 >> 2] | 0;
                if (!b2)
                  break;
                else {
                  g2 = g2 + 1 | 0;
                  f2 = f2 + 1 | 0;
                }
              }
            }
            b2 = Yv() | 0;
            e2 = c[b2 >> 2] | 0;
            if (e2 | 0)
              do {
                Na(e2 | 0, c[b2 + 4 >> 2] | 0);
                b2 = b2 + 8 | 0;
                e2 = c[b2 >> 2] | 0;
              } while ((e2 | 0) != 0);
            Na(aB() | 0, 5167);
            n2 = Iv() | 0;
            b2 = c[n2 >> 2] | 0;
            a:
              do
                if (b2 | 0) {
                  do {
                    bB(c[b2 + 4 >> 2] | 0);
                    b2 = c[b2 >> 2] | 0;
                  } while ((b2 | 0) != 0);
                  b2 = c[n2 >> 2] | 0;
                  if (b2 | 0) {
                    m2 = n2;
                    do {
                      while (1) {
                        h2 = b2;
                        b2 = c[b2 >> 2] | 0;
                        h2 = c[h2 + 4 >> 2] | 0;
                        if (!(cB(h2) | 0))
                          break;
                        c[p2 >> 2] = m2;
                        c[o2 >> 2] = c[p2 >> 2];
                        dB(n2, o2) | 0;
                        if (!b2)
                          break a;
                      }
                      eB(h2);
                      m2 = c[m2 >> 2] | 0;
                      e2 = fB(h2) | 0;
                      i3 = Va() | 0;
                      j2 = l;
                      l = l + ((1 * (e2 << 2) | 0) + 15 & -16) | 0;
                      k2 = l;
                      l = l + ((1 * (e2 << 2) | 0) + 15 & -16) | 0;
                      e2 = c[(Zw(h2) | 0) >> 2] | 0;
                      if (e2 | 0) {
                        f2 = j2;
                        g2 = k2;
                        while (1) {
                          c[f2 >> 2] = c[(Xw(c[e2 + 4 >> 2] | 0) | 0) >> 2];
                          c[g2 >> 2] = c[e2 + 8 >> 2];
                          e2 = c[e2 >> 2] | 0;
                          if (!e2)
                            break;
                          else {
                            f2 = f2 + 4 | 0;
                            g2 = g2 + 4 | 0;
                          }
                        }
                      }
                      t2 = Xw(h2) | 0;
                      e2 = gB(h2) | 0;
                      f2 = fB(h2) | 0;
                      g2 = hB(h2) | 0;
                      Ra(t2 | 0, e2 | 0, j2 | 0, k2 | 0, f2 | 0, g2 | 0, Tv(h2) | 0);
                      Ga(i3 | 0);
                    } while ((b2 | 0) != 0);
                  }
                }
              while (0);
            b2 = c[(Vv() | 0) >> 2] | 0;
            if (b2 | 0)
              do {
                t2 = b2 + 4 | 0;
                n2 = aw(t2) | 0;
                h2 = fw(n2) | 0;
                i3 = bw(n2) | 0;
                j2 = (cw(n2) | 0) + 1 | 0;
                k2 = iB(n2) | 0;
                m2 = jB(t2) | 0;
                n2 = si(n2) | 0;
                o2 = hw(t2) | 0;
                p2 = kB(t2) | 0;
                Pa(0, h2 | 0, i3 | 0, j2 | 0, k2 | 0, m2 | 0, n2 | 0, o2 | 0, p2 | 0, lB(t2) | 0);
                b2 = c[b2 >> 2] | 0;
              } while ((b2 | 0) != 0);
            b2 = c[(Iv() | 0) >> 2] | 0;
            b:
              do
                if (b2 | 0) {
                  c:
                    while (1) {
                      e2 = c[b2 + 4 >> 2] | 0;
                      if (e2 | 0 ? (q2 = c[(Xw(e2) | 0) >> 2] | 0, r2 = c[(ax(e2) | 0) >> 2] | 0, r2 | 0) : 0) {
                        f2 = r2;
                        do {
                          e2 = f2 + 4 | 0;
                          g2 = aw(e2) | 0;
                          d:
                            do
                              if (g2 | 0)
                                switch (si(g2) | 0) {
                                  case 0:
                                    break c;
                                  case 4:
                                  case 3:
                                  case 2: {
                                    k2 = fw(g2) | 0;
                                    m2 = bw(g2) | 0;
                                    n2 = (cw(g2) | 0) + 1 | 0;
                                    o2 = iB(g2) | 0;
                                    p2 = si(g2) | 0;
                                    t2 = hw(e2) | 0;
                                    Pa(q2 | 0, k2 | 0, m2 | 0, n2 | 0, o2 | 0, 0, p2 | 0, t2 | 0, kB(e2) | 0, lB(e2) | 0);
                                    break d;
                                  }
                                  case 1: {
                                    j2 = fw(g2) | 0;
                                    k2 = bw(g2) | 0;
                                    m2 = (cw(g2) | 0) + 1 | 0;
                                    n2 = iB(g2) | 0;
                                    o2 = jB(e2) | 0;
                                    p2 = si(g2) | 0;
                                    t2 = hw(e2) | 0;
                                    Pa(q2 | 0, j2 | 0, k2 | 0, m2 | 0, n2 | 0, o2 | 0, p2 | 0, t2 | 0, kB(e2) | 0, lB(e2) | 0);
                                    break d;
                                  }
                                  case 5: {
                                    n2 = fw(g2) | 0;
                                    o2 = bw(g2) | 0;
                                    p2 = (cw(g2) | 0) + 1 | 0;
                                    t2 = iB(g2) | 0;
                                    Pa(q2 | 0, n2 | 0, o2 | 0, p2 | 0, t2 | 0, mB(g2) | 0, si(g2) | 0, 0, 0, 0);
                                    break d;
                                  }
                                  default:
                                    break d;
                                }
                            while (0);
                          f2 = c[f2 >> 2] | 0;
                        } while ((f2 | 0) != 0);
                      }
                      b2 = c[b2 >> 2] | 0;
                      if (!b2)
                        break b;
                    }
                  Ta();
                }
              while (0);
            Sa();
            l = s2;
            return;
          }
          function aB() {
            return 11703;
          }
          function bB(b2) {
            b2 = b2 | 0;
            a[b2 + 40 >> 0] = 0;
            return;
          }
          function cB(b2) {
            b2 = b2 | 0;
            return (a[b2 + 40 >> 0] | 0) != 0 | 0;
          }
          function dB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            b2 = nB(b2) | 0;
            a2 = c[b2 >> 2] | 0;
            c[b2 >> 2] = c[a2 >> 2];
            sC(a2);
            return c[b2 >> 2] | 0;
          }
          function eB(b2) {
            b2 = b2 | 0;
            a[b2 + 40 >> 0] = 1;
            return;
          }
          function fB(a2) {
            a2 = a2 | 0;
            return c[a2 + 20 >> 2] | 0;
          }
          function gB(a2) {
            a2 = a2 | 0;
            return c[a2 + 8 >> 2] | 0;
          }
          function hB(a2) {
            a2 = a2 | 0;
            return c[a2 + 32 >> 2] | 0;
          }
          function iB(a2) {
            a2 = a2 | 0;
            return c[a2 + 4 >> 2] | 0;
          }
          function jB(a2) {
            a2 = a2 | 0;
            return c[a2 + 4 >> 2] | 0;
          }
          function kB(a2) {
            a2 = a2 | 0;
            return c[a2 + 8 >> 2] | 0;
          }
          function lB(a2) {
            a2 = a2 | 0;
            return c[a2 + 16 >> 2] | 0;
          }
          function mB(a2) {
            a2 = a2 | 0;
            return c[a2 + 20 >> 2] | 0;
          }
          function nB(a2) {
            a2 = a2 | 0;
            return c[a2 >> 2] | 0;
          }
          function oB(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
            x2 = l;
            l = l + 16 | 0;
            o2 = x2;
            do
              if (a2 >>> 0 < 245) {
                k2 = a2 >>> 0 < 11 ? 16 : a2 + 11 & -8;
                a2 = k2 >>> 3;
                n2 = c[2783] | 0;
                d2 = n2 >>> a2;
                if (d2 & 3 | 0) {
                  b2 = (d2 & 1 ^ 1) + a2 | 0;
                  a2 = 11172 + (b2 << 1 << 2) | 0;
                  d2 = a2 + 8 | 0;
                  e2 = c[d2 >> 2] | 0;
                  f2 = e2 + 8 | 0;
                  g2 = c[f2 >> 2] | 0;
                  if ((a2 | 0) == (g2 | 0))
                    c[2783] = n2 & ~(1 << b2);
                  else {
                    c[g2 + 12 >> 2] = a2;
                    c[d2 >> 2] = g2;
                  }
                  w2 = b2 << 3;
                  c[e2 + 4 >> 2] = w2 | 3;
                  w2 = e2 + w2 + 4 | 0;
                  c[w2 >> 2] = c[w2 >> 2] | 1;
                  w2 = f2;
                  l = x2;
                  return w2 | 0;
                }
                m2 = c[2785] | 0;
                if (k2 >>> 0 > m2 >>> 0) {
                  if (d2 | 0) {
                    b2 = 2 << a2;
                    b2 = d2 << a2 & (b2 | 0 - b2);
                    b2 = (b2 & 0 - b2) + -1 | 0;
                    h2 = b2 >>> 12 & 16;
                    b2 = b2 >>> h2;
                    d2 = b2 >>> 5 & 8;
                    b2 = b2 >>> d2;
                    f2 = b2 >>> 2 & 4;
                    b2 = b2 >>> f2;
                    a2 = b2 >>> 1 & 2;
                    b2 = b2 >>> a2;
                    e2 = b2 >>> 1 & 1;
                    e2 = (d2 | h2 | f2 | a2 | e2) + (b2 >>> e2) | 0;
                    b2 = 11172 + (e2 << 1 << 2) | 0;
                    a2 = b2 + 8 | 0;
                    f2 = c[a2 >> 2] | 0;
                    h2 = f2 + 8 | 0;
                    d2 = c[h2 >> 2] | 0;
                    if ((b2 | 0) == (d2 | 0)) {
                      a2 = n2 & ~(1 << e2);
                      c[2783] = a2;
                    } else {
                      c[d2 + 12 >> 2] = b2;
                      c[a2 >> 2] = d2;
                      a2 = n2;
                    }
                    g2 = (e2 << 3) - k2 | 0;
                    c[f2 + 4 >> 2] = k2 | 3;
                    e2 = f2 + k2 | 0;
                    c[e2 + 4 >> 2] = g2 | 1;
                    c[e2 + g2 >> 2] = g2;
                    if (m2 | 0) {
                      f2 = c[2788] | 0;
                      b2 = m2 >>> 3;
                      d2 = 11172 + (b2 << 1 << 2) | 0;
                      b2 = 1 << b2;
                      if (!(a2 & b2)) {
                        c[2783] = a2 | b2;
                        b2 = d2;
                        a2 = d2 + 8 | 0;
                      } else {
                        a2 = d2 + 8 | 0;
                        b2 = c[a2 >> 2] | 0;
                      }
                      c[a2 >> 2] = f2;
                      c[b2 + 12 >> 2] = f2;
                      c[f2 + 8 >> 2] = b2;
                      c[f2 + 12 >> 2] = d2;
                    }
                    c[2785] = g2;
                    c[2788] = e2;
                    w2 = h2;
                    l = x2;
                    return w2 | 0;
                  }
                  i3 = c[2784] | 0;
                  if (i3) {
                    d2 = (i3 & 0 - i3) + -1 | 0;
                    h2 = d2 >>> 12 & 16;
                    d2 = d2 >>> h2;
                    g2 = d2 >>> 5 & 8;
                    d2 = d2 >>> g2;
                    j2 = d2 >>> 2 & 4;
                    d2 = d2 >>> j2;
                    e2 = d2 >>> 1 & 2;
                    d2 = d2 >>> e2;
                    a2 = d2 >>> 1 & 1;
                    a2 = c[11436 + ((g2 | h2 | j2 | e2 | a2) + (d2 >>> a2) << 2) >> 2] | 0;
                    d2 = (c[a2 + 4 >> 2] & -8) - k2 | 0;
                    e2 = c[a2 + 16 + (((c[a2 + 16 >> 2] | 0) == 0 & 1) << 2) >> 2] | 0;
                    if (!e2) {
                      j2 = a2;
                      g2 = d2;
                    } else {
                      do {
                        h2 = (c[e2 + 4 >> 2] & -8) - k2 | 0;
                        j2 = h2 >>> 0 < d2 >>> 0;
                        d2 = j2 ? h2 : d2;
                        a2 = j2 ? e2 : a2;
                        e2 = c[e2 + 16 + (((c[e2 + 16 >> 2] | 0) == 0 & 1) << 2) >> 2] | 0;
                      } while ((e2 | 0) != 0);
                      j2 = a2;
                      g2 = d2;
                    }
                    h2 = j2 + k2 | 0;
                    if (j2 >>> 0 < h2 >>> 0) {
                      f2 = c[j2 + 24 >> 2] | 0;
                      b2 = c[j2 + 12 >> 2] | 0;
                      do
                        if ((b2 | 0) == (j2 | 0)) {
                          a2 = j2 + 20 | 0;
                          b2 = c[a2 >> 2] | 0;
                          if (!b2) {
                            a2 = j2 + 16 | 0;
                            b2 = c[a2 >> 2] | 0;
                            if (!b2) {
                              d2 = 0;
                              break;
                            }
                          }
                          while (1) {
                            d2 = b2 + 20 | 0;
                            e2 = c[d2 >> 2] | 0;
                            if (e2 | 0) {
                              b2 = e2;
                              a2 = d2;
                              continue;
                            }
                            d2 = b2 + 16 | 0;
                            e2 = c[d2 >> 2] | 0;
                            if (!e2)
                              break;
                            else {
                              b2 = e2;
                              a2 = d2;
                            }
                          }
                          c[a2 >> 2] = 0;
                          d2 = b2;
                        } else {
                          d2 = c[j2 + 8 >> 2] | 0;
                          c[d2 + 12 >> 2] = b2;
                          c[b2 + 8 >> 2] = d2;
                          d2 = b2;
                        }
                      while (0);
                      do
                        if (f2 | 0) {
                          b2 = c[j2 + 28 >> 2] | 0;
                          a2 = 11436 + (b2 << 2) | 0;
                          if ((j2 | 0) == (c[a2 >> 2] | 0)) {
                            c[a2 >> 2] = d2;
                            if (!d2) {
                              c[2784] = i3 & ~(1 << b2);
                              break;
                            }
                          } else {
                            c[f2 + 16 + (((c[f2 + 16 >> 2] | 0) != (j2 | 0) & 1) << 2) >> 2] = d2;
                            if (!d2)
                              break;
                          }
                          c[d2 + 24 >> 2] = f2;
                          b2 = c[j2 + 16 >> 2] | 0;
                          if (b2 | 0) {
                            c[d2 + 16 >> 2] = b2;
                            c[b2 + 24 >> 2] = d2;
                          }
                          b2 = c[j2 + 20 >> 2] | 0;
                          if (b2 | 0) {
                            c[d2 + 20 >> 2] = b2;
                            c[b2 + 24 >> 2] = d2;
                          }
                        }
                      while (0);
                      if (g2 >>> 0 < 16) {
                        w2 = g2 + k2 | 0;
                        c[j2 + 4 >> 2] = w2 | 3;
                        w2 = j2 + w2 + 4 | 0;
                        c[w2 >> 2] = c[w2 >> 2] | 1;
                      } else {
                        c[j2 + 4 >> 2] = k2 | 3;
                        c[h2 + 4 >> 2] = g2 | 1;
                        c[h2 + g2 >> 2] = g2;
                        if (m2 | 0) {
                          e2 = c[2788] | 0;
                          b2 = m2 >>> 3;
                          d2 = 11172 + (b2 << 1 << 2) | 0;
                          b2 = 1 << b2;
                          if (!(n2 & b2)) {
                            c[2783] = n2 | b2;
                            b2 = d2;
                            a2 = d2 + 8 | 0;
                          } else {
                            a2 = d2 + 8 | 0;
                            b2 = c[a2 >> 2] | 0;
                          }
                          c[a2 >> 2] = e2;
                          c[b2 + 12 >> 2] = e2;
                          c[e2 + 8 >> 2] = b2;
                          c[e2 + 12 >> 2] = d2;
                        }
                        c[2785] = g2;
                        c[2788] = h2;
                      }
                      w2 = j2 + 8 | 0;
                      l = x2;
                      return w2 | 0;
                    } else
                      n2 = k2;
                  } else
                    n2 = k2;
                } else
                  n2 = k2;
              } else if (a2 >>> 0 <= 4294967231) {
                a2 = a2 + 11 | 0;
                k2 = a2 & -8;
                j2 = c[2784] | 0;
                if (j2) {
                  e2 = 0 - k2 | 0;
                  a2 = a2 >>> 8;
                  if (a2) {
                    if (k2 >>> 0 > 16777215)
                      i3 = 31;
                    else {
                      n2 = (a2 + 1048320 | 0) >>> 16 & 8;
                      v2 = a2 << n2;
                      m2 = (v2 + 520192 | 0) >>> 16 & 4;
                      v2 = v2 << m2;
                      i3 = (v2 + 245760 | 0) >>> 16 & 2;
                      i3 = 14 - (m2 | n2 | i3) + (v2 << i3 >>> 15) | 0;
                      i3 = k2 >>> (i3 + 7 | 0) & 1 | i3 << 1;
                    }
                  } else
                    i3 = 0;
                  d2 = c[11436 + (i3 << 2) >> 2] | 0;
                  a:
                    do
                      if (!d2) {
                        d2 = 0;
                        a2 = 0;
                        v2 = 57;
                      } else {
                        a2 = 0;
                        h2 = k2 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
                        g2 = 0;
                        while (1) {
                          f2 = (c[d2 + 4 >> 2] & -8) - k2 | 0;
                          if (f2 >>> 0 < e2 >>> 0)
                            if (!f2) {
                              a2 = d2;
                              e2 = 0;
                              f2 = d2;
                              v2 = 61;
                              break a;
                            } else {
                              a2 = d2;
                              e2 = f2;
                            }
                          f2 = c[d2 + 20 >> 2] | 0;
                          d2 = c[d2 + 16 + (h2 >>> 31 << 2) >> 2] | 0;
                          g2 = (f2 | 0) == 0 | (f2 | 0) == (d2 | 0) ? g2 : f2;
                          f2 = (d2 | 0) == 0;
                          if (f2) {
                            d2 = g2;
                            v2 = 57;
                            break;
                          } else
                            h2 = h2 << ((f2 ^ 1) & 1);
                        }
                      }
                    while (0);
                  if ((v2 | 0) == 57) {
                    if ((d2 | 0) == 0 & (a2 | 0) == 0) {
                      a2 = 2 << i3;
                      a2 = j2 & (a2 | 0 - a2);
                      if (!a2) {
                        n2 = k2;
                        break;
                      }
                      n2 = (a2 & 0 - a2) + -1 | 0;
                      h2 = n2 >>> 12 & 16;
                      n2 = n2 >>> h2;
                      g2 = n2 >>> 5 & 8;
                      n2 = n2 >>> g2;
                      i3 = n2 >>> 2 & 4;
                      n2 = n2 >>> i3;
                      m2 = n2 >>> 1 & 2;
                      n2 = n2 >>> m2;
                      d2 = n2 >>> 1 & 1;
                      a2 = 0;
                      d2 = c[11436 + ((g2 | h2 | i3 | m2 | d2) + (n2 >>> d2) << 2) >> 2] | 0;
                    }
                    if (!d2) {
                      i3 = a2;
                      h2 = e2;
                    } else {
                      f2 = d2;
                      v2 = 61;
                    }
                  }
                  if ((v2 | 0) == 61)
                    while (1) {
                      v2 = 0;
                      d2 = (c[f2 + 4 >> 2] & -8) - k2 | 0;
                      n2 = d2 >>> 0 < e2 >>> 0;
                      d2 = n2 ? d2 : e2;
                      a2 = n2 ? f2 : a2;
                      f2 = c[f2 + 16 + (((c[f2 + 16 >> 2] | 0) == 0 & 1) << 2) >> 2] | 0;
                      if (!f2) {
                        i3 = a2;
                        h2 = d2;
                        break;
                      } else {
                        e2 = d2;
                        v2 = 61;
                      }
                    }
                  if ((i3 | 0) != 0 ? h2 >>> 0 < ((c[2785] | 0) - k2 | 0) >>> 0 : 0) {
                    g2 = i3 + k2 | 0;
                    if (i3 >>> 0 >= g2 >>> 0) {
                      w2 = 0;
                      l = x2;
                      return w2 | 0;
                    }
                    f2 = c[i3 + 24 >> 2] | 0;
                    b2 = c[i3 + 12 >> 2] | 0;
                    do
                      if ((b2 | 0) == (i3 | 0)) {
                        a2 = i3 + 20 | 0;
                        b2 = c[a2 >> 2] | 0;
                        if (!b2) {
                          a2 = i3 + 16 | 0;
                          b2 = c[a2 >> 2] | 0;
                          if (!b2) {
                            b2 = 0;
                            break;
                          }
                        }
                        while (1) {
                          d2 = b2 + 20 | 0;
                          e2 = c[d2 >> 2] | 0;
                          if (e2 | 0) {
                            b2 = e2;
                            a2 = d2;
                            continue;
                          }
                          d2 = b2 + 16 | 0;
                          e2 = c[d2 >> 2] | 0;
                          if (!e2)
                            break;
                          else {
                            b2 = e2;
                            a2 = d2;
                          }
                        }
                        c[a2 >> 2] = 0;
                      } else {
                        w2 = c[i3 + 8 >> 2] | 0;
                        c[w2 + 12 >> 2] = b2;
                        c[b2 + 8 >> 2] = w2;
                      }
                    while (0);
                    do
                      if (f2) {
                        a2 = c[i3 + 28 >> 2] | 0;
                        d2 = 11436 + (a2 << 2) | 0;
                        if ((i3 | 0) == (c[d2 >> 2] | 0)) {
                          c[d2 >> 2] = b2;
                          if (!b2) {
                            e2 = j2 & ~(1 << a2);
                            c[2784] = e2;
                            break;
                          }
                        } else {
                          c[f2 + 16 + (((c[f2 + 16 >> 2] | 0) != (i3 | 0) & 1) << 2) >> 2] = b2;
                          if (!b2) {
                            e2 = j2;
                            break;
                          }
                        }
                        c[b2 + 24 >> 2] = f2;
                        a2 = c[i3 + 16 >> 2] | 0;
                        if (a2 | 0) {
                          c[b2 + 16 >> 2] = a2;
                          c[a2 + 24 >> 2] = b2;
                        }
                        a2 = c[i3 + 20 >> 2] | 0;
                        if (a2) {
                          c[b2 + 20 >> 2] = a2;
                          c[a2 + 24 >> 2] = b2;
                          e2 = j2;
                        } else
                          e2 = j2;
                      } else
                        e2 = j2;
                    while (0);
                    do
                      if (h2 >>> 0 >= 16) {
                        c[i3 + 4 >> 2] = k2 | 3;
                        c[g2 + 4 >> 2] = h2 | 1;
                        c[g2 + h2 >> 2] = h2;
                        b2 = h2 >>> 3;
                        if (h2 >>> 0 < 256) {
                          d2 = 11172 + (b2 << 1 << 2) | 0;
                          a2 = c[2783] | 0;
                          b2 = 1 << b2;
                          if (!(a2 & b2)) {
                            c[2783] = a2 | b2;
                            b2 = d2;
                            a2 = d2 + 8 | 0;
                          } else {
                            a2 = d2 + 8 | 0;
                            b2 = c[a2 >> 2] | 0;
                          }
                          c[a2 >> 2] = g2;
                          c[b2 + 12 >> 2] = g2;
                          c[g2 + 8 >> 2] = b2;
                          c[g2 + 12 >> 2] = d2;
                          break;
                        }
                        b2 = h2 >>> 8;
                        if (b2) {
                          if (h2 >>> 0 > 16777215)
                            b2 = 31;
                          else {
                            v2 = (b2 + 1048320 | 0) >>> 16 & 8;
                            w2 = b2 << v2;
                            u2 = (w2 + 520192 | 0) >>> 16 & 4;
                            w2 = w2 << u2;
                            b2 = (w2 + 245760 | 0) >>> 16 & 2;
                            b2 = 14 - (u2 | v2 | b2) + (w2 << b2 >>> 15) | 0;
                            b2 = h2 >>> (b2 + 7 | 0) & 1 | b2 << 1;
                          }
                        } else
                          b2 = 0;
                        d2 = 11436 + (b2 << 2) | 0;
                        c[g2 + 28 >> 2] = b2;
                        a2 = g2 + 16 | 0;
                        c[a2 + 4 >> 2] = 0;
                        c[a2 >> 2] = 0;
                        a2 = 1 << b2;
                        if (!(e2 & a2)) {
                          c[2784] = e2 | a2;
                          c[d2 >> 2] = g2;
                          c[g2 + 24 >> 2] = d2;
                          c[g2 + 12 >> 2] = g2;
                          c[g2 + 8 >> 2] = g2;
                          break;
                        }
                        a2 = h2 << ((b2 | 0) == 31 ? 0 : 25 - (b2 >>> 1) | 0);
                        d2 = c[d2 >> 2] | 0;
                        while (1) {
                          if ((c[d2 + 4 >> 2] & -8 | 0) == (h2 | 0)) {
                            v2 = 97;
                            break;
                          }
                          e2 = d2 + 16 + (a2 >>> 31 << 2) | 0;
                          b2 = c[e2 >> 2] | 0;
                          if (!b2) {
                            v2 = 96;
                            break;
                          } else {
                            a2 = a2 << 1;
                            d2 = b2;
                          }
                        }
                        if ((v2 | 0) == 96) {
                          c[e2 >> 2] = g2;
                          c[g2 + 24 >> 2] = d2;
                          c[g2 + 12 >> 2] = g2;
                          c[g2 + 8 >> 2] = g2;
                          break;
                        } else if ((v2 | 0) == 97) {
                          v2 = d2 + 8 | 0;
                          w2 = c[v2 >> 2] | 0;
                          c[w2 + 12 >> 2] = g2;
                          c[v2 >> 2] = g2;
                          c[g2 + 8 >> 2] = w2;
                          c[g2 + 12 >> 2] = d2;
                          c[g2 + 24 >> 2] = 0;
                          break;
                        }
                      } else {
                        w2 = h2 + k2 | 0;
                        c[i3 + 4 >> 2] = w2 | 3;
                        w2 = i3 + w2 + 4 | 0;
                        c[w2 >> 2] = c[w2 >> 2] | 1;
                      }
                    while (0);
                    w2 = i3 + 8 | 0;
                    l = x2;
                    return w2 | 0;
                  } else
                    n2 = k2;
                } else
                  n2 = k2;
              } else
                n2 = -1;
            while (0);
            d2 = c[2785] | 0;
            if (d2 >>> 0 >= n2 >>> 0) {
              b2 = d2 - n2 | 0;
              a2 = c[2788] | 0;
              if (b2 >>> 0 > 15) {
                w2 = a2 + n2 | 0;
                c[2788] = w2;
                c[2785] = b2;
                c[w2 + 4 >> 2] = b2 | 1;
                c[w2 + b2 >> 2] = b2;
                c[a2 + 4 >> 2] = n2 | 3;
              } else {
                c[2785] = 0;
                c[2788] = 0;
                c[a2 + 4 >> 2] = d2 | 3;
                w2 = a2 + d2 + 4 | 0;
                c[w2 >> 2] = c[w2 >> 2] | 1;
              }
              w2 = a2 + 8 | 0;
              l = x2;
              return w2 | 0;
            }
            h2 = c[2786] | 0;
            if (h2 >>> 0 > n2 >>> 0) {
              u2 = h2 - n2 | 0;
              c[2786] = u2;
              w2 = c[2789] | 0;
              v2 = w2 + n2 | 0;
              c[2789] = v2;
              c[v2 + 4 >> 2] = u2 | 1;
              c[w2 + 4 >> 2] = n2 | 3;
              w2 = w2 + 8 | 0;
              l = x2;
              return w2 | 0;
            }
            if (!(c[2901] | 0)) {
              c[2903] = 4096;
              c[2902] = 4096;
              c[2904] = -1;
              c[2905] = -1;
              c[2906] = 0;
              c[2894] = 0;
              a2 = o2 & -16 ^ 1431655768;
              c[o2 >> 2] = a2;
              c[2901] = a2;
              a2 = 4096;
            } else
              a2 = c[2903] | 0;
            i3 = n2 + 48 | 0;
            j2 = n2 + 47 | 0;
            g2 = a2 + j2 | 0;
            f2 = 0 - a2 | 0;
            k2 = g2 & f2;
            if (k2 >>> 0 <= n2 >>> 0) {
              w2 = 0;
              l = x2;
              return w2 | 0;
            }
            a2 = c[2893] | 0;
            if (a2 | 0 ? (m2 = c[2891] | 0, o2 = m2 + k2 | 0, o2 >>> 0 <= m2 >>> 0 | o2 >>> 0 > a2 >>> 0) : 0) {
              w2 = 0;
              l = x2;
              return w2 | 0;
            }
            b:
              do
                if (!(c[2894] & 4)) {
                  d2 = c[2789] | 0;
                  c:
                    do
                      if (d2) {
                        e2 = 11580;
                        while (1) {
                          a2 = c[e2 >> 2] | 0;
                          if (a2 >>> 0 <= d2 >>> 0 ? (r2 = e2 + 4 | 0, (a2 + (c[r2 >> 2] | 0) | 0) >>> 0 > d2 >>> 0) : 0)
                            break;
                          a2 = c[e2 + 8 >> 2] | 0;
                          if (!a2) {
                            v2 = 118;
                            break c;
                          } else
                            e2 = a2;
                        }
                        b2 = g2 - h2 & f2;
                        if (b2 >>> 0 < 2147483647) {
                          a2 = FC(b2 | 0) | 0;
                          if ((a2 | 0) == ((c[e2 >> 2] | 0) + (c[r2 >> 2] | 0) | 0)) {
                            if ((a2 | 0) != (-1 | 0)) {
                              h2 = b2;
                              g2 = a2;
                              v2 = 135;
                              break b;
                            }
                          } else {
                            e2 = a2;
                            v2 = 126;
                          }
                        } else
                          b2 = 0;
                      } else
                        v2 = 118;
                    while (0);
                  do
                    if ((v2 | 0) == 118) {
                      d2 = FC(0) | 0;
                      if ((d2 | 0) != (-1 | 0) ? (b2 = d2, p2 = c[2902] | 0, q2 = p2 + -1 | 0, b2 = ((q2 & b2 | 0) == 0 ? 0 : (q2 + b2 & 0 - p2) - b2 | 0) + k2 | 0, p2 = c[2891] | 0, q2 = b2 + p2 | 0, b2 >>> 0 > n2 >>> 0 & b2 >>> 0 < 2147483647) : 0) {
                        r2 = c[2893] | 0;
                        if (r2 | 0 ? q2 >>> 0 <= p2 >>> 0 | q2 >>> 0 > r2 >>> 0 : 0) {
                          b2 = 0;
                          break;
                        }
                        a2 = FC(b2 | 0) | 0;
                        if ((a2 | 0) == (d2 | 0)) {
                          h2 = b2;
                          g2 = d2;
                          v2 = 135;
                          break b;
                        } else {
                          e2 = a2;
                          v2 = 126;
                        }
                      } else
                        b2 = 0;
                    }
                  while (0);
                  do
                    if ((v2 | 0) == 126) {
                      d2 = 0 - b2 | 0;
                      if (!(i3 >>> 0 > b2 >>> 0 & (b2 >>> 0 < 2147483647 & (e2 | 0) != (-1 | 0))))
                        if ((e2 | 0) == (-1 | 0)) {
                          b2 = 0;
                          break;
                        } else {
                          h2 = b2;
                          g2 = e2;
                          v2 = 135;
                          break b;
                        }
                      a2 = c[2903] | 0;
                      a2 = j2 - b2 + a2 & 0 - a2;
                      if (a2 >>> 0 >= 2147483647) {
                        h2 = b2;
                        g2 = e2;
                        v2 = 135;
                        break b;
                      }
                      if ((FC(a2 | 0) | 0) == (-1 | 0)) {
                        FC(d2 | 0) | 0;
                        b2 = 0;
                        break;
                      } else {
                        h2 = a2 + b2 | 0;
                        g2 = e2;
                        v2 = 135;
                        break b;
                      }
                    }
                  while (0);
                  c[2894] = c[2894] | 4;
                  v2 = 133;
                } else {
                  b2 = 0;
                  v2 = 133;
                }
              while (0);
            if (((v2 | 0) == 133 ? k2 >>> 0 < 2147483647 : 0) ? (u2 = FC(k2 | 0) | 0, r2 = FC(0) | 0, s2 = r2 - u2 | 0, t2 = s2 >>> 0 > (n2 + 40 | 0) >>> 0, !((u2 | 0) == (-1 | 0) | t2 ^ 1 | u2 >>> 0 < r2 >>> 0 & ((u2 | 0) != (-1 | 0) & (r2 | 0) != (-1 | 0)) ^ 1)) : 0) {
              h2 = t2 ? s2 : b2;
              g2 = u2;
              v2 = 135;
            }
            if ((v2 | 0) == 135) {
              b2 = (c[2891] | 0) + h2 | 0;
              c[2891] = b2;
              if (b2 >>> 0 > (c[2892] | 0) >>> 0)
                c[2892] = b2;
              j2 = c[2789] | 0;
              do
                if (j2) {
                  b2 = 11580;
                  while (1) {
                    a2 = c[b2 >> 2] | 0;
                    d2 = b2 + 4 | 0;
                    e2 = c[d2 >> 2] | 0;
                    if ((g2 | 0) == (a2 + e2 | 0)) {
                      v2 = 145;
                      break;
                    }
                    f2 = c[b2 + 8 >> 2] | 0;
                    if (!f2)
                      break;
                    else
                      b2 = f2;
                  }
                  if (((v2 | 0) == 145 ? (c[b2 + 12 >> 2] & 8 | 0) == 0 : 0) ? j2 >>> 0 < g2 >>> 0 & j2 >>> 0 >= a2 >>> 0 : 0) {
                    c[d2 >> 2] = e2 + h2;
                    w2 = j2 + 8 | 0;
                    w2 = (w2 & 7 | 0) == 0 ? 0 : 0 - w2 & 7;
                    v2 = j2 + w2 | 0;
                    w2 = (c[2786] | 0) + (h2 - w2) | 0;
                    c[2789] = v2;
                    c[2786] = w2;
                    c[v2 + 4 >> 2] = w2 | 1;
                    c[v2 + w2 + 4 >> 2] = 40;
                    c[2790] = c[2905];
                    break;
                  }
                  if (g2 >>> 0 < (c[2787] | 0) >>> 0)
                    c[2787] = g2;
                  d2 = g2 + h2 | 0;
                  b2 = 11580;
                  while (1) {
                    if ((c[b2 >> 2] | 0) == (d2 | 0)) {
                      v2 = 153;
                      break;
                    }
                    a2 = c[b2 + 8 >> 2] | 0;
                    if (!a2)
                      break;
                    else
                      b2 = a2;
                  }
                  if ((v2 | 0) == 153 ? (c[b2 + 12 >> 2] & 8 | 0) == 0 : 0) {
                    c[b2 >> 2] = g2;
                    m2 = b2 + 4 | 0;
                    c[m2 >> 2] = (c[m2 >> 2] | 0) + h2;
                    m2 = g2 + 8 | 0;
                    m2 = g2 + ((m2 & 7 | 0) == 0 ? 0 : 0 - m2 & 7) | 0;
                    b2 = d2 + 8 | 0;
                    b2 = d2 + ((b2 & 7 | 0) == 0 ? 0 : 0 - b2 & 7) | 0;
                    k2 = m2 + n2 | 0;
                    i3 = b2 - m2 - n2 | 0;
                    c[m2 + 4 >> 2] = n2 | 3;
                    do
                      if ((b2 | 0) != (j2 | 0)) {
                        if ((b2 | 0) == (c[2788] | 0)) {
                          w2 = (c[2785] | 0) + i3 | 0;
                          c[2785] = w2;
                          c[2788] = k2;
                          c[k2 + 4 >> 2] = w2 | 1;
                          c[k2 + w2 >> 2] = w2;
                          break;
                        }
                        a2 = c[b2 + 4 >> 2] | 0;
                        if ((a2 & 3 | 0) == 1) {
                          h2 = a2 & -8;
                          e2 = a2 >>> 3;
                          d:
                            do
                              if (a2 >>> 0 < 256) {
                                a2 = c[b2 + 8 >> 2] | 0;
                                d2 = c[b2 + 12 >> 2] | 0;
                                if ((d2 | 0) == (a2 | 0)) {
                                  c[2783] = c[2783] & ~(1 << e2);
                                  break;
                                } else {
                                  c[a2 + 12 >> 2] = d2;
                                  c[d2 + 8 >> 2] = a2;
                                  break;
                                }
                              } else {
                                g2 = c[b2 + 24 >> 2] | 0;
                                a2 = c[b2 + 12 >> 2] | 0;
                                do
                                  if ((a2 | 0) == (b2 | 0)) {
                                    e2 = b2 + 16 | 0;
                                    d2 = e2 + 4 | 0;
                                    a2 = c[d2 >> 2] | 0;
                                    if (!a2) {
                                      a2 = c[e2 >> 2] | 0;
                                      if (!a2) {
                                        a2 = 0;
                                        break;
                                      } else
                                        d2 = e2;
                                    }
                                    while (1) {
                                      e2 = a2 + 20 | 0;
                                      f2 = c[e2 >> 2] | 0;
                                      if (f2 | 0) {
                                        a2 = f2;
                                        d2 = e2;
                                        continue;
                                      }
                                      e2 = a2 + 16 | 0;
                                      f2 = c[e2 >> 2] | 0;
                                      if (!f2)
                                        break;
                                      else {
                                        a2 = f2;
                                        d2 = e2;
                                      }
                                    }
                                    c[d2 >> 2] = 0;
                                  } else {
                                    w2 = c[b2 + 8 >> 2] | 0;
                                    c[w2 + 12 >> 2] = a2;
                                    c[a2 + 8 >> 2] = w2;
                                  }
                                while (0);
                                if (!g2)
                                  break;
                                d2 = c[b2 + 28 >> 2] | 0;
                                e2 = 11436 + (d2 << 2) | 0;
                                do
                                  if ((b2 | 0) != (c[e2 >> 2] | 0)) {
                                    c[g2 + 16 + (((c[g2 + 16 >> 2] | 0) != (b2 | 0) & 1) << 2) >> 2] = a2;
                                    if (!a2)
                                      break d;
                                  } else {
                                    c[e2 >> 2] = a2;
                                    if (a2 | 0)
                                      break;
                                    c[2784] = c[2784] & ~(1 << d2);
                                    break d;
                                  }
                                while (0);
                                c[a2 + 24 >> 2] = g2;
                                d2 = b2 + 16 | 0;
                                e2 = c[d2 >> 2] | 0;
                                if (e2 | 0) {
                                  c[a2 + 16 >> 2] = e2;
                                  c[e2 + 24 >> 2] = a2;
                                }
                                d2 = c[d2 + 4 >> 2] | 0;
                                if (!d2)
                                  break;
                                c[a2 + 20 >> 2] = d2;
                                c[d2 + 24 >> 2] = a2;
                              }
                            while (0);
                          b2 = b2 + h2 | 0;
                          f2 = h2 + i3 | 0;
                        } else
                          f2 = i3;
                        b2 = b2 + 4 | 0;
                        c[b2 >> 2] = c[b2 >> 2] & -2;
                        c[k2 + 4 >> 2] = f2 | 1;
                        c[k2 + f2 >> 2] = f2;
                        b2 = f2 >>> 3;
                        if (f2 >>> 0 < 256) {
                          d2 = 11172 + (b2 << 1 << 2) | 0;
                          a2 = c[2783] | 0;
                          b2 = 1 << b2;
                          if (!(a2 & b2)) {
                            c[2783] = a2 | b2;
                            b2 = d2;
                            a2 = d2 + 8 | 0;
                          } else {
                            a2 = d2 + 8 | 0;
                            b2 = c[a2 >> 2] | 0;
                          }
                          c[a2 >> 2] = k2;
                          c[b2 + 12 >> 2] = k2;
                          c[k2 + 8 >> 2] = b2;
                          c[k2 + 12 >> 2] = d2;
                          break;
                        }
                        b2 = f2 >>> 8;
                        do
                          if (!b2)
                            b2 = 0;
                          else {
                            if (f2 >>> 0 > 16777215) {
                              b2 = 31;
                              break;
                            }
                            v2 = (b2 + 1048320 | 0) >>> 16 & 8;
                            w2 = b2 << v2;
                            u2 = (w2 + 520192 | 0) >>> 16 & 4;
                            w2 = w2 << u2;
                            b2 = (w2 + 245760 | 0) >>> 16 & 2;
                            b2 = 14 - (u2 | v2 | b2) + (w2 << b2 >>> 15) | 0;
                            b2 = f2 >>> (b2 + 7 | 0) & 1 | b2 << 1;
                          }
                        while (0);
                        e2 = 11436 + (b2 << 2) | 0;
                        c[k2 + 28 >> 2] = b2;
                        a2 = k2 + 16 | 0;
                        c[a2 + 4 >> 2] = 0;
                        c[a2 >> 2] = 0;
                        a2 = c[2784] | 0;
                        d2 = 1 << b2;
                        if (!(a2 & d2)) {
                          c[2784] = a2 | d2;
                          c[e2 >> 2] = k2;
                          c[k2 + 24 >> 2] = e2;
                          c[k2 + 12 >> 2] = k2;
                          c[k2 + 8 >> 2] = k2;
                          break;
                        }
                        a2 = f2 << ((b2 | 0) == 31 ? 0 : 25 - (b2 >>> 1) | 0);
                        d2 = c[e2 >> 2] | 0;
                        while (1) {
                          if ((c[d2 + 4 >> 2] & -8 | 0) == (f2 | 0)) {
                            v2 = 194;
                            break;
                          }
                          e2 = d2 + 16 + (a2 >>> 31 << 2) | 0;
                          b2 = c[e2 >> 2] | 0;
                          if (!b2) {
                            v2 = 193;
                            break;
                          } else {
                            a2 = a2 << 1;
                            d2 = b2;
                          }
                        }
                        if ((v2 | 0) == 193) {
                          c[e2 >> 2] = k2;
                          c[k2 + 24 >> 2] = d2;
                          c[k2 + 12 >> 2] = k2;
                          c[k2 + 8 >> 2] = k2;
                          break;
                        } else if ((v2 | 0) == 194) {
                          v2 = d2 + 8 | 0;
                          w2 = c[v2 >> 2] | 0;
                          c[w2 + 12 >> 2] = k2;
                          c[v2 >> 2] = k2;
                          c[k2 + 8 >> 2] = w2;
                          c[k2 + 12 >> 2] = d2;
                          c[k2 + 24 >> 2] = 0;
                          break;
                        }
                      } else {
                        w2 = (c[2786] | 0) + i3 | 0;
                        c[2786] = w2;
                        c[2789] = k2;
                        c[k2 + 4 >> 2] = w2 | 1;
                      }
                    while (0);
                    w2 = m2 + 8 | 0;
                    l = x2;
                    return w2 | 0;
                  }
                  b2 = 11580;
                  while (1) {
                    a2 = c[b2 >> 2] | 0;
                    if (a2 >>> 0 <= j2 >>> 0 ? (w2 = a2 + (c[b2 + 4 >> 2] | 0) | 0, w2 >>> 0 > j2 >>> 0) : 0)
                      break;
                    b2 = c[b2 + 8 >> 2] | 0;
                  }
                  f2 = w2 + -47 | 0;
                  a2 = f2 + 8 | 0;
                  a2 = f2 + ((a2 & 7 | 0) == 0 ? 0 : 0 - a2 & 7) | 0;
                  f2 = j2 + 16 | 0;
                  a2 = a2 >>> 0 < f2 >>> 0 ? j2 : a2;
                  b2 = a2 + 8 | 0;
                  d2 = g2 + 8 | 0;
                  d2 = (d2 & 7 | 0) == 0 ? 0 : 0 - d2 & 7;
                  v2 = g2 + d2 | 0;
                  d2 = h2 + -40 - d2 | 0;
                  c[2789] = v2;
                  c[2786] = d2;
                  c[v2 + 4 >> 2] = d2 | 1;
                  c[v2 + d2 + 4 >> 2] = 40;
                  c[2790] = c[2905];
                  d2 = a2 + 4 | 0;
                  c[d2 >> 2] = 27;
                  c[b2 >> 2] = c[2895];
                  c[b2 + 4 >> 2] = c[2896];
                  c[b2 + 8 >> 2] = c[2897];
                  c[b2 + 12 >> 2] = c[2898];
                  c[2895] = g2;
                  c[2896] = h2;
                  c[2898] = 0;
                  c[2897] = b2;
                  b2 = a2 + 24 | 0;
                  do {
                    v2 = b2;
                    b2 = b2 + 4 | 0;
                    c[b2 >> 2] = 7;
                  } while ((v2 + 8 | 0) >>> 0 < w2 >>> 0);
                  if ((a2 | 0) != (j2 | 0)) {
                    g2 = a2 - j2 | 0;
                    c[d2 >> 2] = c[d2 >> 2] & -2;
                    c[j2 + 4 >> 2] = g2 | 1;
                    c[a2 >> 2] = g2;
                    b2 = g2 >>> 3;
                    if (g2 >>> 0 < 256) {
                      d2 = 11172 + (b2 << 1 << 2) | 0;
                      a2 = c[2783] | 0;
                      b2 = 1 << b2;
                      if (!(a2 & b2)) {
                        c[2783] = a2 | b2;
                        b2 = d2;
                        a2 = d2 + 8 | 0;
                      } else {
                        a2 = d2 + 8 | 0;
                        b2 = c[a2 >> 2] | 0;
                      }
                      c[a2 >> 2] = j2;
                      c[b2 + 12 >> 2] = j2;
                      c[j2 + 8 >> 2] = b2;
                      c[j2 + 12 >> 2] = d2;
                      break;
                    }
                    b2 = g2 >>> 8;
                    if (b2) {
                      if (g2 >>> 0 > 16777215)
                        d2 = 31;
                      else {
                        v2 = (b2 + 1048320 | 0) >>> 16 & 8;
                        w2 = b2 << v2;
                        u2 = (w2 + 520192 | 0) >>> 16 & 4;
                        w2 = w2 << u2;
                        d2 = (w2 + 245760 | 0) >>> 16 & 2;
                        d2 = 14 - (u2 | v2 | d2) + (w2 << d2 >>> 15) | 0;
                        d2 = g2 >>> (d2 + 7 | 0) & 1 | d2 << 1;
                      }
                    } else
                      d2 = 0;
                    e2 = 11436 + (d2 << 2) | 0;
                    c[j2 + 28 >> 2] = d2;
                    c[j2 + 20 >> 2] = 0;
                    c[f2 >> 2] = 0;
                    b2 = c[2784] | 0;
                    a2 = 1 << d2;
                    if (!(b2 & a2)) {
                      c[2784] = b2 | a2;
                      c[e2 >> 2] = j2;
                      c[j2 + 24 >> 2] = e2;
                      c[j2 + 12 >> 2] = j2;
                      c[j2 + 8 >> 2] = j2;
                      break;
                    }
                    a2 = g2 << ((d2 | 0) == 31 ? 0 : 25 - (d2 >>> 1) | 0);
                    d2 = c[e2 >> 2] | 0;
                    while (1) {
                      if ((c[d2 + 4 >> 2] & -8 | 0) == (g2 | 0)) {
                        v2 = 216;
                        break;
                      }
                      e2 = d2 + 16 + (a2 >>> 31 << 2) | 0;
                      b2 = c[e2 >> 2] | 0;
                      if (!b2) {
                        v2 = 215;
                        break;
                      } else {
                        a2 = a2 << 1;
                        d2 = b2;
                      }
                    }
                    if ((v2 | 0) == 215) {
                      c[e2 >> 2] = j2;
                      c[j2 + 24 >> 2] = d2;
                      c[j2 + 12 >> 2] = j2;
                      c[j2 + 8 >> 2] = j2;
                      break;
                    } else if ((v2 | 0) == 216) {
                      v2 = d2 + 8 | 0;
                      w2 = c[v2 >> 2] | 0;
                      c[w2 + 12 >> 2] = j2;
                      c[v2 >> 2] = j2;
                      c[j2 + 8 >> 2] = w2;
                      c[j2 + 12 >> 2] = d2;
                      c[j2 + 24 >> 2] = 0;
                      break;
                    }
                  }
                } else {
                  w2 = c[2787] | 0;
                  if ((w2 | 0) == 0 | g2 >>> 0 < w2 >>> 0)
                    c[2787] = g2;
                  c[2895] = g2;
                  c[2896] = h2;
                  c[2898] = 0;
                  c[2792] = c[2901];
                  c[2791] = -1;
                  b2 = 0;
                  do {
                    w2 = 11172 + (b2 << 1 << 2) | 0;
                    c[w2 + 12 >> 2] = w2;
                    c[w2 + 8 >> 2] = w2;
                    b2 = b2 + 1 | 0;
                  } while ((b2 | 0) != 32);
                  w2 = g2 + 8 | 0;
                  w2 = (w2 & 7 | 0) == 0 ? 0 : 0 - w2 & 7;
                  v2 = g2 + w2 | 0;
                  w2 = h2 + -40 - w2 | 0;
                  c[2789] = v2;
                  c[2786] = w2;
                  c[v2 + 4 >> 2] = w2 | 1;
                  c[v2 + w2 + 4 >> 2] = 40;
                  c[2790] = c[2905];
                }
              while (0);
              b2 = c[2786] | 0;
              if (b2 >>> 0 > n2 >>> 0) {
                u2 = b2 - n2 | 0;
                c[2786] = u2;
                w2 = c[2789] | 0;
                v2 = w2 + n2 | 0;
                c[2789] = v2;
                c[v2 + 4 >> 2] = u2 | 1;
                c[w2 + 4 >> 2] = n2 | 3;
                w2 = w2 + 8 | 0;
                l = x2;
                return w2 | 0;
              }
            }
            c[(vB() | 0) >> 2] = 12;
            w2 = 0;
            l = x2;
            return w2 | 0;
          }
          function pB(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            if (!a2)
              return;
            d2 = a2 + -8 | 0;
            f2 = c[2787] | 0;
            a2 = c[a2 + -4 >> 2] | 0;
            b2 = a2 & -8;
            j2 = d2 + b2 | 0;
            do
              if (!(a2 & 1)) {
                e2 = c[d2 >> 2] | 0;
                if (!(a2 & 3))
                  return;
                h2 = d2 + (0 - e2) | 0;
                g2 = e2 + b2 | 0;
                if (h2 >>> 0 < f2 >>> 0)
                  return;
                if ((h2 | 0) == (c[2788] | 0)) {
                  a2 = j2 + 4 | 0;
                  b2 = c[a2 >> 2] | 0;
                  if ((b2 & 3 | 0) != 3) {
                    i3 = h2;
                    b2 = g2;
                    break;
                  }
                  c[2785] = g2;
                  c[a2 >> 2] = b2 & -2;
                  c[h2 + 4 >> 2] = g2 | 1;
                  c[h2 + g2 >> 2] = g2;
                  return;
                }
                d2 = e2 >>> 3;
                if (e2 >>> 0 < 256) {
                  a2 = c[h2 + 8 >> 2] | 0;
                  b2 = c[h2 + 12 >> 2] | 0;
                  if ((b2 | 0) == (a2 | 0)) {
                    c[2783] = c[2783] & ~(1 << d2);
                    i3 = h2;
                    b2 = g2;
                    break;
                  } else {
                    c[a2 + 12 >> 2] = b2;
                    c[b2 + 8 >> 2] = a2;
                    i3 = h2;
                    b2 = g2;
                    break;
                  }
                }
                f2 = c[h2 + 24 >> 2] | 0;
                a2 = c[h2 + 12 >> 2] | 0;
                do
                  if ((a2 | 0) == (h2 | 0)) {
                    d2 = h2 + 16 | 0;
                    b2 = d2 + 4 | 0;
                    a2 = c[b2 >> 2] | 0;
                    if (!a2) {
                      a2 = c[d2 >> 2] | 0;
                      if (!a2) {
                        a2 = 0;
                        break;
                      } else
                        b2 = d2;
                    }
                    while (1) {
                      d2 = a2 + 20 | 0;
                      e2 = c[d2 >> 2] | 0;
                      if (e2 | 0) {
                        a2 = e2;
                        b2 = d2;
                        continue;
                      }
                      d2 = a2 + 16 | 0;
                      e2 = c[d2 >> 2] | 0;
                      if (!e2)
                        break;
                      else {
                        a2 = e2;
                        b2 = d2;
                      }
                    }
                    c[b2 >> 2] = 0;
                  } else {
                    i3 = c[h2 + 8 >> 2] | 0;
                    c[i3 + 12 >> 2] = a2;
                    c[a2 + 8 >> 2] = i3;
                  }
                while (0);
                if (f2) {
                  b2 = c[h2 + 28 >> 2] | 0;
                  d2 = 11436 + (b2 << 2) | 0;
                  if ((h2 | 0) == (c[d2 >> 2] | 0)) {
                    c[d2 >> 2] = a2;
                    if (!a2) {
                      c[2784] = c[2784] & ~(1 << b2);
                      i3 = h2;
                      b2 = g2;
                      break;
                    }
                  } else {
                    c[f2 + 16 + (((c[f2 + 16 >> 2] | 0) != (h2 | 0) & 1) << 2) >> 2] = a2;
                    if (!a2) {
                      i3 = h2;
                      b2 = g2;
                      break;
                    }
                  }
                  c[a2 + 24 >> 2] = f2;
                  b2 = h2 + 16 | 0;
                  d2 = c[b2 >> 2] | 0;
                  if (d2 | 0) {
                    c[a2 + 16 >> 2] = d2;
                    c[d2 + 24 >> 2] = a2;
                  }
                  b2 = c[b2 + 4 >> 2] | 0;
                  if (b2) {
                    c[a2 + 20 >> 2] = b2;
                    c[b2 + 24 >> 2] = a2;
                    i3 = h2;
                    b2 = g2;
                  } else {
                    i3 = h2;
                    b2 = g2;
                  }
                } else {
                  i3 = h2;
                  b2 = g2;
                }
              } else {
                i3 = d2;
                h2 = d2;
              }
            while (0);
            if (h2 >>> 0 >= j2 >>> 0)
              return;
            a2 = j2 + 4 | 0;
            e2 = c[a2 >> 2] | 0;
            if (!(e2 & 1))
              return;
            if (!(e2 & 2)) {
              a2 = c[2788] | 0;
              if ((j2 | 0) == (c[2789] | 0)) {
                j2 = (c[2786] | 0) + b2 | 0;
                c[2786] = j2;
                c[2789] = i3;
                c[i3 + 4 >> 2] = j2 | 1;
                if ((i3 | 0) != (a2 | 0))
                  return;
                c[2788] = 0;
                c[2785] = 0;
                return;
              }
              if ((j2 | 0) == (a2 | 0)) {
                j2 = (c[2785] | 0) + b2 | 0;
                c[2785] = j2;
                c[2788] = h2;
                c[i3 + 4 >> 2] = j2 | 1;
                c[h2 + j2 >> 2] = j2;
                return;
              }
              f2 = (e2 & -8) + b2 | 0;
              d2 = e2 >>> 3;
              do
                if (e2 >>> 0 < 256) {
                  b2 = c[j2 + 8 >> 2] | 0;
                  a2 = c[j2 + 12 >> 2] | 0;
                  if ((a2 | 0) == (b2 | 0)) {
                    c[2783] = c[2783] & ~(1 << d2);
                    break;
                  } else {
                    c[b2 + 12 >> 2] = a2;
                    c[a2 + 8 >> 2] = b2;
                    break;
                  }
                } else {
                  g2 = c[j2 + 24 >> 2] | 0;
                  a2 = c[j2 + 12 >> 2] | 0;
                  do
                    if ((a2 | 0) == (j2 | 0)) {
                      d2 = j2 + 16 | 0;
                      b2 = d2 + 4 | 0;
                      a2 = c[b2 >> 2] | 0;
                      if (!a2) {
                        a2 = c[d2 >> 2] | 0;
                        if (!a2) {
                          d2 = 0;
                          break;
                        } else
                          b2 = d2;
                      }
                      while (1) {
                        d2 = a2 + 20 | 0;
                        e2 = c[d2 >> 2] | 0;
                        if (e2 | 0) {
                          a2 = e2;
                          b2 = d2;
                          continue;
                        }
                        d2 = a2 + 16 | 0;
                        e2 = c[d2 >> 2] | 0;
                        if (!e2)
                          break;
                        else {
                          a2 = e2;
                          b2 = d2;
                        }
                      }
                      c[b2 >> 2] = 0;
                      d2 = a2;
                    } else {
                      d2 = c[j2 + 8 >> 2] | 0;
                      c[d2 + 12 >> 2] = a2;
                      c[a2 + 8 >> 2] = d2;
                      d2 = a2;
                    }
                  while (0);
                  if (g2 | 0) {
                    a2 = c[j2 + 28 >> 2] | 0;
                    b2 = 11436 + (a2 << 2) | 0;
                    if ((j2 | 0) == (c[b2 >> 2] | 0)) {
                      c[b2 >> 2] = d2;
                      if (!d2) {
                        c[2784] = c[2784] & ~(1 << a2);
                        break;
                      }
                    } else {
                      c[g2 + 16 + (((c[g2 + 16 >> 2] | 0) != (j2 | 0) & 1) << 2) >> 2] = d2;
                      if (!d2)
                        break;
                    }
                    c[d2 + 24 >> 2] = g2;
                    a2 = j2 + 16 | 0;
                    b2 = c[a2 >> 2] | 0;
                    if (b2 | 0) {
                      c[d2 + 16 >> 2] = b2;
                      c[b2 + 24 >> 2] = d2;
                    }
                    a2 = c[a2 + 4 >> 2] | 0;
                    if (a2 | 0) {
                      c[d2 + 20 >> 2] = a2;
                      c[a2 + 24 >> 2] = d2;
                    }
                  }
                }
              while (0);
              c[i3 + 4 >> 2] = f2 | 1;
              c[h2 + f2 >> 2] = f2;
              if ((i3 | 0) == (c[2788] | 0)) {
                c[2785] = f2;
                return;
              }
            } else {
              c[a2 >> 2] = e2 & -2;
              c[i3 + 4 >> 2] = b2 | 1;
              c[h2 + b2 >> 2] = b2;
              f2 = b2;
            }
            a2 = f2 >>> 3;
            if (f2 >>> 0 < 256) {
              d2 = 11172 + (a2 << 1 << 2) | 0;
              b2 = c[2783] | 0;
              a2 = 1 << a2;
              if (!(b2 & a2)) {
                c[2783] = b2 | a2;
                a2 = d2;
                b2 = d2 + 8 | 0;
              } else {
                b2 = d2 + 8 | 0;
                a2 = c[b2 >> 2] | 0;
              }
              c[b2 >> 2] = i3;
              c[a2 + 12 >> 2] = i3;
              c[i3 + 8 >> 2] = a2;
              c[i3 + 12 >> 2] = d2;
              return;
            }
            a2 = f2 >>> 8;
            if (a2) {
              if (f2 >>> 0 > 16777215)
                a2 = 31;
              else {
                h2 = (a2 + 1048320 | 0) >>> 16 & 8;
                j2 = a2 << h2;
                g2 = (j2 + 520192 | 0) >>> 16 & 4;
                j2 = j2 << g2;
                a2 = (j2 + 245760 | 0) >>> 16 & 2;
                a2 = 14 - (g2 | h2 | a2) + (j2 << a2 >>> 15) | 0;
                a2 = f2 >>> (a2 + 7 | 0) & 1 | a2 << 1;
              }
            } else
              a2 = 0;
            e2 = 11436 + (a2 << 2) | 0;
            c[i3 + 28 >> 2] = a2;
            c[i3 + 20 >> 2] = 0;
            c[i3 + 16 >> 2] = 0;
            b2 = c[2784] | 0;
            d2 = 1 << a2;
            do
              if (b2 & d2) {
                b2 = f2 << ((a2 | 0) == 31 ? 0 : 25 - (a2 >>> 1) | 0);
                d2 = c[e2 >> 2] | 0;
                while (1) {
                  if ((c[d2 + 4 >> 2] & -8 | 0) == (f2 | 0)) {
                    a2 = 73;
                    break;
                  }
                  e2 = d2 + 16 + (b2 >>> 31 << 2) | 0;
                  a2 = c[e2 >> 2] | 0;
                  if (!a2) {
                    a2 = 72;
                    break;
                  } else {
                    b2 = b2 << 1;
                    d2 = a2;
                  }
                }
                if ((a2 | 0) == 72) {
                  c[e2 >> 2] = i3;
                  c[i3 + 24 >> 2] = d2;
                  c[i3 + 12 >> 2] = i3;
                  c[i3 + 8 >> 2] = i3;
                  break;
                } else if ((a2 | 0) == 73) {
                  h2 = d2 + 8 | 0;
                  j2 = c[h2 >> 2] | 0;
                  c[j2 + 12 >> 2] = i3;
                  c[h2 >> 2] = i3;
                  c[i3 + 8 >> 2] = j2;
                  c[i3 + 12 >> 2] = d2;
                  c[i3 + 24 >> 2] = 0;
                  break;
                }
              } else {
                c[2784] = b2 | d2;
                c[e2 >> 2] = i3;
                c[i3 + 24 >> 2] = e2;
                c[i3 + 12 >> 2] = i3;
                c[i3 + 8 >> 2] = i3;
              }
            while (0);
            j2 = (c[2791] | 0) + -1 | 0;
            c[2791] = j2;
            if (!j2)
              a2 = 11588;
            else
              return;
            while (1) {
              a2 = c[a2 >> 2] | 0;
              if (!a2)
                break;
              else
                a2 = a2 + 8 | 0;
            }
            c[2791] = -1;
            return;
          }
          function qB() {
            return 11628;
          }
          function rB(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            b2 = l;
            l = l + 16 | 0;
            d2 = b2;
            c[d2 >> 2] = yB(c[a2 + 60 >> 2] | 0) | 0;
            a2 = uB(db(6, d2 | 0) | 0) | 0;
            l = b2;
            return a2 | 0;
          }
          function sB(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
            n2 = l;
            l = l + 48 | 0;
            k2 = n2 + 16 | 0;
            g2 = n2;
            f2 = n2 + 32 | 0;
            i3 = a2 + 28 | 0;
            e2 = c[i3 >> 2] | 0;
            c[f2 >> 2] = e2;
            j2 = a2 + 20 | 0;
            e2 = (c[j2 >> 2] | 0) - e2 | 0;
            c[f2 + 4 >> 2] = e2;
            c[f2 + 8 >> 2] = b2;
            c[f2 + 12 >> 2] = d2;
            e2 = e2 + d2 | 0;
            h2 = a2 + 60 | 0;
            c[g2 >> 2] = c[h2 >> 2];
            c[g2 + 4 >> 2] = f2;
            c[g2 + 8 >> 2] = 2;
            g2 = uB(gb(146, g2 | 0) | 0) | 0;
            a:
              do
                if ((e2 | 0) != (g2 | 0)) {
                  b2 = 2;
                  while (1) {
                    if ((g2 | 0) < 0)
                      break;
                    e2 = e2 - g2 | 0;
                    p2 = c[f2 + 4 >> 2] | 0;
                    o2 = g2 >>> 0 > p2 >>> 0;
                    f2 = o2 ? f2 + 8 | 0 : f2;
                    b2 = (o2 << 31 >> 31) + b2 | 0;
                    p2 = g2 - (o2 ? p2 : 0) | 0;
                    c[f2 >> 2] = (c[f2 >> 2] | 0) + p2;
                    o2 = f2 + 4 | 0;
                    c[o2 >> 2] = (c[o2 >> 2] | 0) - p2;
                    c[k2 >> 2] = c[h2 >> 2];
                    c[k2 + 4 >> 2] = f2;
                    c[k2 + 8 >> 2] = b2;
                    g2 = uB(gb(146, k2 | 0) | 0) | 0;
                    if ((e2 | 0) == (g2 | 0)) {
                      m2 = 3;
                      break a;
                    }
                  }
                  c[a2 + 16 >> 2] = 0;
                  c[i3 >> 2] = 0;
                  c[j2 >> 2] = 0;
                  c[a2 >> 2] = c[a2 >> 2] | 32;
                  if ((b2 | 0) == 2)
                    d2 = 0;
                  else
                    d2 = d2 - (c[f2 + 4 >> 2] | 0) | 0;
                } else
                  m2 = 3;
              while (0);
            if ((m2 | 0) == 3) {
              p2 = c[a2 + 44 >> 2] | 0;
              c[a2 + 16 >> 2] = p2 + (c[a2 + 48 >> 2] | 0);
              c[i3 >> 2] = p2;
              c[j2 >> 2] = p2;
            }
            l = n2;
            return d2 | 0;
          }
          function tB(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            f2 = l;
            l = l + 32 | 0;
            g2 = f2;
            e2 = f2 + 20 | 0;
            c[g2 >> 2] = c[a2 + 60 >> 2];
            c[g2 + 4 >> 2] = 0;
            c[g2 + 8 >> 2] = b2;
            c[g2 + 12 >> 2] = e2;
            c[g2 + 16 >> 2] = d2;
            if ((uB(fb(140, g2 | 0) | 0) | 0) < 0) {
              c[e2 >> 2] = -1;
              a2 = -1;
            } else
              a2 = c[e2 >> 2] | 0;
            l = f2;
            return a2 | 0;
          }
          function uB(a2) {
            a2 = a2 | 0;
            if (a2 >>> 0 > 4294963200) {
              c[(vB() | 0) >> 2] = 0 - a2;
              a2 = -1;
            }
            return a2 | 0;
          }
          function vB() {
            return (wB() | 0) + 64 | 0;
          }
          function wB() {
            return xB() | 0;
          }
          function xB() {
            return 2084;
          }
          function yB(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function zB(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = l;
            l = l + 32 | 0;
            f2 = g2;
            c[b2 + 36 >> 2] = 1;
            if ((c[b2 >> 2] & 64 | 0) == 0 ? (c[f2 >> 2] = c[b2 + 60 >> 2], c[f2 + 4 >> 2] = 21523, c[f2 + 8 >> 2] = g2 + 16, Wa(54, f2 | 0) | 0) : 0)
              a[b2 + 75 >> 0] = -1;
            f2 = sB(b2, d2, e2) | 0;
            l = g2;
            return f2 | 0;
          }
          function AB(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0, e2 = 0;
            d2 = a[b2 >> 0] | 0;
            e2 = a[c2 >> 0] | 0;
            if (d2 << 24 >> 24 == 0 ? 1 : d2 << 24 >> 24 != e2 << 24 >> 24)
              b2 = e2;
            else {
              do {
                b2 = b2 + 1 | 0;
                c2 = c2 + 1 | 0;
                d2 = a[b2 >> 0] | 0;
                e2 = a[c2 >> 0] | 0;
              } while (!(d2 << 24 >> 24 == 0 ? 1 : d2 << 24 >> 24 != e2 << 24 >> 24));
              b2 = e2;
            }
            return (d2 & 255) - (b2 & 255) | 0;
          }
          function BB(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            a:
              do
                if (!d2)
                  b2 = 0;
                else {
                  while (1) {
                    e2 = a[b2 >> 0] | 0;
                    f2 = a[c2 >> 0] | 0;
                    if (e2 << 24 >> 24 != f2 << 24 >> 24)
                      break;
                    d2 = d2 + -1 | 0;
                    if (!d2) {
                      b2 = 0;
                      break a;
                    } else {
                      b2 = b2 + 1 | 0;
                      c2 = c2 + 1 | 0;
                    }
                  }
                  b2 = (e2 & 255) - (f2 & 255) | 0;
                }
              while (0);
            return b2 | 0;
          }
          function CB(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
            s2 = l;
            l = l + 224 | 0;
            n2 = s2 + 120 | 0;
            o2 = s2 + 80 | 0;
            q2 = s2;
            r2 = s2 + 136 | 0;
            f2 = o2;
            g2 = f2 + 40 | 0;
            do {
              c[f2 >> 2] = 0;
              f2 = f2 + 4 | 0;
            } while ((f2 | 0) < (g2 | 0));
            c[n2 >> 2] = c[e2 >> 2];
            if ((DB(0, d2, n2, q2, o2) | 0) < 0)
              e2 = -1;
            else {
              if ((c[b2 + 76 >> 2] | 0) > -1)
                p2 = EB(b2) | 0;
              else
                p2 = 0;
              e2 = c[b2 >> 2] | 0;
              m2 = e2 & 32;
              if ((a[b2 + 74 >> 0] | 0) < 1)
                c[b2 >> 2] = e2 & -33;
              f2 = b2 + 48 | 0;
              if (!(c[f2 >> 2] | 0)) {
                g2 = b2 + 44 | 0;
                h2 = c[g2 >> 2] | 0;
                c[g2 >> 2] = r2;
                i3 = b2 + 28 | 0;
                c[i3 >> 2] = r2;
                j2 = b2 + 20 | 0;
                c[j2 >> 2] = r2;
                c[f2 >> 2] = 80;
                k2 = b2 + 16 | 0;
                c[k2 >> 2] = r2 + 80;
                e2 = DB(b2, d2, n2, q2, o2) | 0;
                if (h2) {
                  sb[c[b2 + 36 >> 2] & 7](b2, 0, 0) | 0;
                  e2 = (c[j2 >> 2] | 0) == 0 ? -1 : e2;
                  c[g2 >> 2] = h2;
                  c[f2 >> 2] = 0;
                  c[k2 >> 2] = 0;
                  c[i3 >> 2] = 0;
                  c[j2 >> 2] = 0;
                }
              } else
                e2 = DB(b2, d2, n2, q2, o2) | 0;
              f2 = c[b2 >> 2] | 0;
              c[b2 >> 2] = f2 | m2;
              if (p2 | 0)
                FB(b2);
              e2 = (f2 & 32 | 0) == 0 ? e2 : -1;
            }
            l = s2;
            return e2 | 0;
          }
          function DB(d2, e2, f2, g2, i3) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            i3 = i3 | 0;
            var j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0;
            H2 = l;
            l = l + 64 | 0;
            D2 = H2 + 16 | 0;
            E2 = H2;
            B2 = H2 + 24 | 0;
            F2 = H2 + 8 | 0;
            G2 = H2 + 20 | 0;
            c[D2 >> 2] = e2;
            x2 = (d2 | 0) != 0;
            y2 = B2 + 40 | 0;
            z2 = y2;
            B2 = B2 + 39 | 0;
            C2 = F2 + 4 | 0;
            k2 = 0;
            j2 = 0;
            p2 = 0;
            a:
              while (1) {
                do
                  if ((j2 | 0) > -1)
                    if ((k2 | 0) > (2147483647 - j2 | 0)) {
                      c[(vB() | 0) >> 2] = 75;
                      j2 = -1;
                      break;
                    } else {
                      j2 = k2 + j2 | 0;
                      break;
                    }
                while (0);
                k2 = a[e2 >> 0] | 0;
                if (!(k2 << 24 >> 24)) {
                  w2 = 87;
                  break;
                } else
                  m2 = e2;
                b:
                  while (1) {
                    switch (k2 << 24 >> 24) {
                      case 37: {
                        k2 = m2;
                        w2 = 9;
                        break b;
                      }
                      case 0: {
                        k2 = m2;
                        break b;
                      }
                      default: {
                      }
                    }
                    v2 = m2 + 1 | 0;
                    c[D2 >> 2] = v2;
                    k2 = a[v2 >> 0] | 0;
                    m2 = v2;
                  }
                c:
                  do
                    if ((w2 | 0) == 9)
                      while (1) {
                        w2 = 0;
                        if ((a[m2 + 1 >> 0] | 0) != 37)
                          break c;
                        k2 = k2 + 1 | 0;
                        m2 = m2 + 2 | 0;
                        c[D2 >> 2] = m2;
                        if ((a[m2 >> 0] | 0) == 37)
                          w2 = 9;
                        else
                          break;
                      }
                  while (0);
                k2 = k2 - e2 | 0;
                if (x2)
                  GB(d2, e2, k2);
                if (k2 | 0) {
                  e2 = m2;
                  continue;
                }
                n2 = m2 + 1 | 0;
                k2 = (a[n2 >> 0] | 0) + -48 | 0;
                if (k2 >>> 0 < 10) {
                  v2 = (a[m2 + 2 >> 0] | 0) == 36;
                  u2 = v2 ? k2 : -1;
                  p2 = v2 ? 1 : p2;
                  n2 = v2 ? m2 + 3 | 0 : n2;
                } else
                  u2 = -1;
                c[D2 >> 2] = n2;
                k2 = a[n2 >> 0] | 0;
                m2 = (k2 << 24 >> 24) + -32 | 0;
                d:
                  do
                    if (m2 >>> 0 < 32) {
                      o2 = 0;
                      q2 = k2;
                      while (1) {
                        k2 = 1 << m2;
                        if (!(k2 & 75913)) {
                          k2 = q2;
                          break d;
                        }
                        o2 = k2 | o2;
                        n2 = n2 + 1 | 0;
                        c[D2 >> 2] = n2;
                        k2 = a[n2 >> 0] | 0;
                        m2 = (k2 << 24 >> 24) + -32 | 0;
                        if (m2 >>> 0 >= 32)
                          break;
                        else
                          q2 = k2;
                      }
                    } else
                      o2 = 0;
                  while (0);
                if (k2 << 24 >> 24 == 42) {
                  m2 = n2 + 1 | 0;
                  k2 = (a[m2 >> 0] | 0) + -48 | 0;
                  if (k2 >>> 0 < 10 ? (a[n2 + 2 >> 0] | 0) == 36 : 0) {
                    c[i3 + (k2 << 2) >> 2] = 10;
                    k2 = c[g2 + ((a[m2 >> 0] | 0) + -48 << 3) >> 2] | 0;
                    p2 = 1;
                    n2 = n2 + 3 | 0;
                  } else {
                    if (p2 | 0) {
                      j2 = -1;
                      break;
                    }
                    if (x2) {
                      p2 = (c[f2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      k2 = c[p2 >> 2] | 0;
                      c[f2 >> 2] = p2 + 4;
                      p2 = 0;
                      n2 = m2;
                    } else {
                      k2 = 0;
                      p2 = 0;
                      n2 = m2;
                    }
                  }
                  c[D2 >> 2] = n2;
                  v2 = (k2 | 0) < 0;
                  k2 = v2 ? 0 - k2 | 0 : k2;
                  o2 = v2 ? o2 | 8192 : o2;
                } else {
                  k2 = HB(D2) | 0;
                  if ((k2 | 0) < 0) {
                    j2 = -1;
                    break;
                  }
                  n2 = c[D2 >> 2] | 0;
                }
                do
                  if ((a[n2 >> 0] | 0) == 46) {
                    if ((a[n2 + 1 >> 0] | 0) != 42) {
                      c[D2 >> 2] = n2 + 1;
                      m2 = HB(D2) | 0;
                      n2 = c[D2 >> 2] | 0;
                      break;
                    }
                    q2 = n2 + 2 | 0;
                    m2 = (a[q2 >> 0] | 0) + -48 | 0;
                    if (m2 >>> 0 < 10 ? (a[n2 + 3 >> 0] | 0) == 36 : 0) {
                      c[i3 + (m2 << 2) >> 2] = 10;
                      m2 = c[g2 + ((a[q2 >> 0] | 0) + -48 << 3) >> 2] | 0;
                      n2 = n2 + 4 | 0;
                      c[D2 >> 2] = n2;
                      break;
                    }
                    if (p2 | 0) {
                      j2 = -1;
                      break a;
                    }
                    if (x2) {
                      v2 = (c[f2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      m2 = c[v2 >> 2] | 0;
                      c[f2 >> 2] = v2 + 4;
                    } else
                      m2 = 0;
                    c[D2 >> 2] = q2;
                    n2 = q2;
                  } else
                    m2 = -1;
                while (0);
                t2 = 0;
                while (1) {
                  if (((a[n2 >> 0] | 0) + -65 | 0) >>> 0 > 57) {
                    j2 = -1;
                    break a;
                  }
                  v2 = n2 + 1 | 0;
                  c[D2 >> 2] = v2;
                  q2 = a[(a[n2 >> 0] | 0) + -65 + (5178 + (t2 * 58 | 0)) >> 0] | 0;
                  r2 = q2 & 255;
                  if ((r2 + -1 | 0) >>> 0 < 8) {
                    t2 = r2;
                    n2 = v2;
                  } else
                    break;
                }
                if (!(q2 << 24 >> 24)) {
                  j2 = -1;
                  break;
                }
                s2 = (u2 | 0) > -1;
                do
                  if (q2 << 24 >> 24 == 19) {
                    if (s2) {
                      j2 = -1;
                      break a;
                    } else
                      w2 = 49;
                  } else {
                    if (s2) {
                      c[i3 + (u2 << 2) >> 2] = r2;
                      s2 = g2 + (u2 << 3) | 0;
                      u2 = c[s2 + 4 >> 2] | 0;
                      w2 = E2;
                      c[w2 >> 2] = c[s2 >> 2];
                      c[w2 + 4 >> 2] = u2;
                      w2 = 49;
                      break;
                    }
                    if (!x2) {
                      j2 = 0;
                      break a;
                    }
                    IB(E2, r2, f2);
                  }
                while (0);
                if ((w2 | 0) == 49 ? (w2 = 0, !x2) : 0) {
                  k2 = 0;
                  e2 = v2;
                  continue;
                }
                n2 = a[n2 >> 0] | 0;
                n2 = (t2 | 0) != 0 & (n2 & 15 | 0) == 3 ? n2 & -33 : n2;
                s2 = o2 & -65537;
                u2 = (o2 & 8192 | 0) == 0 ? o2 : s2;
                e:
                  do
                    switch (n2 | 0) {
                      case 110:
                        switch ((t2 & 255) << 24 >> 24) {
                          case 0: {
                            c[c[E2 >> 2] >> 2] = j2;
                            k2 = 0;
                            e2 = v2;
                            continue a;
                          }
                          case 1: {
                            c[c[E2 >> 2] >> 2] = j2;
                            k2 = 0;
                            e2 = v2;
                            continue a;
                          }
                          case 2: {
                            k2 = c[E2 >> 2] | 0;
                            c[k2 >> 2] = j2;
                            c[k2 + 4 >> 2] = ((j2 | 0) < 0) << 31 >> 31;
                            k2 = 0;
                            e2 = v2;
                            continue a;
                          }
                          case 3: {
                            b[c[E2 >> 2] >> 1] = j2;
                            k2 = 0;
                            e2 = v2;
                            continue a;
                          }
                          case 4: {
                            a[c[E2 >> 2] >> 0] = j2;
                            k2 = 0;
                            e2 = v2;
                            continue a;
                          }
                          case 6: {
                            c[c[E2 >> 2] >> 2] = j2;
                            k2 = 0;
                            e2 = v2;
                            continue a;
                          }
                          case 7: {
                            k2 = c[E2 >> 2] | 0;
                            c[k2 >> 2] = j2;
                            c[k2 + 4 >> 2] = ((j2 | 0) < 0) << 31 >> 31;
                            k2 = 0;
                            e2 = v2;
                            continue a;
                          }
                          default: {
                            k2 = 0;
                            e2 = v2;
                            continue a;
                          }
                        }
                      case 112: {
                        n2 = 120;
                        m2 = m2 >>> 0 > 8 ? m2 : 8;
                        e2 = u2 | 8;
                        w2 = 61;
                        break;
                      }
                      case 88:
                      case 120: {
                        e2 = u2;
                        w2 = 61;
                        break;
                      }
                      case 111: {
                        n2 = E2;
                        e2 = c[n2 >> 2] | 0;
                        n2 = c[n2 + 4 >> 2] | 0;
                        r2 = KB(e2, n2, y2) | 0;
                        s2 = z2 - r2 | 0;
                        o2 = 0;
                        q2 = 5642;
                        m2 = (u2 & 8 | 0) == 0 | (m2 | 0) > (s2 | 0) ? m2 : s2 + 1 | 0;
                        s2 = u2;
                        w2 = 67;
                        break;
                      }
                      case 105:
                      case 100: {
                        n2 = E2;
                        e2 = c[n2 >> 2] | 0;
                        n2 = c[n2 + 4 >> 2] | 0;
                        if ((n2 | 0) < 0) {
                          e2 = wC(0, 0, e2 | 0, n2 | 0) | 0;
                          n2 = A;
                          o2 = E2;
                          c[o2 >> 2] = e2;
                          c[o2 + 4 >> 2] = n2;
                          o2 = 1;
                          q2 = 5642;
                          w2 = 66;
                          break e;
                        } else {
                          o2 = (u2 & 2049 | 0) != 0 & 1;
                          q2 = (u2 & 2048 | 0) == 0 ? (u2 & 1 | 0) == 0 ? 5642 : 5644 : 5643;
                          w2 = 66;
                          break e;
                        }
                      }
                      case 117: {
                        n2 = E2;
                        o2 = 0;
                        q2 = 5642;
                        e2 = c[n2 >> 2] | 0;
                        n2 = c[n2 + 4 >> 2] | 0;
                        w2 = 66;
                        break;
                      }
                      case 99: {
                        a[B2 >> 0] = c[E2 >> 2];
                        e2 = B2;
                        o2 = 0;
                        q2 = 5642;
                        r2 = y2;
                        n2 = 1;
                        m2 = s2;
                        break;
                      }
                      case 109: {
                        n2 = MB(c[(vB() | 0) >> 2] | 0) | 0;
                        w2 = 71;
                        break;
                      }
                      case 115: {
                        n2 = c[E2 >> 2] | 0;
                        n2 = n2 | 0 ? n2 : 5652;
                        w2 = 71;
                        break;
                      }
                      case 67: {
                        c[F2 >> 2] = c[E2 >> 2];
                        c[C2 >> 2] = 0;
                        c[E2 >> 2] = F2;
                        r2 = -1;
                        n2 = F2;
                        w2 = 75;
                        break;
                      }
                      case 83: {
                        e2 = c[E2 >> 2] | 0;
                        if (!m2) {
                          OB(d2, 32, k2, 0, u2);
                          e2 = 0;
                          w2 = 84;
                        } else {
                          r2 = m2;
                          n2 = e2;
                          w2 = 75;
                        }
                        break;
                      }
                      case 65:
                      case 71:
                      case 70:
                      case 69:
                      case 97:
                      case 103:
                      case 102:
                      case 101: {
                        k2 = QB(d2, +h[E2 >> 3], k2, m2, u2, n2) | 0;
                        e2 = v2;
                        continue a;
                      }
                      default: {
                        o2 = 0;
                        q2 = 5642;
                        r2 = y2;
                        n2 = m2;
                        m2 = u2;
                      }
                    }
                  while (0);
                f:
                  do
                    if ((w2 | 0) == 61) {
                      u2 = E2;
                      t2 = c[u2 >> 2] | 0;
                      u2 = c[u2 + 4 >> 2] | 0;
                      r2 = JB(t2, u2, y2, n2 & 32) | 0;
                      q2 = (e2 & 8 | 0) == 0 | (t2 | 0) == 0 & (u2 | 0) == 0;
                      o2 = q2 ? 0 : 2;
                      q2 = q2 ? 5642 : 5642 + (n2 >> 4) | 0;
                      s2 = e2;
                      e2 = t2;
                      n2 = u2;
                      w2 = 67;
                    } else if ((w2 | 0) == 66) {
                      r2 = LB(e2, n2, y2) | 0;
                      s2 = u2;
                      w2 = 67;
                    } else if ((w2 | 0) == 71) {
                      w2 = 0;
                      u2 = NB(n2, 0, m2) | 0;
                      t2 = (u2 | 0) == 0;
                      e2 = n2;
                      o2 = 0;
                      q2 = 5642;
                      r2 = t2 ? n2 + m2 | 0 : u2;
                      n2 = t2 ? m2 : u2 - n2 | 0;
                      m2 = s2;
                    } else if ((w2 | 0) == 75) {
                      w2 = 0;
                      q2 = n2;
                      e2 = 0;
                      m2 = 0;
                      while (1) {
                        o2 = c[q2 >> 2] | 0;
                        if (!o2)
                          break;
                        m2 = PB(G2, o2) | 0;
                        if ((m2 | 0) < 0 | m2 >>> 0 > (r2 - e2 | 0) >>> 0)
                          break;
                        e2 = m2 + e2 | 0;
                        if (r2 >>> 0 > e2 >>> 0)
                          q2 = q2 + 4 | 0;
                        else
                          break;
                      }
                      if ((m2 | 0) < 0) {
                        j2 = -1;
                        break a;
                      }
                      OB(d2, 32, k2, e2, u2);
                      if (!e2) {
                        e2 = 0;
                        w2 = 84;
                      } else {
                        o2 = 0;
                        while (1) {
                          m2 = c[n2 >> 2] | 0;
                          if (!m2) {
                            w2 = 84;
                            break f;
                          }
                          m2 = PB(G2, m2) | 0;
                          o2 = m2 + o2 | 0;
                          if ((o2 | 0) > (e2 | 0)) {
                            w2 = 84;
                            break f;
                          }
                          GB(d2, G2, m2);
                          if (o2 >>> 0 >= e2 >>> 0) {
                            w2 = 84;
                            break;
                          } else
                            n2 = n2 + 4 | 0;
                        }
                      }
                    }
                  while (0);
                if ((w2 | 0) == 67) {
                  w2 = 0;
                  n2 = (e2 | 0) != 0 | (n2 | 0) != 0;
                  u2 = (m2 | 0) != 0 | n2;
                  n2 = ((n2 ^ 1) & 1) + (z2 - r2) | 0;
                  e2 = u2 ? r2 : y2;
                  r2 = y2;
                  n2 = u2 ? (m2 | 0) > (n2 | 0) ? m2 : n2 : m2;
                  m2 = (m2 | 0) > -1 ? s2 & -65537 : s2;
                } else if ((w2 | 0) == 84) {
                  w2 = 0;
                  OB(d2, 32, k2, e2, u2 ^ 8192);
                  k2 = (k2 | 0) > (e2 | 0) ? k2 : e2;
                  e2 = v2;
                  continue;
                }
                t2 = r2 - e2 | 0;
                s2 = (n2 | 0) < (t2 | 0) ? t2 : n2;
                u2 = s2 + o2 | 0;
                k2 = (k2 | 0) < (u2 | 0) ? u2 : k2;
                OB(d2, 32, k2, u2, m2);
                GB(d2, q2, o2);
                OB(d2, 48, k2, u2, m2 ^ 65536);
                OB(d2, 48, s2, t2, 0);
                GB(d2, e2, t2);
                OB(d2, 32, k2, u2, m2 ^ 8192);
                e2 = v2;
              }
            g:
              do
                if ((w2 | 0) == 87) {
                  if (!d2)
                    if (!p2)
                      j2 = 0;
                    else {
                      j2 = 1;
                      while (1) {
                        e2 = c[i3 + (j2 << 2) >> 2] | 0;
                        if (!e2)
                          break;
                        IB(g2 + (j2 << 3) | 0, e2, f2);
                        j2 = j2 + 1 | 0;
                        if ((j2 | 0) >= 10) {
                          j2 = 1;
                          break g;
                        }
                      }
                      while (1) {
                        if (c[i3 + (j2 << 2) >> 2] | 0) {
                          j2 = -1;
                          break g;
                        }
                        j2 = j2 + 1 | 0;
                        if ((j2 | 0) >= 10) {
                          j2 = 1;
                          break;
                        }
                      }
                    }
                }
              while (0);
            l = H2;
            return j2 | 0;
          }
          function EB(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function FB(a2) {
            a2 = a2 | 0;
            return;
          }
          function GB(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            if (!(c[a2 >> 2] & 32))
              aC(b2, d2, a2) | 0;
            return;
          }
          function HB(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            e2 = c[b2 >> 2] | 0;
            f2 = (a[e2 >> 0] | 0) + -48 | 0;
            if (f2 >>> 0 < 10) {
              d2 = 0;
              do {
                d2 = f2 + (d2 * 10 | 0) | 0;
                e2 = e2 + 1 | 0;
                c[b2 >> 2] = e2;
                f2 = (a[e2 >> 0] | 0) + -48 | 0;
              } while (f2 >>> 0 < 10);
            } else
              d2 = 0;
            return d2 | 0;
          }
          function IB(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            a:
              do
                if (b2 >>> 0 <= 20)
                  do
                    switch (b2 | 0) {
                      case 9: {
                        e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        b2 = c[e2 >> 2] | 0;
                        c[d2 >> 2] = e2 + 4;
                        c[a2 >> 2] = b2;
                        break a;
                      }
                      case 10: {
                        e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        b2 = c[e2 >> 2] | 0;
                        c[d2 >> 2] = e2 + 4;
                        e2 = a2;
                        c[e2 >> 2] = b2;
                        c[e2 + 4 >> 2] = ((b2 | 0) < 0) << 31 >> 31;
                        break a;
                      }
                      case 11: {
                        e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        b2 = c[e2 >> 2] | 0;
                        c[d2 >> 2] = e2 + 4;
                        e2 = a2;
                        c[e2 >> 2] = b2;
                        c[e2 + 4 >> 2] = 0;
                        break a;
                      }
                      case 12: {
                        e2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                        b2 = e2;
                        f2 = c[b2 >> 2] | 0;
                        b2 = c[b2 + 4 >> 2] | 0;
                        c[d2 >> 2] = e2 + 8;
                        e2 = a2;
                        c[e2 >> 2] = f2;
                        c[e2 + 4 >> 2] = b2;
                        break a;
                      }
                      case 13: {
                        f2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        e2 = c[f2 >> 2] | 0;
                        c[d2 >> 2] = f2 + 4;
                        e2 = (e2 & 65535) << 16 >> 16;
                        f2 = a2;
                        c[f2 >> 2] = e2;
                        c[f2 + 4 >> 2] = ((e2 | 0) < 0) << 31 >> 31;
                        break a;
                      }
                      case 14: {
                        f2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        e2 = c[f2 >> 2] | 0;
                        c[d2 >> 2] = f2 + 4;
                        f2 = a2;
                        c[f2 >> 2] = e2 & 65535;
                        c[f2 + 4 >> 2] = 0;
                        break a;
                      }
                      case 15: {
                        f2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        e2 = c[f2 >> 2] | 0;
                        c[d2 >> 2] = f2 + 4;
                        e2 = (e2 & 255) << 24 >> 24;
                        f2 = a2;
                        c[f2 >> 2] = e2;
                        c[f2 + 4 >> 2] = ((e2 | 0) < 0) << 31 >> 31;
                        break a;
                      }
                      case 16: {
                        f2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        e2 = c[f2 >> 2] | 0;
                        c[d2 >> 2] = f2 + 4;
                        f2 = a2;
                        c[f2 >> 2] = e2 & 255;
                        c[f2 + 4 >> 2] = 0;
                        break a;
                      }
                      case 17: {
                        f2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                        g2 = +h[f2 >> 3];
                        c[d2 >> 2] = f2 + 8;
                        h[a2 >> 3] = g2;
                        break a;
                      }
                      case 18: {
                        f2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                        g2 = +h[f2 >> 3];
                        c[d2 >> 2] = f2 + 8;
                        h[a2 >> 3] = g2;
                        break a;
                      }
                      default:
                        break a;
                    }
                  while (0);
              while (0);
            return;
          }
          function JB(b2, c2, e2, f2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            if (!((b2 | 0) == 0 & (c2 | 0) == 0))
              do {
                e2 = e2 + -1 | 0;
                a[e2 >> 0] = d[5694 + (b2 & 15) >> 0] | 0 | f2;
                b2 = AC(b2 | 0, c2 | 0, 4) | 0;
                c2 = A;
              } while (!((b2 | 0) == 0 & (c2 | 0) == 0));
            return e2 | 0;
          }
          function KB(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            if (!((b2 | 0) == 0 & (c2 | 0) == 0))
              do {
                d2 = d2 + -1 | 0;
                a[d2 >> 0] = b2 & 7 | 48;
                b2 = AC(b2 | 0, c2 | 0, 3) | 0;
                c2 = A;
              } while (!((b2 | 0) == 0 & (c2 | 0) == 0));
            return d2 | 0;
          }
          function LB(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            if (c2 >>> 0 > 0 | (c2 | 0) == 0 & b2 >>> 0 > 4294967295) {
              while (1) {
                e2 = HC(b2 | 0, c2 | 0, 10, 0) | 0;
                d2 = d2 + -1 | 0;
                a[d2 >> 0] = e2 & 255 | 48;
                e2 = b2;
                b2 = EC(b2 | 0, c2 | 0, 10, 0) | 0;
                if (!(c2 >>> 0 > 9 | (c2 | 0) == 9 & e2 >>> 0 > 4294967295))
                  break;
                else
                  c2 = A;
              }
              c2 = b2;
            } else
              c2 = b2;
            if (c2)
              while (1) {
                d2 = d2 + -1 | 0;
                a[d2 >> 0] = (c2 >>> 0) % 10 | 0 | 48;
                if (c2 >>> 0 < 10)
                  break;
                else
                  c2 = (c2 >>> 0) / 10 | 0;
              }
            return d2 | 0;
          }
          function MB(a2) {
            a2 = a2 | 0;
            return XB(a2, c[(WB() | 0) + 188 >> 2] | 0) | 0;
          }
          function NB(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            h2 = d2 & 255;
            f2 = (e2 | 0) != 0;
            a:
              do
                if (f2 & (b2 & 3 | 0) != 0) {
                  g2 = d2 & 255;
                  while (1) {
                    if ((a[b2 >> 0] | 0) == g2 << 24 >> 24) {
                      i3 = 6;
                      break a;
                    }
                    b2 = b2 + 1 | 0;
                    e2 = e2 + -1 | 0;
                    f2 = (e2 | 0) != 0;
                    if (!(f2 & (b2 & 3 | 0) != 0)) {
                      i3 = 5;
                      break;
                    }
                  }
                } else
                  i3 = 5;
              while (0);
            if ((i3 | 0) == 5)
              if (f2)
                i3 = 6;
              else
                e2 = 0;
            b:
              do
                if ((i3 | 0) == 6) {
                  g2 = d2 & 255;
                  if ((a[b2 >> 0] | 0) != g2 << 24 >> 24) {
                    f2 = P(h2, 16843009) | 0;
                    c:
                      do
                        if (e2 >>> 0 > 3)
                          while (1) {
                            h2 = c[b2 >> 2] ^ f2;
                            if ((h2 & -2139062144 ^ -2139062144) & h2 + -16843009 | 0)
                              break;
                            b2 = b2 + 4 | 0;
                            e2 = e2 + -4 | 0;
                            if (e2 >>> 0 <= 3) {
                              i3 = 11;
                              break c;
                            }
                          }
                        else
                          i3 = 11;
                      while (0);
                    if ((i3 | 0) == 11) {
                      if (!e2) {
                        e2 = 0;
                        break;
                      }
                    }
                    while (1) {
                      if ((a[b2 >> 0] | 0) == g2 << 24 >> 24)
                        break b;
                      b2 = b2 + 1 | 0;
                      e2 = e2 + -1 | 0;
                      if (!e2) {
                        e2 = 0;
                        break;
                      }
                    }
                  }
                }
              while (0);
            return (e2 | 0 ? b2 : 0) | 0;
          }
          function OB(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = l;
            l = l + 256 | 0;
            f2 = g2;
            if ((c2 | 0) > (d2 | 0) & (e2 & 73728 | 0) == 0) {
              e2 = c2 - d2 | 0;
              yC(f2 | 0, b2 | 0, (e2 >>> 0 < 256 ? e2 : 256) | 0) | 0;
              if (e2 >>> 0 > 255) {
                b2 = c2 - d2 | 0;
                do {
                  GB(a2, f2, 256);
                  e2 = e2 + -256 | 0;
                } while (e2 >>> 0 > 255);
                e2 = b2 & 255;
              }
              GB(a2, f2, e2);
            }
            l = g2;
            return;
          }
          function PB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (!a2)
              a2 = 0;
            else
              a2 = UB(a2, b2, 0) | 0;
            return a2 | 0;
          }
          function QB(b2, e2, f2, g2, h2, i3) {
            b2 = b2 | 0;
            e2 = +e2;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i3 = i3 | 0;
            var j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0;
            H2 = l;
            l = l + 560 | 0;
            m2 = H2 + 8 | 0;
            u2 = H2;
            G2 = H2 + 524 | 0;
            F2 = G2;
            n2 = H2 + 512 | 0;
            c[u2 >> 2] = 0;
            E2 = n2 + 12 | 0;
            RB(e2) | 0;
            if ((A | 0) < 0) {
              e2 = -e2;
              C2 = 1;
              B2 = 5659;
            } else {
              C2 = (h2 & 2049 | 0) != 0 & 1;
              B2 = (h2 & 2048 | 0) == 0 ? (h2 & 1 | 0) == 0 ? 5660 : 5665 : 5662;
            }
            RB(e2) | 0;
            D2 = A & 2146435072;
            do
              if (D2 >>> 0 < 2146435072 | (D2 | 0) == 2146435072 & 0 < 0) {
                r2 = +SB(e2, u2) * 2;
                j2 = r2 != 0;
                if (j2)
                  c[u2 >> 2] = (c[u2 >> 2] | 0) + -1;
                w2 = i3 | 32;
                if ((w2 | 0) == 97) {
                  s2 = i3 & 32;
                  q2 = (s2 | 0) == 0 ? B2 : B2 + 9 | 0;
                  p2 = C2 | 2;
                  j2 = 12 - g2 | 0;
                  do
                    if (!(g2 >>> 0 > 11 | (j2 | 0) == 0)) {
                      e2 = 8;
                      do {
                        j2 = j2 + -1 | 0;
                        e2 = e2 * 16;
                      } while ((j2 | 0) != 0);
                      if ((a[q2 >> 0] | 0) == 45) {
                        e2 = -(e2 + (-r2 - e2));
                        break;
                      } else {
                        e2 = r2 + e2 - e2;
                        break;
                      }
                    } else
                      e2 = r2;
                  while (0);
                  k2 = c[u2 >> 2] | 0;
                  j2 = (k2 | 0) < 0 ? 0 - k2 | 0 : k2;
                  j2 = LB(j2, ((j2 | 0) < 0) << 31 >> 31, E2) | 0;
                  if ((j2 | 0) == (E2 | 0)) {
                    j2 = n2 + 11 | 0;
                    a[j2 >> 0] = 48;
                  }
                  a[j2 + -1 >> 0] = (k2 >> 31 & 2) + 43;
                  o2 = j2 + -2 | 0;
                  a[o2 >> 0] = i3 + 15;
                  n2 = (g2 | 0) < 1;
                  m2 = (h2 & 8 | 0) == 0;
                  j2 = G2;
                  do {
                    D2 = ~~e2;
                    k2 = j2 + 1 | 0;
                    a[j2 >> 0] = d[5694 + D2 >> 0] | s2;
                    e2 = (e2 - +(D2 | 0)) * 16;
                    if ((k2 - F2 | 0) == 1 ? !(m2 & (n2 & e2 == 0)) : 0) {
                      a[k2 >> 0] = 46;
                      j2 = j2 + 2 | 0;
                    } else
                      j2 = k2;
                  } while (e2 != 0);
                  D2 = j2 - F2 | 0;
                  F2 = E2 - o2 | 0;
                  E2 = (g2 | 0) != 0 & (D2 + -2 | 0) < (g2 | 0) ? g2 + 2 | 0 : D2;
                  j2 = F2 + p2 + E2 | 0;
                  OB(b2, 32, f2, j2, h2);
                  GB(b2, q2, p2);
                  OB(b2, 48, f2, j2, h2 ^ 65536);
                  GB(b2, G2, D2);
                  OB(b2, 48, E2 - D2 | 0, 0, 0);
                  GB(b2, o2, F2);
                  OB(b2, 32, f2, j2, h2 ^ 8192);
                  break;
                }
                k2 = (g2 | 0) < 0 ? 6 : g2;
                if (j2) {
                  j2 = (c[u2 >> 2] | 0) + -28 | 0;
                  c[u2 >> 2] = j2;
                  e2 = r2 * 268435456;
                } else {
                  e2 = r2;
                  j2 = c[u2 >> 2] | 0;
                }
                D2 = (j2 | 0) < 0 ? m2 : m2 + 288 | 0;
                m2 = D2;
                do {
                  y2 = ~~e2 >>> 0;
                  c[m2 >> 2] = y2;
                  m2 = m2 + 4 | 0;
                  e2 = (e2 - +(y2 >>> 0)) * 1e9;
                } while (e2 != 0);
                if ((j2 | 0) > 0) {
                  n2 = D2;
                  p2 = m2;
                  while (1) {
                    o2 = (j2 | 0) < 29 ? j2 : 29;
                    j2 = p2 + -4 | 0;
                    if (j2 >>> 0 >= n2 >>> 0) {
                      m2 = 0;
                      do {
                        x2 = zC(c[j2 >> 2] | 0, 0, o2 | 0) | 0;
                        x2 = xC(x2 | 0, A | 0, m2 | 0, 0) | 0;
                        y2 = A;
                        v2 = HC(x2 | 0, y2 | 0, 1e9, 0) | 0;
                        c[j2 >> 2] = v2;
                        m2 = EC(x2 | 0, y2 | 0, 1e9, 0) | 0;
                        j2 = j2 + -4 | 0;
                      } while (j2 >>> 0 >= n2 >>> 0);
                      if (m2) {
                        n2 = n2 + -4 | 0;
                        c[n2 >> 2] = m2;
                      }
                    }
                    m2 = p2;
                    while (1) {
                      if (m2 >>> 0 <= n2 >>> 0)
                        break;
                      j2 = m2 + -4 | 0;
                      if (!(c[j2 >> 2] | 0))
                        m2 = j2;
                      else
                        break;
                    }
                    j2 = (c[u2 >> 2] | 0) - o2 | 0;
                    c[u2 >> 2] = j2;
                    if ((j2 | 0) > 0)
                      p2 = m2;
                    else
                      break;
                  }
                } else
                  n2 = D2;
                if ((j2 | 0) < 0) {
                  g2 = ((k2 + 25 | 0) / 9 | 0) + 1 | 0;
                  t2 = (w2 | 0) == 102;
                  do {
                    s2 = 0 - j2 | 0;
                    s2 = (s2 | 0) < 9 ? s2 : 9;
                    if (n2 >>> 0 < m2 >>> 0) {
                      o2 = (1 << s2) + -1 | 0;
                      p2 = 1e9 >>> s2;
                      q2 = 0;
                      j2 = n2;
                      do {
                        y2 = c[j2 >> 2] | 0;
                        c[j2 >> 2] = (y2 >>> s2) + q2;
                        q2 = P(y2 & o2, p2) | 0;
                        j2 = j2 + 4 | 0;
                      } while (j2 >>> 0 < m2 >>> 0);
                      j2 = (c[n2 >> 2] | 0) == 0 ? n2 + 4 | 0 : n2;
                      if (!q2) {
                        n2 = j2;
                        j2 = m2;
                      } else {
                        c[m2 >> 2] = q2;
                        n2 = j2;
                        j2 = m2 + 4 | 0;
                      }
                    } else {
                      n2 = (c[n2 >> 2] | 0) == 0 ? n2 + 4 | 0 : n2;
                      j2 = m2;
                    }
                    m2 = t2 ? D2 : n2;
                    m2 = (j2 - m2 >> 2 | 0) > (g2 | 0) ? m2 + (g2 << 2) | 0 : j2;
                    j2 = (c[u2 >> 2] | 0) + s2 | 0;
                    c[u2 >> 2] = j2;
                  } while ((j2 | 0) < 0);
                  j2 = n2;
                  g2 = m2;
                } else {
                  j2 = n2;
                  g2 = m2;
                }
                y2 = D2;
                if (j2 >>> 0 < g2 >>> 0) {
                  m2 = (y2 - j2 >> 2) * 9 | 0;
                  o2 = c[j2 >> 2] | 0;
                  if (o2 >>> 0 >= 10) {
                    n2 = 10;
                    do {
                      n2 = n2 * 10 | 0;
                      m2 = m2 + 1 | 0;
                    } while (o2 >>> 0 >= n2 >>> 0);
                  }
                } else
                  m2 = 0;
                t2 = (w2 | 0) == 103;
                v2 = (k2 | 0) != 0;
                n2 = k2 - ((w2 | 0) != 102 ? m2 : 0) + ((v2 & t2) << 31 >> 31) | 0;
                if ((n2 | 0) < (((g2 - y2 >> 2) * 9 | 0) + -9 | 0)) {
                  n2 = n2 + 9216 | 0;
                  s2 = D2 + 4 + (((n2 | 0) / 9 | 0) + -1024 << 2) | 0;
                  n2 = ((n2 | 0) % 9 | 0) + 1 | 0;
                  if ((n2 | 0) < 9) {
                    o2 = 10;
                    do {
                      o2 = o2 * 10 | 0;
                      n2 = n2 + 1 | 0;
                    } while ((n2 | 0) != 9);
                  } else
                    o2 = 10;
                  p2 = c[s2 >> 2] | 0;
                  q2 = (p2 >>> 0) % (o2 >>> 0) | 0;
                  n2 = (s2 + 4 | 0) == (g2 | 0);
                  if (!(n2 & (q2 | 0) == 0)) {
                    r2 = (((p2 >>> 0) / (o2 >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992 : 9007199254740994;
                    x2 = (o2 | 0) / 2 | 0;
                    e2 = q2 >>> 0 < x2 >>> 0 ? 0.5 : n2 & (q2 | 0) == (x2 | 0) ? 1 : 1.5;
                    if (C2) {
                      x2 = (a[B2 >> 0] | 0) == 45;
                      e2 = x2 ? -e2 : e2;
                      r2 = x2 ? -r2 : r2;
                    }
                    n2 = p2 - q2 | 0;
                    c[s2 >> 2] = n2;
                    if (r2 + e2 != r2) {
                      x2 = n2 + o2 | 0;
                      c[s2 >> 2] = x2;
                      if (x2 >>> 0 > 999999999) {
                        m2 = s2;
                        while (1) {
                          n2 = m2 + -4 | 0;
                          c[m2 >> 2] = 0;
                          if (n2 >>> 0 < j2 >>> 0) {
                            j2 = j2 + -4 | 0;
                            c[j2 >> 2] = 0;
                          }
                          x2 = (c[n2 >> 2] | 0) + 1 | 0;
                          c[n2 >> 2] = x2;
                          if (x2 >>> 0 > 999999999)
                            m2 = n2;
                          else
                            break;
                        }
                      } else
                        n2 = s2;
                      m2 = (y2 - j2 >> 2) * 9 | 0;
                      p2 = c[j2 >> 2] | 0;
                      if (p2 >>> 0 >= 10) {
                        o2 = 10;
                        do {
                          o2 = o2 * 10 | 0;
                          m2 = m2 + 1 | 0;
                        } while (p2 >>> 0 >= o2 >>> 0);
                      }
                    } else
                      n2 = s2;
                  } else
                    n2 = s2;
                  n2 = n2 + 4 | 0;
                  n2 = g2 >>> 0 > n2 >>> 0 ? n2 : g2;
                  x2 = j2;
                } else {
                  n2 = g2;
                  x2 = j2;
                }
                w2 = n2;
                while (1) {
                  if (w2 >>> 0 <= x2 >>> 0) {
                    u2 = 0;
                    break;
                  }
                  j2 = w2 + -4 | 0;
                  if (!(c[j2 >> 2] | 0))
                    w2 = j2;
                  else {
                    u2 = 1;
                    break;
                  }
                }
                g2 = 0 - m2 | 0;
                do
                  if (t2) {
                    j2 = ((v2 ^ 1) & 1) + k2 | 0;
                    if ((j2 | 0) > (m2 | 0) & (m2 | 0) > -5) {
                      o2 = i3 + -1 | 0;
                      k2 = j2 + -1 - m2 | 0;
                    } else {
                      o2 = i3 + -2 | 0;
                      k2 = j2 + -1 | 0;
                    }
                    j2 = h2 & 8;
                    if (!j2) {
                      if (u2 ? (z2 = c[w2 + -4 >> 2] | 0, (z2 | 0) != 0) : 0) {
                        if (!((z2 >>> 0) % 10 | 0)) {
                          n2 = 0;
                          j2 = 10;
                          do {
                            j2 = j2 * 10 | 0;
                            n2 = n2 + 1 | 0;
                          } while (!((z2 >>> 0) % (j2 >>> 0) | 0 | 0));
                        } else
                          n2 = 0;
                      } else
                        n2 = 9;
                      j2 = ((w2 - y2 >> 2) * 9 | 0) + -9 | 0;
                      if ((o2 | 32 | 0) == 102) {
                        s2 = j2 - n2 | 0;
                        s2 = (s2 | 0) > 0 ? s2 : 0;
                        k2 = (k2 | 0) < (s2 | 0) ? k2 : s2;
                        s2 = 0;
                        break;
                      } else {
                        s2 = j2 + m2 - n2 | 0;
                        s2 = (s2 | 0) > 0 ? s2 : 0;
                        k2 = (k2 | 0) < (s2 | 0) ? k2 : s2;
                        s2 = 0;
                        break;
                      }
                    } else
                      s2 = j2;
                  } else {
                    o2 = i3;
                    s2 = h2 & 8;
                  }
                while (0);
                t2 = k2 | s2;
                p2 = (t2 | 0) != 0 & 1;
                q2 = (o2 | 32 | 0) == 102;
                if (q2) {
                  v2 = 0;
                  j2 = (m2 | 0) > 0 ? m2 : 0;
                } else {
                  j2 = (m2 | 0) < 0 ? g2 : m2;
                  j2 = LB(j2, ((j2 | 0) < 0) << 31 >> 31, E2) | 0;
                  n2 = E2;
                  if ((n2 - j2 | 0) < 2)
                    do {
                      j2 = j2 + -1 | 0;
                      a[j2 >> 0] = 48;
                    } while ((n2 - j2 | 0) < 2);
                  a[j2 + -1 >> 0] = (m2 >> 31 & 2) + 43;
                  j2 = j2 + -2 | 0;
                  a[j2 >> 0] = o2;
                  v2 = j2;
                  j2 = n2 - j2 | 0;
                }
                j2 = C2 + 1 + k2 + p2 + j2 | 0;
                OB(b2, 32, f2, j2, h2);
                GB(b2, B2, C2);
                OB(b2, 48, f2, j2, h2 ^ 65536);
                if (q2) {
                  o2 = x2 >>> 0 > D2 >>> 0 ? D2 : x2;
                  s2 = G2 + 9 | 0;
                  p2 = s2;
                  q2 = G2 + 8 | 0;
                  n2 = o2;
                  do {
                    m2 = LB(c[n2 >> 2] | 0, 0, s2) | 0;
                    if ((n2 | 0) == (o2 | 0)) {
                      if ((m2 | 0) == (s2 | 0)) {
                        a[q2 >> 0] = 48;
                        m2 = q2;
                      }
                    } else if (m2 >>> 0 > G2 >>> 0) {
                      yC(G2 | 0, 48, m2 - F2 | 0) | 0;
                      do
                        m2 = m2 + -1 | 0;
                      while (m2 >>> 0 > G2 >>> 0);
                    }
                    GB(b2, m2, p2 - m2 | 0);
                    n2 = n2 + 4 | 0;
                  } while (n2 >>> 0 <= D2 >>> 0);
                  if (t2 | 0)
                    GB(b2, 5710, 1);
                  if (n2 >>> 0 < w2 >>> 0 & (k2 | 0) > 0)
                    while (1) {
                      m2 = LB(c[n2 >> 2] | 0, 0, s2) | 0;
                      if (m2 >>> 0 > G2 >>> 0) {
                        yC(G2 | 0, 48, m2 - F2 | 0) | 0;
                        do
                          m2 = m2 + -1 | 0;
                        while (m2 >>> 0 > G2 >>> 0);
                      }
                      GB(b2, m2, (k2 | 0) < 9 ? k2 : 9);
                      n2 = n2 + 4 | 0;
                      m2 = k2 + -9 | 0;
                      if (!(n2 >>> 0 < w2 >>> 0 & (k2 | 0) > 9)) {
                        k2 = m2;
                        break;
                      } else
                        k2 = m2;
                    }
                  OB(b2, 48, k2 + 9 | 0, 9, 0);
                } else {
                  t2 = u2 ? w2 : x2 + 4 | 0;
                  if ((k2 | 0) > -1) {
                    u2 = G2 + 9 | 0;
                    s2 = (s2 | 0) == 0;
                    g2 = u2;
                    p2 = 0 - F2 | 0;
                    q2 = G2 + 8 | 0;
                    o2 = x2;
                    do {
                      m2 = LB(c[o2 >> 2] | 0, 0, u2) | 0;
                      if ((m2 | 0) == (u2 | 0)) {
                        a[q2 >> 0] = 48;
                        m2 = q2;
                      }
                      do
                        if ((o2 | 0) == (x2 | 0)) {
                          n2 = m2 + 1 | 0;
                          GB(b2, m2, 1);
                          if (s2 & (k2 | 0) < 1) {
                            m2 = n2;
                            break;
                          }
                          GB(b2, 5710, 1);
                          m2 = n2;
                        } else {
                          if (m2 >>> 0 <= G2 >>> 0)
                            break;
                          yC(G2 | 0, 48, m2 + p2 | 0) | 0;
                          do
                            m2 = m2 + -1 | 0;
                          while (m2 >>> 0 > G2 >>> 0);
                        }
                      while (0);
                      F2 = g2 - m2 | 0;
                      GB(b2, m2, (k2 | 0) > (F2 | 0) ? F2 : k2);
                      k2 = k2 - F2 | 0;
                      o2 = o2 + 4 | 0;
                    } while (o2 >>> 0 < t2 >>> 0 & (k2 | 0) > -1);
                  }
                  OB(b2, 48, k2 + 18 | 0, 18, 0);
                  GB(b2, v2, E2 - v2 | 0);
                }
                OB(b2, 32, f2, j2, h2 ^ 8192);
              } else {
                G2 = (i3 & 32 | 0) != 0;
                j2 = C2 + 3 | 0;
                OB(b2, 32, f2, j2, h2 & -65537);
                GB(b2, B2, C2);
                GB(b2, e2 != e2 | false ? G2 ? 5686 : 5690 : G2 ? 5678 : 5682, 3);
                OB(b2, 32, f2, j2, h2 ^ 8192);
              }
            while (0);
            l = H2;
            return ((j2 | 0) < (f2 | 0) ? f2 : j2) | 0;
          }
          function RB(a2) {
            a2 = +a2;
            var b2 = 0;
            h[j >> 3] = a2;
            b2 = c[j >> 2] | 0;
            A = c[j + 4 >> 2] | 0;
            return b2 | 0;
          }
          function SB(a2, b2) {
            a2 = +a2;
            b2 = b2 | 0;
            return + +TB(a2, b2);
          }
          function TB(a2, b2) {
            a2 = +a2;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            h[j >> 3] = a2;
            d2 = c[j >> 2] | 0;
            e2 = c[j + 4 >> 2] | 0;
            f2 = AC(d2 | 0, e2 | 0, 52) | 0;
            switch (f2 & 2047) {
              case 0: {
                if (a2 != 0) {
                  a2 = +TB(a2 * 18446744073709552e3, b2);
                  d2 = (c[b2 >> 2] | 0) + -64 | 0;
                } else
                  d2 = 0;
                c[b2 >> 2] = d2;
                break;
              }
              case 2047:
                break;
              default: {
                c[b2 >> 2] = (f2 & 2047) + -1022;
                c[j >> 2] = d2;
                c[j + 4 >> 2] = e2 & -2146435073 | 1071644672;
                a2 = +h[j >> 3];
              }
            }
            return +a2;
          }
          function UB(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            do
              if (b2) {
                if (d2 >>> 0 < 128) {
                  a[b2 >> 0] = d2;
                  b2 = 1;
                  break;
                }
                if (!(c[c[(VB() | 0) + 188 >> 2] >> 2] | 0))
                  if ((d2 & -128 | 0) == 57216) {
                    a[b2 >> 0] = d2;
                    b2 = 1;
                    break;
                  } else {
                    c[(vB() | 0) >> 2] = 84;
                    b2 = -1;
                    break;
                  }
                if (d2 >>> 0 < 2048) {
                  a[b2 >> 0] = d2 >>> 6 | 192;
                  a[b2 + 1 >> 0] = d2 & 63 | 128;
                  b2 = 2;
                  break;
                }
                if (d2 >>> 0 < 55296 | (d2 & -8192 | 0) == 57344) {
                  a[b2 >> 0] = d2 >>> 12 | 224;
                  a[b2 + 1 >> 0] = d2 >>> 6 & 63 | 128;
                  a[b2 + 2 >> 0] = d2 & 63 | 128;
                  b2 = 3;
                  break;
                }
                if ((d2 + -65536 | 0) >>> 0 < 1048576) {
                  a[b2 >> 0] = d2 >>> 18 | 240;
                  a[b2 + 1 >> 0] = d2 >>> 12 & 63 | 128;
                  a[b2 + 2 >> 0] = d2 >>> 6 & 63 | 128;
                  a[b2 + 3 >> 0] = d2 & 63 | 128;
                  b2 = 4;
                  break;
                } else {
                  c[(vB() | 0) >> 2] = 84;
                  b2 = -1;
                  break;
                }
              } else
                b2 = 1;
            while (0);
            return b2 | 0;
          }
          function VB() {
            return xB() | 0;
          }
          function WB() {
            return xB() | 0;
          }
          function XB(b2, e2) {
            b2 = b2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = 0;
            while (1) {
              if ((d[5712 + g2 >> 0] | 0) == (b2 | 0)) {
                b2 = 2;
                break;
              }
              f2 = g2 + 1 | 0;
              if ((f2 | 0) == 87) {
                f2 = 5800;
                g2 = 87;
                b2 = 5;
                break;
              } else
                g2 = f2;
            }
            if ((b2 | 0) == 2)
              if (!g2)
                f2 = 5800;
              else {
                f2 = 5800;
                b2 = 5;
              }
            if ((b2 | 0) == 5)
              while (1) {
                do {
                  b2 = f2;
                  f2 = f2 + 1 | 0;
                } while ((a[b2 >> 0] | 0) != 0);
                g2 = g2 + -1 | 0;
                if (!g2)
                  break;
                else
                  b2 = 5;
              }
            return YB(f2, c[e2 + 20 >> 2] | 0) | 0;
          }
          function YB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return ZB(a2, b2) | 0;
          }
          function ZB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (!b2)
              b2 = 0;
            else
              b2 = _B(c[b2 >> 2] | 0, c[b2 + 4 >> 2] | 0, a2) | 0;
            return (b2 | 0 ? b2 : a2) | 0;
          }
          function _B(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
            o2 = (c[b2 >> 2] | 0) + 1794895138 | 0;
            h2 = $B(c[b2 + 8 >> 2] | 0, o2) | 0;
            f2 = $B(c[b2 + 12 >> 2] | 0, o2) | 0;
            g2 = $B(c[b2 + 16 >> 2] | 0, o2) | 0;
            a:
              do
                if ((h2 >>> 0 < d2 >>> 2 >>> 0 ? (n2 = d2 - (h2 << 2) | 0, f2 >>> 0 < n2 >>> 0 & g2 >>> 0 < n2 >>> 0) : 0) ? ((g2 | f2) & 3 | 0) == 0 : 0) {
                  n2 = f2 >>> 2;
                  m2 = g2 >>> 2;
                  l2 = 0;
                  while (1) {
                    j2 = h2 >>> 1;
                    k2 = l2 + j2 | 0;
                    i3 = k2 << 1;
                    g2 = i3 + n2 | 0;
                    f2 = $B(c[b2 + (g2 << 2) >> 2] | 0, o2) | 0;
                    g2 = $B(c[b2 + (g2 + 1 << 2) >> 2] | 0, o2) | 0;
                    if (!(g2 >>> 0 < d2 >>> 0 & f2 >>> 0 < (d2 - g2 | 0) >>> 0)) {
                      f2 = 0;
                      break a;
                    }
                    if (a[b2 + (g2 + f2) >> 0] | 0) {
                      f2 = 0;
                      break a;
                    }
                    f2 = AB(e2, b2 + g2 | 0) | 0;
                    if (!f2)
                      break;
                    f2 = (f2 | 0) < 0;
                    if ((h2 | 0) == 1) {
                      f2 = 0;
                      break a;
                    } else {
                      l2 = f2 ? l2 : k2;
                      h2 = f2 ? j2 : h2 - j2 | 0;
                    }
                  }
                  f2 = i3 + m2 | 0;
                  g2 = $B(c[b2 + (f2 << 2) >> 2] | 0, o2) | 0;
                  f2 = $B(c[b2 + (f2 + 1 << 2) >> 2] | 0, o2) | 0;
                  if (f2 >>> 0 < d2 >>> 0 & g2 >>> 0 < (d2 - f2 | 0) >>> 0)
                    f2 = (a[b2 + (f2 + g2) >> 0] | 0) == 0 ? b2 + f2 | 0 : 0;
                  else
                    f2 = 0;
                } else
                  f2 = 0;
              while (0);
            return f2 | 0;
          }
          function $B(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0;
            c2 = IC(a2 | 0) | 0;
            return ((b2 | 0) == 0 ? a2 : c2) | 0;
          }
          function aC(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
            f2 = e2 + 16 | 0;
            g2 = c[f2 >> 2] | 0;
            if (!g2) {
              if (!(bC(e2) | 0)) {
                g2 = c[f2 >> 2] | 0;
                h2 = 5;
              } else
                f2 = 0;
            } else
              h2 = 5;
            a:
              do
                if ((h2 | 0) == 5) {
                  j2 = e2 + 20 | 0;
                  i3 = c[j2 >> 2] | 0;
                  f2 = i3;
                  if ((g2 - i3 | 0) >>> 0 < d2 >>> 0) {
                    f2 = sb[c[e2 + 36 >> 2] & 7](e2, b2, d2) | 0;
                    break;
                  }
                  b:
                    do
                      if ((a[e2 + 75 >> 0] | 0) > -1) {
                        i3 = d2;
                        while (1) {
                          if (!i3) {
                            h2 = 0;
                            g2 = b2;
                            break b;
                          }
                          g2 = i3 + -1 | 0;
                          if ((a[b2 + g2 >> 0] | 0) == 10)
                            break;
                          else
                            i3 = g2;
                        }
                        f2 = sb[c[e2 + 36 >> 2] & 7](e2, b2, i3) | 0;
                        if (f2 >>> 0 < i3 >>> 0)
                          break a;
                        h2 = i3;
                        g2 = b2 + i3 | 0;
                        d2 = d2 - i3 | 0;
                        f2 = c[j2 >> 2] | 0;
                      } else {
                        h2 = 0;
                        g2 = b2;
                      }
                    while (0);
                  BC(f2 | 0, g2 | 0, d2 | 0) | 0;
                  c[j2 >> 2] = (c[j2 >> 2] | 0) + d2;
                  f2 = h2 + d2 | 0;
                }
              while (0);
            return f2 | 0;
          }
          function bC(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = b2 + 74 | 0;
            e2 = a[d2 >> 0] | 0;
            a[d2 >> 0] = e2 + 255 | e2;
            d2 = c[b2 >> 2] | 0;
            if (!(d2 & 8)) {
              c[b2 + 8 >> 2] = 0;
              c[b2 + 4 >> 2] = 0;
              e2 = c[b2 + 44 >> 2] | 0;
              c[b2 + 28 >> 2] = e2;
              c[b2 + 20 >> 2] = e2;
              c[b2 + 16 >> 2] = e2 + (c[b2 + 48 >> 2] | 0);
              b2 = 0;
            } else {
              c[b2 >> 2] = d2 | 32;
              b2 = -1;
            }
            return b2 | 0;
          }
          function cC(a2, b2) {
            a2 = T(a2);
            b2 = T(b2);
            var c2 = 0, d2 = 0;
            c2 = dC(a2) | 0;
            do
              if ((c2 & 2147483647) >>> 0 <= 2139095040) {
                d2 = dC(b2) | 0;
                if ((d2 & 2147483647) >>> 0 <= 2139095040)
                  if ((d2 ^ c2 | 0) < 0) {
                    a2 = (c2 | 0) < 0 ? b2 : a2;
                    break;
                  } else {
                    a2 = a2 < b2 ? b2 : a2;
                    break;
                  }
              } else
                a2 = b2;
            while (0);
            return T(a2);
          }
          function dC(a2) {
            a2 = T(a2);
            return (g[j >> 2] = a2, c[j >> 2] | 0) | 0;
          }
          function eC(a2, b2) {
            a2 = T(a2);
            b2 = T(b2);
            var c2 = 0, d2 = 0;
            c2 = fC(a2) | 0;
            do
              if ((c2 & 2147483647) >>> 0 <= 2139095040) {
                d2 = fC(b2) | 0;
                if ((d2 & 2147483647) >>> 0 <= 2139095040)
                  if ((d2 ^ c2 | 0) < 0) {
                    a2 = (c2 | 0) < 0 ? a2 : b2;
                    break;
                  } else {
                    a2 = a2 < b2 ? a2 : b2;
                    break;
                  }
              } else
                a2 = b2;
            while (0);
            return T(a2);
          }
          function fC(a2) {
            a2 = T(a2);
            return (g[j >> 2] = a2, c[j >> 2] | 0) | 0;
          }
          function gC(a2, b2) {
            a2 = T(a2);
            b2 = T(b2);
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i3 = 0, k2 = 0, l2 = 0, m2 = 0;
            h2 = (g[j >> 2] = a2, c[j >> 2] | 0);
            k2 = (g[j >> 2] = b2, c[j >> 2] | 0);
            d2 = h2 >>> 23 & 255;
            i3 = k2 >>> 23 & 255;
            l2 = h2 & -2147483648;
            f2 = k2 << 1;
            a:
              do
                if ((f2 | 0) != 0 ? !((d2 | 0) == 255 | ((hC(b2) | 0) & 2147483647) >>> 0 > 2139095040) : 0) {
                  e2 = h2 << 1;
                  if (e2 >>> 0 <= f2 >>> 0) {
                    b2 = T(a2 * T(0));
                    return T((e2 | 0) == (f2 | 0) ? b2 : a2);
                  }
                  if (!d2) {
                    d2 = h2 << 9;
                    if ((d2 | 0) > -1) {
                      e2 = d2;
                      d2 = 0;
                      do {
                        d2 = d2 + -1 | 0;
                        e2 = e2 << 1;
                      } while ((e2 | 0) > -1);
                    } else
                      d2 = 0;
                    e2 = h2 << 1 - d2;
                  } else
                    e2 = h2 & 8388607 | 8388608;
                  if (!i3) {
                    h2 = k2 << 9;
                    if ((h2 | 0) > -1) {
                      f2 = 0;
                      do {
                        f2 = f2 + -1 | 0;
                        h2 = h2 << 1;
                      } while ((h2 | 0) > -1);
                    } else
                      f2 = 0;
                    i3 = f2;
                    k2 = k2 << 1 - f2;
                  } else
                    k2 = k2 & 8388607 | 8388608;
                  f2 = e2 - k2 | 0;
                  h2 = (f2 | 0) > -1;
                  b:
                    do
                      if ((d2 | 0) > (i3 | 0)) {
                        while (1) {
                          if (h2)
                            if (!f2)
                              break;
                            else
                              e2 = f2;
                          e2 = e2 << 1;
                          d2 = d2 + -1 | 0;
                          f2 = e2 - k2 | 0;
                          h2 = (f2 | 0) > -1;
                          if ((d2 | 0) <= (i3 | 0))
                            break b;
                        }
                        b2 = T(a2 * T(0));
                        break a;
                      }
                    while (0);
                  if (h2)
                    if (!f2) {
                      b2 = T(a2 * T(0));
                      break;
                    } else
                      e2 = f2;
                  if (e2 >>> 0 < 8388608)
                    do {
                      e2 = e2 << 1;
                      d2 = d2 + -1 | 0;
                    } while (e2 >>> 0 < 8388608);
                  if ((d2 | 0) > 0)
                    d2 = e2 + -8388608 | d2 << 23;
                  else
                    d2 = e2 >>> (1 - d2 | 0);
                  b2 = (c[j >> 2] = d2 | l2, T(g[j >> 2]));
                } else
                  m2 = 3;
              while (0);
            if ((m2 | 0) == 3) {
              b2 = T(a2 * b2);
              b2 = T(b2 / b2);
            }
            return T(b2);
          }
          function hC(a2) {
            a2 = T(a2);
            return (g[j >> 2] = a2, c[j >> 2] | 0) | 0;
          }
          function iC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return CB(c[582] | 0, a2, b2) | 0;
          }
          function jC(a2) {
            a2 = a2 | 0;
            Ta();
          }
          function kC(a2) {
            a2 = a2 | 0;
            return;
          }
          function lC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return 0;
          }
          function mC(a2) {
            a2 = a2 | 0;
            if ((nC(a2 + 4 | 0) | 0) == -1) {
              nb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2);
              a2 = 1;
            } else
              a2 = 0;
            return a2 | 0;
          }
          function nC(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = b2 + -1;
            return b2 + -1 | 0;
          }
          function oC(a2) {
            a2 = a2 | 0;
            if (mC(a2) | 0)
              pC(a2);
            return;
          }
          function pC(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = a2 + 8 | 0;
            if (!((c[b2 >> 2] | 0) != 0 ? (nC(b2) | 0) != -1 : 0))
              nb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2);
            return;
          }
          function qC(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = (a2 | 0) == 0 ? 1 : a2;
            while (1) {
              a2 = oB(b2) | 0;
              if (a2 | 0)
                break;
              a2 = uC() | 0;
              if (!a2) {
                a2 = 0;
                break;
              }
              Fb[a2 & 0]();
            }
            return a2 | 0;
          }
          function rC(a2) {
            a2 = a2 | 0;
            return qC(a2) | 0;
          }
          function sC(a2) {
            a2 = a2 | 0;
            pB(a2);
            return;
          }
          function tC(b2) {
            b2 = b2 | 0;
            if ((a[b2 + 11 >> 0] | 0) < 0)
              sC(c[b2 >> 2] | 0);
            return;
          }
          function uC() {
            var a2 = 0;
            a2 = c[2923] | 0;
            c[2923] = a2 + 0;
            return a2 | 0;
          }
          function vC() {
          }
          function wC(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            d2 = b2 - d2 - (c2 >>> 0 > a2 >>> 0 | 0) >>> 0;
            return (A = d2, a2 - c2 >>> 0 | 0) | 0;
          }
          function xC(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            c2 = a2 + c2 >>> 0;
            return (A = b2 + d2 + (c2 >>> 0 < a2 >>> 0 | 0) >>> 0, c2 | 0) | 0;
          }
          function yC(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
            h2 = b2 + e2 | 0;
            d2 = d2 & 255;
            if ((e2 | 0) >= 67) {
              while (b2 & 3) {
                a[b2 >> 0] = d2;
                b2 = b2 + 1 | 0;
              }
              f2 = h2 & -4 | 0;
              g2 = f2 - 64 | 0;
              i3 = d2 | d2 << 8 | d2 << 16 | d2 << 24;
              while ((b2 | 0) <= (g2 | 0)) {
                c[b2 >> 2] = i3;
                c[b2 + 4 >> 2] = i3;
                c[b2 + 8 >> 2] = i3;
                c[b2 + 12 >> 2] = i3;
                c[b2 + 16 >> 2] = i3;
                c[b2 + 20 >> 2] = i3;
                c[b2 + 24 >> 2] = i3;
                c[b2 + 28 >> 2] = i3;
                c[b2 + 32 >> 2] = i3;
                c[b2 + 36 >> 2] = i3;
                c[b2 + 40 >> 2] = i3;
                c[b2 + 44 >> 2] = i3;
                c[b2 + 48 >> 2] = i3;
                c[b2 + 52 >> 2] = i3;
                c[b2 + 56 >> 2] = i3;
                c[b2 + 60 >> 2] = i3;
                b2 = b2 + 64 | 0;
              }
              while ((b2 | 0) < (f2 | 0)) {
                c[b2 >> 2] = i3;
                b2 = b2 + 4 | 0;
              }
            }
            while ((b2 | 0) < (h2 | 0)) {
              a[b2 >> 0] = d2;
              b2 = b2 + 1 | 0;
            }
            return h2 - e2 | 0;
          }
          function zC(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            if ((c2 | 0) < 32) {
              A = b2 << c2 | (a2 & (1 << c2) - 1 << 32 - c2) >>> 32 - c2;
              return a2 << c2;
            }
            A = a2 << c2 - 32;
            return 0;
          }
          function AC(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            if ((c2 | 0) < 32) {
              A = b2 >>> c2;
              return a2 >>> c2 | (b2 & (1 << c2) - 1) << 32 - c2;
            }
            A = 0;
            return b2 >>> c2 - 32 | 0;
          }
          function BC(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0;
            if ((e2 | 0) >= 8192)
              return Oa(b2 | 0, d2 | 0, e2 | 0) | 0;
            h2 = b2 | 0;
            g2 = b2 + e2 | 0;
            if ((b2 & 3) == (d2 & 3)) {
              while (b2 & 3) {
                if (!e2)
                  return h2 | 0;
                a[b2 >> 0] = a[d2 >> 0] | 0;
                b2 = b2 + 1 | 0;
                d2 = d2 + 1 | 0;
                e2 = e2 - 1 | 0;
              }
              e2 = g2 & -4 | 0;
              f2 = e2 - 64 | 0;
              while ((b2 | 0) <= (f2 | 0)) {
                c[b2 >> 2] = c[d2 >> 2];
                c[b2 + 4 >> 2] = c[d2 + 4 >> 2];
                c[b2 + 8 >> 2] = c[d2 + 8 >> 2];
                c[b2 + 12 >> 2] = c[d2 + 12 >> 2];
                c[b2 + 16 >> 2] = c[d2 + 16 >> 2];
                c[b2 + 20 >> 2] = c[d2 + 20 >> 2];
                c[b2 + 24 >> 2] = c[d2 + 24 >> 2];
                c[b2 + 28 >> 2] = c[d2 + 28 >> 2];
                c[b2 + 32 >> 2] = c[d2 + 32 >> 2];
                c[b2 + 36 >> 2] = c[d2 + 36 >> 2];
                c[b2 + 40 >> 2] = c[d2 + 40 >> 2];
                c[b2 + 44 >> 2] = c[d2 + 44 >> 2];
                c[b2 + 48 >> 2] = c[d2 + 48 >> 2];
                c[b2 + 52 >> 2] = c[d2 + 52 >> 2];
                c[b2 + 56 >> 2] = c[d2 + 56 >> 2];
                c[b2 + 60 >> 2] = c[d2 + 60 >> 2];
                b2 = b2 + 64 | 0;
                d2 = d2 + 64 | 0;
              }
              while ((b2 | 0) < (e2 | 0)) {
                c[b2 >> 2] = c[d2 >> 2];
                b2 = b2 + 4 | 0;
                d2 = d2 + 4 | 0;
              }
            } else {
              e2 = g2 - 4 | 0;
              while ((b2 | 0) < (e2 | 0)) {
                a[b2 >> 0] = a[d2 >> 0] | 0;
                a[b2 + 1 >> 0] = a[d2 + 1 >> 0] | 0;
                a[b2 + 2 >> 0] = a[d2 + 2 >> 0] | 0;
                a[b2 + 3 >> 0] = a[d2 + 3 >> 0] | 0;
                b2 = b2 + 4 | 0;
                d2 = d2 + 4 | 0;
              }
            }
            while ((b2 | 0) < (g2 | 0)) {
              a[b2 >> 0] = a[d2 >> 0] | 0;
              b2 = b2 + 1 | 0;
              d2 = d2 + 1 | 0;
            }
            return h2 | 0;
          }
          function CC(b2) {
            b2 = b2 | 0;
            var c2 = 0;
            c2 = a[n + (b2 & 255) >> 0] | 0;
            if ((c2 | 0) < 8)
              return c2 | 0;
            c2 = a[n + (b2 >> 8 & 255) >> 0] | 0;
            if ((c2 | 0) < 8)
              return c2 + 8 | 0;
            c2 = a[n + (b2 >> 16 & 255) >> 0] | 0;
            if ((c2 | 0) < 8)
              return c2 + 16 | 0;
            return (a[n + (b2 >>> 24) >> 0] | 0) + 24 | 0;
          }
          function DC(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
            l2 = a2;
            j2 = b2;
            k2 = j2;
            h2 = d2;
            n2 = e2;
            i3 = n2;
            if (!k2) {
              g2 = (f2 | 0) != 0;
              if (!i3) {
                if (g2) {
                  c[f2 >> 2] = (l2 >>> 0) % (h2 >>> 0);
                  c[f2 + 4 >> 2] = 0;
                }
                n2 = 0;
                f2 = (l2 >>> 0) / (h2 >>> 0) >>> 0;
                return (A = n2, f2) | 0;
              } else {
                if (!g2) {
                  n2 = 0;
                  f2 = 0;
                  return (A = n2, f2) | 0;
                }
                c[f2 >> 2] = a2 | 0;
                c[f2 + 4 >> 2] = b2 & 0;
                n2 = 0;
                f2 = 0;
                return (A = n2, f2) | 0;
              }
            }
            g2 = (i3 | 0) == 0;
            do
              if (h2) {
                if (!g2) {
                  g2 = (S(i3 | 0) | 0) - (S(k2 | 0) | 0) | 0;
                  if (g2 >>> 0 <= 31) {
                    m2 = g2 + 1 | 0;
                    i3 = 31 - g2 | 0;
                    b2 = g2 - 31 >> 31;
                    h2 = m2;
                    a2 = l2 >>> (m2 >>> 0) & b2 | k2 << i3;
                    b2 = k2 >>> (m2 >>> 0) & b2;
                    g2 = 0;
                    i3 = l2 << i3;
                    break;
                  }
                  if (!f2) {
                    n2 = 0;
                    f2 = 0;
                    return (A = n2, f2) | 0;
                  }
                  c[f2 >> 2] = a2 | 0;
                  c[f2 + 4 >> 2] = j2 | b2 & 0;
                  n2 = 0;
                  f2 = 0;
                  return (A = n2, f2) | 0;
                }
                g2 = h2 - 1 | 0;
                if (g2 & h2 | 0) {
                  i3 = (S(h2 | 0) | 0) + 33 - (S(k2 | 0) | 0) | 0;
                  p2 = 64 - i3 | 0;
                  m2 = 32 - i3 | 0;
                  j2 = m2 >> 31;
                  o2 = i3 - 32 | 0;
                  b2 = o2 >> 31;
                  h2 = i3;
                  a2 = m2 - 1 >> 31 & k2 >>> (o2 >>> 0) | (k2 << m2 | l2 >>> (i3 >>> 0)) & b2;
                  b2 = b2 & k2 >>> (i3 >>> 0);
                  g2 = l2 << p2 & j2;
                  i3 = (k2 << p2 | l2 >>> (o2 >>> 0)) & j2 | l2 << m2 & i3 - 33 >> 31;
                  break;
                }
                if (f2 | 0) {
                  c[f2 >> 2] = g2 & l2;
                  c[f2 + 4 >> 2] = 0;
                }
                if ((h2 | 0) == 1) {
                  o2 = j2 | b2 & 0;
                  p2 = a2 | 0 | 0;
                  return (A = o2, p2) | 0;
                } else {
                  p2 = CC(h2 | 0) | 0;
                  o2 = k2 >>> (p2 >>> 0) | 0;
                  p2 = k2 << 32 - p2 | l2 >>> (p2 >>> 0) | 0;
                  return (A = o2, p2) | 0;
                }
              } else {
                if (g2) {
                  if (f2 | 0) {
                    c[f2 >> 2] = (k2 >>> 0) % (h2 >>> 0);
                    c[f2 + 4 >> 2] = 0;
                  }
                  o2 = 0;
                  p2 = (k2 >>> 0) / (h2 >>> 0) >>> 0;
                  return (A = o2, p2) | 0;
                }
                if (!l2) {
                  if (f2 | 0) {
                    c[f2 >> 2] = 0;
                    c[f2 + 4 >> 2] = (k2 >>> 0) % (i3 >>> 0);
                  }
                  o2 = 0;
                  p2 = (k2 >>> 0) / (i3 >>> 0) >>> 0;
                  return (A = o2, p2) | 0;
                }
                g2 = i3 - 1 | 0;
                if (!(g2 & i3)) {
                  if (f2 | 0) {
                    c[f2 >> 2] = a2 | 0;
                    c[f2 + 4 >> 2] = g2 & k2 | b2 & 0;
                  }
                  o2 = 0;
                  p2 = k2 >>> ((CC(i3 | 0) | 0) >>> 0);
                  return (A = o2, p2) | 0;
                }
                g2 = (S(i3 | 0) | 0) - (S(k2 | 0) | 0) | 0;
                if (g2 >>> 0 <= 30) {
                  b2 = g2 + 1 | 0;
                  i3 = 31 - g2 | 0;
                  h2 = b2;
                  a2 = k2 << i3 | l2 >>> (b2 >>> 0);
                  b2 = k2 >>> (b2 >>> 0);
                  g2 = 0;
                  i3 = l2 << i3;
                  break;
                }
                if (!f2) {
                  o2 = 0;
                  p2 = 0;
                  return (A = o2, p2) | 0;
                }
                c[f2 >> 2] = a2 | 0;
                c[f2 + 4 >> 2] = j2 | b2 & 0;
                o2 = 0;
                p2 = 0;
                return (A = o2, p2) | 0;
              }
            while (0);
            if (!h2) {
              k2 = i3;
              j2 = 0;
              i3 = 0;
            } else {
              m2 = d2 | 0 | 0;
              l2 = n2 | e2 & 0;
              k2 = xC(m2 | 0, l2 | 0, -1, -1) | 0;
              d2 = A;
              j2 = i3;
              i3 = 0;
              do {
                e2 = j2;
                j2 = g2 >>> 31 | j2 << 1;
                g2 = i3 | g2 << 1;
                e2 = a2 << 1 | e2 >>> 31 | 0;
                n2 = a2 >>> 31 | b2 << 1 | 0;
                wC(k2 | 0, d2 | 0, e2 | 0, n2 | 0) | 0;
                p2 = A;
                o2 = p2 >> 31 | ((p2 | 0) < 0 ? -1 : 0) << 1;
                i3 = o2 & 1;
                a2 = wC(e2 | 0, n2 | 0, o2 & m2 | 0, (((p2 | 0) < 0 ? -1 : 0) >> 31 | ((p2 | 0) < 0 ? -1 : 0) << 1) & l2 | 0) | 0;
                b2 = A;
                h2 = h2 - 1 | 0;
              } while ((h2 | 0) != 0);
              k2 = j2;
              j2 = 0;
            }
            h2 = 0;
            if (f2 | 0) {
              c[f2 >> 2] = a2;
              c[f2 + 4 >> 2] = b2;
            }
            o2 = (g2 | 0) >>> 31 | (k2 | h2) << 1 | (h2 << 1 | g2 >>> 31) & 0 | j2;
            p2 = (g2 << 1 | 0 >>> 31) & -2 | i3;
            return (A = o2, p2) | 0;
          }
          function EC(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            return DC(a2, b2, c2, d2, 0) | 0;
          }
          function FC(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            d2 = a2 + 15 & -16 | 0;
            b2 = c[i2 >> 2] | 0;
            a2 = b2 + d2 | 0;
            if ((d2 | 0) > 0 & (a2 | 0) < (b2 | 0) | (a2 | 0) < 0) {
              Y() | 0;
              Qa(12);
              return -1;
            }
            c[i2 >> 2] = a2;
            if ((a2 | 0) > (X() | 0) ? (W() | 0) == 0 : 0) {
              c[i2 >> 2] = b2;
              Qa(12);
              return -1;
            }
            return b2 | 0;
          }
          function GC(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            if ((c2 | 0) < (b2 | 0) & (b2 | 0) < (c2 + d2 | 0)) {
              e2 = b2;
              c2 = c2 + d2 | 0;
              b2 = b2 + d2 | 0;
              while ((d2 | 0) > 0) {
                b2 = b2 - 1 | 0;
                c2 = c2 - 1 | 0;
                d2 = d2 - 1 | 0;
                a[b2 >> 0] = a[c2 >> 0] | 0;
              }
              b2 = e2;
            } else
              BC(b2, c2, d2) | 0;
            return b2 | 0;
          }
          function HC(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            g2 = l;
            l = l + 16 | 0;
            f2 = g2 | 0;
            DC(a2, b2, d2, e2, f2) | 0;
            l = g2;
            return (A = c[f2 + 4 >> 2] | 0, c[f2 >> 2] | 0) | 0;
          }
          function IC(a2) {
            a2 = a2 | 0;
            return (a2 & 255) << 24 | (a2 >> 8 & 255) << 16 | (a2 >> 16 & 255) << 8 | a2 >>> 24 | 0;
          }
          function JC(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            jb[a2 & 1](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0);
          }
          function KC(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = T(c2);
            kb[a2 & 1](b2 | 0, T(c2));
          }
          function LC(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            lb[a2 & 31](b2 | 0, +c2);
          }
          function MC(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = T(c2);
            d2 = T(d2);
            return T(mb[a2 & 0](b2 | 0, T(c2), T(d2)));
          }
          function NC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            nb[a2 & 127](b2 | 0);
          }
          function OC(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            ob[a2 & 31](b2 | 0, c2 | 0);
          }
          function PC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return pb[a2 & 31](b2 | 0) | 0;
          }
          function QC(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            d2 = +d2;
            e2 = e2 | 0;
            qb[a2 & 1](b2 | 0, +c2, +d2, e2 | 0);
          }
          function RC(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            d2 = +d2;
            rb[a2 & 1](b2 | 0, +c2, +d2);
          }
          function SC(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            return sb[a2 & 7](b2 | 0, c2 | 0, d2 | 0) | 0;
          }
          function TC(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            return +tb[a2 & 1](b2 | 0, c2 | 0, d2 | 0);
          }
          function UC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return +ub[a2 & 15](b2 | 0);
          }
          function VC(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            return vb[a2 & 1](b2 | 0, +c2) | 0;
          }
          function WC(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return wb[a2 & 15](b2 | 0, c2 | 0) | 0;
          }
          function XC(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            e2 = +e2;
            f2 = f2 | 0;
            xb[a2 & 1](b2 | 0, c2 | 0, +d2, +e2, f2 | 0);
          }
          function YC(a2, b2, c2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            yb[a2 & 1](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0);
          }
          function ZC(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return +zb[a2 & 7](b2 | 0, c2 | 0);
          }
          function _C(a2) {
            a2 = a2 | 0;
            return Ab[a2 & 7]() | 0;
          }
          function $C(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            return Bb[a2 & 1](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0) | 0;
          }
          function aD(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            Cb[a2 & 1](b2 | 0, c2 | 0, d2 | 0, +e2);
          }
          function bD(a2, b2, c2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = T(d2);
            e2 = e2 | 0;
            f2 = T(f2);
            g2 = g2 | 0;
            Db[a2 & 1](b2 | 0, c2 | 0, T(d2), e2 | 0, T(f2), g2 | 0);
          }
          function cD(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            Eb[a2 & 15](b2 | 0, c2 | 0, d2 | 0);
          }
          function dD(a2) {
            a2 = a2 | 0;
            Fb[a2 & 0]();
          }
          function eD(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            Gb[a2 & 15](b2 | 0, c2 | 0, +d2);
          }
          function fD(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            return Hb[a2 & 1](+b2, +c2) | 0;
          }
          function gD(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            Ib[a2 & 15](b2 | 0, c2 | 0, d2 | 0, e2 | 0);
          }
          function hD(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            U(0);
          }
          function iD(a2, b2) {
            a2 = a2 | 0;
            b2 = T(b2);
            U(1);
          }
          function jD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            U(2);
          }
          function kD(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = T(b2);
            c2 = T(c2);
            U(3);
            return ib;
          }
          function lD(a2) {
            a2 = a2 | 0;
            U(4);
          }
          function mD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            U(5);
          }
          function nD(a2) {
            a2 = a2 | 0;
            U(6);
            return 0;
          }
          function oD(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            d2 = d2 | 0;
            U(7);
          }
          function pD(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            U(8);
          }
          function qD(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            U(9);
            return 0;
          }
          function rD(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            U(10);
            return 0;
          }
          function sD(a2) {
            a2 = a2 | 0;
            U(11);
            return 0;
          }
          function tD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            U(12);
            return 0;
          }
          function uD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            U(13);
            return 0;
          }
          function vD(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            d2 = +d2;
            e2 = e2 | 0;
            U(14);
          }
          function wD(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            U(15);
          }
          function xD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            U(16);
            return 0;
          }
          function yD() {
            U(17);
            return 0;
          }
          function zD(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            U(18);
            return 0;
          }
          function AD(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            U(19);
          }
          function BD(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = T(c2);
            d2 = d2 | 0;
            e2 = T(e2);
            f2 = f2 | 0;
            U(20);
          }
          function CD(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            U(21);
          }
          function DD() {
            U(22);
          }
          function ED(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            U(23);
          }
          function FD(a2, b2) {
            a2 = +a2;
            b2 = +b2;
            U(24);
            return 0;
          }
          function GD(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            U(25);
          }
          var jb = [hD, Uw];
          var kb = [iD, of];
          var lb = [jD, Of, Pf, Qf, Rf, Sf, Tf, Uf, Wf, Xf, Zf, _f, $f, ag, bg, cg, dg, eg, fg, jD, jD, jD, jD, jD, jD, jD, jD, jD, jD, jD, jD, jD];
          var mb = [kD];
          var nb = [lD, kC, Ki, Li, Mi, rn, sn, tn, Pu, Qu, Ru, Cw, Dw, Ew, DA, EA, FA, Rb, tf, yf, Vf, Yf, hh, ih, ri, Ui, kj, Jj, bk, zk, Wk, nl, Hl, bm, um, Nm, en, Nn, fo, yo, Ro, ip, Bp, Xp, nq, Eq, Zq, lf, Hr, _r, us, Ps, ft, Ct, Ot, Rt, ju, mu, Eu, Uu, Xu, pv, Kv, Vi, $x, Ky, az, sz, Rz, hA, tA, wA, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD, lD];
          var ob = [mD, zf, Af, Df, Ef, Ff, Gf, Hf, If, Lf, Mf, Nf, wg, zg, Ag, Bg, Cg, Dg, Eg, Jg, Ng, rh, $p, qq, Ts, cy, Sv, xy, mD, mD, mD, mD];
          var pb = [nD, rB, sf, jg, ng, og, pg, qg, rg, sg, ug, vg, Kg, Lg, jh, ar, jt, sv, hy, jy, nD, nD, nD, nD, nD, nD, nD, nD, nD, nD, nD, nD];
          var qb = [oD, kh];
          var rb = [pD, Hu];
          var sb = [qD, sB, tB, zB, Dk, Rn, Lr, wz];
          var tb = [rD, ym];
          var ub = [sD, xg, yg, Fg, lh, mh, nh, oh, ph, qh, sD, sD, sD, sD, sD, sD];
          var vb = [tD, Kt];
          var wb = [uD, lC, Mg, xi, Nj, _k, rl, jn, jo, Iq, pf, ez, uD, uD, uD, uD];
          var xb = [vD, oj];
          var yb = [wD, Vz];
          var zb = [xD, Gg, sh, th, uh, Rm, xD, xD];
          var Ab = [yD, vh, qf, jf, Wt, qu, av, AA];
          var Bb = [zD, ee];
          var Cb = [AD, Vo];
          var Db = [BD, Pg];
          var Eb = [CD, kg, tg, Hg, Ig, fk, Ll, mp, Fp, nf, vx, Oy, lA, CD, CD, CD];
          var Fb = [DD];
          var Gb = [ED, Bf, Cf, Jf, Kf, gg, hg, ig, Co, cs, Ft, ED, ED, ED, ED, ED];
          var Hb = [FD, Mu];
          var Ib = [GD, fm, ir, ys, st, au, wu, hv, Pv, oy, LA, GD, GD, GD, GD, GD];
          return { _llvm_bswap_i32: IC, dynCall_idd: fD, dynCall_i: _C, _i64Subtract: wC, ___udivdi3: EC, dynCall_vif: KC, setThrew: Nb, dynCall_viii: cD, _bitshift64Lshr: AC, _bitshift64Shl: zC, dynCall_vi: NC, dynCall_viiddi: XC, dynCall_diii: TC, dynCall_iii: WC, _memset: yC, _sbrk: FC, _memcpy: BC, __GLOBAL__sub_I_Yoga_cpp: hf, dynCall_vii: OC, ___uremdi3: HC, dynCall_vid: LC, stackAlloc: Jb, _nbind_init: _A, getTempRet0: Pb, dynCall_di: UC, dynCall_iid: VC, setTempRet0: Ob, _i64Add: xC, dynCall_fiff: MC, dynCall_iiii: SC, _emscripten_get_global_libc: qB, dynCall_viid: eD, dynCall_viiid: aD, dynCall_viififi: bD, dynCall_ii: PC, __GLOBAL__sub_I_Binding_cc: Sx, dynCall_viiii: gD, dynCall_iiiiii: $C, stackSave: Kb, dynCall_viiiii: JC, __GLOBAL__sub_I_nbind_cc: wh, dynCall_vidd: RC, _free: pB, runPostSets: vC, dynCall_viiiiii: YC, establishStackSpace: Mb, _memmove: GC, stackRestore: Lb, _malloc: oB, __GLOBAL__sub_I_common_cc: Bv, dynCall_viddi: QC, dynCall_dii: ZC, dynCall_v: dD };
        }(
          Module.asmGlobalArg,
          Module.asmLibraryArg,
          buffer
        );
        var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
        var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
        var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
        var setThrew = Module["setThrew"] = asm["setThrew"];
        var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
        var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
        var _memset = Module["_memset"] = asm["_memset"];
        var _sbrk = Module["_sbrk"] = asm["_sbrk"];
        var _memcpy = Module["_memcpy"] = asm["_memcpy"];
        var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
        var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
        var _nbind_init = Module["_nbind_init"] = asm["_nbind_init"];
        var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
        var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
        var _i64Add = Module["_i64Add"] = asm["_i64Add"];
        var _emscripten_get_global_libc = Module["_emscripten_get_global_libc"] = asm["_emscripten_get_global_libc"];
        var __GLOBAL__sub_I_Yoga_cpp = Module["__GLOBAL__sub_I_Yoga_cpp"] = asm["__GLOBAL__sub_I_Yoga_cpp"];
        var __GLOBAL__sub_I_Binding_cc = Module["__GLOBAL__sub_I_Binding_cc"] = asm["__GLOBAL__sub_I_Binding_cc"];
        var stackSave = Module["stackSave"] = asm["stackSave"];
        var __GLOBAL__sub_I_nbind_cc = Module["__GLOBAL__sub_I_nbind_cc"] = asm["__GLOBAL__sub_I_nbind_cc"];
        var _free = Module["_free"] = asm["_free"];
        var runPostSets = Module["runPostSets"] = asm["runPostSets"];
        var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
        var _memmove = Module["_memmove"] = asm["_memmove"];
        var stackRestore = Module["stackRestore"] = asm["stackRestore"];
        var _malloc = Module["_malloc"] = asm["_malloc"];
        var __GLOBAL__sub_I_common_cc = Module["__GLOBAL__sub_I_common_cc"] = asm["__GLOBAL__sub_I_common_cc"];
        var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
        var dynCall_vif = Module["dynCall_vif"] = asm["dynCall_vif"];
        var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
        var dynCall_fiff = Module["dynCall_fiff"] = asm["dynCall_fiff"];
        var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
        var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
        var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
        var dynCall_viddi = Module["dynCall_viddi"] = asm["dynCall_viddi"];
        var dynCall_vidd = Module["dynCall_vidd"] = asm["dynCall_vidd"];
        var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
        var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
        var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
        var dynCall_iid = Module["dynCall_iid"] = asm["dynCall_iid"];
        var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
        var dynCall_viiddi = Module["dynCall_viiddi"] = asm["dynCall_viiddi"];
        var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
        var dynCall_dii = Module["dynCall_dii"] = asm["dynCall_dii"];
        var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
        var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
        var dynCall_viiid = Module["dynCall_viiid"] = asm["dynCall_viiid"];
        var dynCall_viififi = Module["dynCall_viififi"] = asm["dynCall_viififi"];
        var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
        var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
        var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
        var dynCall_idd = Module["dynCall_idd"] = asm["dynCall_idd"];
        var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
        Runtime.stackAlloc = Module["stackAlloc"];
        Runtime.stackSave = Module["stackSave"];
        Runtime.stackRestore = Module["stackRestore"];
        Runtime.establishStackSpace = Module["establishStackSpace"];
        Runtime.setTempRet0 = Module["setTempRet0"];
        Runtime.getTempRet0 = Module["getTempRet0"];
        Module["asm"] = asm;
        function ExitStatus(status) {
          this.name = "ExitStatus";
          this.message = "Program terminated with exit(" + status + ")";
          this.status = status;
        }
        ExitStatus.prototype = new Error();
        ExitStatus.prototype.constructor = ExitStatus;
        var initialStackTop;
        var preloadStartTime = null;
        var calledMain = false;
        dependenciesFulfilled = function runCaller() {
          if (!Module["calledRun"])
            run();
          if (!Module["calledRun"])
            dependenciesFulfilled = runCaller;
        };
        Module["callMain"] = Module.callMain = function callMain(args) {
          args = args || [];
          ensureInitRuntime();
          var argc = args.length + 1;
          function pad() {
            for (var i3 = 0; i3 < 4 - 1; i3++) {
              argv.push(0);
            }
          }
          var argv = [allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL)];
          pad();
          for (var i2 = 0; i2 < argc - 1; i2 = i2 + 1) {
            argv.push(allocate(intArrayFromString(args[i2]), "i8", ALLOC_NORMAL));
            pad();
          }
          argv.push(0);
          argv = allocate(argv, "i32", ALLOC_NORMAL);
          try {
            var ret = Module["_main"](argc, argv, 0);
            exit(ret, true);
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else if (e == "SimulateInfiniteLoop") {
              Module["noExitRuntime"] = true;
              return;
            } else {
              var toLog = e;
              if (e && typeof e === "object" && e.stack) {
                toLog = [e, e.stack];
              }
              Module.printErr("exception thrown: " + toLog);
              Module["quit"](1, e);
            }
          } finally {
            calledMain = true;
          }
        };
        function run(args) {
          args = args || Module["arguments"];
          if (preloadStartTime === null)
            preloadStartTime = Date.now();
          if (runDependencies > 0) {
            return;
          }
          preRun();
          if (runDependencies > 0)
            return;
          if (Module["calledRun"])
            return;
          function doRun() {
            if (Module["calledRun"])
              return;
            Module["calledRun"] = true;
            if (ABORT)
              return;
            ensureInitRuntime();
            preMain();
            if (Module["onRuntimeInitialized"])
              Module["onRuntimeInitialized"]();
            if (Module["_main"] && shouldRunNow)
              Module["callMain"](args);
            postRun();
          }
          if (Module["setStatus"]) {
            Module["setStatus"]("Running...");
            setTimeout(function() {
              setTimeout(function() {
                Module["setStatus"]("");
              }, 1);
              doRun();
            }, 1);
          } else {
            doRun();
          }
        }
        Module["run"] = Module.run = run;
        function exit(status, implicit) {
          if (implicit && Module["noExitRuntime"]) {
            return;
          }
          if (Module["noExitRuntime"]) {
          } else {
            ABORT = true;
            EXITSTATUS = status;
            STACKTOP = initialStackTop;
            exitRuntime();
            if (Module["onExit"])
              Module["onExit"](status);
          }
          if (ENVIRONMENT_IS_NODE) {
            process["exit"](status);
          }
          Module["quit"](status, new ExitStatus(status));
        }
        Module["exit"] = Module.exit = exit;
        var abortDecorators = [];
        function abort(what) {
          if (Module["onAbort"]) {
            Module["onAbort"](what);
          }
          if (what !== void 0) {
            Module.print(what);
            Module.printErr(what);
            what = JSON.stringify(what);
          } else {
            what = "";
          }
          ABORT = true;
          EXITSTATUS = 1;
          var extra = "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";
          var output = "abort(" + what + ") at " + stackTrace() + extra;
          if (abortDecorators) {
            abortDecorators.forEach(function(decorator) {
              output = decorator(output, what);
            });
          }
          throw output;
        }
        Module["abort"] = Module.abort = abort;
        if (Module["preInit"]) {
          if (typeof Module["preInit"] == "function")
            Module["preInit"] = [Module["preInit"]];
          while (Module["preInit"].length > 0) {
            Module["preInit"].pop()();
          }
        }
        var shouldRunNow = true;
        if (Module["noInitialRun"]) {
          shouldRunNow = false;
        }
        run();
      });
    }
  });

  // ../../../.yarn/cache/yoga-layout-prebuilt-patch-dd00f44944-9061e8a60c.zip/node_modules/yoga-layout-prebuilt/yoga-layout/dist/entry-browser.js
  var require_entry_browser = __commonJS({
    "../../../.yarn/cache/yoga-layout-prebuilt-patch-dd00f44944-9061e8a60c.zip/node_modules/yoga-layout-prebuilt/yoga-layout/dist/entry-browser.js"(exports2, module2) {
      "use strict";
      var Yoga = require_entry_common();
      var nbind = require_nbind();
      var ran = false;
      var ret = null;
      nbind({}, function(err2, result) {
        if (ran) {
          return;
        }
        ran = true;
        if (err2) {
          throw err2;
        }
        ret = result;
      });
      if (!ran) {
        throw new Error("Failed to load the yoga module - it needed to be loaded synchronously, but didn't");
      }
      module2.exports = Yoga(ret.bind, ret.lib);
    }
  });

  // ../../../.yarn/cache/ansi-regex-npm-5.0.0-9c076068d9-b1bb4e992a.zip/node_modules/ansi-regex/index.js
  var require_ansi_regex = __commonJS({
    "../../../.yarn/cache/ansi-regex-npm-5.0.0-9c076068d9-b1bb4e992a.zip/node_modules/ansi-regex/index.js"(exports2, module2) {
      "use strict";
      module2.exports = ({ onlyFirst = false } = {}) => {
        const pattern = [
          "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
          "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"
        ].join("|");
        return new RegExp(pattern, onlyFirst ? void 0 : "g");
      };
    }
  });

  // ../../../.yarn/cache/strip-ansi-npm-6.0.0-904613e9eb-fb33042c06.zip/node_modules/strip-ansi/index.js
  var require_strip_ansi = __commonJS({
    "../../../.yarn/cache/strip-ansi-npm-6.0.0-904613e9eb-fb33042c06.zip/node_modules/strip-ansi/index.js"(exports2, module2) {
      "use strict";
      var ansiRegex = require_ansi_regex();
      module2.exports = (string) => typeof string === "string" ? string.replace(ansiRegex(), "") : string;
    }
  });

  // ../../../.yarn/cache/is-fullwidth-code-point-npm-3.0.0-1ecf4ebee5-44a30c2945.zip/node_modules/is-fullwidth-code-point/index.js
  var require_is_fullwidth_code_point = __commonJS({
    "../../../.yarn/cache/is-fullwidth-code-point-npm-3.0.0-1ecf4ebee5-44a30c2945.zip/node_modules/is-fullwidth-code-point/index.js"(exports2, module2) {
      "use strict";
      var isFullwidthCodePoint = (codePoint) => {
        if (Number.isNaN(codePoint)) {
          return false;
        }
        if (codePoint >= 4352 && (codePoint <= 4447 || codePoint === 9001 || codePoint === 9002 || 11904 <= codePoint && codePoint <= 12871 && codePoint !== 12351 || 12880 <= codePoint && codePoint <= 19903 || 19968 <= codePoint && codePoint <= 42182 || 43360 <= codePoint && codePoint <= 43388 || 44032 <= codePoint && codePoint <= 55203 || 63744 <= codePoint && codePoint <= 64255 || 65040 <= codePoint && codePoint <= 65049 || 65072 <= codePoint && codePoint <= 65131 || 65281 <= codePoint && codePoint <= 65376 || 65504 <= codePoint && codePoint <= 65510 || 110592 <= codePoint && codePoint <= 110593 || 127488 <= codePoint && codePoint <= 127569 || 131072 <= codePoint && codePoint <= 262141)) {
          return true;
        }
        return false;
      };
      module2.exports = isFullwidthCodePoint;
      module2.exports.default = isFullwidthCodePoint;
    }
  });

  // ../../../.yarn/cache/emoji-regex-npm-8.0.0-213764015c-c72d67a682.zip/node_modules/emoji-regex/index.js
  var require_emoji_regex = __commonJS({
    "../../../.yarn/cache/emoji-regex-npm-8.0.0-213764015c-c72d67a682.zip/node_modules/emoji-regex/index.js"(exports2, module2) {
      "use strict";
      module2.exports = function() {
        return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
      };
    }
  });

  // ../../../.yarn/cache/string-width-npm-4.2.0-c4a2a66200-ee2c68df9a.zip/node_modules/string-width/index.js
  var require_string_width = __commonJS({
    "../../../.yarn/cache/string-width-npm-4.2.0-c4a2a66200-ee2c68df9a.zip/node_modules/string-width/index.js"(exports2, module2) {
      "use strict";
      var stripAnsi = require_strip_ansi();
      var isFullwidthCodePoint = require_is_fullwidth_code_point();
      var emojiRegex = require_emoji_regex();
      var stringWidth = (string) => {
        string = string.replace(emojiRegex(), "  ");
        if (typeof string !== "string" || string.length === 0) {
          return 0;
        }
        string = stripAnsi(string);
        let width = 0;
        for (let i2 = 0; i2 < string.length; i2++) {
          const code = string.codePointAt(i2);
          if (code <= 31 || code >= 127 && code <= 159) {
            continue;
          }
          if (code >= 768 && code <= 879) {
            continue;
          }
          if (code > 65535) {
            i2++;
          }
          width += isFullwidthCodePoint(code) ? 2 : 1;
        }
        return width;
      };
      module2.exports = stringWidth;
      module2.exports.default = stringWidth;
    }
  });

  // ../../../.yarn/cache/widest-line-npm-3.1.0-717bf2680b-03db6c9d0a.zip/node_modules/widest-line/index.js
  var require_widest_line = __commonJS({
    "../../../.yarn/cache/widest-line-npm-3.1.0-717bf2680b-03db6c9d0a.zip/node_modules/widest-line/index.js"(exports2, module2) {
      "use strict";
      var stringWidth = require_string_width();
      var widestLine = (input) => {
        let max = 0;
        for (const line of input.split("\n")) {
          max = Math.max(max, stringWidth(line));
        }
        return max;
      };
      module2.exports = widestLine;
      module2.exports.default = widestLine;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/measure-text.js
  var require_measure_text = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/measure-text.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var widest_line_1 = __importDefault(require_widest_line());
      var cache = {};
      exports2.default = (text) => {
        if (text.length === 0) {
          return {
            width: 0,
            height: 0
          };
        }
        if (cache[text]) {
          return cache[text];
        }
        const width = widest_line_1.default(text);
        const height = text.split("\n").length;
        cache[text] = { width, height };
        return { width, height };
      };
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/styles.js
  var require_styles = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/styles.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var yoga_layout_prebuilt_1 = __importDefault(require_entry_browser());
      var applyPositionStyles = (node, style) => {
        if ("position" in style) {
          node.setPositionType(style.position === "absolute" ? yoga_layout_prebuilt_1.default.POSITION_TYPE_ABSOLUTE : yoga_layout_prebuilt_1.default.POSITION_TYPE_RELATIVE);
        }
      };
      var applyMarginStyles = (node, style) => {
        if ("marginLeft" in style) {
          node.setMargin(yoga_layout_prebuilt_1.default.EDGE_START, style.marginLeft || 0);
        }
        if ("marginRight" in style) {
          node.setMargin(yoga_layout_prebuilt_1.default.EDGE_END, style.marginRight || 0);
        }
        if ("marginTop" in style) {
          node.setMargin(yoga_layout_prebuilt_1.default.EDGE_TOP, style.marginTop || 0);
        }
        if ("marginBottom" in style) {
          node.setMargin(yoga_layout_prebuilt_1.default.EDGE_BOTTOM, style.marginBottom || 0);
        }
      };
      var applyPaddingStyles = (node, style) => {
        if ("paddingLeft" in style) {
          node.setPadding(yoga_layout_prebuilt_1.default.EDGE_LEFT, style.paddingLeft || 0);
        }
        if ("paddingRight" in style) {
          node.setPadding(yoga_layout_prebuilt_1.default.EDGE_RIGHT, style.paddingRight || 0);
        }
        if ("paddingTop" in style) {
          node.setPadding(yoga_layout_prebuilt_1.default.EDGE_TOP, style.paddingTop || 0);
        }
        if ("paddingBottom" in style) {
          node.setPadding(yoga_layout_prebuilt_1.default.EDGE_BOTTOM, style.paddingBottom || 0);
        }
      };
      var applyFlexStyles = (node, style) => {
        var _a2;
        if ("flexGrow" in style) {
          node.setFlexGrow((_a2 = style.flexGrow) !== null && _a2 !== void 0 ? _a2 : 0);
        }
        if ("flexShrink" in style) {
          node.setFlexShrink(typeof style.flexShrink === "number" ? style.flexShrink : 1);
        }
        if ("flexDirection" in style) {
          if (style.flexDirection === "row") {
            node.setFlexDirection(yoga_layout_prebuilt_1.default.FLEX_DIRECTION_ROW);
          }
          if (style.flexDirection === "row-reverse") {
            node.setFlexDirection(yoga_layout_prebuilt_1.default.FLEX_DIRECTION_ROW_REVERSE);
          }
          if (style.flexDirection === "column") {
            node.setFlexDirection(yoga_layout_prebuilt_1.default.FLEX_DIRECTION_COLUMN);
          }
          if (style.flexDirection === "column-reverse") {
            node.setFlexDirection(yoga_layout_prebuilt_1.default.FLEX_DIRECTION_COLUMN_REVERSE);
          }
        }
        if ("flexBasis" in style) {
          if (typeof style.flexBasis === "number") {
            node.setFlexBasis(style.flexBasis);
          } else if (typeof style.flexBasis === "string") {
            node.setFlexBasisPercent(Number.parseInt(style.flexBasis, 10));
          } else {
            node.setFlexBasis(NaN);
          }
        }
        if ("alignItems" in style) {
          if (style.alignItems === "stretch" || !style.alignItems) {
            node.setAlignItems(yoga_layout_prebuilt_1.default.ALIGN_STRETCH);
          }
          if (style.alignItems === "flex-start") {
            node.setAlignItems(yoga_layout_prebuilt_1.default.ALIGN_FLEX_START);
          }
          if (style.alignItems === "center") {
            node.setAlignItems(yoga_layout_prebuilt_1.default.ALIGN_CENTER);
          }
          if (style.alignItems === "flex-end") {
            node.setAlignItems(yoga_layout_prebuilt_1.default.ALIGN_FLEX_END);
          }
        }
        if ("alignSelf" in style) {
          if (style.alignSelf === "auto" || !style.alignSelf) {
            node.setAlignSelf(yoga_layout_prebuilt_1.default.ALIGN_AUTO);
          }
          if (style.alignSelf === "flex-start") {
            node.setAlignSelf(yoga_layout_prebuilt_1.default.ALIGN_FLEX_START);
          }
          if (style.alignSelf === "center") {
            node.setAlignSelf(yoga_layout_prebuilt_1.default.ALIGN_CENTER);
          }
          if (style.alignSelf === "flex-end") {
            node.setAlignSelf(yoga_layout_prebuilt_1.default.ALIGN_FLEX_END);
          }
        }
        if ("justifyContent" in style) {
          if (style.justifyContent === "flex-start" || !style.justifyContent) {
            node.setJustifyContent(yoga_layout_prebuilt_1.default.JUSTIFY_FLEX_START);
          }
          if (style.justifyContent === "center") {
            node.setJustifyContent(yoga_layout_prebuilt_1.default.JUSTIFY_CENTER);
          }
          if (style.justifyContent === "flex-end") {
            node.setJustifyContent(yoga_layout_prebuilt_1.default.JUSTIFY_FLEX_END);
          }
          if (style.justifyContent === "space-between") {
            node.setJustifyContent(yoga_layout_prebuilt_1.default.JUSTIFY_SPACE_BETWEEN);
          }
          if (style.justifyContent === "space-around") {
            node.setJustifyContent(yoga_layout_prebuilt_1.default.JUSTIFY_SPACE_AROUND);
          }
        }
      };
      var applyDimensionStyles = (node, style) => {
        var _a2, _b;
        if ("width" in style) {
          if (typeof style.width === "number") {
            node.setWidth(style.width);
          } else if (typeof style.width === "string") {
            node.setWidthPercent(Number.parseInt(style.width, 10));
          } else {
            node.setWidthAuto();
          }
        }
        if ("height" in style) {
          if (typeof style.height === "number") {
            node.setHeight(style.height);
          } else if (typeof style.height === "string") {
            node.setHeightPercent(Number.parseInt(style.height, 10));
          } else {
            node.setHeightAuto();
          }
        }
        if ("minWidth" in style) {
          if (typeof style.minWidth === "string") {
            node.setMinWidthPercent(Number.parseInt(style.minWidth, 10));
          } else {
            node.setMinWidth((_a2 = style.minWidth) !== null && _a2 !== void 0 ? _a2 : 0);
          }
        }
        if ("minHeight" in style) {
          if (typeof style.minHeight === "string") {
            node.setMinHeightPercent(Number.parseInt(style.minHeight, 10));
          } else {
            node.setMinHeight((_b = style.minHeight) !== null && _b !== void 0 ? _b : 0);
          }
        }
      };
      var applyDisplayStyles = (node, style) => {
        if ("display" in style) {
          node.setDisplay(style.display === "flex" ? yoga_layout_prebuilt_1.default.DISPLAY_FLEX : yoga_layout_prebuilt_1.default.DISPLAY_NONE);
        }
      };
      var applyBorderStyles = (node, style) => {
        if ("borderStyle" in style) {
          const borderWidth = typeof style.borderStyle === "string" ? 1 : 0;
          node.setBorder(yoga_layout_prebuilt_1.default.EDGE_TOP, borderWidth);
          node.setBorder(yoga_layout_prebuilt_1.default.EDGE_BOTTOM, borderWidth);
          node.setBorder(yoga_layout_prebuilt_1.default.EDGE_LEFT, borderWidth);
          node.setBorder(yoga_layout_prebuilt_1.default.EDGE_RIGHT, borderWidth);
        }
      };
      exports2.default = (node, style = {}) => {
        applyPositionStyles(node, style);
        applyMarginStyles(node, style);
        applyPaddingStyles(node, style);
        applyFlexStyles(node, style);
        applyDimensionStyles(node, style);
        applyDisplayStyles(node, style);
        applyBorderStyles(node, style);
      };
    }
  });

  // ../../../.yarn/cache/color-name-npm-1.1.4-025792b0ea-b044585952.zip/node_modules/color-name/index.js
  var require_color_name = __commonJS({
    "../../../.yarn/cache/color-name-npm-1.1.4-025792b0ea-b044585952.zip/node_modules/color-name/index.js"(exports2, module2) {
      "use strict";
      module2.exports = {
        "aliceblue": [240, 248, 255],
        "antiquewhite": [250, 235, 215],
        "aqua": [0, 255, 255],
        "aquamarine": [127, 255, 212],
        "azure": [240, 255, 255],
        "beige": [245, 245, 220],
        "bisque": [255, 228, 196],
        "black": [0, 0, 0],
        "blanchedalmond": [255, 235, 205],
        "blue": [0, 0, 255],
        "blueviolet": [138, 43, 226],
        "brown": [165, 42, 42],
        "burlywood": [222, 184, 135],
        "cadetblue": [95, 158, 160],
        "chartreuse": [127, 255, 0],
        "chocolate": [210, 105, 30],
        "coral": [255, 127, 80],
        "cornflowerblue": [100, 149, 237],
        "cornsilk": [255, 248, 220],
        "crimson": [220, 20, 60],
        "cyan": [0, 255, 255],
        "darkblue": [0, 0, 139],
        "darkcyan": [0, 139, 139],
        "darkgoldenrod": [184, 134, 11],
        "darkgray": [169, 169, 169],
        "darkgreen": [0, 100, 0],
        "darkgrey": [169, 169, 169],
        "darkkhaki": [189, 183, 107],
        "darkmagenta": [139, 0, 139],
        "darkolivegreen": [85, 107, 47],
        "darkorange": [255, 140, 0],
        "darkorchid": [153, 50, 204],
        "darkred": [139, 0, 0],
        "darksalmon": [233, 150, 122],
        "darkseagreen": [143, 188, 143],
        "darkslateblue": [72, 61, 139],
        "darkslategray": [47, 79, 79],
        "darkslategrey": [47, 79, 79],
        "darkturquoise": [0, 206, 209],
        "darkviolet": [148, 0, 211],
        "deeppink": [255, 20, 147],
        "deepskyblue": [0, 191, 255],
        "dimgray": [105, 105, 105],
        "dimgrey": [105, 105, 105],
        "dodgerblue": [30, 144, 255],
        "firebrick": [178, 34, 34],
        "floralwhite": [255, 250, 240],
        "forestgreen": [34, 139, 34],
        "fuchsia": [255, 0, 255],
        "gainsboro": [220, 220, 220],
        "ghostwhite": [248, 248, 255],
        "gold": [255, 215, 0],
        "goldenrod": [218, 165, 32],
        "gray": [128, 128, 128],
        "green": [0, 128, 0],
        "greenyellow": [173, 255, 47],
        "grey": [128, 128, 128],
        "honeydew": [240, 255, 240],
        "hotpink": [255, 105, 180],
        "indianred": [205, 92, 92],
        "indigo": [75, 0, 130],
        "ivory": [255, 255, 240],
        "khaki": [240, 230, 140],
        "lavender": [230, 230, 250],
        "lavenderblush": [255, 240, 245],
        "lawngreen": [124, 252, 0],
        "lemonchiffon": [255, 250, 205],
        "lightblue": [173, 216, 230],
        "lightcoral": [240, 128, 128],
        "lightcyan": [224, 255, 255],
        "lightgoldenrodyellow": [250, 250, 210],
        "lightgray": [211, 211, 211],
        "lightgreen": [144, 238, 144],
        "lightgrey": [211, 211, 211],
        "lightpink": [255, 182, 193],
        "lightsalmon": [255, 160, 122],
        "lightseagreen": [32, 178, 170],
        "lightskyblue": [135, 206, 250],
        "lightslategray": [119, 136, 153],
        "lightslategrey": [119, 136, 153],
        "lightsteelblue": [176, 196, 222],
        "lightyellow": [255, 255, 224],
        "lime": [0, 255, 0],
        "limegreen": [50, 205, 50],
        "linen": [250, 240, 230],
        "magenta": [255, 0, 255],
        "maroon": [128, 0, 0],
        "mediumaquamarine": [102, 205, 170],
        "mediumblue": [0, 0, 205],
        "mediumorchid": [186, 85, 211],
        "mediumpurple": [147, 112, 219],
        "mediumseagreen": [60, 179, 113],
        "mediumslateblue": [123, 104, 238],
        "mediumspringgreen": [0, 250, 154],
        "mediumturquoise": [72, 209, 204],
        "mediumvioletred": [199, 21, 133],
        "midnightblue": [25, 25, 112],
        "mintcream": [245, 255, 250],
        "mistyrose": [255, 228, 225],
        "moccasin": [255, 228, 181],
        "navajowhite": [255, 222, 173],
        "navy": [0, 0, 128],
        "oldlace": [253, 245, 230],
        "olive": [128, 128, 0],
        "olivedrab": [107, 142, 35],
        "orange": [255, 165, 0],
        "orangered": [255, 69, 0],
        "orchid": [218, 112, 214],
        "palegoldenrod": [238, 232, 170],
        "palegreen": [152, 251, 152],
        "paleturquoise": [175, 238, 238],
        "palevioletred": [219, 112, 147],
        "papayawhip": [255, 239, 213],
        "peachpuff": [255, 218, 185],
        "peru": [205, 133, 63],
        "pink": [255, 192, 203],
        "plum": [221, 160, 221],
        "powderblue": [176, 224, 230],
        "purple": [128, 0, 128],
        "rebeccapurple": [102, 51, 153],
        "red": [255, 0, 0],
        "rosybrown": [188, 143, 143],
        "royalblue": [65, 105, 225],
        "saddlebrown": [139, 69, 19],
        "salmon": [250, 128, 114],
        "sandybrown": [244, 164, 96],
        "seagreen": [46, 139, 87],
        "seashell": [255, 245, 238],
        "sienna": [160, 82, 45],
        "silver": [192, 192, 192],
        "skyblue": [135, 206, 235],
        "slateblue": [106, 90, 205],
        "slategray": [112, 128, 144],
        "slategrey": [112, 128, 144],
        "snow": [255, 250, 250],
        "springgreen": [0, 255, 127],
        "steelblue": [70, 130, 180],
        "tan": [210, 180, 140],
        "teal": [0, 128, 128],
        "thistle": [216, 191, 216],
        "tomato": [255, 99, 71],
        "turquoise": [64, 224, 208],
        "violet": [238, 130, 238],
        "wheat": [245, 222, 179],
        "white": [255, 255, 255],
        "whitesmoke": [245, 245, 245],
        "yellow": [255, 255, 0],
        "yellowgreen": [154, 205, 50]
      };
    }
  });

  // ../../../.yarn/cache/color-convert-npm-2.0.1-79730e935b-fa00c91b43.zip/node_modules/color-convert/conversions.js
  var require_conversions = __commonJS({
    "../../../.yarn/cache/color-convert-npm-2.0.1-79730e935b-fa00c91b43.zip/node_modules/color-convert/conversions.js"(exports2, module2) {
      var cssKeywords = require_color_name();
      var reverseKeywords = {};
      for (const key2 of Object.keys(cssKeywords)) {
        reverseKeywords[cssKeywords[key2]] = key2;
      }
      var convert = {
        rgb: { channels: 3, labels: "rgb" },
        hsl: { channels: 3, labels: "hsl" },
        hsv: { channels: 3, labels: "hsv" },
        hwb: { channels: 3, labels: "hwb" },
        cmyk: { channels: 4, labels: "cmyk" },
        xyz: { channels: 3, labels: "xyz" },
        lab: { channels: 3, labels: "lab" },
        lch: { channels: 3, labels: "lch" },
        hex: { channels: 1, labels: ["hex"] },
        keyword: { channels: 1, labels: ["keyword"] },
        ansi16: { channels: 1, labels: ["ansi16"] },
        ansi256: { channels: 1, labels: ["ansi256"] },
        hcg: { channels: 3, labels: ["h", "c", "g"] },
        apple: { channels: 3, labels: ["r16", "g16", "b16"] },
        gray: { channels: 1, labels: ["gray"] }
      };
      module2.exports = convert;
      for (const model of Object.keys(convert)) {
        if (!("channels" in convert[model])) {
          throw new Error("missing channels property: " + model);
        }
        if (!("labels" in convert[model])) {
          throw new Error("missing channel labels property: " + model);
        }
        if (convert[model].labels.length !== convert[model].channels) {
          throw new Error("channel and label counts mismatch: " + model);
        }
        const { channels, labels } = convert[model];
        delete convert[model].channels;
        delete convert[model].labels;
        Object.defineProperty(convert[model], "channels", { value: channels });
        Object.defineProperty(convert[model], "labels", { value: labels });
      }
      convert.rgb.hsl = function(rgb) {
        const r = rgb[0] / 255;
        const g = rgb[1] / 255;
        const b = rgb[2] / 255;
        const min = Math.min(r, g, b);
        const max = Math.max(r, g, b);
        const delta = max - min;
        let h;
        let s;
        if (max === min) {
          h = 0;
        } else if (r === max) {
          h = (g - b) / delta;
        } else if (g === max) {
          h = 2 + (b - r) / delta;
        } else if (b === max) {
          h = 4 + (r - g) / delta;
        }
        h = Math.min(h * 60, 360);
        if (h < 0) {
          h += 360;
        }
        const l = (min + max) / 2;
        if (max === min) {
          s = 0;
        } else if (l <= 0.5) {
          s = delta / (max + min);
        } else {
          s = delta / (2 - max - min);
        }
        return [h, s * 100, l * 100];
      };
      convert.rgb.hsv = function(rgb) {
        let rdif;
        let gdif;
        let bdif;
        let h;
        let s;
        const r = rgb[0] / 255;
        const g = rgb[1] / 255;
        const b = rgb[2] / 255;
        const v = Math.max(r, g, b);
        const diff = v - Math.min(r, g, b);
        const diffc = function(c) {
          return (v - c) / 6 / diff + 1 / 2;
        };
        if (diff === 0) {
          h = 0;
          s = 0;
        } else {
          s = diff / v;
          rdif = diffc(r);
          gdif = diffc(g);
          bdif = diffc(b);
          if (r === v) {
            h = bdif - gdif;
          } else if (g === v) {
            h = 1 / 3 + rdif - bdif;
          } else if (b === v) {
            h = 2 / 3 + gdif - rdif;
          }
          if (h < 0) {
            h += 1;
          } else if (h > 1) {
            h -= 1;
          }
        }
        return [
          h * 360,
          s * 100,
          v * 100
        ];
      };
      convert.rgb.hwb = function(rgb) {
        const r = rgb[0];
        const g = rgb[1];
        let b = rgb[2];
        const h = convert.rgb.hsl(rgb)[0];
        const w = 1 / 255 * Math.min(r, Math.min(g, b));
        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
        return [h, w * 100, b * 100];
      };
      convert.rgb.cmyk = function(rgb) {
        const r = rgb[0] / 255;
        const g = rgb[1] / 255;
        const b = rgb[2] / 255;
        const k = Math.min(1 - r, 1 - g, 1 - b);
        const c = (1 - r - k) / (1 - k) || 0;
        const m = (1 - g - k) / (1 - k) || 0;
        const y = (1 - b - k) / (1 - k) || 0;
        return [c * 100, m * 100, y * 100, k * 100];
      };
      function comparativeDistance(x, y) {
        return (x[0] - y[0]) ** 2 + (x[1] - y[1]) ** 2 + (x[2] - y[2]) ** 2;
      }
      convert.rgb.keyword = function(rgb) {
        const reversed = reverseKeywords[rgb];
        if (reversed) {
          return reversed;
        }
        let currentClosestDistance = Infinity;
        let currentClosestKeyword;
        for (const keyword of Object.keys(cssKeywords)) {
          const value = cssKeywords[keyword];
          const distance = comparativeDistance(rgb, value);
          if (distance < currentClosestDistance) {
            currentClosestDistance = distance;
            currentClosestKeyword = keyword;
          }
        }
        return currentClosestKeyword;
      };
      convert.keyword.rgb = function(keyword) {
        return cssKeywords[keyword];
      };
      convert.rgb.xyz = function(rgb) {
        let r = rgb[0] / 255;
        let g = rgb[1] / 255;
        let b = rgb[2] / 255;
        r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92;
        g = g > 0.04045 ? ((g + 0.055) / 1.055) ** 2.4 : g / 12.92;
        b = b > 0.04045 ? ((b + 0.055) / 1.055) ** 2.4 : b / 12.92;
        const x = r * 0.4124 + g * 0.3576 + b * 0.1805;
        const y = r * 0.2126 + g * 0.7152 + b * 0.0722;
        const z = r * 0.0193 + g * 0.1192 + b * 0.9505;
        return [x * 100, y * 100, z * 100];
      };
      convert.rgb.lab = function(rgb) {
        const xyz = convert.rgb.xyz(rgb);
        let x = xyz[0];
        let y = xyz[1];
        let z = xyz[2];
        x /= 95.047;
        y /= 100;
        z /= 108.883;
        x = x > 8856e-6 ? x ** (1 / 3) : 7.787 * x + 16 / 116;
        y = y > 8856e-6 ? y ** (1 / 3) : 7.787 * y + 16 / 116;
        z = z > 8856e-6 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
        const l = 116 * y - 16;
        const a = 500 * (x - y);
        const b = 200 * (y - z);
        return [l, a, b];
      };
      convert.hsl.rgb = function(hsl) {
        const h = hsl[0] / 360;
        const s = hsl[1] / 100;
        const l = hsl[2] / 100;
        let t2;
        let t3;
        let val;
        if (s === 0) {
          val = l * 255;
          return [val, val, val];
        }
        if (l < 0.5) {
          t2 = l * (1 + s);
        } else {
          t2 = l + s - l * s;
        }
        const t1 = 2 * l - t2;
        const rgb = [0, 0, 0];
        for (let i2 = 0; i2 < 3; i2++) {
          t3 = h + 1 / 3 * -(i2 - 1);
          if (t3 < 0) {
            t3++;
          }
          if (t3 > 1) {
            t3--;
          }
          if (6 * t3 < 1) {
            val = t1 + (t2 - t1) * 6 * t3;
          } else if (2 * t3 < 1) {
            val = t2;
          } else if (3 * t3 < 2) {
            val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
          } else {
            val = t1;
          }
          rgb[i2] = val * 255;
        }
        return rgb;
      };
      convert.hsl.hsv = function(hsl) {
        const h = hsl[0];
        let s = hsl[1] / 100;
        let l = hsl[2] / 100;
        let smin = s;
        const lmin = Math.max(l, 0.01);
        l *= 2;
        s *= l <= 1 ? l : 2 - l;
        smin *= lmin <= 1 ? lmin : 2 - lmin;
        const v = (l + s) / 2;
        const sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);
        return [h, sv * 100, v * 100];
      };
      convert.hsv.rgb = function(hsv) {
        const h = hsv[0] / 60;
        const s = hsv[1] / 100;
        let v = hsv[2] / 100;
        const hi = Math.floor(h) % 6;
        const f = h - Math.floor(h);
        const p = 255 * v * (1 - s);
        const q = 255 * v * (1 - s * f);
        const t = 255 * v * (1 - s * (1 - f));
        v *= 255;
        switch (hi) {
          case 0:
            return [v, t, p];
          case 1:
            return [q, v, p];
          case 2:
            return [p, v, t];
          case 3:
            return [p, q, v];
          case 4:
            return [t, p, v];
          case 5:
            return [v, p, q];
        }
      };
      convert.hsv.hsl = function(hsv) {
        const h = hsv[0];
        const s = hsv[1] / 100;
        const v = hsv[2] / 100;
        const vmin = Math.max(v, 0.01);
        let sl;
        let l;
        l = (2 - s) * v;
        const lmin = (2 - s) * vmin;
        sl = s * vmin;
        sl /= lmin <= 1 ? lmin : 2 - lmin;
        sl = sl || 0;
        l /= 2;
        return [h, sl * 100, l * 100];
      };
      convert.hwb.rgb = function(hwb) {
        const h = hwb[0] / 360;
        let wh = hwb[1] / 100;
        let bl = hwb[2] / 100;
        const ratio = wh + bl;
        let f;
        if (ratio > 1) {
          wh /= ratio;
          bl /= ratio;
        }
        const i2 = Math.floor(6 * h);
        const v = 1 - bl;
        f = 6 * h - i2;
        if ((i2 & 1) !== 0) {
          f = 1 - f;
        }
        const n = wh + f * (v - wh);
        let r;
        let g;
        let b;
        switch (i2) {
          default:
          case 6:
          case 0:
            r = v;
            g = n;
            b = wh;
            break;
          case 1:
            r = n;
            g = v;
            b = wh;
            break;
          case 2:
            r = wh;
            g = v;
            b = n;
            break;
          case 3:
            r = wh;
            g = n;
            b = v;
            break;
          case 4:
            r = n;
            g = wh;
            b = v;
            break;
          case 5:
            r = v;
            g = wh;
            b = n;
            break;
        }
        return [r * 255, g * 255, b * 255];
      };
      convert.cmyk.rgb = function(cmyk) {
        const c = cmyk[0] / 100;
        const m = cmyk[1] / 100;
        const y = cmyk[2] / 100;
        const k = cmyk[3] / 100;
        const r = 1 - Math.min(1, c * (1 - k) + k);
        const g = 1 - Math.min(1, m * (1 - k) + k);
        const b = 1 - Math.min(1, y * (1 - k) + k);
        return [r * 255, g * 255, b * 255];
      };
      convert.xyz.rgb = function(xyz) {
        const x = xyz[0] / 100;
        const y = xyz[1] / 100;
        const z = xyz[2] / 100;
        let r;
        let g;
        let b;
        r = x * 3.2406 + y * -1.5372 + z * -0.4986;
        g = x * -0.9689 + y * 1.8758 + z * 0.0415;
        b = x * 0.0557 + y * -0.204 + z * 1.057;
        r = r > 31308e-7 ? 1.055 * r ** (1 / 2.4) - 0.055 : r * 12.92;
        g = g > 31308e-7 ? 1.055 * g ** (1 / 2.4) - 0.055 : g * 12.92;
        b = b > 31308e-7 ? 1.055 * b ** (1 / 2.4) - 0.055 : b * 12.92;
        r = Math.min(Math.max(0, r), 1);
        g = Math.min(Math.max(0, g), 1);
        b = Math.min(Math.max(0, b), 1);
        return [r * 255, g * 255, b * 255];
      };
      convert.xyz.lab = function(xyz) {
        let x = xyz[0];
        let y = xyz[1];
        let z = xyz[2];
        x /= 95.047;
        y /= 100;
        z /= 108.883;
        x = x > 8856e-6 ? x ** (1 / 3) : 7.787 * x + 16 / 116;
        y = y > 8856e-6 ? y ** (1 / 3) : 7.787 * y + 16 / 116;
        z = z > 8856e-6 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
        const l = 116 * y - 16;
        const a = 500 * (x - y);
        const b = 200 * (y - z);
        return [l, a, b];
      };
      convert.lab.xyz = function(lab) {
        const l = lab[0];
        const a = lab[1];
        const b = lab[2];
        let x;
        let y;
        let z;
        y = (l + 16) / 116;
        x = a / 500 + y;
        z = y - b / 200;
        const y2 = y ** 3;
        const x2 = x ** 3;
        const z2 = z ** 3;
        y = y2 > 8856e-6 ? y2 : (y - 16 / 116) / 7.787;
        x = x2 > 8856e-6 ? x2 : (x - 16 / 116) / 7.787;
        z = z2 > 8856e-6 ? z2 : (z - 16 / 116) / 7.787;
        x *= 95.047;
        y *= 100;
        z *= 108.883;
        return [x, y, z];
      };
      convert.lab.lch = function(lab) {
        const l = lab[0];
        const a = lab[1];
        const b = lab[2];
        let h;
        const hr = Math.atan2(b, a);
        h = hr * 360 / 2 / Math.PI;
        if (h < 0) {
          h += 360;
        }
        const c = Math.sqrt(a * a + b * b);
        return [l, c, h];
      };
      convert.lch.lab = function(lch) {
        const l = lch[0];
        const c = lch[1];
        const h = lch[2];
        const hr = h / 360 * 2 * Math.PI;
        const a = c * Math.cos(hr);
        const b = c * Math.sin(hr);
        return [l, a, b];
      };
      convert.rgb.ansi16 = function(args, saturation = null) {
        const [r, g, b] = args;
        let value = saturation === null ? convert.rgb.hsv(args)[2] : saturation;
        value = Math.round(value / 50);
        if (value === 0) {
          return 30;
        }
        let ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));
        if (value === 2) {
          ansi += 60;
        }
        return ansi;
      };
      convert.hsv.ansi16 = function(args) {
        return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
      };
      convert.rgb.ansi256 = function(args) {
        const r = args[0];
        const g = args[1];
        const b = args[2];
        if (r === g && g === b) {
          if (r < 8) {
            return 16;
          }
          if (r > 248) {
            return 231;
          }
          return Math.round((r - 8) / 247 * 24) + 232;
        }
        const ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);
        return ansi;
      };
      convert.ansi16.rgb = function(args) {
        let color = args % 10;
        if (color === 0 || color === 7) {
          if (args > 50) {
            color += 3.5;
          }
          color = color / 10.5 * 255;
          return [color, color, color];
        }
        const mult = (~~(args > 50) + 1) * 0.5;
        const r = (color & 1) * mult * 255;
        const g = (color >> 1 & 1) * mult * 255;
        const b = (color >> 2 & 1) * mult * 255;
        return [r, g, b];
      };
      convert.ansi256.rgb = function(args) {
        if (args >= 232) {
          const c = (args - 232) * 10 + 8;
          return [c, c, c];
        }
        args -= 16;
        let rem;
        const r = Math.floor(args / 36) / 5 * 255;
        const g = Math.floor((rem = args % 36) / 6) / 5 * 255;
        const b = rem % 6 / 5 * 255;
        return [r, g, b];
      };
      convert.rgb.hex = function(args) {
        const integer = ((Math.round(args[0]) & 255) << 16) + ((Math.round(args[1]) & 255) << 8) + (Math.round(args[2]) & 255);
        const string = integer.toString(16).toUpperCase();
        return "000000".substring(string.length) + string;
      };
      convert.hex.rgb = function(args) {
        const match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
        if (!match) {
          return [0, 0, 0];
        }
        let colorString = match[0];
        if (match[0].length === 3) {
          colorString = colorString.split("").map((char) => {
            return char + char;
          }).join("");
        }
        const integer = parseInt(colorString, 16);
        const r = integer >> 16 & 255;
        const g = integer >> 8 & 255;
        const b = integer & 255;
        return [r, g, b];
      };
      convert.rgb.hcg = function(rgb) {
        const r = rgb[0] / 255;
        const g = rgb[1] / 255;
        const b = rgb[2] / 255;
        const max = Math.max(Math.max(r, g), b);
        const min = Math.min(Math.min(r, g), b);
        const chroma = max - min;
        let grayscale;
        let hue;
        if (chroma < 1) {
          grayscale = min / (1 - chroma);
        } else {
          grayscale = 0;
        }
        if (chroma <= 0) {
          hue = 0;
        } else if (max === r) {
          hue = (g - b) / chroma % 6;
        } else if (max === g) {
          hue = 2 + (b - r) / chroma;
        } else {
          hue = 4 + (r - g) / chroma;
        }
        hue /= 6;
        hue %= 1;
        return [hue * 360, chroma * 100, grayscale * 100];
      };
      convert.hsl.hcg = function(hsl) {
        const s = hsl[1] / 100;
        const l = hsl[2] / 100;
        const c = l < 0.5 ? 2 * s * l : 2 * s * (1 - l);
        let f = 0;
        if (c < 1) {
          f = (l - 0.5 * c) / (1 - c);
        }
        return [hsl[0], c * 100, f * 100];
      };
      convert.hsv.hcg = function(hsv) {
        const s = hsv[1] / 100;
        const v = hsv[2] / 100;
        const c = s * v;
        let f = 0;
        if (c < 1) {
          f = (v - c) / (1 - c);
        }
        return [hsv[0], c * 100, f * 100];
      };
      convert.hcg.rgb = function(hcg) {
        const h = hcg[0] / 360;
        const c = hcg[1] / 100;
        const g = hcg[2] / 100;
        if (c === 0) {
          return [g * 255, g * 255, g * 255];
        }
        const pure = [0, 0, 0];
        const hi = h % 1 * 6;
        const v = hi % 1;
        const w = 1 - v;
        let mg = 0;
        switch (Math.floor(hi)) {
          case 0:
            pure[0] = 1;
            pure[1] = v;
            pure[2] = 0;
            break;
          case 1:
            pure[0] = w;
            pure[1] = 1;
            pure[2] = 0;
            break;
          case 2:
            pure[0] = 0;
            pure[1] = 1;
            pure[2] = v;
            break;
          case 3:
            pure[0] = 0;
            pure[1] = w;
            pure[2] = 1;
            break;
          case 4:
            pure[0] = v;
            pure[1] = 0;
            pure[2] = 1;
            break;
          default:
            pure[0] = 1;
            pure[1] = 0;
            pure[2] = w;
        }
        mg = (1 - c) * g;
        return [
          (c * pure[0] + mg) * 255,
          (c * pure[1] + mg) * 255,
          (c * pure[2] + mg) * 255
        ];
      };
      convert.hcg.hsv = function(hcg) {
        const c = hcg[1] / 100;
        const g = hcg[2] / 100;
        const v = c + g * (1 - c);
        let f = 0;
        if (v > 0) {
          f = c / v;
        }
        return [hcg[0], f * 100, v * 100];
      };
      convert.hcg.hsl = function(hcg) {
        const c = hcg[1] / 100;
        const g = hcg[2] / 100;
        const l = g * (1 - c) + 0.5 * c;
        let s = 0;
        if (l > 0 && l < 0.5) {
          s = c / (2 * l);
        } else if (l >= 0.5 && l < 1) {
          s = c / (2 * (1 - l));
        }
        return [hcg[0], s * 100, l * 100];
      };
      convert.hcg.hwb = function(hcg) {
        const c = hcg[1] / 100;
        const g = hcg[2] / 100;
        const v = c + g * (1 - c);
        return [hcg[0], (v - c) * 100, (1 - v) * 100];
      };
      convert.hwb.hcg = function(hwb) {
        const w = hwb[1] / 100;
        const b = hwb[2] / 100;
        const v = 1 - b;
        const c = v - w;
        let g = 0;
        if (c < 1) {
          g = (v - c) / (1 - c);
        }
        return [hwb[0], c * 100, g * 100];
      };
      convert.apple.rgb = function(apple) {
        return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];
      };
      convert.rgb.apple = function(rgb) {
        return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];
      };
      convert.gray.rgb = function(args) {
        return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
      };
      convert.gray.hsl = function(args) {
        return [0, 0, args[0]];
      };
      convert.gray.hsv = convert.gray.hsl;
      convert.gray.hwb = function(gray) {
        return [0, 100, gray[0]];
      };
      convert.gray.cmyk = function(gray) {
        return [0, 0, 0, gray[0]];
      };
      convert.gray.lab = function(gray) {
        return [gray[0], 0, 0];
      };
      convert.gray.hex = function(gray) {
        const val = Math.round(gray[0] / 100 * 255) & 255;
        const integer = (val << 16) + (val << 8) + val;
        const string = integer.toString(16).toUpperCase();
        return "000000".substring(string.length) + string;
      };
      convert.rgb.gray = function(rgb) {
        const val = (rgb[0] + rgb[1] + rgb[2]) / 3;
        return [val / 255 * 100];
      };
    }
  });

  // ../../../.yarn/cache/color-convert-npm-2.0.1-79730e935b-fa00c91b43.zip/node_modules/color-convert/route.js
  var require_route = __commonJS({
    "../../../.yarn/cache/color-convert-npm-2.0.1-79730e935b-fa00c91b43.zip/node_modules/color-convert/route.js"(exports2, module2) {
      var conversions = require_conversions();
      function buildGraph() {
        const graph = {};
        const models = Object.keys(conversions);
        for (let len = models.length, i2 = 0; i2 < len; i2++) {
          graph[models[i2]] = {
            distance: -1,
            parent: null
          };
        }
        return graph;
      }
      function deriveBFS(fromModel) {
        const graph = buildGraph();
        const queue = [fromModel];
        graph[fromModel].distance = 0;
        while (queue.length) {
          const current = queue.pop();
          const adjacents = Object.keys(conversions[current]);
          for (let len = adjacents.length, i2 = 0; i2 < len; i2++) {
            const adjacent = adjacents[i2];
            const node = graph[adjacent];
            if (node.distance === -1) {
              node.distance = graph[current].distance + 1;
              node.parent = current;
              queue.unshift(adjacent);
            }
          }
        }
        return graph;
      }
      function link(from, to) {
        return function(args) {
          return to(from(args));
        };
      }
      function wrapConversion(toModel, graph) {
        const path = [graph[toModel].parent, toModel];
        let fn = conversions[graph[toModel].parent][toModel];
        let cur = graph[toModel].parent;
        while (graph[cur].parent) {
          path.unshift(graph[cur].parent);
          fn = link(conversions[graph[cur].parent][cur], fn);
          cur = graph[cur].parent;
        }
        fn.conversion = path;
        return fn;
      }
      module2.exports = function(fromModel) {
        const graph = deriveBFS(fromModel);
        const conversion = {};
        const models = Object.keys(graph);
        for (let len = models.length, i2 = 0; i2 < len; i2++) {
          const toModel = models[i2];
          const node = graph[toModel];
          if (node.parent === null) {
            continue;
          }
          conversion[toModel] = wrapConversion(toModel, graph);
        }
        return conversion;
      };
    }
  });

  // ../../../.yarn/cache/color-convert-npm-2.0.1-79730e935b-fa00c91b43.zip/node_modules/color-convert/index.js
  var require_color_convert = __commonJS({
    "../../../.yarn/cache/color-convert-npm-2.0.1-79730e935b-fa00c91b43.zip/node_modules/color-convert/index.js"(exports2, module2) {
      var conversions = require_conversions();
      var route = require_route();
      var convert = {};
      var models = Object.keys(conversions);
      function wrapRaw(fn) {
        const wrappedFn = function(...args) {
          const arg0 = args[0];
          if (arg0 === void 0 || arg0 === null) {
            return arg0;
          }
          if (arg0.length > 1) {
            args = arg0;
          }
          return fn(args);
        };
        if ("conversion" in fn) {
          wrappedFn.conversion = fn.conversion;
        }
        return wrappedFn;
      }
      function wrapRounded(fn) {
        const wrappedFn = function(...args) {
          const arg0 = args[0];
          if (arg0 === void 0 || arg0 === null) {
            return arg0;
          }
          if (arg0.length > 1) {
            args = arg0;
          }
          const result = fn(args);
          if (typeof result === "object") {
            for (let len = result.length, i2 = 0; i2 < len; i2++) {
              result[i2] = Math.round(result[i2]);
            }
          }
          return result;
        };
        if ("conversion" in fn) {
          wrappedFn.conversion = fn.conversion;
        }
        return wrappedFn;
      }
      models.forEach((fromModel) => {
        convert[fromModel] = {};
        Object.defineProperty(convert[fromModel], "channels", { value: conversions[fromModel].channels });
        Object.defineProperty(convert[fromModel], "labels", { value: conversions[fromModel].labels });
        const routes = route(fromModel);
        const routeModels = Object.keys(routes);
        routeModels.forEach((toModel) => {
          const fn = routes[toModel];
          convert[fromModel][toModel] = wrapRounded(fn);
          convert[fromModel][toModel].raw = wrapRaw(fn);
        });
      });
      module2.exports = convert;
    }
  });

  // ../../../.yarn/cache/ansi-styles-npm-4.2.1-de50ec308d-7c74dbc7ec.zip/node_modules/ansi-styles/index.js
  var require_ansi_styles = __commonJS({
    "../../../.yarn/cache/ansi-styles-npm-4.2.1-de50ec308d-7c74dbc7ec.zip/node_modules/ansi-styles/index.js"(exports2, module2) {
      "use strict";
      var wrapAnsi16 = (fn, offset) => (...args) => {
        const code = fn(...args);
        return `\x1B[${code + offset}m`;
      };
      var wrapAnsi256 = (fn, offset) => (...args) => {
        const code = fn(...args);
        return `\x1B[${38 + offset};5;${code}m`;
      };
      var wrapAnsi16m = (fn, offset) => (...args) => {
        const rgb = fn(...args);
        return `\x1B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;
      };
      var ansi2ansi = (n) => n;
      var rgb2rgb = (r, g, b) => [r, g, b];
      var setLazyProperty = (object, property, get) => {
        Object.defineProperty(object, property, {
          get: () => {
            const value = get();
            Object.defineProperty(object, property, {
              value,
              enumerable: true,
              configurable: true
            });
            return value;
          },
          enumerable: true,
          configurable: true
        });
      };
      var colorConvert;
      var makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {
        if (colorConvert === void 0) {
          colorConvert = require_color_convert();
        }
        const offset = isBackground ? 10 : 0;
        const styles = {};
        for (const [sourceSpace, suite] of Object.entries(colorConvert)) {
          const name = sourceSpace === "ansi16" ? "ansi" : sourceSpace;
          if (sourceSpace === targetSpace) {
            styles[name] = wrap(identity, offset);
          } else if (typeof suite === "object") {
            styles[name] = wrap(suite[targetSpace], offset);
          }
        }
        return styles;
      };
      function assembleStyles() {
        const codes = /* @__PURE__ */ new Map();
        const styles = {
          modifier: {
            reset: [0, 0],
            bold: [1, 22],
            dim: [2, 22],
            italic: [3, 23],
            underline: [4, 24],
            inverse: [7, 27],
            hidden: [8, 28],
            strikethrough: [9, 29]
          },
          color: {
            black: [30, 39],
            red: [31, 39],
            green: [32, 39],
            yellow: [33, 39],
            blue: [34, 39],
            magenta: [35, 39],
            cyan: [36, 39],
            white: [37, 39],
            blackBright: [90, 39],
            redBright: [91, 39],
            greenBright: [92, 39],
            yellowBright: [93, 39],
            blueBright: [94, 39],
            magentaBright: [95, 39],
            cyanBright: [96, 39],
            whiteBright: [97, 39]
          },
          bgColor: {
            bgBlack: [40, 49],
            bgRed: [41, 49],
            bgGreen: [42, 49],
            bgYellow: [43, 49],
            bgBlue: [44, 49],
            bgMagenta: [45, 49],
            bgCyan: [46, 49],
            bgWhite: [47, 49],
            bgBlackBright: [100, 49],
            bgRedBright: [101, 49],
            bgGreenBright: [102, 49],
            bgYellowBright: [103, 49],
            bgBlueBright: [104, 49],
            bgMagentaBright: [105, 49],
            bgCyanBright: [106, 49],
            bgWhiteBright: [107, 49]
          }
        };
        styles.color.gray = styles.color.blackBright;
        styles.bgColor.bgGray = styles.bgColor.bgBlackBright;
        styles.color.grey = styles.color.blackBright;
        styles.bgColor.bgGrey = styles.bgColor.bgBlackBright;
        for (const [groupName, group] of Object.entries(styles)) {
          for (const [styleName, style] of Object.entries(group)) {
            styles[styleName] = {
              open: `\x1B[${style[0]}m`,
              close: `\x1B[${style[1]}m`
            };
            group[styleName] = styles[styleName];
            codes.set(style[0], style[1]);
          }
          Object.defineProperty(styles, groupName, {
            value: group,
            enumerable: false
          });
        }
        Object.defineProperty(styles, "codes", {
          value: codes,
          enumerable: false
        });
        styles.color.close = "\x1B[39m";
        styles.bgColor.close = "\x1B[49m";
        setLazyProperty(styles.color, "ansi", () => makeDynamicStyles(wrapAnsi16, "ansi16", ansi2ansi, false));
        setLazyProperty(styles.color, "ansi256", () => makeDynamicStyles(wrapAnsi256, "ansi256", ansi2ansi, false));
        setLazyProperty(styles.color, "ansi16m", () => makeDynamicStyles(wrapAnsi16m, "rgb", rgb2rgb, false));
        setLazyProperty(styles.bgColor, "ansi", () => makeDynamicStyles(wrapAnsi16, "ansi16", ansi2ansi, true));
        setLazyProperty(styles.bgColor, "ansi256", () => makeDynamicStyles(wrapAnsi256, "ansi256", ansi2ansi, true));
        setLazyProperty(styles.bgColor, "ansi16m", () => makeDynamicStyles(wrapAnsi16m, "rgb", rgb2rgb, true));
        return styles;
      }
      Object.defineProperty(module2, "exports", {
        enumerable: true,
        get: assembleStyles
      });
    }
  });

  // ../../../.yarn/cache/wrap-ansi-npm-6.2.0-439a7246d8-0d64f2d438.zip/node_modules/wrap-ansi/index.js
  var require_wrap_ansi = __commonJS({
    "../../../.yarn/cache/wrap-ansi-npm-6.2.0-439a7246d8-0d64f2d438.zip/node_modules/wrap-ansi/index.js"(exports2, module2) {
      "use strict";
      var stringWidth = require_string_width();
      var stripAnsi = require_strip_ansi();
      var ansiStyles = require_ansi_styles();
      var ESCAPES = /* @__PURE__ */ new Set([
        "\x1B",
        "\x9B"
      ]);
      var END_CODE = 39;
      var wrapAnsi = (code) => `${ESCAPES.values().next().value}[${code}m`;
      var wordLengths = (string) => string.split(" ").map((character) => stringWidth(character));
      var wrapWord = (rows, word, columns) => {
        const characters = [...word];
        let isInsideEscape = false;
        let visible = stringWidth(stripAnsi(rows[rows.length - 1]));
        for (const [index, character] of characters.entries()) {
          const characterLength = stringWidth(character);
          if (visible + characterLength <= columns) {
            rows[rows.length - 1] += character;
          } else {
            rows.push(character);
            visible = 0;
          }
          if (ESCAPES.has(character)) {
            isInsideEscape = true;
          } else if (isInsideEscape && character === "m") {
            isInsideEscape = false;
            continue;
          }
          if (isInsideEscape) {
            continue;
          }
          visible += characterLength;
          if (visible === columns && index < characters.length - 1) {
            rows.push("");
            visible = 0;
          }
        }
        if (!visible && rows[rows.length - 1].length > 0 && rows.length > 1) {
          rows[rows.length - 2] += rows.pop();
        }
      };
      var stringVisibleTrimSpacesRight = (str) => {
        const words = str.split(" ");
        let last = words.length;
        while (last > 0) {
          if (stringWidth(words[last - 1]) > 0) {
            break;
          }
          last--;
        }
        if (last === words.length) {
          return str;
        }
        return words.slice(0, last).join(" ") + words.slice(last).join("");
      };
      var exec = (string, columns, options = {}) => {
        if (options.trim !== false && string.trim() === "") {
          return "";
        }
        let pre = "";
        let ret = "";
        let escapeCode;
        const lengths = wordLengths(string);
        let rows = [""];
        for (const [index, word] of string.split(" ").entries()) {
          if (options.trim !== false) {
            rows[rows.length - 1] = rows[rows.length - 1].trimLeft();
          }
          let rowLength = stringWidth(rows[rows.length - 1]);
          if (index !== 0) {
            if (rowLength >= columns && (options.wordWrap === false || options.trim === false)) {
              rows.push("");
              rowLength = 0;
            }
            if (rowLength > 0 || options.trim === false) {
              rows[rows.length - 1] += " ";
              rowLength++;
            }
          }
          if (options.hard && lengths[index] > columns) {
            const remainingColumns = columns - rowLength;
            const breaksStartingThisLine = 1 + Math.floor((lengths[index] - remainingColumns - 1) / columns);
            const breaksStartingNextLine = Math.floor((lengths[index] - 1) / columns);
            if (breaksStartingNextLine < breaksStartingThisLine) {
              rows.push("");
            }
            wrapWord(rows, word, columns);
            continue;
          }
          if (rowLength + lengths[index] > columns && rowLength > 0 && lengths[index] > 0) {
            if (options.wordWrap === false && rowLength < columns) {
              wrapWord(rows, word, columns);
              continue;
            }
            rows.push("");
          }
          if (rowLength + lengths[index] > columns && options.wordWrap === false) {
            wrapWord(rows, word, columns);
            continue;
          }
          rows[rows.length - 1] += word;
        }
        if (options.trim !== false) {
          rows = rows.map(stringVisibleTrimSpacesRight);
        }
        pre = rows.join("\n");
        for (const [index, character] of [...pre].entries()) {
          ret += character;
          if (ESCAPES.has(character)) {
            const code2 = parseFloat(/\d[^m]*/.exec(pre.slice(index, index + 4)));
            escapeCode = code2 === END_CODE ? null : code2;
          }
          const code = ansiStyles.codes.get(Number(escapeCode));
          if (escapeCode && code) {
            if (pre[index + 1] === "\n") {
              ret += wrapAnsi(code);
            } else if (character === "\n") {
              ret += wrapAnsi(escapeCode);
            }
          }
        }
        return ret;
      };
      module2.exports = (string, columns, options) => {
        return String(string).normalize().replace(/\r\n/g, "\n").split("\n").map((line) => exec(line, columns, options)).join("\n");
      };
    }
  });

  // ../../../.yarn/cache/astral-regex-npm-2.0.0-f30d866aab-876231688c.zip/node_modules/astral-regex/index.js
  var require_astral_regex = __commonJS({
    "../../../.yarn/cache/astral-regex-npm-2.0.0-f30d866aab-876231688c.zip/node_modules/astral-regex/index.js"(exports2, module2) {
      "use strict";
      var regex = "[\uD800-\uDBFF][\uDC00-\uDFFF]";
      var astralRegex = (options) => options && options.exact ? new RegExp(`^${regex}$`) : new RegExp(regex, "g");
      module2.exports = astralRegex;
    }
  });

  // ../../../.yarn/cache/slice-ansi-npm-3.0.0-d9999864af-5ec6d022d1.zip/node_modules/slice-ansi/index.js
  var require_slice_ansi = __commonJS({
    "../../../.yarn/cache/slice-ansi-npm-3.0.0-d9999864af-5ec6d022d1.zip/node_modules/slice-ansi/index.js"(exports2, module2) {
      "use strict";
      var isFullwidthCodePoint = require_is_fullwidth_code_point();
      var astralRegex = require_astral_regex();
      var ansiStyles = require_ansi_styles();
      var ESCAPES = [
        "\x1B",
        "\x9B"
      ];
      var wrapAnsi = (code) => `${ESCAPES[0]}[${code}m`;
      var checkAnsi = (ansiCodes, isEscapes, endAnsiCode) => {
        let output = [];
        ansiCodes = [...ansiCodes];
        for (let ansiCode of ansiCodes) {
          const ansiCodeOrigin = ansiCode;
          if (ansiCode.match(";")) {
            ansiCode = ansiCode.split(";")[0][0] + "0";
          }
          const item = ansiStyles.codes.get(parseInt(ansiCode, 10));
          if (item) {
            const indexEscape = ansiCodes.indexOf(item.toString());
            if (indexEscape >= 0) {
              ansiCodes.splice(indexEscape, 1);
            } else {
              output.push(wrapAnsi(isEscapes ? item : ansiCodeOrigin));
            }
          } else if (isEscapes) {
            output.push(wrapAnsi(0));
            break;
          } else {
            output.push(wrapAnsi(ansiCodeOrigin));
          }
        }
        if (isEscapes) {
          output = output.filter((element, index) => output.indexOf(element) === index);
          if (endAnsiCode !== void 0) {
            const fistEscapeCode = wrapAnsi(ansiStyles.codes.get(parseInt(endAnsiCode, 10)));
            output = output.reduce((current, next) => next === fistEscapeCode ? [next, ...current] : [...current, next], []);
          }
        }
        return output.join("");
      };
      module2.exports = (string, begin, end) => {
        const characters = [...string.normalize()];
        const ansiCodes = [];
        end = typeof end === "number" ? end : characters.length;
        let isInsideEscape = false;
        let ansiCode;
        let visible = 0;
        let output = "";
        for (const [index, character] of characters.entries()) {
          let leftEscape = false;
          if (ESCAPES.includes(character)) {
            const code = /\d[^m]*/.exec(string.slice(index, index + 18));
            ansiCode = code && code.length > 0 ? code[0] : void 0;
            if (visible < end) {
              isInsideEscape = true;
              if (ansiCode !== void 0) {
                ansiCodes.push(ansiCode);
              }
            }
          } else if (isInsideEscape && character === "m") {
            isInsideEscape = false;
            leftEscape = true;
          }
          if (!isInsideEscape && !leftEscape) {
            ++visible;
          }
          if (!astralRegex({ exact: true }).test(character) && isFullwidthCodePoint(character.codePointAt())) {
            ++visible;
          }
          if (visible > begin && visible <= end) {
            output += character;
          } else if (visible === begin && !isInsideEscape && ansiCode !== void 0) {
            output = checkAnsi(ansiCodes);
          } else if (visible >= end) {
            output += checkAnsi(ansiCodes, true, ansiCode);
            break;
          }
        }
        return output;
      };
    }
  });

  // ../../../.yarn/cache/cli-truncate-npm-2.1.0-72184d3467-976f1887de.zip/node_modules/cli-truncate/index.js
  var require_cli_truncate = __commonJS({
    "../../../.yarn/cache/cli-truncate-npm-2.1.0-72184d3467-976f1887de.zip/node_modules/cli-truncate/index.js"(exports2, module2) {
      "use strict";
      var sliceAnsi = require_slice_ansi();
      var stringWidth = require_string_width();
      function getIndexOfNearestSpace(string, index, shouldSearchRight) {
        if (string.charAt(index) === " ") {
          return index;
        }
        for (let i2 = 1; i2 <= 3; i2++) {
          if (shouldSearchRight) {
            if (string.charAt(index + i2) === " ") {
              return index + i2;
            }
          } else if (string.charAt(index - i2) === " ") {
            return index - i2;
          }
        }
        return index;
      }
      module2.exports = (text, columns, options) => {
        options = {
          position: "end",
          preferTruncationOnSpace: false,
          ...options
        };
        const { position, space, preferTruncationOnSpace } = options;
        let ellipsis = "\u2026";
        let ellipsisWidth = 1;
        if (typeof text !== "string") {
          throw new TypeError(`Expected \`input\` to be a string, got ${typeof text}`);
        }
        if (typeof columns !== "number") {
          throw new TypeError(`Expected \`columns\` to be a number, got ${typeof columns}`);
        }
        if (columns < 1) {
          return "";
        }
        if (columns === 1) {
          return ellipsis;
        }
        const length = stringWidth(text);
        if (length <= columns) {
          return text;
        }
        if (position === "start") {
          if (preferTruncationOnSpace) {
            const nearestSpace = getIndexOfNearestSpace(text, length - columns + 1, true);
            return ellipsis + sliceAnsi(text, nearestSpace, length).trim();
          }
          if (space === true) {
            ellipsis += " ";
            ellipsisWidth = 2;
          }
          return ellipsis + sliceAnsi(text, length - columns + ellipsisWidth, length);
        }
        if (position === "middle") {
          if (space === true) {
            ellipsis = " " + ellipsis + " ";
            ellipsisWidth = 3;
          }
          const half = Math.floor(columns / 2);
          if (preferTruncationOnSpace) {
            const spaceNearFirstBreakPoint = getIndexOfNearestSpace(text, half);
            const spaceNearSecondBreakPoint = getIndexOfNearestSpace(text, length - (columns - half) + 1, true);
            return sliceAnsi(text, 0, spaceNearFirstBreakPoint) + ellipsis + sliceAnsi(text, spaceNearSecondBreakPoint, length).trim();
          }
          return sliceAnsi(text, 0, half) + ellipsis + sliceAnsi(text, length - (columns - half) + ellipsisWidth, length);
        }
        if (position === "end") {
          if (preferTruncationOnSpace) {
            const nearestSpace = getIndexOfNearestSpace(text, columns - 1);
            return sliceAnsi(text, 0, nearestSpace) + ellipsis;
          }
          if (space === true) {
            ellipsis = " " + ellipsis;
            ellipsisWidth = 2;
          }
          return sliceAnsi(text, 0, columns - ellipsisWidth) + ellipsis;
        }
        throw new Error(`Expected \`options.position\` to be either \`start\`, \`middle\` or \`end\`, got ${position}`);
      };
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/wrap-text.js
  var require_wrap_text = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/wrap-text.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var wrap_ansi_1 = __importDefault(require_wrap_ansi());
      var cli_truncate_1 = __importDefault(require_cli_truncate());
      var cache = {};
      exports2.default = (text, maxWidth, wrapType) => {
        const cacheKey = text + String(maxWidth) + String(wrapType);
        if (cache[cacheKey]) {
          return cache[cacheKey];
        }
        let wrappedText = text;
        if (wrapType === "wrap") {
          wrappedText = wrap_ansi_1.default(text, maxWidth, {
            trim: false,
            hard: true
          });
        }
        if (wrapType.startsWith("truncate")) {
          let position = "end";
          if (wrapType === "truncate-middle") {
            position = "middle";
          }
          if (wrapType === "truncate-start") {
            position = "start";
          }
          wrappedText = cli_truncate_1.default(text, maxWidth, { position });
        }
        cache[cacheKey] = wrappedText;
        return wrappedText;
      };
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/squash-text-nodes.js
  var require_squash_text_nodes = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/squash-text-nodes.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      var squashTextNodes = (node) => {
        let text = "";
        if (node.childNodes.length > 0) {
          for (const childNode of node.childNodes) {
            let nodeText = "";
            if (childNode.nodeName === "#text") {
              nodeText = childNode.nodeValue;
            } else {
              if (childNode.nodeName === "ink-text" || childNode.nodeName === "ink-virtual-text") {
                nodeText = squashTextNodes(childNode);
              }
              if (nodeText.length > 0 && typeof childNode.internal_transform === "function") {
                nodeText = childNode.internal_transform(nodeText);
              }
            }
            text += nodeText;
          }
        }
        return text;
      };
      exports2.default = squashTextNodes;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/dom.js
  var require_dom = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/dom.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.setTextNodeValue = exports2.createTextNode = exports2.setStyle = exports2.setAttribute = exports2.removeChildNode = exports2.insertBeforeNode = exports2.appendChildNode = exports2.createNode = exports2.TEXT_NAME = void 0;
      var yoga_layout_prebuilt_1 = __importDefault(require_entry_browser());
      var measure_text_1 = __importDefault(require_measure_text());
      var styles_1 = __importDefault(require_styles());
      var wrap_text_1 = __importDefault(require_wrap_text());
      var squash_text_nodes_1 = __importDefault(require_squash_text_nodes());
      exports2.TEXT_NAME = "#text";
      exports2.createNode = (nodeName) => {
        var _a2;
        const node = {
          nodeName,
          style: {},
          attributes: {},
          childNodes: [],
          parentNode: null,
          yogaNode: nodeName === "ink-virtual-text" ? void 0 : yoga_layout_prebuilt_1.default.Node.create()
        };
        if (nodeName === "ink-text") {
          (_a2 = node.yogaNode) === null || _a2 === void 0 ? void 0 : _a2.setMeasureFunc(measureTextNode.bind(null, node));
        }
        return node;
      };
      exports2.appendChildNode = (node, childNode) => {
        var _a2;
        if (childNode.parentNode) {
          exports2.removeChildNode(childNode.parentNode, childNode);
        }
        childNode.parentNode = node;
        node.childNodes.push(childNode);
        if (childNode.yogaNode) {
          (_a2 = node.yogaNode) === null || _a2 === void 0 ? void 0 : _a2.insertChild(childNode.yogaNode, node.yogaNode.getChildCount());
        }
        if (node.nodeName === "ink-text" || node.nodeName === "ink-virtual-text") {
          markNodeAsDirty(node);
        }
      };
      exports2.insertBeforeNode = (node, newChildNode, beforeChildNode) => {
        var _a2, _b;
        if (newChildNode.parentNode) {
          exports2.removeChildNode(newChildNode.parentNode, newChildNode);
        }
        newChildNode.parentNode = node;
        const index = node.childNodes.indexOf(beforeChildNode);
        if (index >= 0) {
          node.childNodes.splice(index, 0, newChildNode);
          if (newChildNode.yogaNode) {
            (_a2 = node.yogaNode) === null || _a2 === void 0 ? void 0 : _a2.insertChild(newChildNode.yogaNode, index);
          }
          return;
        }
        node.childNodes.push(newChildNode);
        if (newChildNode.yogaNode) {
          (_b = node.yogaNode) === null || _b === void 0 ? void 0 : _b.insertChild(newChildNode.yogaNode, node.yogaNode.getChildCount());
        }
        if (node.nodeName === "ink-text" || node.nodeName === "ink-virtual-text") {
          markNodeAsDirty(node);
        }
      };
      exports2.removeChildNode = (node, removeNode) => {
        var _a2, _b;
        if (removeNode.yogaNode) {
          (_b = (_a2 = removeNode.parentNode) === null || _a2 === void 0 ? void 0 : _a2.yogaNode) === null || _b === void 0 ? void 0 : _b.removeChild(removeNode.yogaNode);
        }
        removeNode.parentNode = null;
        const index = node.childNodes.indexOf(removeNode);
        if (index >= 0) {
          node.childNodes.splice(index, 1);
        }
        if (node.nodeName === "ink-text" || node.nodeName === "ink-virtual-text") {
          markNodeAsDirty(node);
        }
      };
      exports2.setAttribute = (node, key2, value) => {
        node.attributes[key2] = value;
      };
      exports2.setStyle = (node, style) => {
        node.style = style;
        if (node.yogaNode) {
          styles_1.default(node.yogaNode, style);
        }
      };
      exports2.createTextNode = (text) => {
        const node = {
          nodeName: "#text",
          nodeValue: text,
          yogaNode: void 0,
          parentNode: null,
          style: {}
        };
        exports2.setTextNodeValue(node, text);
        return node;
      };
      var measureTextNode = function(node, width) {
        var _a2, _b;
        const text = node.nodeName === "#text" ? node.nodeValue : squash_text_nodes_1.default(node);
        const dimensions = measure_text_1.default(text);
        if (dimensions.width <= width) {
          return dimensions;
        }
        if (dimensions.width >= 1 && width > 0 && width < 1) {
          return dimensions;
        }
        const textWrap = (_b = (_a2 = node.style) === null || _a2 === void 0 ? void 0 : _a2.textWrap) !== null && _b !== void 0 ? _b : "wrap";
        const wrappedText = wrap_text_1.default(text, width, textWrap);
        return measure_text_1.default(wrappedText);
      };
      var findClosestYogaNode = (node) => {
        var _a2;
        if (!node || !node.parentNode) {
          return void 0;
        }
        return (_a2 = node.yogaNode) !== null && _a2 !== void 0 ? _a2 : findClosestYogaNode(node.parentNode);
      };
      var markNodeAsDirty = (node) => {
        const yogaNode = findClosestYogaNode(node);
        yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.markDirty();
      };
      exports2.setTextNodeValue = (node, text) => {
        if (typeof text !== "string") {
          text = String(text);
        }
        node.nodeValue = text;
        markNodeAsDirty(node);
      };
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/constants.js
  var require_constants = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/constants.js"(exports2, module2) {
      "use strict";
      module2.exports = {
        BINARY_TYPES: ["nodebuffer", "arraybuffer", "fragments"],
        GUID: "258EAFA5-E914-47DA-95CA-C5AB0DC85B11",
        kStatusCode: Symbol("status-code"),
        kWebSocket: Symbol("websocket"),
        EMPTY_BUFFER: Buffer.alloc(0),
        NOOP: () => {
        }
      };
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/buffer-util.js
  var require_buffer_util = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/buffer-util.js"(exports2, module2) {
      "use strict";
      var { EMPTY_BUFFER } = require_constants();
      function concat(list, totalLength) {
        if (list.length === 0)
          return EMPTY_BUFFER;
        if (list.length === 1)
          return list[0];
        const target = Buffer.allocUnsafe(totalLength);
        let offset = 0;
        for (let i2 = 0; i2 < list.length; i2++) {
          const buf = list[i2];
          target.set(buf, offset);
          offset += buf.length;
        }
        if (offset < totalLength)
          return target.slice(0, offset);
        return target;
      }
      function _mask(source, mask2, output, offset, length) {
        for (let i2 = 0; i2 < length; i2++) {
          output[offset + i2] = source[i2] ^ mask2[i2 & 3];
        }
      }
      function _unmask(buffer2, mask2) {
        const length = buffer2.length;
        for (let i2 = 0; i2 < length; i2++) {
          buffer2[i2] ^= mask2[i2 & 3];
        }
      }
      function toArrayBuffer(buf) {
        if (buf.byteLength === buf.buffer.byteLength) {
          return buf.buffer;
        }
        return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
      }
      function toBuffer(data) {
        toBuffer.readOnly = true;
        if (Buffer.isBuffer(data))
          return data;
        let buf;
        if (data instanceof ArrayBuffer) {
          buf = Buffer.from(data);
        } else if (ArrayBuffer.isView(data)) {
          buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);
        } else {
          buf = Buffer.from(data);
          toBuffer.readOnly = false;
        }
        return buf;
      }
      try {
        const bufferUtil = __require("bufferutil");
        const bu = bufferUtil.BufferUtil || bufferUtil;
        module2.exports = {
          concat,
          mask(source, mask2, output, offset, length) {
            if (length < 48)
              _mask(source, mask2, output, offset, length);
            else
              bu.mask(source, mask2, output, offset, length);
          },
          toArrayBuffer,
          toBuffer,
          unmask(buffer2, mask2) {
            if (buffer2.length < 32)
              _unmask(buffer2, mask2);
            else
              bu.unmask(buffer2, mask2);
          }
        };
      } catch (e) {
        module2.exports = {
          concat,
          mask: _mask,
          toArrayBuffer,
          toBuffer,
          unmask: _unmask
        };
      }
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/limiter.js
  var require_limiter = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/limiter.js"(exports2, module2) {
      "use strict";
      var kDone = Symbol("kDone");
      var kRun = Symbol("kRun");
      var Limiter = class {
        constructor(concurrency) {
          this[kDone] = () => {
            this.pending--;
            this[kRun]();
          };
          this.concurrency = concurrency || Infinity;
          this.jobs = [];
          this.pending = 0;
        }
        add(job) {
          this.jobs.push(job);
          this[kRun]();
        }
        [kRun]() {
          if (this.pending === this.concurrency)
            return;
          if (this.jobs.length) {
            const job = this.jobs.shift();
            this.pending++;
            job(this[kDone]);
          }
        }
      };
      module2.exports = Limiter;
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/permessage-deflate.js
  var require_permessage_deflate = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/permessage-deflate.js"(exports2, module2) {
      "use strict";
      var zlib = __require("zlib");
      var bufferUtil = require_buffer_util();
      var Limiter = require_limiter();
      var { kStatusCode, NOOP } = require_constants();
      var TRAILER = Buffer.from([0, 0, 255, 255]);
      var kPerMessageDeflate = Symbol("permessage-deflate");
      var kTotalLength = Symbol("total-length");
      var kCallback = Symbol("callback");
      var kBuffers = Symbol("buffers");
      var kError = Symbol("error");
      var zlibLimiter;
      var PerMessageDeflate = class {
        constructor(options, isServer, maxPayload) {
          this._maxPayload = maxPayload | 0;
          this._options = options || {};
          this._threshold = this._options.threshold !== void 0 ? this._options.threshold : 1024;
          this._isServer = !!isServer;
          this._deflate = null;
          this._inflate = null;
          this.params = null;
          if (!zlibLimiter) {
            const concurrency = this._options.concurrencyLimit !== void 0 ? this._options.concurrencyLimit : 10;
            zlibLimiter = new Limiter(concurrency);
          }
        }
        static get extensionName() {
          return "permessage-deflate";
        }
        offer() {
          const params = {};
          if (this._options.serverNoContextTakeover) {
            params.server_no_context_takeover = true;
          }
          if (this._options.clientNoContextTakeover) {
            params.client_no_context_takeover = true;
          }
          if (this._options.serverMaxWindowBits) {
            params.server_max_window_bits = this._options.serverMaxWindowBits;
          }
          if (this._options.clientMaxWindowBits) {
            params.client_max_window_bits = this._options.clientMaxWindowBits;
          } else if (this._options.clientMaxWindowBits == null) {
            params.client_max_window_bits = true;
          }
          return params;
        }
        accept(configurations) {
          configurations = this.normalizeParams(configurations);
          this.params = this._isServer ? this.acceptAsServer(configurations) : this.acceptAsClient(configurations);
          return this.params;
        }
        cleanup() {
          if (this._inflate) {
            this._inflate.close();
            this._inflate = null;
          }
          if (this._deflate) {
            const callback = this._deflate[kCallback];
            this._deflate.close();
            this._deflate = null;
            if (callback) {
              callback(
                new Error(
                  "The deflate stream was closed while data was being processed"
                )
              );
            }
          }
        }
        acceptAsServer(offers) {
          const opts = this._options;
          const accepted = offers.find((params) => {
            if (opts.serverNoContextTakeover === false && params.server_no_context_takeover || params.server_max_window_bits && (opts.serverMaxWindowBits === false || typeof opts.serverMaxWindowBits === "number" && opts.serverMaxWindowBits > params.server_max_window_bits) || typeof opts.clientMaxWindowBits === "number" && !params.client_max_window_bits) {
              return false;
            }
            return true;
          });
          if (!accepted) {
            throw new Error("None of the extension offers can be accepted");
          }
          if (opts.serverNoContextTakeover) {
            accepted.server_no_context_takeover = true;
          }
          if (opts.clientNoContextTakeover) {
            accepted.client_no_context_takeover = true;
          }
          if (typeof opts.serverMaxWindowBits === "number") {
            accepted.server_max_window_bits = opts.serverMaxWindowBits;
          }
          if (typeof opts.clientMaxWindowBits === "number") {
            accepted.client_max_window_bits = opts.clientMaxWindowBits;
          } else if (accepted.client_max_window_bits === true || opts.clientMaxWindowBits === false) {
            delete accepted.client_max_window_bits;
          }
          return accepted;
        }
        acceptAsClient(response) {
          const params = response[0];
          if (this._options.clientNoContextTakeover === false && params.client_no_context_takeover) {
            throw new Error('Unexpected parameter "client_no_context_takeover"');
          }
          if (!params.client_max_window_bits) {
            if (typeof this._options.clientMaxWindowBits === "number") {
              params.client_max_window_bits = this._options.clientMaxWindowBits;
            }
          } else if (this._options.clientMaxWindowBits === false || typeof this._options.clientMaxWindowBits === "number" && params.client_max_window_bits > this._options.clientMaxWindowBits) {
            throw new Error(
              'Unexpected or invalid parameter "client_max_window_bits"'
            );
          }
          return params;
        }
        normalizeParams(configurations) {
          configurations.forEach((params) => {
            Object.keys(params).forEach((key2) => {
              let value = params[key2];
              if (value.length > 1) {
                throw new Error(`Parameter "${key2}" must have only a single value`);
              }
              value = value[0];
              if (key2 === "client_max_window_bits") {
                if (value !== true) {
                  const num2 = +value;
                  if (!Number.isInteger(num2) || num2 < 8 || num2 > 15) {
                    throw new TypeError(
                      `Invalid value for parameter "${key2}": ${value}`
                    );
                  }
                  value = num2;
                } else if (!this._isServer) {
                  throw new TypeError(
                    `Invalid value for parameter "${key2}": ${value}`
                  );
                }
              } else if (key2 === "server_max_window_bits") {
                const num2 = +value;
                if (!Number.isInteger(num2) || num2 < 8 || num2 > 15) {
                  throw new TypeError(
                    `Invalid value for parameter "${key2}": ${value}`
                  );
                }
                value = num2;
              } else if (key2 === "client_no_context_takeover" || key2 === "server_no_context_takeover") {
                if (value !== true) {
                  throw new TypeError(
                    `Invalid value for parameter "${key2}": ${value}`
                  );
                }
              } else {
                throw new Error(`Unknown parameter "${key2}"`);
              }
              params[key2] = value;
            });
          });
          return configurations;
        }
        decompress(data, fin, callback) {
          zlibLimiter.add((done) => {
            this._decompress(data, fin, (err2, result) => {
              done();
              callback(err2, result);
            });
          });
        }
        compress(data, fin, callback) {
          zlibLimiter.add((done) => {
            this._compress(data, fin, (err2, result) => {
              done();
              callback(err2, result);
            });
          });
        }
        _decompress(data, fin, callback) {
          const endpoint = this._isServer ? "client" : "server";
          if (!this._inflate) {
            const key2 = `${endpoint}_max_window_bits`;
            const windowBits = typeof this.params[key2] !== "number" ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key2];
            this._inflate = zlib.createInflateRaw({
              ...this._options.zlibInflateOptions,
              windowBits
            });
            this._inflate[kPerMessageDeflate] = this;
            this._inflate[kTotalLength] = 0;
            this._inflate[kBuffers] = [];
            this._inflate.on("error", inflateOnError);
            this._inflate.on("data", inflateOnData);
          }
          this._inflate[kCallback] = callback;
          this._inflate.write(data);
          if (fin)
            this._inflate.write(TRAILER);
          this._inflate.flush(() => {
            const err2 = this._inflate[kError];
            if (err2) {
              this._inflate.close();
              this._inflate = null;
              callback(err2);
              return;
            }
            const data2 = bufferUtil.concat(
              this._inflate[kBuffers],
              this._inflate[kTotalLength]
            );
            if (this._inflate._readableState.endEmitted) {
              this._inflate.close();
              this._inflate = null;
            } else {
              this._inflate[kTotalLength] = 0;
              this._inflate[kBuffers] = [];
              if (fin && this.params[`${endpoint}_no_context_takeover`]) {
                this._inflate.reset();
              }
            }
            callback(null, data2);
          });
        }
        _compress(data, fin, callback) {
          const endpoint = this._isServer ? "server" : "client";
          if (!this._deflate) {
            const key2 = `${endpoint}_max_window_bits`;
            const windowBits = typeof this.params[key2] !== "number" ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key2];
            this._deflate = zlib.createDeflateRaw({
              ...this._options.zlibDeflateOptions,
              windowBits
            });
            this._deflate[kTotalLength] = 0;
            this._deflate[kBuffers] = [];
            this._deflate.on("error", NOOP);
            this._deflate.on("data", deflateOnData);
          }
          this._deflate[kCallback] = callback;
          this._deflate.write(data);
          this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {
            if (!this._deflate) {
              return;
            }
            let data2 = bufferUtil.concat(
              this._deflate[kBuffers],
              this._deflate[kTotalLength]
            );
            if (fin)
              data2 = data2.slice(0, data2.length - 4);
            this._deflate[kCallback] = null;
            this._deflate[kTotalLength] = 0;
            this._deflate[kBuffers] = [];
            if (fin && this.params[`${endpoint}_no_context_takeover`]) {
              this._deflate.reset();
            }
            callback(null, data2);
          });
        }
      };
      module2.exports = PerMessageDeflate;
      function deflateOnData(chunk) {
        this[kBuffers].push(chunk);
        this[kTotalLength] += chunk.length;
      }
      function inflateOnData(chunk) {
        this[kTotalLength] += chunk.length;
        if (this[kPerMessageDeflate]._maxPayload < 1 || this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload) {
          this[kBuffers].push(chunk);
          return;
        }
        this[kError] = new RangeError("Max payload size exceeded");
        this[kError].code = "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH";
        this[kError][kStatusCode] = 1009;
        this.removeListener("data", inflateOnData);
        this.reset();
      }
      function inflateOnError(err2) {
        this[kPerMessageDeflate]._inflate = null;
        err2[kStatusCode] = 1007;
        this[kCallback](err2);
      }
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/validation.js
  var require_validation = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/validation.js"(exports2, module2) {
      "use strict";
      function isValidStatusCode(code) {
        return code >= 1e3 && code <= 1014 && code !== 1004 && code !== 1005 && code !== 1006 || code >= 3e3 && code <= 4999;
      }
      function _isValidUTF8(buf) {
        const len = buf.length;
        let i2 = 0;
        while (i2 < len) {
          if ((buf[i2] & 128) === 0) {
            i2++;
          } else if ((buf[i2] & 224) === 192) {
            if (i2 + 1 === len || (buf[i2 + 1] & 192) !== 128 || (buf[i2] & 254) === 192) {
              return false;
            }
            i2 += 2;
          } else if ((buf[i2] & 240) === 224) {
            if (i2 + 2 >= len || (buf[i2 + 1] & 192) !== 128 || (buf[i2 + 2] & 192) !== 128 || buf[i2] === 224 && (buf[i2 + 1] & 224) === 128 || buf[i2] === 237 && (buf[i2 + 1] & 224) === 160) {
              return false;
            }
            i2 += 3;
          } else if ((buf[i2] & 248) === 240) {
            if (i2 + 3 >= len || (buf[i2 + 1] & 192) !== 128 || (buf[i2 + 2] & 192) !== 128 || (buf[i2 + 3] & 192) !== 128 || buf[i2] === 240 && (buf[i2 + 1] & 240) === 128 || buf[i2] === 244 && buf[i2 + 1] > 143 || buf[i2] > 244) {
              return false;
            }
            i2 += 4;
          } else {
            return false;
          }
        }
        return true;
      }
      try {
        let isValidUTF8 = __require("utf-8-validate");
        if (typeof isValidUTF8 === "object") {
          isValidUTF8 = isValidUTF8.Validation.isValidUTF8;
        }
        module2.exports = {
          isValidStatusCode,
          isValidUTF8(buf) {
            return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);
          }
        };
      } catch (e) {
        module2.exports = {
          isValidStatusCode,
          isValidUTF8: _isValidUTF8
        };
      }
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/receiver.js
  var require_receiver = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/receiver.js"(exports2, module2) {
      "use strict";
      var { Writable } = __require("stream");
      var PerMessageDeflate = require_permessage_deflate();
      var {
        BINARY_TYPES,
        EMPTY_BUFFER,
        kStatusCode,
        kWebSocket
      } = require_constants();
      var { concat, toArrayBuffer, unmask } = require_buffer_util();
      var { isValidStatusCode, isValidUTF8 } = require_validation();
      var GET_INFO = 0;
      var GET_PAYLOAD_LENGTH_16 = 1;
      var GET_PAYLOAD_LENGTH_64 = 2;
      var GET_MASK = 3;
      var GET_DATA = 4;
      var INFLATING = 5;
      var Receiver = class extends Writable {
        constructor(binaryType, extensions, isServer, maxPayload) {
          super();
          this._binaryType = binaryType || BINARY_TYPES[0];
          this[kWebSocket] = void 0;
          this._extensions = extensions || {};
          this._isServer = !!isServer;
          this._maxPayload = maxPayload | 0;
          this._bufferedBytes = 0;
          this._buffers = [];
          this._compressed = false;
          this._payloadLength = 0;
          this._mask = void 0;
          this._fragmented = 0;
          this._masked = false;
          this._fin = false;
          this._opcode = 0;
          this._totalPayloadLength = 0;
          this._messageLength = 0;
          this._fragments = [];
          this._state = GET_INFO;
          this._loop = false;
        }
        _write(chunk, encoding, cb2) {
          if (this._opcode === 8 && this._state == GET_INFO)
            return cb2();
          this._bufferedBytes += chunk.length;
          this._buffers.push(chunk);
          this.startLoop(cb2);
        }
        consume(n) {
          this._bufferedBytes -= n;
          if (n === this._buffers[0].length)
            return this._buffers.shift();
          if (n < this._buffers[0].length) {
            const buf = this._buffers[0];
            this._buffers[0] = buf.slice(n);
            return buf.slice(0, n);
          }
          const dst = Buffer.allocUnsafe(n);
          do {
            const buf = this._buffers[0];
            const offset = dst.length - n;
            if (n >= buf.length) {
              dst.set(this._buffers.shift(), offset);
            } else {
              dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);
              this._buffers[0] = buf.slice(n);
            }
            n -= buf.length;
          } while (n > 0);
          return dst;
        }
        startLoop(cb2) {
          let err2;
          this._loop = true;
          do {
            switch (this._state) {
              case GET_INFO:
                err2 = this.getInfo();
                break;
              case GET_PAYLOAD_LENGTH_16:
                err2 = this.getPayloadLength16();
                break;
              case GET_PAYLOAD_LENGTH_64:
                err2 = this.getPayloadLength64();
                break;
              case GET_MASK:
                this.getMask();
                break;
              case GET_DATA:
                err2 = this.getData(cb2);
                break;
              default:
                this._loop = false;
                return;
            }
          } while (this._loop);
          cb2(err2);
        }
        getInfo() {
          if (this._bufferedBytes < 2) {
            this._loop = false;
            return;
          }
          const buf = this.consume(2);
          if ((buf[0] & 48) !== 0) {
            this._loop = false;
            return error(
              RangeError,
              "RSV2 and RSV3 must be clear",
              true,
              1002,
              "WS_ERR_UNEXPECTED_RSV_2_3"
            );
          }
          const compressed = (buf[0] & 64) === 64;
          if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {
            this._loop = false;
            return error(
              RangeError,
              "RSV1 must be clear",
              true,
              1002,
              "WS_ERR_UNEXPECTED_RSV_1"
            );
          }
          this._fin = (buf[0] & 128) === 128;
          this._opcode = buf[0] & 15;
          this._payloadLength = buf[1] & 127;
          if (this._opcode === 0) {
            if (compressed) {
              this._loop = false;
              return error(
                RangeError,
                "RSV1 must be clear",
                true,
                1002,
                "WS_ERR_UNEXPECTED_RSV_1"
              );
            }
            if (!this._fragmented) {
              this._loop = false;
              return error(
                RangeError,
                "invalid opcode 0",
                true,
                1002,
                "WS_ERR_INVALID_OPCODE"
              );
            }
            this._opcode = this._fragmented;
          } else if (this._opcode === 1 || this._opcode === 2) {
            if (this._fragmented) {
              this._loop = false;
              return error(
                RangeError,
                `invalid opcode ${this._opcode}`,
                true,
                1002,
                "WS_ERR_INVALID_OPCODE"
              );
            }
            this._compressed = compressed;
          } else if (this._opcode > 7 && this._opcode < 11) {
            if (!this._fin) {
              this._loop = false;
              return error(
                RangeError,
                "FIN must be set",
                true,
                1002,
                "WS_ERR_EXPECTED_FIN"
              );
            }
            if (compressed) {
              this._loop = false;
              return error(
                RangeError,
                "RSV1 must be clear",
                true,
                1002,
                "WS_ERR_UNEXPECTED_RSV_1"
              );
            }
            if (this._payloadLength > 125) {
              this._loop = false;
              return error(
                RangeError,
                `invalid payload length ${this._payloadLength}`,
                true,
                1002,
                "WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH"
              );
            }
          } else {
            this._loop = false;
            return error(
              RangeError,
              `invalid opcode ${this._opcode}`,
              true,
              1002,
              "WS_ERR_INVALID_OPCODE"
            );
          }
          if (!this._fin && !this._fragmented)
            this._fragmented = this._opcode;
          this._masked = (buf[1] & 128) === 128;
          if (this._isServer) {
            if (!this._masked) {
              this._loop = false;
              return error(
                RangeError,
                "MASK must be set",
                true,
                1002,
                "WS_ERR_EXPECTED_MASK"
              );
            }
          } else if (this._masked) {
            this._loop = false;
            return error(
              RangeError,
              "MASK must be clear",
              true,
              1002,
              "WS_ERR_UNEXPECTED_MASK"
            );
          }
          if (this._payloadLength === 126)
            this._state = GET_PAYLOAD_LENGTH_16;
          else if (this._payloadLength === 127)
            this._state = GET_PAYLOAD_LENGTH_64;
          else
            return this.haveLength();
        }
        getPayloadLength16() {
          if (this._bufferedBytes < 2) {
            this._loop = false;
            return;
          }
          this._payloadLength = this.consume(2).readUInt16BE(0);
          return this.haveLength();
        }
        getPayloadLength64() {
          if (this._bufferedBytes < 8) {
            this._loop = false;
            return;
          }
          const buf = this.consume(8);
          const num2 = buf.readUInt32BE(0);
          if (num2 > Math.pow(2, 53 - 32) - 1) {
            this._loop = false;
            return error(
              RangeError,
              "Unsupported WebSocket frame: payload length > 2^53 - 1",
              false,
              1009,
              "WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH"
            );
          }
          this._payloadLength = num2 * Math.pow(2, 32) + buf.readUInt32BE(4);
          return this.haveLength();
        }
        haveLength() {
          if (this._payloadLength && this._opcode < 8) {
            this._totalPayloadLength += this._payloadLength;
            if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {
              this._loop = false;
              return error(
                RangeError,
                "Max payload size exceeded",
                false,
                1009,
                "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"
              );
            }
          }
          if (this._masked)
            this._state = GET_MASK;
          else
            this._state = GET_DATA;
        }
        getMask() {
          if (this._bufferedBytes < 4) {
            this._loop = false;
            return;
          }
          this._mask = this.consume(4);
          this._state = GET_DATA;
        }
        getData(cb2) {
          let data = EMPTY_BUFFER;
          if (this._payloadLength) {
            if (this._bufferedBytes < this._payloadLength) {
              this._loop = false;
              return;
            }
            data = this.consume(this._payloadLength);
            if (this._masked)
              unmask(data, this._mask);
          }
          if (this._opcode > 7)
            return this.controlMessage(data);
          if (this._compressed) {
            this._state = INFLATING;
            this.decompress(data, cb2);
            return;
          }
          if (data.length) {
            this._messageLength = this._totalPayloadLength;
            this._fragments.push(data);
          }
          return this.dataMessage();
        }
        decompress(data, cb2) {
          const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];
          perMessageDeflate.decompress(data, this._fin, (err2, buf) => {
            if (err2)
              return cb2(err2);
            if (buf.length) {
              this._messageLength += buf.length;
              if (this._messageLength > this._maxPayload && this._maxPayload > 0) {
                return cb2(
                  error(
                    RangeError,
                    "Max payload size exceeded",
                    false,
                    1009,
                    "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"
                  )
                );
              }
              this._fragments.push(buf);
            }
            const er = this.dataMessage();
            if (er)
              return cb2(er);
            this.startLoop(cb2);
          });
        }
        dataMessage() {
          if (this._fin) {
            const messageLength = this._messageLength;
            const fragments = this._fragments;
            this._totalPayloadLength = 0;
            this._messageLength = 0;
            this._fragmented = 0;
            this._fragments = [];
            if (this._opcode === 2) {
              let data;
              if (this._binaryType === "nodebuffer") {
                data = concat(fragments, messageLength);
              } else if (this._binaryType === "arraybuffer") {
                data = toArrayBuffer(concat(fragments, messageLength));
              } else {
                data = fragments;
              }
              this.emit("message", data);
            } else {
              const buf = concat(fragments, messageLength);
              if (!isValidUTF8(buf)) {
                this._loop = false;
                return error(
                  Error,
                  "invalid UTF-8 sequence",
                  true,
                  1007,
                  "WS_ERR_INVALID_UTF8"
                );
              }
              this.emit("message", buf.toString());
            }
          }
          this._state = GET_INFO;
        }
        controlMessage(data) {
          if (this._opcode === 8) {
            this._loop = false;
            if (data.length === 0) {
              this.emit("conclude", 1005, "");
              this.end();
            } else if (data.length === 1) {
              return error(
                RangeError,
                "invalid payload length 1",
                true,
                1002,
                "WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH"
              );
            } else {
              const code = data.readUInt16BE(0);
              if (!isValidStatusCode(code)) {
                return error(
                  RangeError,
                  `invalid status code ${code}`,
                  true,
                  1002,
                  "WS_ERR_INVALID_CLOSE_CODE"
                );
              }
              const buf = data.slice(2);
              if (!isValidUTF8(buf)) {
                return error(
                  Error,
                  "invalid UTF-8 sequence",
                  true,
                  1007,
                  "WS_ERR_INVALID_UTF8"
                );
              }
              this.emit("conclude", code, buf.toString());
              this.end();
            }
          } else if (this._opcode === 9) {
            this.emit("ping", data);
          } else {
            this.emit("pong", data);
          }
          this._state = GET_INFO;
        }
      };
      module2.exports = Receiver;
      function error(ErrorCtor, message, prefix2, statusCode, errorCode) {
        const err2 = new ErrorCtor(
          prefix2 ? `Invalid WebSocket frame: ${message}` : message
        );
        Error.captureStackTrace(err2, error);
        err2.code = errorCode;
        err2[kStatusCode] = statusCode;
        return err2;
      }
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/sender.js
  var require_sender = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/sender.js"(exports2, module2) {
      "use strict";
      var net = __require("net");
      var tls = __require("tls");
      var { randomFillSync } = __require("crypto");
      var PerMessageDeflate = require_permessage_deflate();
      var { EMPTY_BUFFER } = require_constants();
      var { isValidStatusCode } = require_validation();
      var { mask: applyMask, toBuffer } = require_buffer_util();
      var mask2 = Buffer.alloc(4);
      var Sender = class {
        constructor(socket, extensions) {
          this._extensions = extensions || {};
          this._socket = socket;
          this._firstFragment = true;
          this._compress = false;
          this._bufferedBytes = 0;
          this._deflating = false;
          this._queue = [];
        }
        static frame(data, options) {
          const merge = options.mask && options.readOnly;
          let offset = options.mask ? 6 : 2;
          let payloadLength = data.length;
          if (data.length >= 65536) {
            offset += 8;
            payloadLength = 127;
          } else if (data.length > 125) {
            offset += 2;
            payloadLength = 126;
          }
          const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);
          target[0] = options.fin ? options.opcode | 128 : options.opcode;
          if (options.rsv1)
            target[0] |= 64;
          target[1] = payloadLength;
          if (payloadLength === 126) {
            target.writeUInt16BE(data.length, 2);
          } else if (payloadLength === 127) {
            target.writeUInt32BE(0, 2);
            target.writeUInt32BE(data.length, 6);
          }
          if (!options.mask)
            return [target, data];
          randomFillSync(mask2, 0, 4);
          target[1] |= 128;
          target[offset - 4] = mask2[0];
          target[offset - 3] = mask2[1];
          target[offset - 2] = mask2[2];
          target[offset - 1] = mask2[3];
          if (merge) {
            applyMask(data, mask2, target, offset, data.length);
            return [target];
          }
          applyMask(data, mask2, data, 0, data.length);
          return [target, data];
        }
        close(code, data, mask3, cb2) {
          let buf;
          if (code === void 0) {
            buf = EMPTY_BUFFER;
          } else if (typeof code !== "number" || !isValidStatusCode(code)) {
            throw new TypeError("First argument must be a valid error code number");
          } else if (data === void 0 || data === "") {
            buf = Buffer.allocUnsafe(2);
            buf.writeUInt16BE(code, 0);
          } else {
            const length = Buffer.byteLength(data);
            if (length > 123) {
              throw new RangeError("The message must not be greater than 123 bytes");
            }
            buf = Buffer.allocUnsafe(2 + length);
            buf.writeUInt16BE(code, 0);
            buf.write(data, 2);
          }
          if (this._deflating) {
            this.enqueue([this.doClose, buf, mask3, cb2]);
          } else {
            this.doClose(buf, mask3, cb2);
          }
        }
        doClose(data, mask3, cb2) {
          this.sendFrame(
            Sender.frame(data, {
              fin: true,
              rsv1: false,
              opcode: 8,
              mask: mask3,
              readOnly: false
            }),
            cb2
          );
        }
        ping(data, mask3, cb2) {
          const buf = toBuffer(data);
          if (buf.length > 125) {
            throw new RangeError("The data size must not be greater than 125 bytes");
          }
          if (this._deflating) {
            this.enqueue([this.doPing, buf, mask3, toBuffer.readOnly, cb2]);
          } else {
            this.doPing(buf, mask3, toBuffer.readOnly, cb2);
          }
        }
        doPing(data, mask3, readOnly, cb2) {
          this.sendFrame(
            Sender.frame(data, {
              fin: true,
              rsv1: false,
              opcode: 9,
              mask: mask3,
              readOnly
            }),
            cb2
          );
        }
        pong(data, mask3, cb2) {
          const buf = toBuffer(data);
          if (buf.length > 125) {
            throw new RangeError("The data size must not be greater than 125 bytes");
          }
          if (this._deflating) {
            this.enqueue([this.doPong, buf, mask3, toBuffer.readOnly, cb2]);
          } else {
            this.doPong(buf, mask3, toBuffer.readOnly, cb2);
          }
        }
        doPong(data, mask3, readOnly, cb2) {
          this.sendFrame(
            Sender.frame(data, {
              fin: true,
              rsv1: false,
              opcode: 10,
              mask: mask3,
              readOnly
            }),
            cb2
          );
        }
        send(data, options, cb2) {
          const buf = toBuffer(data);
          const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];
          let opcode = options.binary ? 2 : 1;
          let rsv1 = options.compress;
          if (this._firstFragment) {
            this._firstFragment = false;
            if (rsv1 && perMessageDeflate) {
              rsv1 = buf.length >= perMessageDeflate._threshold;
            }
            this._compress = rsv1;
          } else {
            rsv1 = false;
            opcode = 0;
          }
          if (options.fin)
            this._firstFragment = true;
          if (perMessageDeflate) {
            const opts = {
              fin: options.fin,
              rsv1,
              opcode,
              mask: options.mask,
              readOnly: toBuffer.readOnly
            };
            if (this._deflating) {
              this.enqueue([this.dispatch, buf, this._compress, opts, cb2]);
            } else {
              this.dispatch(buf, this._compress, opts, cb2);
            }
          } else {
            this.sendFrame(
              Sender.frame(buf, {
                fin: options.fin,
                rsv1: false,
                opcode,
                mask: options.mask,
                readOnly: toBuffer.readOnly
              }),
              cb2
            );
          }
        }
        dispatch(data, compress, options, cb2) {
          if (!compress) {
            this.sendFrame(Sender.frame(data, options), cb2);
            return;
          }
          const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];
          this._bufferedBytes += data.length;
          this._deflating = true;
          perMessageDeflate.compress(data, options.fin, (_, buf) => {
            if (this._socket.destroyed) {
              const err2 = new Error(
                "The socket was closed while data was being compressed"
              );
              if (typeof cb2 === "function")
                cb2(err2);
              for (let i2 = 0; i2 < this._queue.length; i2++) {
                const callback = this._queue[i2][4];
                if (typeof callback === "function")
                  callback(err2);
              }
              return;
            }
            this._bufferedBytes -= data.length;
            this._deflating = false;
            options.readOnly = false;
            this.sendFrame(Sender.frame(buf, options), cb2);
            this.dequeue();
          });
        }
        dequeue() {
          while (!this._deflating && this._queue.length) {
            const params = this._queue.shift();
            this._bufferedBytes -= params[1].length;
            Reflect.apply(params[0], this, params.slice(1));
          }
        }
        enqueue(params) {
          this._bufferedBytes += params[1].length;
          this._queue.push(params);
        }
        sendFrame(list, cb2) {
          if (list.length === 2) {
            this._socket.cork();
            this._socket.write(list[0]);
            this._socket.write(list[1], cb2);
            this._socket.uncork();
          } else {
            this._socket.write(list[0], cb2);
          }
        }
      };
      module2.exports = Sender;
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/event-target.js
  var require_event_target = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/event-target.js"(exports2, module2) {
      "use strict";
      var Event = class {
        constructor(type2, target) {
          this.target = target;
          this.type = type2;
        }
      };
      var MessageEvent = class extends Event {
        constructor(data, target) {
          super("message", target);
          this.data = data;
        }
      };
      var CloseEvent = class extends Event {
        constructor(code, reason, target) {
          super("close", target);
          this.wasClean = target._closeFrameReceived && target._closeFrameSent;
          this.reason = reason;
          this.code = code;
        }
      };
      var OpenEvent = class extends Event {
        constructor(target) {
          super("open", target);
        }
      };
      var ErrorEvent = class extends Event {
        constructor(error, target) {
          super("error", target);
          this.message = error.message;
          this.error = error;
        }
      };
      var EventTarget = {
        addEventListener(type2, listener, options) {
          if (typeof listener !== "function")
            return;
          function onMessage(data) {
            listener.call(this, new MessageEvent(data, this));
          }
          function onClose(code, message) {
            listener.call(this, new CloseEvent(code, message, this));
          }
          function onError(error) {
            listener.call(this, new ErrorEvent(error, this));
          }
          function onOpen() {
            listener.call(this, new OpenEvent(this));
          }
          const method = options && options.once ? "once" : "on";
          if (type2 === "message") {
            onMessage._listener = listener;
            this[method](type2, onMessage);
          } else if (type2 === "close") {
            onClose._listener = listener;
            this[method](type2, onClose);
          } else if (type2 === "error") {
            onError._listener = listener;
            this[method](type2, onError);
          } else if (type2 === "open") {
            onOpen._listener = listener;
            this[method](type2, onOpen);
          } else {
            this[method](type2, listener);
          }
        },
        removeEventListener(type2, listener) {
          const listeners = this.listeners(type2);
          for (let i2 = 0; i2 < listeners.length; i2++) {
            if (listeners[i2] === listener || listeners[i2]._listener === listener) {
              this.removeListener(type2, listeners[i2]);
            }
          }
        }
      };
      module2.exports = EventTarget;
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/extension.js
  var require_extension = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/extension.js"(exports2, module2) {
      "use strict";
      var tokenChars = [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        0
      ];
      function push(dest, name, elem) {
        if (dest[name] === void 0)
          dest[name] = [elem];
        else
          dest[name].push(elem);
      }
      function parse2(header) {
        const offers = /* @__PURE__ */ Object.create(null);
        if (header === void 0 || header === "")
          return offers;
        let params = /* @__PURE__ */ Object.create(null);
        let mustUnescape = false;
        let isEscaping = false;
        let inQuotes = false;
        let extensionName;
        let paramName;
        let start = -1;
        let end = -1;
        let i2 = 0;
        for (; i2 < header.length; i2++) {
          const code = header.charCodeAt(i2);
          if (extensionName === void 0) {
            if (end === -1 && tokenChars[code] === 1) {
              if (start === -1)
                start = i2;
            } else if (code === 32 || code === 9) {
              if (end === -1 && start !== -1)
                end = i2;
            } else if (code === 59 || code === 44) {
              if (start === -1) {
                throw new SyntaxError(`Unexpected character at index ${i2}`);
              }
              if (end === -1)
                end = i2;
              const name = header.slice(start, end);
              if (code === 44) {
                push(offers, name, params);
                params = /* @__PURE__ */ Object.create(null);
              } else {
                extensionName = name;
              }
              start = end = -1;
            } else {
              throw new SyntaxError(`Unexpected character at index ${i2}`);
            }
          } else if (paramName === void 0) {
            if (end === -1 && tokenChars[code] === 1) {
              if (start === -1)
                start = i2;
            } else if (code === 32 || code === 9) {
              if (end === -1 && start !== -1)
                end = i2;
            } else if (code === 59 || code === 44) {
              if (start === -1) {
                throw new SyntaxError(`Unexpected character at index ${i2}`);
              }
              if (end === -1)
                end = i2;
              push(params, header.slice(start, end), true);
              if (code === 44) {
                push(offers, extensionName, params);
                params = /* @__PURE__ */ Object.create(null);
                extensionName = void 0;
              }
              start = end = -1;
            } else if (code === 61 && start !== -1 && end === -1) {
              paramName = header.slice(start, i2);
              start = end = -1;
            } else {
              throw new SyntaxError(`Unexpected character at index ${i2}`);
            }
          } else {
            if (isEscaping) {
              if (tokenChars[code] !== 1) {
                throw new SyntaxError(`Unexpected character at index ${i2}`);
              }
              if (start === -1)
                start = i2;
              else if (!mustUnescape)
                mustUnescape = true;
              isEscaping = false;
            } else if (inQuotes) {
              if (tokenChars[code] === 1) {
                if (start === -1)
                  start = i2;
              } else if (code === 34 && start !== -1) {
                inQuotes = false;
                end = i2;
              } else if (code === 92) {
                isEscaping = true;
              } else {
                throw new SyntaxError(`Unexpected character at index ${i2}`);
              }
            } else if (code === 34 && header.charCodeAt(i2 - 1) === 61) {
              inQuotes = true;
            } else if (end === -1 && tokenChars[code] === 1) {
              if (start === -1)
                start = i2;
            } else if (start !== -1 && (code === 32 || code === 9)) {
              if (end === -1)
                end = i2;
            } else if (code === 59 || code === 44) {
              if (start === -1) {
                throw new SyntaxError(`Unexpected character at index ${i2}`);
              }
              if (end === -1)
                end = i2;
              let value = header.slice(start, end);
              if (mustUnescape) {
                value = value.replace(/\\/g, "");
                mustUnescape = false;
              }
              push(params, paramName, value);
              if (code === 44) {
                push(offers, extensionName, params);
                params = /* @__PURE__ */ Object.create(null);
                extensionName = void 0;
              }
              paramName = void 0;
              start = end = -1;
            } else {
              throw new SyntaxError(`Unexpected character at index ${i2}`);
            }
          }
        }
        if (start === -1 || inQuotes) {
          throw new SyntaxError("Unexpected end of input");
        }
        if (end === -1)
          end = i2;
        const token = header.slice(start, end);
        if (extensionName === void 0) {
          push(offers, token, params);
        } else {
          if (paramName === void 0) {
            push(params, token, true);
          } else if (mustUnescape) {
            push(params, paramName, token.replace(/\\/g, ""));
          } else {
            push(params, paramName, token);
          }
          push(offers, extensionName, params);
        }
        return offers;
      }
      function format(extensions) {
        return Object.keys(extensions).map((extension) => {
          let configurations = extensions[extension];
          if (!Array.isArray(configurations))
            configurations = [configurations];
          return configurations.map((params) => {
            return [extension].concat(
              Object.keys(params).map((k) => {
                let values = params[k];
                if (!Array.isArray(values))
                  values = [values];
                return values.map((v) => v === true ? k : `${k}=${v}`).join("; ");
              })
            ).join("; ");
          }).join(", ");
        }).join(", ");
      }
      module2.exports = { format, parse: parse2 };
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/websocket.js
  var require_websocket = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/websocket.js"(exports2, module2) {
      "use strict";
      var EventEmitter = __require("events");
      var https = __require("https");
      var http = __require("http");
      var net = __require("net");
      var tls = __require("tls");
      var { randomBytes, createHash } = __require("crypto");
      var { Readable } = __require("stream");
      var { URL } = __require("url");
      var PerMessageDeflate = require_permessage_deflate();
      var Receiver = require_receiver();
      var Sender = require_sender();
      var {
        BINARY_TYPES,
        EMPTY_BUFFER,
        GUID,
        kStatusCode,
        kWebSocket,
        NOOP
      } = require_constants();
      var { addEventListener, removeEventListener } = require_event_target();
      var { format, parse: parse2 } = require_extension();
      var { toBuffer } = require_buffer_util();
      var readyStates = ["CONNECTING", "OPEN", "CLOSING", "CLOSED"];
      var protocolVersions = [8, 13];
      var closeTimeout = 30 * 1e3;
      var WebSocket = class extends EventEmitter {
        constructor(address, protocols, options) {
          super();
          this._binaryType = BINARY_TYPES[0];
          this._closeCode = 1006;
          this._closeFrameReceived = false;
          this._closeFrameSent = false;
          this._closeMessage = "";
          this._closeTimer = null;
          this._extensions = {};
          this._protocol = "";
          this._readyState = WebSocket.CONNECTING;
          this._receiver = null;
          this._sender = null;
          this._socket = null;
          if (address !== null) {
            this._bufferedAmount = 0;
            this._isServer = false;
            this._redirects = 0;
            if (Array.isArray(protocols)) {
              protocols = protocols.join(", ");
            } else if (typeof protocols === "object" && protocols !== null) {
              options = protocols;
              protocols = void 0;
            }
            initAsClient(this, address, protocols, options);
          } else {
            this._isServer = true;
          }
        }
        get binaryType() {
          return this._binaryType;
        }
        set binaryType(type2) {
          if (!BINARY_TYPES.includes(type2))
            return;
          this._binaryType = type2;
          if (this._receiver)
            this._receiver._binaryType = type2;
        }
        get bufferedAmount() {
          if (!this._socket)
            return this._bufferedAmount;
          return this._socket._writableState.length + this._sender._bufferedBytes;
        }
        get extensions() {
          return Object.keys(this._extensions).join();
        }
        get onclose() {
          return void 0;
        }
        set onclose(listener) {
        }
        get onerror() {
          return void 0;
        }
        set onerror(listener) {
        }
        get onopen() {
          return void 0;
        }
        set onopen(listener) {
        }
        get onmessage() {
          return void 0;
        }
        set onmessage(listener) {
        }
        get protocol() {
          return this._protocol;
        }
        get readyState() {
          return this._readyState;
        }
        get url() {
          return this._url;
        }
        setSocket(socket, head, maxPayload) {
          const receiver = new Receiver(
            this.binaryType,
            this._extensions,
            this._isServer,
            maxPayload
          );
          this._sender = new Sender(socket, this._extensions);
          this._receiver = receiver;
          this._socket = socket;
          receiver[kWebSocket] = this;
          socket[kWebSocket] = this;
          receiver.on("conclude", receiverOnConclude);
          receiver.on("drain", receiverOnDrain);
          receiver.on("error", receiverOnError);
          receiver.on("message", receiverOnMessage);
          receiver.on("ping", receiverOnPing);
          receiver.on("pong", receiverOnPong);
          socket.setTimeout(0);
          socket.setNoDelay();
          if (head.length > 0)
            socket.unshift(head);
          socket.on("close", socketOnClose);
          socket.on("data", socketOnData);
          socket.on("end", socketOnEnd);
          socket.on("error", socketOnError);
          this._readyState = WebSocket.OPEN;
          this.emit("open");
        }
        emitClose() {
          if (!this._socket) {
            this._readyState = WebSocket.CLOSED;
            this.emit("close", this._closeCode, this._closeMessage);
            return;
          }
          if (this._extensions[PerMessageDeflate.extensionName]) {
            this._extensions[PerMessageDeflate.extensionName].cleanup();
          }
          this._receiver.removeAllListeners();
          this._readyState = WebSocket.CLOSED;
          this.emit("close", this._closeCode, this._closeMessage);
        }
        close(code, data) {
          if (this.readyState === WebSocket.CLOSED)
            return;
          if (this.readyState === WebSocket.CONNECTING) {
            const msg = "WebSocket was closed before the connection was established";
            return abortHandshake(this, this._req, msg);
          }
          if (this.readyState === WebSocket.CLOSING) {
            if (this._closeFrameSent && (this._closeFrameReceived || this._receiver._writableState.errorEmitted)) {
              this._socket.end();
            }
            return;
          }
          this._readyState = WebSocket.CLOSING;
          this._sender.close(code, data, !this._isServer, (err2) => {
            if (err2)
              return;
            this._closeFrameSent = true;
            if (this._closeFrameReceived || this._receiver._writableState.errorEmitted) {
              this._socket.end();
            }
          });
          this._closeTimer = setTimeout(
            this._socket.destroy.bind(this._socket),
            closeTimeout
          );
        }
        ping(data, mask2, cb2) {
          if (this.readyState === WebSocket.CONNECTING) {
            throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");
          }
          if (typeof data === "function") {
            cb2 = data;
            data = mask2 = void 0;
          } else if (typeof mask2 === "function") {
            cb2 = mask2;
            mask2 = void 0;
          }
          if (typeof data === "number")
            data = data.toString();
          if (this.readyState !== WebSocket.OPEN) {
            sendAfterClose(this, data, cb2);
            return;
          }
          if (mask2 === void 0)
            mask2 = !this._isServer;
          this._sender.ping(data || EMPTY_BUFFER, mask2, cb2);
        }
        pong(data, mask2, cb2) {
          if (this.readyState === WebSocket.CONNECTING) {
            throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");
          }
          if (typeof data === "function") {
            cb2 = data;
            data = mask2 = void 0;
          } else if (typeof mask2 === "function") {
            cb2 = mask2;
            mask2 = void 0;
          }
          if (typeof data === "number")
            data = data.toString();
          if (this.readyState !== WebSocket.OPEN) {
            sendAfterClose(this, data, cb2);
            return;
          }
          if (mask2 === void 0)
            mask2 = !this._isServer;
          this._sender.pong(data || EMPTY_BUFFER, mask2, cb2);
        }
        send(data, options, cb2) {
          if (this.readyState === WebSocket.CONNECTING) {
            throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");
          }
          if (typeof options === "function") {
            cb2 = options;
            options = {};
          }
          if (typeof data === "number")
            data = data.toString();
          if (this.readyState !== WebSocket.OPEN) {
            sendAfterClose(this, data, cb2);
            return;
          }
          const opts = {
            binary: typeof data !== "string",
            mask: !this._isServer,
            compress: true,
            fin: true,
            ...options
          };
          if (!this._extensions[PerMessageDeflate.extensionName]) {
            opts.compress = false;
          }
          this._sender.send(data || EMPTY_BUFFER, opts, cb2);
        }
        terminate() {
          if (this.readyState === WebSocket.CLOSED)
            return;
          if (this.readyState === WebSocket.CONNECTING) {
            const msg = "WebSocket was closed before the connection was established";
            return abortHandshake(this, this._req, msg);
          }
          if (this._socket) {
            this._readyState = WebSocket.CLOSING;
            this._socket.destroy();
          }
        }
      };
      Object.defineProperty(WebSocket, "CONNECTING", {
        enumerable: true,
        value: readyStates.indexOf("CONNECTING")
      });
      Object.defineProperty(WebSocket.prototype, "CONNECTING", {
        enumerable: true,
        value: readyStates.indexOf("CONNECTING")
      });
      Object.defineProperty(WebSocket, "OPEN", {
        enumerable: true,
        value: readyStates.indexOf("OPEN")
      });
      Object.defineProperty(WebSocket.prototype, "OPEN", {
        enumerable: true,
        value: readyStates.indexOf("OPEN")
      });
      Object.defineProperty(WebSocket, "CLOSING", {
        enumerable: true,
        value: readyStates.indexOf("CLOSING")
      });
      Object.defineProperty(WebSocket.prototype, "CLOSING", {
        enumerable: true,
        value: readyStates.indexOf("CLOSING")
      });
      Object.defineProperty(WebSocket, "CLOSED", {
        enumerable: true,
        value: readyStates.indexOf("CLOSED")
      });
      Object.defineProperty(WebSocket.prototype, "CLOSED", {
        enumerable: true,
        value: readyStates.indexOf("CLOSED")
      });
      [
        "binaryType",
        "bufferedAmount",
        "extensions",
        "protocol",
        "readyState",
        "url"
      ].forEach((property) => {
        Object.defineProperty(WebSocket.prototype, property, { enumerable: true });
      });
      ["open", "error", "close", "message"].forEach((method) => {
        Object.defineProperty(WebSocket.prototype, `on${method}`, {
          enumerable: true,
          get() {
            const listeners = this.listeners(method);
            for (let i2 = 0; i2 < listeners.length; i2++) {
              if (listeners[i2]._listener)
                return listeners[i2]._listener;
            }
            return void 0;
          },
          set(listener) {
            const listeners = this.listeners(method);
            for (let i2 = 0; i2 < listeners.length; i2++) {
              if (listeners[i2]._listener)
                this.removeListener(method, listeners[i2]);
            }
            this.addEventListener(method, listener);
          }
        });
      });
      WebSocket.prototype.addEventListener = addEventListener;
      WebSocket.prototype.removeEventListener = removeEventListener;
      module2.exports = WebSocket;
      function initAsClient(websocket, address, protocols, options) {
        const opts = {
          protocolVersion: protocolVersions[1],
          maxPayload: 100 * 1024 * 1024,
          perMessageDeflate: true,
          followRedirects: false,
          maxRedirects: 10,
          ...options,
          createConnection: void 0,
          socketPath: void 0,
          hostname: void 0,
          protocol: void 0,
          timeout: void 0,
          method: void 0,
          host: void 0,
          path: void 0,
          port: void 0
        };
        if (!protocolVersions.includes(opts.protocolVersion)) {
          throw new RangeError(
            `Unsupported protocol version: ${opts.protocolVersion} (supported versions: ${protocolVersions.join(", ")})`
          );
        }
        let parsedUrl;
        if (address instanceof URL) {
          parsedUrl = address;
          websocket._url = address.href;
        } else {
          parsedUrl = new URL(address);
          websocket._url = address;
        }
        const isUnixSocket = parsedUrl.protocol === "ws+unix:";
        if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {
          const err2 = new Error(`Invalid URL: ${websocket.url}`);
          if (websocket._redirects === 0) {
            throw err2;
          } else {
            emitErrorAndClose(websocket, err2);
            return;
          }
        }
        const isSecure = parsedUrl.protocol === "wss:" || parsedUrl.protocol === "https:";
        const defaultPort = isSecure ? 443 : 80;
        const key2 = randomBytes(16).toString("base64");
        const get = isSecure ? https.get : http.get;
        let perMessageDeflate;
        opts.createConnection = isSecure ? tlsConnect : netConnect;
        opts.defaultPort = opts.defaultPort || defaultPort;
        opts.port = parsedUrl.port || defaultPort;
        opts.host = parsedUrl.hostname.startsWith("[") ? parsedUrl.hostname.slice(1, -1) : parsedUrl.hostname;
        opts.headers = {
          "Sec-WebSocket-Version": opts.protocolVersion,
          "Sec-WebSocket-Key": key2,
          Connection: "Upgrade",
          Upgrade: "websocket",
          ...opts.headers
        };
        opts.path = parsedUrl.pathname + parsedUrl.search;
        opts.timeout = opts.handshakeTimeout;
        if (opts.perMessageDeflate) {
          perMessageDeflate = new PerMessageDeflate(
            opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},
            false,
            opts.maxPayload
          );
          opts.headers["Sec-WebSocket-Extensions"] = format({
            [PerMessageDeflate.extensionName]: perMessageDeflate.offer()
          });
        }
        if (protocols) {
          opts.headers["Sec-WebSocket-Protocol"] = protocols;
        }
        if (opts.origin) {
          if (opts.protocolVersion < 13) {
            opts.headers["Sec-WebSocket-Origin"] = opts.origin;
          } else {
            opts.headers.Origin = opts.origin;
          }
        }
        if (parsedUrl.username || parsedUrl.password) {
          opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;
        }
        if (isUnixSocket) {
          const parts = opts.path.split(":");
          opts.socketPath = parts[0];
          opts.path = parts[1];
        }
        if (opts.followRedirects) {
          if (websocket._redirects === 0) {
            websocket._originalUnixSocket = isUnixSocket;
            websocket._originalSecure = isSecure;
            websocket._originalHostOrSocketPath = isUnixSocket ? opts.socketPath : parsedUrl.host;
            const headers = options && options.headers;
            options = { ...options, headers: {} };
            if (headers) {
              for (const [key3, value] of Object.entries(headers)) {
                options.headers[key3.toLowerCase()] = value;
              }
            }
          } else {
            const isSameHost = isUnixSocket ? websocket._originalUnixSocket ? opts.socketPath === websocket._originalHostOrSocketPath : false : websocket._originalUnixSocket ? false : parsedUrl.host === websocket._originalHostOrSocketPath;
            if (!isSameHost || websocket._originalSecure && !isSecure) {
              delete opts.headers.authorization;
              delete opts.headers.cookie;
              if (!isSameHost)
                delete opts.headers.host;
              opts.auth = void 0;
            }
          }
          if (opts.auth && !options.headers.authorization) {
            options.headers.authorization = "Basic " + Buffer.from(opts.auth).toString("base64");
          }
        }
        let req = websocket._req = get(opts);
        if (opts.timeout) {
          req.on("timeout", () => {
            abortHandshake(websocket, req, "Opening handshake has timed out");
          });
        }
        req.on("error", (err2) => {
          if (req === null || req.aborted)
            return;
          req = websocket._req = null;
          emitErrorAndClose(websocket, err2);
        });
        req.on("response", (res) => {
          const location = res.headers.location;
          const statusCode = res.statusCode;
          if (location && opts.followRedirects && statusCode >= 300 && statusCode < 400) {
            if (++websocket._redirects > opts.maxRedirects) {
              abortHandshake(websocket, req, "Maximum redirects exceeded");
              return;
            }
            req.abort();
            let addr;
            try {
              addr = new URL(location, address);
            } catch (err2) {
              emitErrorAndClose(websocket, err2);
              return;
            }
            initAsClient(websocket, addr, protocols, options);
          } else if (!websocket.emit("unexpected-response", req, res)) {
            abortHandshake(
              websocket,
              req,
              `Unexpected server response: ${res.statusCode}`
            );
          }
        });
        req.on("upgrade", (res, socket, head) => {
          websocket.emit("upgrade", res);
          if (websocket.readyState !== WebSocket.CONNECTING)
            return;
          req = websocket._req = null;
          if (res.headers.upgrade.toLowerCase() !== "websocket") {
            abortHandshake(websocket, socket, "Invalid Upgrade header");
            return;
          }
          const digest = createHash("sha1").update(key2 + GUID).digest("base64");
          if (res.headers["sec-websocket-accept"] !== digest) {
            abortHandshake(websocket, socket, "Invalid Sec-WebSocket-Accept header");
            return;
          }
          const serverProt = res.headers["sec-websocket-protocol"];
          const protList = (protocols || "").split(/, */);
          let protError;
          if (!protocols && serverProt) {
            protError = "Server sent a subprotocol but none was requested";
          } else if (protocols && !serverProt) {
            protError = "Server sent no subprotocol";
          } else if (serverProt && !protList.includes(serverProt)) {
            protError = "Server sent an invalid subprotocol";
          }
          if (protError) {
            abortHandshake(websocket, socket, protError);
            return;
          }
          if (serverProt)
            websocket._protocol = serverProt;
          const secWebSocketExtensions = res.headers["sec-websocket-extensions"];
          if (secWebSocketExtensions !== void 0) {
            if (!perMessageDeflate) {
              const message = "Server sent a Sec-WebSocket-Extensions header but no extension was requested";
              abortHandshake(websocket, socket, message);
              return;
            }
            let extensions;
            try {
              extensions = parse2(secWebSocketExtensions);
            } catch (err2) {
              const message = "Invalid Sec-WebSocket-Extensions header";
              abortHandshake(websocket, socket, message);
              return;
            }
            const extensionNames = Object.keys(extensions);
            if (extensionNames.length) {
              if (extensionNames.length !== 1 || extensionNames[0] !== PerMessageDeflate.extensionName) {
                const message = "Server indicated an extension that was not requested";
                abortHandshake(websocket, socket, message);
                return;
              }
              try {
                perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);
              } catch (err2) {
                const message = "Invalid Sec-WebSocket-Extensions header";
                abortHandshake(websocket, socket, message);
                return;
              }
              websocket._extensions[PerMessageDeflate.extensionName] = perMessageDeflate;
            }
          }
          websocket.setSocket(socket, head, opts.maxPayload);
        });
      }
      function emitErrorAndClose(websocket, err2) {
        websocket._readyState = WebSocket.CLOSING;
        websocket.emit("error", err2);
        websocket.emitClose();
      }
      function netConnect(options) {
        options.path = options.socketPath;
        return net.connect(options);
      }
      function tlsConnect(options) {
        options.path = void 0;
        if (!options.servername && options.servername !== "") {
          options.servername = net.isIP(options.host) ? "" : options.host;
        }
        return tls.connect(options);
      }
      function abortHandshake(websocket, stream, message) {
        websocket._readyState = WebSocket.CLOSING;
        const err2 = new Error(message);
        Error.captureStackTrace(err2, abortHandshake);
        if (stream.setHeader) {
          stream.abort();
          if (stream.socket && !stream.socket.destroyed) {
            stream.socket.destroy();
          }
          stream.once("abort", websocket.emitClose.bind(websocket));
          websocket.emit("error", err2);
        } else {
          stream.destroy(err2);
          stream.once("error", websocket.emit.bind(websocket, "error"));
          stream.once("close", websocket.emitClose.bind(websocket));
        }
      }
      function sendAfterClose(websocket, data, cb2) {
        if (data) {
          const length = toBuffer(data).length;
          if (websocket._socket)
            websocket._sender._bufferedBytes += length;
          else
            websocket._bufferedAmount += length;
        }
        if (cb2) {
          const err2 = new Error(
            `WebSocket is not open: readyState ${websocket.readyState} (${readyStates[websocket.readyState]})`
          );
          cb2(err2);
        }
      }
      function receiverOnConclude(code, reason) {
        const websocket = this[kWebSocket];
        websocket._closeFrameReceived = true;
        websocket._closeMessage = reason;
        websocket._closeCode = code;
        if (websocket._socket[kWebSocket] === void 0)
          return;
        websocket._socket.removeListener("data", socketOnData);
        process.nextTick(resume, websocket._socket);
        if (code === 1005)
          websocket.close();
        else
          websocket.close(code, reason);
      }
      function receiverOnDrain() {
        this[kWebSocket]._socket.resume();
      }
      function receiverOnError(err2) {
        const websocket = this[kWebSocket];
        if (websocket._socket[kWebSocket] !== void 0) {
          websocket._socket.removeListener("data", socketOnData);
          process.nextTick(resume, websocket._socket);
          websocket.close(err2[kStatusCode]);
        }
        websocket.emit("error", err2);
      }
      function receiverOnFinish() {
        this[kWebSocket].emitClose();
      }
      function receiverOnMessage(data) {
        this[kWebSocket].emit("message", data);
      }
      function receiverOnPing(data) {
        const websocket = this[kWebSocket];
        websocket.pong(data, !websocket._isServer, NOOP);
        websocket.emit("ping", data);
      }
      function receiverOnPong(data) {
        this[kWebSocket].emit("pong", data);
      }
      function resume(stream) {
        stream.resume();
      }
      function socketOnClose() {
        const websocket = this[kWebSocket];
        this.removeListener("close", socketOnClose);
        this.removeListener("data", socketOnData);
        this.removeListener("end", socketOnEnd);
        websocket._readyState = WebSocket.CLOSING;
        let chunk;
        if (!this._readableState.endEmitted && !websocket._closeFrameReceived && !websocket._receiver._writableState.errorEmitted && (chunk = websocket._socket.read()) !== null) {
          websocket._receiver.write(chunk);
        }
        websocket._receiver.end();
        this[kWebSocket] = void 0;
        clearTimeout(websocket._closeTimer);
        if (websocket._receiver._writableState.finished || websocket._receiver._writableState.errorEmitted) {
          websocket.emitClose();
        } else {
          websocket._receiver.on("error", receiverOnFinish);
          websocket._receiver.on("finish", receiverOnFinish);
        }
      }
      function socketOnData(chunk) {
        if (!this[kWebSocket]._receiver.write(chunk)) {
          this.pause();
        }
      }
      function socketOnEnd() {
        const websocket = this[kWebSocket];
        websocket._readyState = WebSocket.CLOSING;
        websocket._receiver.end();
        this.end();
      }
      function socketOnError() {
        const websocket = this[kWebSocket];
        this.removeListener("error", socketOnError);
        this.on("error", NOOP);
        if (websocket) {
          websocket._readyState = WebSocket.CLOSING;
          this.destroy();
        }
      }
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/stream.js
  var require_stream = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/stream.js"(exports2, module2) {
      "use strict";
      var { Duplex } = __require("stream");
      function emitClose(stream) {
        stream.emit("close");
      }
      function duplexOnEnd() {
        if (!this.destroyed && this._writableState.finished) {
          this.destroy();
        }
      }
      function duplexOnError(err2) {
        this.removeListener("error", duplexOnError);
        this.destroy();
        if (this.listenerCount("error") === 0) {
          this.emit("error", err2);
        }
      }
      function createWebSocketStream(ws, options) {
        let resumeOnReceiverDrain = true;
        let terminateOnDestroy = true;
        function receiverOnDrain() {
          if (resumeOnReceiverDrain)
            ws._socket.resume();
        }
        if (ws.readyState === ws.CONNECTING) {
          ws.once("open", function open() {
            ws._receiver.removeAllListeners("drain");
            ws._receiver.on("drain", receiverOnDrain);
          });
        } else {
          ws._receiver.removeAllListeners("drain");
          ws._receiver.on("drain", receiverOnDrain);
        }
        const duplex = new Duplex({
          ...options,
          autoDestroy: false,
          emitClose: false,
          objectMode: false,
          writableObjectMode: false
        });
        ws.on("message", function message(msg) {
          if (!duplex.push(msg)) {
            resumeOnReceiverDrain = false;
            ws._socket.pause();
          }
        });
        ws.once("error", function error(err2) {
          if (duplex.destroyed)
            return;
          terminateOnDestroy = false;
          duplex.destroy(err2);
        });
        ws.once("close", function close() {
          if (duplex.destroyed)
            return;
          duplex.push(null);
        });
        duplex._destroy = function(err2, callback) {
          if (ws.readyState === ws.CLOSED) {
            callback(err2);
            process.nextTick(emitClose, duplex);
            return;
          }
          let called = false;
          ws.once("error", function error(err3) {
            called = true;
            callback(err3);
          });
          ws.once("close", function close() {
            if (!called)
              callback(err2);
            process.nextTick(emitClose, duplex);
          });
          if (terminateOnDestroy)
            ws.terminate();
        };
        duplex._final = function(callback) {
          if (ws.readyState === ws.CONNECTING) {
            ws.once("open", function open() {
              duplex._final(callback);
            });
            return;
          }
          if (ws._socket === null)
            return;
          if (ws._socket._writableState.finished) {
            callback();
            if (duplex._readableState.endEmitted)
              duplex.destroy();
          } else {
            ws._socket.once("finish", function finish() {
              callback();
            });
            ws.close();
          }
        };
        duplex._read = function() {
          if ((ws.readyState === ws.OPEN || ws.readyState === ws.CLOSING) && !resumeOnReceiverDrain) {
            resumeOnReceiverDrain = true;
            if (!ws._receiver._writableState.needDrain)
              ws._socket.resume();
          }
        };
        duplex._write = function(chunk, encoding, callback) {
          if (ws.readyState === ws.CONNECTING) {
            ws.once("open", function open() {
              duplex._write(chunk, encoding, callback);
            });
            return;
          }
          ws.send(chunk, callback);
        };
        duplex.on("end", duplexOnEnd);
        duplex.on("error", duplexOnError);
        return duplex;
      }
      module2.exports = createWebSocketStream;
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/websocket-server.js
  var require_websocket_server = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/lib/websocket-server.js"(exports2, module2) {
      "use strict";
      var EventEmitter = __require("events");
      var http = __require("http");
      var https = __require("https");
      var net = __require("net");
      var tls = __require("tls");
      var { createHash } = __require("crypto");
      var PerMessageDeflate = require_permessage_deflate();
      var WebSocket = require_websocket();
      var { format, parse: parse2 } = require_extension();
      var { GUID, kWebSocket } = require_constants();
      var keyRegex = /^[+/0-9A-Za-z]{22}==$/;
      var RUNNING = 0;
      var CLOSING = 1;
      var CLOSED = 2;
      var WebSocketServer = class extends EventEmitter {
        constructor(options, callback) {
          super();
          options = {
            maxPayload: 100 * 1024 * 1024,
            perMessageDeflate: false,
            handleProtocols: null,
            clientTracking: true,
            verifyClient: null,
            noServer: false,
            backlog: null,
            server: null,
            host: null,
            path: null,
            port: null,
            ...options
          };
          if (options.port == null && !options.server && !options.noServer || options.port != null && (options.server || options.noServer) || options.server && options.noServer) {
            throw new TypeError(
              'One and only one of the "port", "server", or "noServer" options must be specified'
            );
          }
          if (options.port != null) {
            this._server = http.createServer((req, res) => {
              const body = http.STATUS_CODES[426];
              res.writeHead(426, {
                "Content-Length": body.length,
                "Content-Type": "text/plain"
              });
              res.end(body);
            });
            this._server.listen(
              options.port,
              options.host,
              options.backlog,
              callback
            );
          } else if (options.server) {
            this._server = options.server;
          }
          if (this._server) {
            const emitConnection = this.emit.bind(this, "connection");
            this._removeListeners = addListeners(this._server, {
              listening: this.emit.bind(this, "listening"),
              error: this.emit.bind(this, "error"),
              upgrade: (req, socket, head) => {
                this.handleUpgrade(req, socket, head, emitConnection);
              }
            });
          }
          if (options.perMessageDeflate === true)
            options.perMessageDeflate = {};
          if (options.clientTracking)
            this.clients = /* @__PURE__ */ new Set();
          this.options = options;
          this._state = RUNNING;
        }
        address() {
          if (this.options.noServer) {
            throw new Error('The server is operating in "noServer" mode');
          }
          if (!this._server)
            return null;
          return this._server.address();
        }
        close(cb2) {
          if (cb2)
            this.once("close", cb2);
          if (this._state === CLOSED) {
            process.nextTick(emitClose, this);
            return;
          }
          if (this._state === CLOSING)
            return;
          this._state = CLOSING;
          if (this.clients) {
            for (const client of this.clients)
              client.terminate();
          }
          const server = this._server;
          if (server) {
            this._removeListeners();
            this._removeListeners = this._server = null;
            if (this.options.port != null) {
              server.close(emitClose.bind(void 0, this));
              return;
            }
          }
          process.nextTick(emitClose, this);
        }
        shouldHandle(req) {
          if (this.options.path) {
            const index = req.url.indexOf("?");
            const pathname = index !== -1 ? req.url.slice(0, index) : req.url;
            if (pathname !== this.options.path)
              return false;
          }
          return true;
        }
        handleUpgrade(req, socket, head, cb2) {
          socket.on("error", socketOnError);
          const key2 = req.headers["sec-websocket-key"] !== void 0 ? req.headers["sec-websocket-key"].trim() : false;
          const version = +req.headers["sec-websocket-version"];
          const extensions = {};
          if (req.method !== "GET" || req.headers.upgrade.toLowerCase() !== "websocket" || !key2 || !keyRegex.test(key2) || version !== 8 && version !== 13 || !this.shouldHandle(req)) {
            return abortHandshake(socket, 400);
          }
          if (this.options.perMessageDeflate) {
            const perMessageDeflate = new PerMessageDeflate(
              this.options.perMessageDeflate,
              true,
              this.options.maxPayload
            );
            try {
              const offers = parse2(req.headers["sec-websocket-extensions"]);
              if (offers[PerMessageDeflate.extensionName]) {
                perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);
                extensions[PerMessageDeflate.extensionName] = perMessageDeflate;
              }
            } catch (err2) {
              return abortHandshake(socket, 400);
            }
          }
          if (this.options.verifyClient) {
            const info = {
              origin: req.headers[`${version === 8 ? "sec-websocket-origin" : "origin"}`],
              secure: !!(req.socket.authorized || req.socket.encrypted),
              req
            };
            if (this.options.verifyClient.length === 2) {
              this.options.verifyClient(info, (verified, code, message, headers) => {
                if (!verified) {
                  return abortHandshake(socket, code || 401, message, headers);
                }
                this.completeUpgrade(key2, extensions, req, socket, head, cb2);
              });
              return;
            }
            if (!this.options.verifyClient(info))
              return abortHandshake(socket, 401);
          }
          this.completeUpgrade(key2, extensions, req, socket, head, cb2);
        }
        completeUpgrade(key2, extensions, req, socket, head, cb2) {
          if (!socket.readable || !socket.writable)
            return socket.destroy();
          if (socket[kWebSocket]) {
            throw new Error(
              "server.handleUpgrade() was called more than once with the same socket, possibly due to a misconfiguration"
            );
          }
          if (this._state > RUNNING)
            return abortHandshake(socket, 503);
          const digest = createHash("sha1").update(key2 + GUID).digest("base64");
          const headers = [
            "HTTP/1.1 101 Switching Protocols",
            "Upgrade: websocket",
            "Connection: Upgrade",
            `Sec-WebSocket-Accept: ${digest}`
          ];
          const ws = new WebSocket(null);
          let protocol = req.headers["sec-websocket-protocol"];
          if (protocol) {
            protocol = protocol.split(",").map(trim);
            if (this.options.handleProtocols) {
              protocol = this.options.handleProtocols(protocol, req);
            } else {
              protocol = protocol[0];
            }
            if (protocol) {
              headers.push(`Sec-WebSocket-Protocol: ${protocol}`);
              ws._protocol = protocol;
            }
          }
          if (extensions[PerMessageDeflate.extensionName]) {
            const params = extensions[PerMessageDeflate.extensionName].params;
            const value = format({
              [PerMessageDeflate.extensionName]: [params]
            });
            headers.push(`Sec-WebSocket-Extensions: ${value}`);
            ws._extensions = extensions;
          }
          this.emit("headers", headers, req);
          socket.write(headers.concat("\r\n").join("\r\n"));
          socket.removeListener("error", socketOnError);
          ws.setSocket(socket, head, this.options.maxPayload);
          if (this.clients) {
            this.clients.add(ws);
            ws.on("close", () => this.clients.delete(ws));
          }
          cb2(ws, req);
        }
      };
      module2.exports = WebSocketServer;
      function addListeners(server, map) {
        for (const event of Object.keys(map))
          server.on(event, map[event]);
        return function removeListeners() {
          for (const event of Object.keys(map)) {
            server.removeListener(event, map[event]);
          }
        };
      }
      function emitClose(server) {
        server._state = CLOSED;
        server.emit("close");
      }
      function socketOnError() {
        this.destroy();
      }
      function abortHandshake(socket, code, message, headers) {
        if (socket.writable) {
          message = message || http.STATUS_CODES[code];
          headers = {
            Connection: "close",
            "Content-Type": "text/html",
            "Content-Length": Buffer.byteLength(message),
            ...headers
          };
          socket.write(
            `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\r
` + Object.keys(headers).map((h) => `${h}: ${headers[h]}`).join("\r\n") + "\r\n\r\n" + message
          );
        }
        socket.removeListener("error", socketOnError);
        socket.destroy();
      }
      function trim(str) {
        return str.trim();
      }
    }
  });

  // ../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/index.js
  var require_ws = __commonJS({
    "../../../.yarn/__virtual__/ws-virtual-692c83bb73/0/cache/ws-npm-7.5.9-26f12a5ed6-171e350129.zip/node_modules/ws/index.js"(exports2, module2) {
      "use strict";
      var WebSocket = require_websocket();
      WebSocket.createWebSocketStream = require_stream();
      WebSocket.Server = require_websocket_server();
      WebSocket.Receiver = require_receiver();
      WebSocket.Sender = require_sender();
      module2.exports = WebSocket;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/devtools-window-polyfill.js
  var require_devtools_window_polyfill = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/devtools-window-polyfill.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var ws_1 = __importDefault(require_ws());
      var customGlobal = global;
      if (!customGlobal.WebSocket) {
        customGlobal.WebSocket = ws_1.default;
      }
      if (!customGlobal.window) {
        customGlobal.window = global;
      }
      customGlobal.window.__REACT_DEVTOOLS_COMPONENT_FILTERS__ = [
        {
          type: 1,
          value: 7,
          isEnabled: true
        },
        {
          type: 2,
          value: "InternalApp",
          isEnabled: true,
          isValid: true
        },
        {
          type: 2,
          value: "InternalAppContext",
          isEnabled: true,
          isValid: true
        },
        {
          type: 2,
          value: "InternalStdoutContext",
          isEnabled: true,
          isValid: true
        },
        {
          type: 2,
          value: "InternalStderrContext",
          isEnabled: true,
          isValid: true
        },
        {
          type: 2,
          value: "InternalStdinContext",
          isEnabled: true,
          isValid: true
        },
        {
          type: 2,
          value: "InternalFocusContext",
          isEnabled: true,
          isValid: true
        }
      ];
    }
  });

  // ../../../.yarn/cache/react-devtools-core-npm-4.28.5-064d121dfd-7c951a6a9b.zip/node_modules/react-devtools-core/dist/backend.js
  var require_backend = __commonJS({
    "../../../.yarn/cache/react-devtools-core-npm-4.28.5-064d121dfd-7c951a6a9b.zip/node_modules/react-devtools-core/dist/backend.js"(exports2, module2) {
      (function webpackUniversalModuleDefinition(root, factory) {
        if (typeof exports2 === "object" && typeof module2 === "object")
          module2.exports = factory();
        else if (typeof define === "function" && define.amd)
          define([], factory);
        else if (typeof exports2 === "object")
          exports2["ReactDevToolsBackend"] = factory();
        else
          root["ReactDevToolsBackend"] = factory();
      })(self, () => {
        return (() => {
          var __webpack_modules__ = {
            602: (__unused_webpack_module, exports3, __webpack_require__3) => {
              "use strict";
              var __webpack_unused_export__;
              function _typeof(obj) {
                "@babel/helpers - typeof";
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                  _typeof = function _typeof2(obj2) {
                    return typeof obj2;
                  };
                } else {
                  _typeof = function _typeof2(obj2) {
                    return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                  };
                }
                return _typeof(obj);
              }
              var k = __webpack_require__3(206), p = __webpack_require__3(189), q = Object.assign, w = p.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, x = [], y = null;
              function z() {
                if (null === y) {
                  var a = /* @__PURE__ */ new Map();
                  try {
                    A.useContext({
                      _currentValue: null
                    }), A.useState(null), A.useReducer(function(c) {
                      return c;
                    }, null), A.useRef(null), "function" === typeof A.useCacheRefresh && A.useCacheRefresh(), A.useLayoutEffect(function() {
                    }), A.useInsertionEffect(function() {
                    }), A.useEffect(function() {
                    }), A.useImperativeHandle(void 0, function() {
                      return null;
                    }), A.useDebugValue(null), A.useCallback(function() {
                    }), A.useMemo(function() {
                      return null;
                    }), "function" === typeof A.useMemoCache && A.useMemoCache(0);
                  } finally {
                    var b = x;
                    x = [];
                  }
                  for (var e = 0; e < b.length; e++) {
                    var g = b[e];
                    a.set(g.primitive, k.parse(g.stackError));
                  }
                  y = a;
                }
                return y;
              }
              var B = null;
              function C() {
                var a = B;
                null !== a && (B = a.next);
                return a;
              }
              var A = {
                use: function use() {
                  throw Error("Support for `use` not yet implemented in react-debug-tools.");
                },
                readContext: function readContext(a) {
                  return a._currentValue;
                },
                useCacheRefresh: function useCacheRefresh() {
                  var a = C();
                  x.push({
                    primitive: "CacheRefresh",
                    stackError: Error(),
                    value: null !== a ? a.memoizedState : function() {
                    }
                  });
                  return function() {
                  };
                },
                useCallback: function useCallback(a) {
                  var b = C();
                  x.push({
                    primitive: "Callback",
                    stackError: Error(),
                    value: null !== b ? b.memoizedState[0] : a
                  });
                  return a;
                },
                useContext: function useContext(a) {
                  x.push({
                    primitive: "Context",
                    stackError: Error(),
                    value: a._currentValue
                  });
                  return a._currentValue;
                },
                useEffect: function useEffect(a) {
                  C();
                  x.push({
                    primitive: "Effect",
                    stackError: Error(),
                    value: a
                  });
                },
                useImperativeHandle: function useImperativeHandle(a) {
                  C();
                  var b = void 0;
                  null !== a && "object" === _typeof(a) && (b = a.current);
                  x.push({
                    primitive: "ImperativeHandle",
                    stackError: Error(),
                    value: b
                  });
                },
                useDebugValue: function useDebugValue(a, b) {
                  x.push({
                    primitive: "DebugValue",
                    stackError: Error(),
                    value: "function" === typeof b ? b(a) : a
                  });
                },
                useLayoutEffect: function useLayoutEffect(a) {
                  C();
                  x.push({
                    primitive: "LayoutEffect",
                    stackError: Error(),
                    value: a
                  });
                },
                useInsertionEffect: function useInsertionEffect(a) {
                  C();
                  x.push({
                    primitive: "InsertionEffect",
                    stackError: Error(),
                    value: a
                  });
                },
                useMemo: function useMemo2(a) {
                  var b = C();
                  a = null !== b ? b.memoizedState[0] : a();
                  x.push({
                    primitive: "Memo",
                    stackError: Error(),
                    value: a
                  });
                  return a;
                },
                useMemoCache: function useMemoCache() {
                  return [];
                },
                useReducer: function useReducer(a, b, e) {
                  a = C();
                  b = null !== a ? a.memoizedState : void 0 !== e ? e(b) : b;
                  x.push({
                    primitive: "Reducer",
                    stackError: Error(),
                    value: b
                  });
                  return [b, function() {
                  }];
                },
                useRef: function useRef(a) {
                  var b = C();
                  a = null !== b ? b.memoizedState : {
                    current: a
                  };
                  x.push({
                    primitive: "Ref",
                    stackError: Error(),
                    value: a.current
                  });
                  return a;
                },
                useState: function useState(a) {
                  var b = C();
                  a = null !== b ? b.memoizedState : "function" === typeof a ? a() : a;
                  x.push({
                    primitive: "State",
                    stackError: Error(),
                    value: a
                  });
                  return [a, function() {
                  }];
                },
                useTransition: function useTransition() {
                  C();
                  C();
                  x.push({
                    primitive: "Transition",
                    stackError: Error(),
                    value: void 0
                  });
                  return [false, function() {
                  }];
                },
                useSyncExternalStore: function useSyncExternalStore(a, b) {
                  C();
                  C();
                  a = b();
                  x.push({
                    primitive: "SyncExternalStore",
                    stackError: Error(),
                    value: a
                  });
                  return a;
                },
                useDeferredValue: function useDeferredValue(a) {
                  var b = C();
                  x.push({
                    primitive: "DeferredValue",
                    stackError: Error(),
                    value: null !== b ? b.memoizedState : a
                  });
                  return a;
                },
                useId: function useId() {
                  var a = C();
                  a = null !== a ? a.memoizedState : "";
                  x.push({
                    primitive: "Id",
                    stackError: Error(),
                    value: a
                  });
                  return a;
                }
              }, D = {
                get: function get(a, b) {
                  if (a.hasOwnProperty(b))
                    return a[b];
                  a = Error("Missing method in Dispatcher: " + b);
                  a.name = "ReactDebugToolsUnsupportedHookError";
                  throw a;
                }
              }, E = "undefined" === typeof Proxy ? A : new Proxy(A, D), F = 0;
              function G(a, b, e) {
                var g = b[e].source, c = 0;
                a:
                  for (; c < a.length; c++) {
                    if (a[c].source === g) {
                      for (var h = e + 1, r = c + 1; h < b.length && r < a.length; h++, r++) {
                        if (a[r].source !== b[h].source)
                          continue a;
                      }
                      return c;
                    }
                  }
                return -1;
              }
              function H(a, b) {
                if (!a)
                  return false;
                b = "use" + b;
                return a.length < b.length ? false : a.lastIndexOf(b) === a.length - b.length;
              }
              function I(a, b, e) {
                for (var g = [], c = null, h = g, r = 0, t = [], v = 0; v < b.length; v++) {
                  var u = b[v];
                  var d = a;
                  var l = k.parse(u.stackError);
                  b: {
                    var m = l, n = G(m, d, F);
                    if (-1 !== n)
                      d = n;
                    else {
                      for (var f = 0; f < d.length && 5 > f; f++) {
                        if (n = G(m, d, f), -1 !== n) {
                          F = f;
                          d = n;
                          break b;
                        }
                      }
                      d = -1;
                    }
                  }
                  b: {
                    m = l;
                    n = z().get(u.primitive);
                    if (void 0 !== n)
                      for (f = 0; f < n.length && f < m.length; f++) {
                        if (n[f].source !== m[f].source) {
                          f < m.length - 1 && H(m[f].functionName, u.primitive) && f++;
                          f < m.length - 1 && H(m[f].functionName, u.primitive) && f++;
                          m = f;
                          break b;
                        }
                      }
                    m = -1;
                  }
                  l = -1 === d || -1 === m || 2 > d - m ? null : l.slice(m, d - 1);
                  if (null !== l) {
                    d = 0;
                    if (null !== c) {
                      for (; d < l.length && d < c.length && l[l.length - d - 1].source === c[c.length - d - 1].source; ) {
                        d++;
                      }
                      for (c = c.length - 1; c > d; c--) {
                        h = t.pop();
                      }
                    }
                    for (c = l.length - d - 1; 1 <= c; c--) {
                      d = [], m = l[c], (n = l[c - 1].functionName) ? (f = n.lastIndexOf("."), -1 === f && (f = 0), "use" === n.slice(f, f + 3) && (f += 3), n = n.slice(f)) : n = "", n = {
                        id: null,
                        isStateEditable: false,
                        name: n,
                        value: void 0,
                        subHooks: d
                      }, e && (n.hookSource = {
                        lineNumber: m.lineNumber,
                        columnNumber: m.columnNumber,
                        functionName: m.functionName,
                        fileName: m.fileName
                      }), h.push(n), t.push(h), h = d;
                    }
                    c = l;
                  }
                  d = u.primitive;
                  u = {
                    id: "Context" === d || "DebugValue" === d ? null : r++,
                    isStateEditable: "Reducer" === d || "State" === d,
                    name: d,
                    value: u.value,
                    subHooks: []
                  };
                  e && (d = {
                    lineNumber: null,
                    functionName: null,
                    fileName: null,
                    columnNumber: null
                  }, l && 1 <= l.length && (l = l[0], d.lineNumber = l.lineNumber, d.functionName = l.functionName, d.fileName = l.fileName, d.columnNumber = l.columnNumber), u.hookSource = d);
                  h.push(u);
                }
                J(g, null);
                return g;
              }
              function J(a, b) {
                for (var e = [], g = 0; g < a.length; g++) {
                  var c = a[g];
                  "DebugValue" === c.name && 0 === c.subHooks.length ? (a.splice(g, 1), g--, e.push(c)) : J(c.subHooks, c);
                }
                null !== b && (1 === e.length ? b.value = e[0].value : 1 < e.length && (b.value = e.map(function(h) {
                  return h.value;
                })));
              }
              function K(a) {
                if (a instanceof Error && "ReactDebugToolsUnsupportedHookError" === a.name)
                  throw a;
                var b = Error("Error rendering inspected component", {
                  cause: a
                });
                b.name = "ReactDebugToolsRenderError";
                b.cause = a;
                throw b;
              }
              function L(a, b, e) {
                var g = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : false;
                null == e && (e = w.ReactCurrentDispatcher);
                var c = e.current;
                e.current = E;
                try {
                  var h = Error();
                  a(b);
                } catch (t) {
                  K(t);
                } finally {
                  var r = x;
                  x = [];
                  e.current = c;
                }
                c = k.parse(h);
                return I(c, r, g);
              }
              function M(a) {
                a.forEach(function(b, e) {
                  return e._currentValue = b;
                });
              }
              __webpack_unused_export__ = L;
              exports3.inspectHooksOfFiber = function(a, b) {
                var e = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : false;
                null == b && (b = w.ReactCurrentDispatcher);
                if (0 !== a.tag && 15 !== a.tag && 11 !== a.tag)
                  throw Error("Unknown Fiber. Needs to be a function component to inspect hooks.");
                z();
                var g = a.type, c = a.memoizedProps;
                if (g !== a.elementType && g && g.defaultProps) {
                  c = q({}, c);
                  var h = g.defaultProps;
                  for (r in h) {
                    void 0 === c[r] && (c[r] = h[r]);
                  }
                }
                B = a.memoizedState;
                var r = /* @__PURE__ */ new Map();
                try {
                  for (h = a; h; ) {
                    if (10 === h.tag) {
                      var t = h.type._context;
                      r.has(t) || (r.set(t, t._currentValue), t._currentValue = h.memoizedProps.value);
                    }
                    h = h.return;
                  }
                  if (11 === a.tag) {
                    var v = g.render;
                    g = c;
                    var u = a.ref;
                    t = b;
                    var d = t.current;
                    t.current = E;
                    try {
                      var l = Error();
                      v(g, u);
                    } catch (f) {
                      K(f);
                    } finally {
                      var m = x;
                      x = [];
                      t.current = d;
                    }
                    var n = k.parse(l);
                    return I(n, m, e);
                  }
                  return L(g, c, b, e);
                } finally {
                  B = null, M(r);
                }
              };
            },
            987: (module3, __unused_webpack_exports, __webpack_require__3) => {
              "use strict";
              if (true) {
                module3.exports = __webpack_require__3(602);
              } else {
              }
            },
            9: (__unused_webpack_module, exports3) => {
              "use strict";
              var __webpack_unused_export__;
              function _typeof(obj) {
                "@babel/helpers - typeof";
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                  _typeof = function _typeof2(obj2) {
                    return typeof obj2;
                  };
                } else {
                  _typeof = function _typeof2(obj2) {
                    return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                  };
                }
                return _typeof(obj);
              }
              var b = Symbol.for("react.element"), c = Symbol.for("react.portal"), d = Symbol.for("react.fragment"), e = Symbol.for("react.strict_mode"), f = Symbol.for("react.profiler"), g = Symbol.for("react.provider"), h = Symbol.for("react.context"), k = Symbol.for("react.server_context"), l = Symbol.for("react.forward_ref"), m = Symbol.for("react.suspense"), n = Symbol.for("react.suspense_list"), p = Symbol.for("react.memo"), q = Symbol.for("react.lazy"), t = Symbol.for("react.offscreen"), u = Symbol.for("react.cache"), v = Symbol.for("react.client.reference");
              function w(a) {
                if ("object" === _typeof(a) && null !== a) {
                  var r = a.$$typeof;
                  switch (r) {
                    case b:
                      switch (a = a.type, a) {
                        case d:
                        case f:
                        case e:
                        case m:
                        case n:
                          return a;
                        default:
                          switch (a = a && a.$$typeof, a) {
                            case k:
                            case h:
                            case l:
                            case q:
                            case p:
                            case g:
                              return a;
                            default:
                              return r;
                          }
                      }
                    case c:
                      return r;
                  }
                }
              }
              exports3.ContextConsumer = h;
              exports3.ContextProvider = g;
              __webpack_unused_export__ = b;
              exports3.ForwardRef = l;
              exports3.Fragment = d;
              exports3.Lazy = q;
              exports3.Memo = p;
              exports3.Portal = c;
              exports3.Profiler = f;
              exports3.StrictMode = e;
              exports3.Suspense = m;
              __webpack_unused_export__ = n;
              __webpack_unused_export__ = function() {
                return false;
              };
              __webpack_unused_export__ = function() {
                return false;
              };
              __webpack_unused_export__ = function(a) {
                return w(a) === h;
              };
              __webpack_unused_export__ = function(a) {
                return w(a) === g;
              };
              exports3.isElement = function(a) {
                return "object" === _typeof(a) && null !== a && a.$$typeof === b;
              };
              __webpack_unused_export__ = function(a) {
                return w(a) === l;
              };
              __webpack_unused_export__ = function(a) {
                return w(a) === d;
              };
              __webpack_unused_export__ = function(a) {
                return w(a) === q;
              };
              __webpack_unused_export__ = function(a) {
                return w(a) === p;
              };
              __webpack_unused_export__ = function(a) {
                return w(a) === c;
              };
              __webpack_unused_export__ = function(a) {
                return w(a) === f;
              };
              __webpack_unused_export__ = function(a) {
                return w(a) === e;
              };
              __webpack_unused_export__ = function(a) {
                return w(a) === m;
              };
              __webpack_unused_export__ = function(a) {
                return w(a) === n;
              };
              __webpack_unused_export__ = function(a) {
                return "string" === typeof a || "function" === typeof a || a === d || a === f || a === e || a === m || a === n || a === t || a === u || "object" === _typeof(a) && null !== a && (a.$$typeof === q || a.$$typeof === p || a.$$typeof === g || a.$$typeof === h || a.$$typeof === l || a.$$typeof === v || void 0 !== a.getModuleId) ? true : false;
              };
              exports3.typeOf = w;
            },
            550: (module3, __unused_webpack_exports, __webpack_require__3) => {
              "use strict";
              if (true) {
                module3.exports = __webpack_require__3(9);
              } else {
              }
            },
            978: (__unused_webpack_module, exports3) => {
              "use strict";
              function _typeof(obj) {
                "@babel/helpers - typeof";
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                  _typeof = function _typeof2(obj2) {
                    return typeof obj2;
                  };
                } else {
                  _typeof = function _typeof2(obj2) {
                    return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                  };
                }
                return _typeof(obj);
              }
              var l = Symbol.for("react.element"), n = Symbol.for("react.portal"), p = Symbol.for("react.fragment"), q = Symbol.for("react.strict_mode"), r = Symbol.for("react.profiler"), t = Symbol.for("react.provider"), u = Symbol.for("react.context"), v = Symbol.for("react.server_context"), w = Symbol.for("react.forward_ref"), x = Symbol.for("react.suspense"), y = Symbol.for("react.suspense_list"), z = Symbol.for("react.memo"), A = Symbol.for("react.lazy"), aa = Symbol.for("react.debug_trace_mode"), ba = Symbol.for("react.offscreen"), ca = Symbol.for("react.cache"), B = Symbol.for("react.default_value"), da = Symbol.for("react.postpone"), C = Symbol.iterator;
              function ea(a) {
                if (null === a || "object" !== _typeof(a))
                  return null;
                a = C && a[C] || a["@@iterator"];
                return "function" === typeof a ? a : null;
              }
              var D = {
                isMounted: function isMounted() {
                  return false;
                },
                enqueueForceUpdate: function enqueueForceUpdate() {
                },
                enqueueReplaceState: function enqueueReplaceState() {
                },
                enqueueSetState: function enqueueSetState() {
                }
              }, E = Object.assign, F = {};
              function G(a, b, c) {
                this.props = a;
                this.context = b;
                this.refs = F;
                this.updater = c || D;
              }
              G.prototype.isReactComponent = {};
              G.prototype.setState = function(a, b) {
                if ("object" !== _typeof(a) && "function" !== typeof a && null != a)
                  throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
                this.updater.enqueueSetState(this, a, b, "setState");
              };
              G.prototype.forceUpdate = function(a) {
                this.updater.enqueueForceUpdate(this, a, "forceUpdate");
              };
              function H() {
              }
              H.prototype = G.prototype;
              function I(a, b, c) {
                this.props = a;
                this.context = b;
                this.refs = F;
                this.updater = c || D;
              }
              var J = I.prototype = new H();
              J.constructor = I;
              E(J, G.prototype);
              J.isPureReactComponent = true;
              var K = Array.isArray, L = Object.prototype.hasOwnProperty, M = {
                current: null
              }, N = {
                key: true,
                ref: true,
                __self: true,
                __source: true
              };
              function O(a, b, c) {
                var d, e = {}, f = null, g = null;
                if (null != b)
                  for (d in void 0 !== b.ref && (g = b.ref), void 0 !== b.key && (f = "" + b.key), b) {
                    L.call(b, d) && !N.hasOwnProperty(d) && (e[d] = b[d]);
                  }
                var h = arguments.length - 2;
                if (1 === h)
                  e.children = c;
                else if (1 < h) {
                  for (var k = Array(h), m = 0; m < h; m++) {
                    k[m] = arguments[m + 2];
                  }
                  e.children = k;
                }
                if (a && a.defaultProps)
                  for (d in h = a.defaultProps, h) {
                    void 0 === e[d] && (e[d] = h[d]);
                  }
                return {
                  $$typeof: l,
                  type: a,
                  key: f,
                  ref: g,
                  props: e,
                  _owner: M.current
                };
              }
              function fa(a, b) {
                return {
                  $$typeof: l,
                  type: a.type,
                  key: b,
                  ref: a.ref,
                  props: a.props,
                  _owner: a._owner
                };
              }
              function P(a) {
                return "object" === _typeof(a) && null !== a && a.$$typeof === l;
              }
              function escape(a) {
                var b = {
                  "=": "=0",
                  ":": "=2"
                };
                return "$" + a.replace(/[=:]/g, function(c) {
                  return b[c];
                });
              }
              var Q = /\/+/g;
              function R(a, b) {
                return "object" === _typeof(a) && null !== a && null != a.key ? escape("" + a.key) : b.toString(36);
              }
              function S(a, b, c, d, e) {
                var f = _typeof(a);
                if ("undefined" === f || "boolean" === f)
                  a = null;
                var g = false;
                if (null === a)
                  g = true;
                else
                  switch (f) {
                    case "string":
                    case "number":
                      g = true;
                      break;
                    case "object":
                      switch (a.$$typeof) {
                        case l:
                        case n:
                          g = true;
                      }
                  }
                if (g)
                  return g = a, e = e(g), a = "" === d ? "." + R(g, 0) : d, K(e) ? (c = "", null != a && (c = a.replace(Q, "$&/") + "/"), S(e, b, c, "", function(m) {
                    return m;
                  })) : null != e && (P(e) && (e = fa(e, c + (!e.key || g && g.key === e.key ? "" : ("" + e.key).replace(Q, "$&/") + "/") + a)), b.push(e)), 1;
                g = 0;
                d = "" === d ? "." : d + ":";
                if (K(a))
                  for (var h = 0; h < a.length; h++) {
                    f = a[h];
                    var k = d + R(f, h);
                    g += S(f, b, c, k, e);
                  }
                else if (k = ea(a), "function" === typeof k)
                  for (a = k.call(a), h = 0; !(f = a.next()).done; ) {
                    f = f.value, k = d + R(f, h++), g += S(f, b, c, k, e);
                  }
                else if ("object" === f)
                  throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
                return g;
              }
              function T(a, b, c) {
                if (null == a)
                  return a;
                var d = [], e = 0;
                S(a, d, "", "", function(f) {
                  return b.call(c, f, e++);
                });
                return d;
              }
              function ha(a) {
                if (-1 === a._status) {
                  var b = a._result;
                  b = b();
                  b.then(function(c) {
                    if (0 === a._status || -1 === a._status)
                      a._status = 1, a._result = c;
                  }, function(c) {
                    if (0 === a._status || -1 === a._status)
                      a._status = 2, a._result = c;
                  });
                  -1 === a._status && (a._status = 0, a._result = b);
                }
                if (1 === a._status)
                  return a._result.default;
                throw a._result;
              }
              var U = {
                current: null
              };
              function ia() {
                return /* @__PURE__ */ new WeakMap();
              }
              function V() {
                return {
                  s: 0,
                  v: void 0,
                  o: null,
                  p: null
                };
              }
              var W = {
                current: null
              };
              function X(a, b) {
                return W.current.useOptimistic(a, b);
              }
              var Y = {
                transition: null
              }, Z = {}, ja = {
                ReactCurrentDispatcher: W,
                ReactCurrentCache: U,
                ReactCurrentBatchConfig: Y,
                ReactCurrentOwner: M,
                ContextRegistry: Z
              };
              exports3.Children = {
                map: T,
                forEach: function forEach(a, b, c) {
                  T(a, function() {
                    b.apply(this, arguments);
                  }, c);
                },
                count: function count(a) {
                  var b = 0;
                  T(a, function() {
                    b++;
                  });
                  return b;
                },
                toArray: function toArray(a) {
                  return T(a, function(b) {
                    return b;
                  }) || [];
                },
                only: function only(a) {
                  if (!P(a))
                    throw Error("React.Children.only expected to receive a single React element child.");
                  return a;
                }
              };
              exports3.Component = G;
              exports3.Fragment = p;
              exports3.Profiler = r;
              exports3.PureComponent = I;
              exports3.StrictMode = q;
              exports3.Suspense = x;
              exports3.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ja;
              exports3.cache = function(a) {
                return function() {
                  var b = U.current;
                  if (!b)
                    return a.apply(null, arguments);
                  var c = b.getCacheForType(ia);
                  b = c.get(a);
                  void 0 === b && (b = V(), c.set(a, b));
                  c = 0;
                  for (var d = arguments.length; c < d; c++) {
                    var e = arguments[c];
                    if ("function" === typeof e || "object" === _typeof(e) && null !== e) {
                      var f = b.o;
                      null === f && (b.o = f = /* @__PURE__ */ new WeakMap());
                      b = f.get(e);
                      void 0 === b && (b = V(), f.set(e, b));
                    } else
                      f = b.p, null === f && (b.p = f = /* @__PURE__ */ new Map()), b = f.get(e), void 0 === b && (b = V(), f.set(e, b));
                  }
                  if (1 === b.s)
                    return b.v;
                  if (2 === b.s)
                    throw b.v;
                  try {
                    var g = a.apply(null, arguments);
                    c = b;
                    c.s = 1;
                    return c.v = g;
                  } catch (h) {
                    throw g = b, g.s = 2, g.v = h, h;
                  }
                };
              };
              exports3.cloneElement = function(a, b, c) {
                if (null === a || void 0 === a)
                  throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
                var d = E({}, a.props), e = a.key, f = a.ref, g = a._owner;
                if (null != b) {
                  void 0 !== b.ref && (f = b.ref, g = M.current);
                  void 0 !== b.key && (e = "" + b.key);
                  if (a.type && a.type.defaultProps)
                    var h = a.type.defaultProps;
                  for (k in b) {
                    L.call(b, k) && !N.hasOwnProperty(k) && (d[k] = void 0 === b[k] && void 0 !== h ? h[k] : b[k]);
                  }
                }
                var k = arguments.length - 2;
                if (1 === k)
                  d.children = c;
                else if (1 < k) {
                  h = Array(k);
                  for (var m = 0; m < k; m++) {
                    h[m] = arguments[m + 2];
                  }
                  d.children = h;
                }
                return {
                  $$typeof: l,
                  type: a.type,
                  key: e,
                  ref: f,
                  props: d,
                  _owner: g
                };
              };
              exports3.createContext = function(a) {
                a = {
                  $$typeof: u,
                  _currentValue: a,
                  _currentValue2: a,
                  _threadCount: 0,
                  Provider: null,
                  Consumer: null,
                  _defaultValue: null,
                  _globalName: null
                };
                a.Provider = {
                  $$typeof: t,
                  _context: a
                };
                return a.Consumer = a;
              };
              exports3.createElement = O;
              exports3.createFactory = function(a) {
                var b = O.bind(null, a);
                b.type = a;
                return b;
              };
              exports3.createRef = function() {
                return {
                  current: null
                };
              };
              exports3.createServerContext = function(a, b) {
                var c = true;
                if (!Z[a]) {
                  c = false;
                  var d = {
                    $$typeof: v,
                    _currentValue: b,
                    _currentValue2: b,
                    _defaultValue: b,
                    _threadCount: 0,
                    Provider: null,
                    Consumer: null,
                    _globalName: a
                  };
                  d.Provider = {
                    $$typeof: t,
                    _context: d
                  };
                  Z[a] = d;
                }
                d = Z[a];
                if (d._defaultValue === B)
                  d._defaultValue = b, d._currentValue === B && (d._currentValue = b), d._currentValue2 === B && (d._currentValue2 = b);
                else if (c)
                  throw Error("ServerContext: " + a + " already defined");
                return d;
              };
              exports3.experimental_useEffectEvent = function(a) {
                return W.current.useEffectEvent(a);
              };
              exports3.experimental_useOptimistic = function(a, b) {
                return X(a, b);
              };
              exports3.forwardRef = function(a) {
                return {
                  $$typeof: w,
                  render: a
                };
              };
              exports3.isValidElement = P;
              exports3.lazy = function(a) {
                return {
                  $$typeof: A,
                  _payload: {
                    _status: -1,
                    _result: a
                  },
                  _init: ha
                };
              };
              exports3.memo = function(a, b) {
                return {
                  $$typeof: z,
                  type: a,
                  compare: void 0 === b ? null : b
                };
              };
              exports3.startTransition = function(a) {
                var b = Y.transition;
                Y.transition = {};
                try {
                  a();
                } finally {
                  Y.transition = b;
                }
              };
              exports3.unstable_Cache = ca;
              exports3.unstable_DebugTracingMode = aa;
              exports3.unstable_Offscreen = ba;
              exports3.unstable_SuspenseList = y;
              exports3.unstable_act = function() {
                throw Error("act(...) is not supported in production builds of React.");
              };
              exports3.unstable_getCacheForType = function(a) {
                var b = U.current;
                return b ? b.getCacheForType(a) : a();
              };
              exports3.unstable_getCacheSignal = function() {
                var a = U.current;
                return a ? a.getCacheSignal() : (a = new AbortController(), a.abort(Error("This CacheSignal was requested outside React which means that it is immediately aborted.")), a.signal);
              };
              exports3.unstable_postpone = function(a) {
                a = Error(a);
                a.$$typeof = da;
                throw a;
              };
              exports3.unstable_useCacheRefresh = function() {
                return W.current.useCacheRefresh();
              };
              exports3.unstable_useMemoCache = function(a) {
                return W.current.useMemoCache(a);
              };
              exports3.use = function(a) {
                return W.current.use(a);
              };
              exports3.useCallback = function(a, b) {
                return W.current.useCallback(a, b);
              };
              exports3.useContext = function(a) {
                return W.current.useContext(a);
              };
              exports3.useDebugValue = function() {
              };
              exports3.useDeferredValue = function(a, b) {
                return W.current.useDeferredValue(a, b);
              };
              exports3.useEffect = function(a, b) {
                return W.current.useEffect(a, b);
              };
              exports3.useId = function() {
                return W.current.useId();
              };
              exports3.useImperativeHandle = function(a, b, c) {
                return W.current.useImperativeHandle(a, b, c);
              };
              exports3.useInsertionEffect = function(a, b) {
                return W.current.useInsertionEffect(a, b);
              };
              exports3.useLayoutEffect = function(a, b) {
                return W.current.useLayoutEffect(a, b);
              };
              exports3.useMemo = function(a, b) {
                return W.current.useMemo(a, b);
              };
              exports3.useOptimistic = X;
              exports3.useReducer = function(a, b, c) {
                return W.current.useReducer(a, b, c);
              };
              exports3.useRef = function(a) {
                return W.current.useRef(a);
              };
              exports3.useState = function(a) {
                return W.current.useState(a);
              };
              exports3.useSyncExternalStore = function(a, b, c) {
                return W.current.useSyncExternalStore(a, b, c);
              };
              exports3.useTransition = function() {
                return W.current.useTransition();
              };
              exports3.version = "18.3.0-experimental-51ffd3564-20231025";
            },
            189: (module3, __unused_webpack_exports, __webpack_require__3) => {
              "use strict";
              if (true) {
                module3.exports = __webpack_require__3(978);
              } else {
              }
            },
            206: function(module3, exports3, __webpack_require__3) {
              var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
              function _typeof(obj) {
                "@babel/helpers - typeof";
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                  _typeof = function _typeof2(obj2) {
                    return typeof obj2;
                  };
                } else {
                  _typeof = function _typeof2(obj2) {
                    return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                  };
                }
                return _typeof(obj);
              }
              (function(root, factory) {
                "use strict";
                if (true) {
                  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__3(430)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports3, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== void 0 && (module3.exports = __WEBPACK_AMD_DEFINE_RESULT__));
                } else {
                }
              })(this, function ErrorStackParser(StackFrame) {
                "use strict";
                var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\S+:\d+/;
                var CHROME_IE_STACK_REGEXP = /^\s*at .*(\S+:\d+|\(native\))/m;
                var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\[native code])?$/;
                return {
                  parse: function ErrorStackParser$$parse(error) {
                    if (typeof error.stacktrace !== "undefined" || typeof error["opera#sourceloc"] !== "undefined") {
                      return this.parseOpera(error);
                    } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {
                      return this.parseV8OrIE(error);
                    } else if (error.stack) {
                      return this.parseFFOrSafari(error);
                    } else {
                      throw new Error("Cannot parse given Error object");
                    }
                  },
                  extractLocation: function ErrorStackParser$$extractLocation(urlLike) {
                    if (urlLike.indexOf(":") === -1) {
                      return [urlLike];
                    }
                    var regExp = /(.+?)(?::(\d+))?(?::(\d+))?$/;
                    var parts = regExp.exec(urlLike.replace(/[()]/g, ""));
                    return [parts[1], parts[2] || void 0, parts[3] || void 0];
                  },
                  parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {
                    var filtered = error.stack.split("\n").filter(function(line) {
                      return !!line.match(CHROME_IE_STACK_REGEXP);
                    }, this);
                    return filtered.map(function(line) {
                      if (line.indexOf("(eval ") > -1) {
                        line = line.replace(/eval code/g, "eval").replace(/(\(eval at [^()]*)|(\),.*$)/g, "");
                      }
                      var sanitizedLine = line.replace(/^\s+/, "").replace(/\(eval code/g, "(");
                      var location = sanitizedLine.match(/ (\((.+):(\d+):(\d+)\)$)/);
                      sanitizedLine = location ? sanitizedLine.replace(location[0], "") : sanitizedLine;
                      var tokens = sanitizedLine.split(/\s+/).slice(1);
                      var locationParts = this.extractLocation(location ? location[1] : tokens.pop());
                      var functionName = tokens.join(" ") || void 0;
                      var fileName = ["eval", "<anonymous>"].indexOf(locationParts[0]) > -1 ? void 0 : locationParts[0];
                      return new StackFrame({
                        functionName,
                        fileName,
                        lineNumber: locationParts[1],
                        columnNumber: locationParts[2],
                        source: line
                      });
                    }, this);
                  },
                  parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {
                    var filtered = error.stack.split("\n").filter(function(line) {
                      return !line.match(SAFARI_NATIVE_CODE_REGEXP);
                    }, this);
                    return filtered.map(function(line) {
                      if (line.indexOf(" > eval") > -1) {
                        line = line.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ":$1");
                      }
                      if (line.indexOf("@") === -1 && line.indexOf(":") === -1) {
                        return new StackFrame({
                          functionName: line
                        });
                      } else {
                        var functionNameRegex = /((.*".+"[^@]*)?[^@]*)(?:@)/;
                        var matches = line.match(functionNameRegex);
                        var functionName = matches && matches[1] ? matches[1] : void 0;
                        var locationParts = this.extractLocation(line.replace(functionNameRegex, ""));
                        return new StackFrame({
                          functionName,
                          fileName: locationParts[0],
                          lineNumber: locationParts[1],
                          columnNumber: locationParts[2],
                          source: line
                        });
                      }
                    }, this);
                  },
                  parseOpera: function ErrorStackParser$$parseOpera(e) {
                    if (!e.stacktrace || e.message.indexOf("\n") > -1 && e.message.split("\n").length > e.stacktrace.split("\n").length) {
                      return this.parseOpera9(e);
                    } else if (!e.stack) {
                      return this.parseOpera10(e);
                    } else {
                      return this.parseOpera11(e);
                    }
                  },
                  parseOpera9: function ErrorStackParser$$parseOpera9(e) {
                    var lineRE = /Line (\d+).*script (?:in )?(\S+)/i;
                    var lines = e.message.split("\n");
                    var result = [];
                    for (var i2 = 2, len = lines.length; i2 < len; i2 += 2) {
                      var match = lineRE.exec(lines[i2]);
                      if (match) {
                        result.push(new StackFrame({
                          fileName: match[2],
                          lineNumber: match[1],
                          source: lines[i2]
                        }));
                      }
                    }
                    return result;
                  },
                  parseOpera10: function ErrorStackParser$$parseOpera10(e) {
                    var lineRE = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i;
                    var lines = e.stacktrace.split("\n");
                    var result = [];
                    for (var i2 = 0, len = lines.length; i2 < len; i2 += 2) {
                      var match = lineRE.exec(lines[i2]);
                      if (match) {
                        result.push(new StackFrame({
                          functionName: match[3] || void 0,
                          fileName: match[2],
                          lineNumber: match[1],
                          source: lines[i2]
                        }));
                      }
                    }
                    return result;
                  },
                  parseOpera11: function ErrorStackParser$$parseOpera11(error) {
                    var filtered = error.stack.split("\n").filter(function(line) {
                      return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);
                    }, this);
                    return filtered.map(function(line) {
                      var tokens = line.split("@");
                      var locationParts = this.extractLocation(tokens.pop());
                      var functionCall = tokens.shift() || "";
                      var functionName = functionCall.replace(/<anonymous function(: (\w+))?>/, "$2").replace(/\([^)]*\)/g, "") || void 0;
                      var argsRaw;
                      if (functionCall.match(/\(([^)]*)\)/)) {
                        argsRaw = functionCall.replace(/^[^(]+\(([^)]*)\)$/, "$1");
                      }
                      var args = argsRaw === void 0 || argsRaw === "[arguments not available]" ? void 0 : argsRaw.split(",");
                      return new StackFrame({
                        functionName,
                        args,
                        fileName: locationParts[0],
                        lineNumber: locationParts[1],
                        columnNumber: locationParts[2],
                        source: line
                      });
                    }, this);
                  }
                };
              });
            },
            172: (module3) => {
              function _typeof(obj) {
                "@babel/helpers - typeof";
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                  _typeof = function _typeof2(obj2) {
                    return typeof obj2;
                  };
                } else {
                  _typeof = function _typeof2(obj2) {
                    return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                  };
                }
                return _typeof(obj);
              }
              var FUNC_ERROR_TEXT = "Expected a function";
              var NAN = 0 / 0;
              var symbolTag = "[object Symbol]";
              var reTrim = /^\s+|\s+$/g;
              var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
              var reIsBinary = /^0b[01]+$/i;
              var reIsOctal = /^0o[0-7]+$/i;
              var freeParseInt = parseInt;
              var freeGlobal = (typeof global === "undefined" ? "undefined" : _typeof(global)) == "object" && global && global.Object === Object && global;
              var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof(self)) == "object" && self && self.Object === Object && self;
              var root = freeGlobal || freeSelf || Function("return this")();
              var objectProto = Object.prototype;
              var objectToString = objectProto.toString;
              var nativeMax = Math.max, nativeMin = Math.min;
              var now = function now2() {
                return root.Date.now();
              };
              function debounce(func2, wait, options) {
                var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
                if (typeof func2 != "function") {
                  throw new TypeError(FUNC_ERROR_TEXT);
                }
                wait = toNumber(wait) || 0;
                if (isObject(options)) {
                  leading = !!options.leading;
                  maxing = "maxWait" in options;
                  maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
                  trailing = "trailing" in options ? !!options.trailing : trailing;
                }
                function invokeFunc(time) {
                  var args = lastArgs, thisArg = lastThis;
                  lastArgs = lastThis = void 0;
                  lastInvokeTime = time;
                  result = func2.apply(thisArg, args);
                  return result;
                }
                function leadingEdge(time) {
                  lastInvokeTime = time;
                  timerId = setTimeout(timerExpired, wait);
                  return leading ? invokeFunc(time) : result;
                }
                function remainingWait(time) {
                  var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
                  return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
                }
                function shouldInvoke(time) {
                  var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
                  return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
                }
                function timerExpired() {
                  var time = now();
                  if (shouldInvoke(time)) {
                    return trailingEdge(time);
                  }
                  timerId = setTimeout(timerExpired, remainingWait(time));
                }
                function trailingEdge(time) {
                  timerId = void 0;
                  if (trailing && lastArgs) {
                    return invokeFunc(time);
                  }
                  lastArgs = lastThis = void 0;
                  return result;
                }
                function cancel() {
                  if (timerId !== void 0) {
                    clearTimeout(timerId);
                  }
                  lastInvokeTime = 0;
                  lastArgs = lastCallTime = lastThis = timerId = void 0;
                }
                function flush() {
                  return timerId === void 0 ? result : trailingEdge(now());
                }
                function debounced() {
                  var time = now(), isInvoking = shouldInvoke(time);
                  lastArgs = arguments;
                  lastThis = this;
                  lastCallTime = time;
                  if (isInvoking) {
                    if (timerId === void 0) {
                      return leadingEdge(lastCallTime);
                    }
                    if (maxing) {
                      timerId = setTimeout(timerExpired, wait);
                      return invokeFunc(lastCallTime);
                    }
                  }
                  if (timerId === void 0) {
                    timerId = setTimeout(timerExpired, wait);
                  }
                  return result;
                }
                debounced.cancel = cancel;
                debounced.flush = flush;
                return debounced;
              }
              function throttle(func2, wait, options) {
                var leading = true, trailing = true;
                if (typeof func2 != "function") {
                  throw new TypeError(FUNC_ERROR_TEXT);
                }
                if (isObject(options)) {
                  leading = "leading" in options ? !!options.leading : leading;
                  trailing = "trailing" in options ? !!options.trailing : trailing;
                }
                return debounce(func2, wait, {
                  "leading": leading,
                  "maxWait": wait,
                  "trailing": trailing
                });
              }
              function isObject(value) {
                var type2 = _typeof(value);
                return !!value && (type2 == "object" || type2 == "function");
              }
              function isObjectLike(value) {
                return !!value && _typeof(value) == "object";
              }
              function isSymbol(value) {
                return _typeof(value) == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
              }
              function toNumber(value) {
                if (typeof value == "number") {
                  return value;
                }
                if (isSymbol(value)) {
                  return NAN;
                }
                if (isObject(value)) {
                  var other = typeof value.valueOf == "function" ? value.valueOf() : value;
                  value = isObject(other) ? other + "" : other;
                }
                if (typeof value != "string") {
                  return value === 0 ? value : +value;
                }
                value = value.replace(reTrim, "");
                var isBinary = reIsBinary.test(value);
                return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
              }
              module3.exports = throttle;
            },
            730: (module3, __unused_webpack_exports, __webpack_require__3) => {
              "use strict";
              var process2 = __webpack_require__3(169);
              module3.exports = LRUCache;
              var Map2 = __webpack_require__3(307);
              var util = __webpack_require__3(82);
              var Yallist = __webpack_require__3(695);
              var hasSymbol = typeof Symbol === "function" && process2.env._nodeLRUCacheForceNoSymbol !== "1";
              var makeSymbol;
              if (hasSymbol) {
                makeSymbol = function makeSymbol2(key2) {
                  return Symbol(key2);
                };
              } else {
                makeSymbol = function makeSymbol2(key2) {
                  return "_" + key2;
                };
              }
              var MAX = makeSymbol("max");
              var LENGTH = makeSymbol("length");
              var LENGTH_CALCULATOR = makeSymbol("lengthCalculator");
              var ALLOW_STALE = makeSymbol("allowStale");
              var MAX_AGE = makeSymbol("maxAge");
              var DISPOSE = makeSymbol("dispose");
              var NO_DISPOSE_ON_SET = makeSymbol("noDisposeOnSet");
              var LRU_LIST = makeSymbol("lruList");
              var CACHE = makeSymbol("cache");
              function naiveLength() {
                return 1;
              }
              function LRUCache(options) {
                if (!(this instanceof LRUCache)) {
                  return new LRUCache(options);
                }
                if (typeof options === "number") {
                  options = {
                    max: options
                  };
                }
                if (!options) {
                  options = {};
                }
                var max = this[MAX] = options.max;
                if (!max || !(typeof max === "number") || max <= 0) {
                  this[MAX] = Infinity;
                }
                var lc = options.length || naiveLength;
                if (typeof lc !== "function") {
                  lc = naiveLength;
                }
                this[LENGTH_CALCULATOR] = lc;
                this[ALLOW_STALE] = options.stale || false;
                this[MAX_AGE] = options.maxAge || 0;
                this[DISPOSE] = options.dispose;
                this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;
                this.reset();
              }
              Object.defineProperty(LRUCache.prototype, "max", {
                set: function set(mL) {
                  if (!mL || !(typeof mL === "number") || mL <= 0) {
                    mL = Infinity;
                  }
                  this[MAX] = mL;
                  trim(this);
                },
                get: function get2() {
                  return this[MAX];
                },
                enumerable: true
              });
              Object.defineProperty(LRUCache.prototype, "allowStale", {
                set: function set(allowStale) {
                  this[ALLOW_STALE] = !!allowStale;
                },
                get: function get2() {
                  return this[ALLOW_STALE];
                },
                enumerable: true
              });
              Object.defineProperty(LRUCache.prototype, "maxAge", {
                set: function set(mA) {
                  if (!mA || !(typeof mA === "number") || mA < 0) {
                    mA = 0;
                  }
                  this[MAX_AGE] = mA;
                  trim(this);
                },
                get: function get2() {
                  return this[MAX_AGE];
                },
                enumerable: true
              });
              Object.defineProperty(LRUCache.prototype, "lengthCalculator", {
                set: function set(lC) {
                  if (typeof lC !== "function") {
                    lC = naiveLength;
                  }
                  if (lC !== this[LENGTH_CALCULATOR]) {
                    this[LENGTH_CALCULATOR] = lC;
                    this[LENGTH] = 0;
                    this[LRU_LIST].forEach(function(hit) {
                      hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);
                      this[LENGTH] += hit.length;
                    }, this);
                  }
                  trim(this);
                },
                get: function get2() {
                  return this[LENGTH_CALCULATOR];
                },
                enumerable: true
              });
              Object.defineProperty(LRUCache.prototype, "length", {
                get: function get2() {
                  return this[LENGTH];
                },
                enumerable: true
              });
              Object.defineProperty(LRUCache.prototype, "itemCount", {
                get: function get2() {
                  return this[LRU_LIST].length;
                },
                enumerable: true
              });
              LRUCache.prototype.rforEach = function(fn, thisp) {
                thisp = thisp || this;
                for (var walker = this[LRU_LIST].tail; walker !== null; ) {
                  var prev = walker.prev;
                  forEachStep(this, fn, walker, thisp);
                  walker = prev;
                }
              };
              function forEachStep(self2, fn, node, thisp) {
                var hit = node.value;
                if (isStale(self2, hit)) {
                  del(self2, node);
                  if (!self2[ALLOW_STALE]) {
                    hit = void 0;
                  }
                }
                if (hit) {
                  fn.call(thisp, hit.value, hit.key, self2);
                }
              }
              LRUCache.prototype.forEach = function(fn, thisp) {
                thisp = thisp || this;
                for (var walker = this[LRU_LIST].head; walker !== null; ) {
                  var next = walker.next;
                  forEachStep(this, fn, walker, thisp);
                  walker = next;
                }
              };
              LRUCache.prototype.keys = function() {
                return this[LRU_LIST].toArray().map(function(k) {
                  return k.key;
                }, this);
              };
              LRUCache.prototype.values = function() {
                return this[LRU_LIST].toArray().map(function(k) {
                  return k.value;
                }, this);
              };
              LRUCache.prototype.reset = function() {
                if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {
                  this[LRU_LIST].forEach(function(hit) {
                    this[DISPOSE](hit.key, hit.value);
                  }, this);
                }
                this[CACHE] = new Map2();
                this[LRU_LIST] = new Yallist();
                this[LENGTH] = 0;
              };
              LRUCache.prototype.dump = function() {
                return this[LRU_LIST].map(function(hit) {
                  if (!isStale(this, hit)) {
                    return {
                      k: hit.key,
                      v: hit.value,
                      e: hit.now + (hit.maxAge || 0)
                    };
                  }
                }, this).toArray().filter(function(h) {
                  return h;
                });
              };
              LRUCache.prototype.dumpLru = function() {
                return this[LRU_LIST];
              };
              LRUCache.prototype.inspect = function(n, opts) {
                var str = "LRUCache {";
                var extras = false;
                var as = this[ALLOW_STALE];
                if (as) {
                  str += "\n  allowStale: true";
                  extras = true;
                }
                var max = this[MAX];
                if (max && max !== Infinity) {
                  if (extras) {
                    str += ",";
                  }
                  str += "\n  max: " + util.inspect(max, opts);
                  extras = true;
                }
                var maxAge = this[MAX_AGE];
                if (maxAge) {
                  if (extras) {
                    str += ",";
                  }
                  str += "\n  maxAge: " + util.inspect(maxAge, opts);
                  extras = true;
                }
                var lc = this[LENGTH_CALCULATOR];
                if (lc && lc !== naiveLength) {
                  if (extras) {
                    str += ",";
                  }
                  str += "\n  length: " + util.inspect(this[LENGTH], opts);
                  extras = true;
                }
                var didFirst = false;
                this[LRU_LIST].forEach(function(item) {
                  if (didFirst) {
                    str += ",\n  ";
                  } else {
                    if (extras) {
                      str += ",\n";
                    }
                    didFirst = true;
                    str += "\n  ";
                  }
                  var key2 = util.inspect(item.key).split("\n").join("\n  ");
                  var val = {
                    value: item.value
                  };
                  if (item.maxAge !== maxAge) {
                    val.maxAge = item.maxAge;
                  }
                  if (lc !== naiveLength) {
                    val.length = item.length;
                  }
                  if (isStale(this, item)) {
                    val.stale = true;
                  }
                  val = util.inspect(val, opts).split("\n").join("\n  ");
                  str += key2 + " => " + val;
                });
                if (didFirst || extras) {
                  str += "\n";
                }
                str += "}";
                return str;
              };
              LRUCache.prototype.set = function(key2, value, maxAge) {
                maxAge = maxAge || this[MAX_AGE];
                var now = maxAge ? Date.now() : 0;
                var len = this[LENGTH_CALCULATOR](value, key2);
                if (this[CACHE].has(key2)) {
                  if (len > this[MAX]) {
                    del(this, this[CACHE].get(key2));
                    return false;
                  }
                  var node = this[CACHE].get(key2);
                  var item = node.value;
                  if (this[DISPOSE]) {
                    if (!this[NO_DISPOSE_ON_SET]) {
                      this[DISPOSE](key2, item.value);
                    }
                  }
                  item.now = now;
                  item.maxAge = maxAge;
                  item.value = value;
                  this[LENGTH] += len - item.length;
                  item.length = len;
                  this.get(key2);
                  trim(this);
                  return true;
                }
                var hit = new Entry(key2, value, len, now, maxAge);
                if (hit.length > this[MAX]) {
                  if (this[DISPOSE]) {
                    this[DISPOSE](key2, value);
                  }
                  return false;
                }
                this[LENGTH] += hit.length;
                this[LRU_LIST].unshift(hit);
                this[CACHE].set(key2, this[LRU_LIST].head);
                trim(this);
                return true;
              };
              LRUCache.prototype.has = function(key2) {
                if (!this[CACHE].has(key2))
                  return false;
                var hit = this[CACHE].get(key2).value;
                if (isStale(this, hit)) {
                  return false;
                }
                return true;
              };
              LRUCache.prototype.get = function(key2) {
                return get(this, key2, true);
              };
              LRUCache.prototype.peek = function(key2) {
                return get(this, key2, false);
              };
              LRUCache.prototype.pop = function() {
                var node = this[LRU_LIST].tail;
                if (!node)
                  return null;
                del(this, node);
                return node.value;
              };
              LRUCache.prototype.del = function(key2) {
                del(this, this[CACHE].get(key2));
              };
              LRUCache.prototype.load = function(arr) {
                this.reset();
                var now = Date.now();
                for (var l = arr.length - 1; l >= 0; l--) {
                  var hit = arr[l];
                  var expiresAt = hit.e || 0;
                  if (expiresAt === 0) {
                    this.set(hit.k, hit.v);
                  } else {
                    var maxAge = expiresAt - now;
                    if (maxAge > 0) {
                      this.set(hit.k, hit.v, maxAge);
                    }
                  }
                }
              };
              LRUCache.prototype.prune = function() {
                var self2 = this;
                this[CACHE].forEach(function(value, key2) {
                  get(self2, key2, false);
                });
              };
              function get(self2, key2, doUse) {
                var node = self2[CACHE].get(key2);
                if (node) {
                  var hit = node.value;
                  if (isStale(self2, hit)) {
                    del(self2, node);
                    if (!self2[ALLOW_STALE])
                      hit = void 0;
                  } else {
                    if (doUse) {
                      self2[LRU_LIST].unshiftNode(node);
                    }
                  }
                  if (hit)
                    hit = hit.value;
                }
                return hit;
              }
              function isStale(self2, hit) {
                if (!hit || !hit.maxAge && !self2[MAX_AGE]) {
                  return false;
                }
                var stale = false;
                var diff = Date.now() - hit.now;
                if (hit.maxAge) {
                  stale = diff > hit.maxAge;
                } else {
                  stale = self2[MAX_AGE] && diff > self2[MAX_AGE];
                }
                return stale;
              }
              function trim(self2) {
                if (self2[LENGTH] > self2[MAX]) {
                  for (var walker = self2[LRU_LIST].tail; self2[LENGTH] > self2[MAX] && walker !== null; ) {
                    var prev = walker.prev;
                    del(self2, walker);
                    walker = prev;
                  }
                }
              }
              function del(self2, node) {
                if (node) {
                  var hit = node.value;
                  if (self2[DISPOSE]) {
                    self2[DISPOSE](hit.key, hit.value);
                  }
                  self2[LENGTH] -= hit.length;
                  self2[CACHE].delete(hit.key);
                  self2[LRU_LIST].removeNode(node);
                }
              }
              function Entry(key2, value, length, now, maxAge) {
                this.key = key2;
                this.value = value;
                this.length = length;
                this.now = now;
                this.maxAge = maxAge || 0;
              }
            },
            169: (module3) => {
              var process2 = module3.exports = {};
              var cachedSetTimeout;
              var cachedClearTimeout;
              function defaultSetTimout() {
                throw new Error("setTimeout has not been defined");
              }
              function defaultClearTimeout() {
                throw new Error("clearTimeout has not been defined");
              }
              (function() {
                try {
                  if (typeof setTimeout === "function") {
                    cachedSetTimeout = setTimeout;
                  } else {
                    cachedSetTimeout = defaultSetTimout;
                  }
                } catch (e) {
                  cachedSetTimeout = defaultSetTimout;
                }
                try {
                  if (typeof clearTimeout === "function") {
                    cachedClearTimeout = clearTimeout;
                  } else {
                    cachedClearTimeout = defaultClearTimeout;
                  }
                } catch (e) {
                  cachedClearTimeout = defaultClearTimeout;
                }
              })();
              function runTimeout(fun) {
                if (cachedSetTimeout === setTimeout) {
                  return setTimeout(fun, 0);
                }
                if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
                  cachedSetTimeout = setTimeout;
                  return setTimeout(fun, 0);
                }
                try {
                  return cachedSetTimeout(fun, 0);
                } catch (e) {
                  try {
                    return cachedSetTimeout.call(null, fun, 0);
                  } catch (e2) {
                    return cachedSetTimeout.call(this, fun, 0);
                  }
                }
              }
              function runClearTimeout(marker) {
                if (cachedClearTimeout === clearTimeout) {
                  return clearTimeout(marker);
                }
                if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                  cachedClearTimeout = clearTimeout;
                  return clearTimeout(marker);
                }
                try {
                  return cachedClearTimeout(marker);
                } catch (e) {
                  try {
                    return cachedClearTimeout.call(null, marker);
                  } catch (e2) {
                    return cachedClearTimeout.call(this, marker);
                  }
                }
              }
              var queue = [];
              var draining = false;
              var currentQueue;
              var queueIndex = -1;
              function cleanUpNextTick() {
                if (!draining || !currentQueue) {
                  return;
                }
                draining = false;
                if (currentQueue.length) {
                  queue = currentQueue.concat(queue);
                } else {
                  queueIndex = -1;
                }
                if (queue.length) {
                  drainQueue();
                }
              }
              function drainQueue() {
                if (draining) {
                  return;
                }
                var timeout = runTimeout(cleanUpNextTick);
                draining = true;
                var len = queue.length;
                while (len) {
                  currentQueue = queue;
                  queue = [];
                  while (++queueIndex < len) {
                    if (currentQueue) {
                      currentQueue[queueIndex].run();
                    }
                  }
                  queueIndex = -1;
                  len = queue.length;
                }
                currentQueue = null;
                draining = false;
                runClearTimeout(timeout);
              }
              process2.nextTick = function(fun) {
                var args = new Array(arguments.length - 1);
                if (arguments.length > 1) {
                  for (var i2 = 1; i2 < arguments.length; i2++) {
                    args[i2 - 1] = arguments[i2];
                  }
                }
                queue.push(new Item(fun, args));
                if (queue.length === 1 && !draining) {
                  runTimeout(drainQueue);
                }
              };
              function Item(fun, array) {
                this.fun = fun;
                this.array = array;
              }
              Item.prototype.run = function() {
                this.fun.apply(null, this.array);
              };
              process2.title = "browser";
              process2.browser = true;
              process2.env = {};
              process2.argv = [];
              process2.version = "";
              process2.versions = {};
              function noop() {
              }
              process2.on = noop;
              process2.addListener = noop;
              process2.once = noop;
              process2.off = noop;
              process2.removeListener = noop;
              process2.removeAllListeners = noop;
              process2.emit = noop;
              process2.prependListener = noop;
              process2.prependOnceListener = noop;
              process2.listeners = function(name) {
                return [];
              };
              process2.binding = function(name) {
                throw new Error("process.binding is not supported");
              };
              process2.cwd = function() {
                return "/";
              };
              process2.chdir = function(dir) {
                throw new Error("process.chdir is not supported");
              };
              process2.umask = function() {
                return 0;
              };
            },
            307: (module3, __unused_webpack_exports, __webpack_require__3) => {
              var process2 = __webpack_require__3(169);
              if (process2.env.npm_package_name === "pseudomap" && process2.env.npm_lifecycle_script === "test")
                process2.env.TEST_PSEUDOMAP = "true";
              if (typeof Map === "function" && !process2.env.TEST_PSEUDOMAP) {
                module3.exports = Map;
              } else {
                module3.exports = __webpack_require__3(761);
              }
            },
            761: (module3) => {
              var hasOwnProperty = Object.prototype.hasOwnProperty;
              module3.exports = PseudoMap;
              function PseudoMap(set2) {
                if (!(this instanceof PseudoMap))
                  throw new TypeError("Constructor PseudoMap requires 'new'");
                this.clear();
                if (set2) {
                  if (set2 instanceof PseudoMap || typeof Map === "function" && set2 instanceof Map)
                    set2.forEach(function(value, key2) {
                      this.set(key2, value);
                    }, this);
                  else if (Array.isArray(set2))
                    set2.forEach(function(kv) {
                      this.set(kv[0], kv[1]);
                    }, this);
                  else
                    throw new TypeError("invalid argument");
                }
              }
              PseudoMap.prototype.forEach = function(fn, thisp) {
                thisp = thisp || this;
                Object.keys(this._data).forEach(function(k) {
                  if (k !== "size")
                    fn.call(thisp, this._data[k].value, this._data[k].key);
                }, this);
              };
              PseudoMap.prototype.has = function(k) {
                return !!find(this._data, k);
              };
              PseudoMap.prototype.get = function(k) {
                var res = find(this._data, k);
                return res && res.value;
              };
              PseudoMap.prototype.set = function(k, v) {
                set(this._data, k, v);
              };
              PseudoMap.prototype.delete = function(k) {
                var res = find(this._data, k);
                if (res) {
                  delete this._data[res._index];
                  this._data.size--;
                }
              };
              PseudoMap.prototype.clear = function() {
                var data = /* @__PURE__ */ Object.create(null);
                data.size = 0;
                Object.defineProperty(this, "_data", {
                  value: data,
                  enumerable: false,
                  configurable: true,
                  writable: false
                });
              };
              Object.defineProperty(PseudoMap.prototype, "size", {
                get: function get() {
                  return this._data.size;
                },
                set: function set2(n) {
                },
                enumerable: true,
                configurable: true
              });
              PseudoMap.prototype.values = PseudoMap.prototype.keys = PseudoMap.prototype.entries = function() {
                throw new Error("iterators are not implemented in this version");
              };
              function same(a, b) {
                return a === b || a !== a && b !== b;
              }
              function Entry(k, v, i2) {
                this.key = k;
                this.value = v;
                this._index = i2;
              }
              function find(data, k) {
                for (var i2 = 0, s = "_" + k, key2 = s; hasOwnProperty.call(data, key2); key2 = s + i2++) {
                  if (same(data[key2].key, k))
                    return data[key2];
                }
              }
              function set(data, k, v) {
                for (var i2 = 0, s = "_" + k, key2 = s; hasOwnProperty.call(data, key2); key2 = s + i2++) {
                  if (same(data[key2].key, k)) {
                    data[key2].value = v;
                    return;
                  }
                }
                data.size++;
                data[key2] = new Entry(k, v, key2);
              }
            },
            430: function(module3, exports3) {
              var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
              function _typeof(obj) {
                "@babel/helpers - typeof";
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                  _typeof = function _typeof2(obj2) {
                    return typeof obj2;
                  };
                } else {
                  _typeof = function _typeof2(obj2) {
                    return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                  };
                }
                return _typeof(obj);
              }
              (function(root, factory) {
                "use strict";
                if (true) {
                  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports3, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== void 0 && (module3.exports = __WEBPACK_AMD_DEFINE_RESULT__));
                } else {
                }
              })(this, function() {
                "use strict";
                function _isNumber(n) {
                  return !isNaN(parseFloat(n)) && isFinite(n);
                }
                function _capitalize(str) {
                  return str.charAt(0).toUpperCase() + str.substring(1);
                }
                function _getter(p) {
                  return function() {
                    return this[p];
                  };
                }
                var booleanProps = ["isConstructor", "isEval", "isNative", "isToplevel"];
                var numericProps = ["columnNumber", "lineNumber"];
                var stringProps = ["fileName", "functionName", "source"];
                var arrayProps = ["args"];
                var props = booleanProps.concat(numericProps, stringProps, arrayProps);
                function StackFrame(obj) {
                  if (!obj)
                    return;
                  for (var i3 = 0; i3 < props.length; i3++) {
                    if (obj[props[i3]] !== void 0) {
                      this["set" + _capitalize(props[i3])](obj[props[i3]]);
                    }
                  }
                }
                StackFrame.prototype = {
                  getArgs: function getArgs() {
                    return this.args;
                  },
                  setArgs: function setArgs(v) {
                    if (Object.prototype.toString.call(v) !== "[object Array]") {
                      throw new TypeError("Args must be an Array");
                    }
                    this.args = v;
                  },
                  getEvalOrigin: function getEvalOrigin() {
                    return this.evalOrigin;
                  },
                  setEvalOrigin: function setEvalOrigin(v) {
                    if (v instanceof StackFrame) {
                      this.evalOrigin = v;
                    } else if (v instanceof Object) {
                      this.evalOrigin = new StackFrame(v);
                    } else {
                      throw new TypeError("Eval Origin must be an Object or StackFrame");
                    }
                  },
                  toString: function toString() {
                    var fileName = this.getFileName() || "";
                    var lineNumber = this.getLineNumber() || "";
                    var columnNumber = this.getColumnNumber() || "";
                    var functionName = this.getFunctionName() || "";
                    if (this.getIsEval()) {
                      if (fileName) {
                        return "[eval] (" + fileName + ":" + lineNumber + ":" + columnNumber + ")";
                      }
                      return "[eval]:" + lineNumber + ":" + columnNumber;
                    }
                    if (functionName) {
                      return functionName + " (" + fileName + ":" + lineNumber + ":" + columnNumber + ")";
                    }
                    return fileName + ":" + lineNumber + ":" + columnNumber;
                  }
                };
                StackFrame.fromString = function StackFrame$$fromString(str) {
                  var argsStartIndex = str.indexOf("(");
                  var argsEndIndex = str.lastIndexOf(")");
                  var functionName = str.substring(0, argsStartIndex);
                  var args = str.substring(argsStartIndex + 1, argsEndIndex).split(",");
                  var locationString = str.substring(argsEndIndex + 1);
                  if (locationString.indexOf("@") === 0) {
                    var parts = /@(.+?)(?::(\d+))?(?::(\d+))?$/.exec(locationString, "");
                    var fileName = parts[1];
                    var lineNumber = parts[2];
                    var columnNumber = parts[3];
                  }
                  return new StackFrame({
                    functionName,
                    args: args || void 0,
                    fileName,
                    lineNumber: lineNumber || void 0,
                    columnNumber: columnNumber || void 0
                  });
                };
                for (var i2 = 0; i2 < booleanProps.length; i2++) {
                  StackFrame.prototype["get" + _capitalize(booleanProps[i2])] = _getter(booleanProps[i2]);
                  StackFrame.prototype["set" + _capitalize(booleanProps[i2])] = function(p) {
                    return function(v) {
                      this[p] = Boolean(v);
                    };
                  }(booleanProps[i2]);
                }
                for (var j = 0; j < numericProps.length; j++) {
                  StackFrame.prototype["get" + _capitalize(numericProps[j])] = _getter(numericProps[j]);
                  StackFrame.prototype["set" + _capitalize(numericProps[j])] = function(p) {
                    return function(v) {
                      if (!_isNumber(v)) {
                        throw new TypeError(p + " must be a Number");
                      }
                      this[p] = Number(v);
                    };
                  }(numericProps[j]);
                }
                for (var k = 0; k < stringProps.length; k++) {
                  StackFrame.prototype["get" + _capitalize(stringProps[k])] = _getter(stringProps[k]);
                  StackFrame.prototype["set" + _capitalize(stringProps[k])] = function(p) {
                    return function(v) {
                      this[p] = String(v);
                    };
                  }(stringProps[k]);
                }
                return StackFrame;
              });
            },
            718: (module3) => {
              if (typeof Object.create === "function") {
                module3.exports = function inherits(ctor, superCtor) {
                  ctor.super_ = superCtor;
                  ctor.prototype = Object.create(superCtor.prototype, {
                    constructor: {
                      value: ctor,
                      enumerable: false,
                      writable: true,
                      configurable: true
                    }
                  });
                };
              } else {
                module3.exports = function inherits(ctor, superCtor) {
                  ctor.super_ = superCtor;
                  var TempCtor = function TempCtor2() {
                  };
                  TempCtor.prototype = superCtor.prototype;
                  ctor.prototype = new TempCtor();
                  ctor.prototype.constructor = ctor;
                };
              }
            },
            715: (module3) => {
              function _typeof(obj) {
                "@babel/helpers - typeof";
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                  _typeof = function _typeof2(obj2) {
                    return typeof obj2;
                  };
                } else {
                  _typeof = function _typeof2(obj2) {
                    return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                  };
                }
                return _typeof(obj);
              }
              module3.exports = function isBuffer(arg2) {
                return arg2 && _typeof(arg2) === "object" && typeof arg2.copy === "function" && typeof arg2.fill === "function" && typeof arg2.readUInt8 === "function";
              };
            },
            82: (__unused_webpack_module, exports3, __webpack_require__3) => {
              var process2 = __webpack_require__3(169);
              function _typeof(obj) {
                "@babel/helpers - typeof";
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                  _typeof = function _typeof2(obj2) {
                    return typeof obj2;
                  };
                } else {
                  _typeof = function _typeof2(obj2) {
                    return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                  };
                }
                return _typeof(obj);
              }
              var formatRegExp = /%[sdj%]/g;
              exports3.format = function(f) {
                if (!isString(f)) {
                  var objects = [];
                  for (var i2 = 0; i2 < arguments.length; i2++) {
                    objects.push(inspect(arguments[i2]));
                  }
                  return objects.join(" ");
                }
                var i2 = 1;
                var args = arguments;
                var len = args.length;
                var str = String(f).replace(formatRegExp, function(x2) {
                  if (x2 === "%%")
                    return "%";
                  if (i2 >= len)
                    return x2;
                  switch (x2) {
                    case "%s":
                      return String(args[i2++]);
                    case "%d":
                      return Number(args[i2++]);
                    case "%j":
                      try {
                        return JSON.stringify(args[i2++]);
                      } catch (_) {
                        return "[Circular]";
                      }
                    default:
                      return x2;
                  }
                });
                for (var x = args[i2]; i2 < len; x = args[++i2]) {
                  if (isNull(x) || !isObject(x)) {
                    str += " " + x;
                  } else {
                    str += " " + inspect(x);
                  }
                }
                return str;
              };
              exports3.deprecate = function(fn, msg) {
                if (isUndefined(global.process)) {
                  return function() {
                    return exports3.deprecate(fn, msg).apply(this, arguments);
                  };
                }
                if (process2.noDeprecation === true) {
                  return fn;
                }
                var warned = false;
                function deprecated() {
                  if (!warned) {
                    if (process2.throwDeprecation) {
                      throw new Error(msg);
                    } else if (process2.traceDeprecation) {
                      console.trace(msg);
                    } else {
                      console.error(msg);
                    }
                    warned = true;
                  }
                  return fn.apply(this, arguments);
                }
                return deprecated;
              };
              var debugs = {};
              var debugEnviron;
              exports3.debuglog = function(set) {
                if (isUndefined(debugEnviron))
                  debugEnviron = process2.env.NODE_DEBUG || "";
                set = set.toUpperCase();
                if (!debugs[set]) {
                  if (new RegExp("\\b" + set + "\\b", "i").test(debugEnviron)) {
                    var pid = process2.pid;
                    debugs[set] = function() {
                      var msg = exports3.format.apply(exports3, arguments);
                      console.error("%s %d: %s", set, pid, msg);
                    };
                  } else {
                    debugs[set] = function() {
                    };
                  }
                }
                return debugs[set];
              };
              function inspect(obj, opts) {
                var ctx = {
                  seen: [],
                  stylize: stylizeNoColor
                };
                if (arguments.length >= 3)
                  ctx.depth = arguments[2];
                if (arguments.length >= 4)
                  ctx.colors = arguments[3];
                if (isBoolean(opts)) {
                  ctx.showHidden = opts;
                } else if (opts) {
                  exports3._extend(ctx, opts);
                }
                if (isUndefined(ctx.showHidden))
                  ctx.showHidden = false;
                if (isUndefined(ctx.depth))
                  ctx.depth = 2;
                if (isUndefined(ctx.colors))
                  ctx.colors = false;
                if (isUndefined(ctx.customInspect))
                  ctx.customInspect = true;
                if (ctx.colors)
                  ctx.stylize = stylizeWithColor;
                return formatValue(ctx, obj, ctx.depth);
              }
              exports3.inspect = inspect;
              inspect.colors = {
                "bold": [1, 22],
                "italic": [3, 23],
                "underline": [4, 24],
                "inverse": [7, 27],
                "white": [37, 39],
                "grey": [90, 39],
                "black": [30, 39],
                "blue": [34, 39],
                "cyan": [36, 39],
                "green": [32, 39],
                "magenta": [35, 39],
                "red": [31, 39],
                "yellow": [33, 39]
              };
              inspect.styles = {
                "special": "cyan",
                "number": "yellow",
                "boolean": "yellow",
                "undefined": "grey",
                "null": "bold",
                "string": "green",
                "date": "magenta",
                "regexp": "red"
              };
              function stylizeWithColor(str, styleType) {
                var style = inspect.styles[styleType];
                if (style) {
                  return "\x1B[" + inspect.colors[style][0] + "m" + str + "\x1B[" + inspect.colors[style][1] + "m";
                } else {
                  return str;
                }
              }
              function stylizeNoColor(str, styleType) {
                return str;
              }
              function arrayToHash(array) {
                var hash = {};
                array.forEach(function(val, idx) {
                  hash[val] = true;
                });
                return hash;
              }
              function formatValue(ctx, value, recurseTimes) {
                if (ctx.customInspect && value && isFunction(value.inspect) && value.inspect !== exports3.inspect && !(value.constructor && value.constructor.prototype === value)) {
                  var ret = value.inspect(recurseTimes, ctx);
                  if (!isString(ret)) {
                    ret = formatValue(ctx, ret, recurseTimes);
                  }
                  return ret;
                }
                var primitive = formatPrimitive(ctx, value);
                if (primitive) {
                  return primitive;
                }
                var keys = Object.keys(value);
                var visibleKeys = arrayToHash(keys);
                if (ctx.showHidden) {
                  keys = Object.getOwnPropertyNames(value);
                }
                if (isError(value) && (keys.indexOf("message") >= 0 || keys.indexOf("description") >= 0)) {
                  return formatError(value);
                }
                if (keys.length === 0) {
                  if (isFunction(value)) {
                    var name = value.name ? ": " + value.name : "";
                    return ctx.stylize("[Function" + name + "]", "special");
                  }
                  if (isRegExp(value)) {
                    return ctx.stylize(RegExp.prototype.toString.call(value), "regexp");
                  }
                  if (isDate(value)) {
                    return ctx.stylize(Date.prototype.toString.call(value), "date");
                  }
                  if (isError(value)) {
                    return formatError(value);
                  }
                }
                var base = "", array = false, braces = ["{", "}"];
                if (isArray(value)) {
                  array = true;
                  braces = ["[", "]"];
                }
                if (isFunction(value)) {
                  var n = value.name ? ": " + value.name : "";
                  base = " [Function" + n + "]";
                }
                if (isRegExp(value)) {
                  base = " " + RegExp.prototype.toString.call(value);
                }
                if (isDate(value)) {
                  base = " " + Date.prototype.toUTCString.call(value);
                }
                if (isError(value)) {
                  base = " " + formatError(value);
                }
                if (keys.length === 0 && (!array || value.length == 0)) {
                  return braces[0] + base + braces[1];
                }
                if (recurseTimes < 0) {
                  if (isRegExp(value)) {
                    return ctx.stylize(RegExp.prototype.toString.call(value), "regexp");
                  } else {
                    return ctx.stylize("[Object]", "special");
                  }
                }
                ctx.seen.push(value);
                var output;
                if (array) {
                  output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
                } else {
                  output = keys.map(function(key2) {
                    return formatProperty(ctx, value, recurseTimes, visibleKeys, key2, array);
                  });
                }
                ctx.seen.pop();
                return reduceToSingleString(output, base, braces);
              }
              function formatPrimitive(ctx, value) {
                if (isUndefined(value))
                  return ctx.stylize("undefined", "undefined");
                if (isString(value)) {
                  var simple = "'" + JSON.stringify(value).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                  return ctx.stylize(simple, "string");
                }
                if (isNumber(value))
                  return ctx.stylize("" + value, "number");
                if (isBoolean(value))
                  return ctx.stylize("" + value, "boolean");
                if (isNull(value))
                  return ctx.stylize("null", "null");
              }
              function formatError(value) {
                return "[" + Error.prototype.toString.call(value) + "]";
              }
              function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
                var output = [];
                for (var i2 = 0, l = value.length; i2 < l; ++i2) {
                  if (hasOwnProperty(value, String(i2))) {
                    output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i2), true));
                  } else {
                    output.push("");
                  }
                }
                keys.forEach(function(key2) {
                  if (!key2.match(/^\d+$/)) {
                    output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key2, true));
                  }
                });
                return output;
              }
              function formatProperty(ctx, value, recurseTimes, visibleKeys, key2, array) {
                var name, str, desc;
                desc = Object.getOwnPropertyDescriptor(value, key2) || {
                  value: value[key2]
                };
                if (desc.get) {
                  if (desc.set) {
                    str = ctx.stylize("[Getter/Setter]", "special");
                  } else {
                    str = ctx.stylize("[Getter]", "special");
                  }
                } else {
                  if (desc.set) {
                    str = ctx.stylize("[Setter]", "special");
                  }
                }
                if (!hasOwnProperty(visibleKeys, key2)) {
                  name = "[" + key2 + "]";
                }
                if (!str) {
                  if (ctx.seen.indexOf(desc.value) < 0) {
                    if (isNull(recurseTimes)) {
                      str = formatValue(ctx, desc.value, null);
                    } else {
                      str = formatValue(ctx, desc.value, recurseTimes - 1);
                    }
                    if (str.indexOf("\n") > -1) {
                      if (array) {
                        str = str.split("\n").map(function(line) {
                          return "  " + line;
                        }).join("\n").substr(2);
                      } else {
                        str = "\n" + str.split("\n").map(function(line) {
                          return "   " + line;
                        }).join("\n");
                      }
                    }
                  } else {
                    str = ctx.stylize("[Circular]", "special");
                  }
                }
                if (isUndefined(name)) {
                  if (array && key2.match(/^\d+$/)) {
                    return str;
                  }
                  name = JSON.stringify("" + key2);
                  if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
                    name = name.substr(1, name.length - 2);
                    name = ctx.stylize(name, "name");
                  } else {
                    name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
                    name = ctx.stylize(name, "string");
                  }
                }
                return name + ": " + str;
              }
              function reduceToSingleString(output, base, braces) {
                var numLinesEst = 0;
                var length = output.reduce(function(prev, cur) {
                  numLinesEst++;
                  if (cur.indexOf("\n") >= 0)
                    numLinesEst++;
                  return prev + cur.replace(/\u001b\[\d\d?m/g, "").length + 1;
                }, 0);
                if (length > 60) {
                  return braces[0] + (base === "" ? "" : base + "\n ") + " " + output.join(",\n  ") + " " + braces[1];
                }
                return braces[0] + base + " " + output.join(", ") + " " + braces[1];
              }
              function isArray(ar) {
                return Array.isArray(ar);
              }
              exports3.isArray = isArray;
              function isBoolean(arg2) {
                return typeof arg2 === "boolean";
              }
              exports3.isBoolean = isBoolean;
              function isNull(arg2) {
                return arg2 === null;
              }
              exports3.isNull = isNull;
              function isNullOrUndefined(arg2) {
                return arg2 == null;
              }
              exports3.isNullOrUndefined = isNullOrUndefined;
              function isNumber(arg2) {
                return typeof arg2 === "number";
              }
              exports3.isNumber = isNumber;
              function isString(arg2) {
                return typeof arg2 === "string";
              }
              exports3.isString = isString;
              function isSymbol(arg2) {
                return _typeof(arg2) === "symbol";
              }
              exports3.isSymbol = isSymbol;
              function isUndefined(arg2) {
                return arg2 === void 0;
              }
              exports3.isUndefined = isUndefined;
              function isRegExp(re) {
                return isObject(re) && objectToString(re) === "[object RegExp]";
              }
              exports3.isRegExp = isRegExp;
              function isObject(arg2) {
                return _typeof(arg2) === "object" && arg2 !== null;
              }
              exports3.isObject = isObject;
              function isDate(d) {
                return isObject(d) && objectToString(d) === "[object Date]";
              }
              exports3.isDate = isDate;
              function isError(e) {
                return isObject(e) && (objectToString(e) === "[object Error]" || e instanceof Error);
              }
              exports3.isError = isError;
              function isFunction(arg2) {
                return typeof arg2 === "function";
              }
              exports3.isFunction = isFunction;
              function isPrimitive(arg2) {
                return arg2 === null || typeof arg2 === "boolean" || typeof arg2 === "number" || typeof arg2 === "string" || _typeof(arg2) === "symbol" || typeof arg2 === "undefined";
              }
              exports3.isPrimitive = isPrimitive;
              exports3.isBuffer = __webpack_require__3(715);
              function objectToString(o) {
                return Object.prototype.toString.call(o);
              }
              function pad(n) {
                return n < 10 ? "0" + n.toString(10) : n.toString(10);
              }
              var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
              function timestamp() {
                var d = new Date();
                var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(":");
                return [d.getDate(), months[d.getMonth()], time].join(" ");
              }
              exports3.log = function() {
                console.log("%s - %s", timestamp(), exports3.format.apply(exports3, arguments));
              };
              exports3.inherits = __webpack_require__3(718);
              exports3._extend = function(origin, add) {
                if (!add || !isObject(add))
                  return origin;
                var keys = Object.keys(add);
                var i2 = keys.length;
                while (i2--) {
                  origin[keys[i2]] = add[keys[i2]];
                }
                return origin;
              };
              function hasOwnProperty(obj, prop) {
                return Object.prototype.hasOwnProperty.call(obj, prop);
              }
            },
            695: (module3) => {
              module3.exports = Yallist;
              Yallist.Node = Node2;
              Yallist.create = Yallist;
              function Yallist(list) {
                var self2 = this;
                if (!(self2 instanceof Yallist)) {
                  self2 = new Yallist();
                }
                self2.tail = null;
                self2.head = null;
                self2.length = 0;
                if (list && typeof list.forEach === "function") {
                  list.forEach(function(item) {
                    self2.push(item);
                  });
                } else if (arguments.length > 0) {
                  for (var i2 = 0, l = arguments.length; i2 < l; i2++) {
                    self2.push(arguments[i2]);
                  }
                }
                return self2;
              }
              Yallist.prototype.removeNode = function(node) {
                if (node.list !== this) {
                  throw new Error("removing node which does not belong to this list");
                }
                var next = node.next;
                var prev = node.prev;
                if (next) {
                  next.prev = prev;
                }
                if (prev) {
                  prev.next = next;
                }
                if (node === this.head) {
                  this.head = next;
                }
                if (node === this.tail) {
                  this.tail = prev;
                }
                node.list.length--;
                node.next = null;
                node.prev = null;
                node.list = null;
              };
              Yallist.prototype.unshiftNode = function(node) {
                if (node === this.head) {
                  return;
                }
                if (node.list) {
                  node.list.removeNode(node);
                }
                var head = this.head;
                node.list = this;
                node.next = head;
                if (head) {
                  head.prev = node;
                }
                this.head = node;
                if (!this.tail) {
                  this.tail = node;
                }
                this.length++;
              };
              Yallist.prototype.pushNode = function(node) {
                if (node === this.tail) {
                  return;
                }
                if (node.list) {
                  node.list.removeNode(node);
                }
                var tail = this.tail;
                node.list = this;
                node.prev = tail;
                if (tail) {
                  tail.next = node;
                }
                this.tail = node;
                if (!this.head) {
                  this.head = node;
                }
                this.length++;
              };
              Yallist.prototype.push = function() {
                for (var i2 = 0, l = arguments.length; i2 < l; i2++) {
                  push(this, arguments[i2]);
                }
                return this.length;
              };
              Yallist.prototype.unshift = function() {
                for (var i2 = 0, l = arguments.length; i2 < l; i2++) {
                  unshift(this, arguments[i2]);
                }
                return this.length;
              };
              Yallist.prototype.pop = function() {
                if (!this.tail) {
                  return void 0;
                }
                var res = this.tail.value;
                this.tail = this.tail.prev;
                if (this.tail) {
                  this.tail.next = null;
                } else {
                  this.head = null;
                }
                this.length--;
                return res;
              };
              Yallist.prototype.shift = function() {
                if (!this.head) {
                  return void 0;
                }
                var res = this.head.value;
                this.head = this.head.next;
                if (this.head) {
                  this.head.prev = null;
                } else {
                  this.tail = null;
                }
                this.length--;
                return res;
              };
              Yallist.prototype.forEach = function(fn, thisp) {
                thisp = thisp || this;
                for (var walker = this.head, i2 = 0; walker !== null; i2++) {
                  fn.call(thisp, walker.value, i2, this);
                  walker = walker.next;
                }
              };
              Yallist.prototype.forEachReverse = function(fn, thisp) {
                thisp = thisp || this;
                for (var walker = this.tail, i2 = this.length - 1; walker !== null; i2--) {
                  fn.call(thisp, walker.value, i2, this);
                  walker = walker.prev;
                }
              };
              Yallist.prototype.get = function(n) {
                for (var i2 = 0, walker = this.head; walker !== null && i2 < n; i2++) {
                  walker = walker.next;
                }
                if (i2 === n && walker !== null) {
                  return walker.value;
                }
              };
              Yallist.prototype.getReverse = function(n) {
                for (var i2 = 0, walker = this.tail; walker !== null && i2 < n; i2++) {
                  walker = walker.prev;
                }
                if (i2 === n && walker !== null) {
                  return walker.value;
                }
              };
              Yallist.prototype.map = function(fn, thisp) {
                thisp = thisp || this;
                var res = new Yallist();
                for (var walker = this.head; walker !== null; ) {
                  res.push(fn.call(thisp, walker.value, this));
                  walker = walker.next;
                }
                return res;
              };
              Yallist.prototype.mapReverse = function(fn, thisp) {
                thisp = thisp || this;
                var res = new Yallist();
                for (var walker = this.tail; walker !== null; ) {
                  res.push(fn.call(thisp, walker.value, this));
                  walker = walker.prev;
                }
                return res;
              };
              Yallist.prototype.reduce = function(fn, initial) {
                var acc;
                var walker = this.head;
                if (arguments.length > 1) {
                  acc = initial;
                } else if (this.head) {
                  walker = this.head.next;
                  acc = this.head.value;
                } else {
                  throw new TypeError("Reduce of empty list with no initial value");
                }
                for (var i2 = 0; walker !== null; i2++) {
                  acc = fn(acc, walker.value, i2);
                  walker = walker.next;
                }
                return acc;
              };
              Yallist.prototype.reduceReverse = function(fn, initial) {
                var acc;
                var walker = this.tail;
                if (arguments.length > 1) {
                  acc = initial;
                } else if (this.tail) {
                  walker = this.tail.prev;
                  acc = this.tail.value;
                } else {
                  throw new TypeError("Reduce of empty list with no initial value");
                }
                for (var i2 = this.length - 1; walker !== null; i2--) {
                  acc = fn(acc, walker.value, i2);
                  walker = walker.prev;
                }
                return acc;
              };
              Yallist.prototype.toArray = function() {
                var arr = new Array(this.length);
                for (var i2 = 0, walker = this.head; walker !== null; i2++) {
                  arr[i2] = walker.value;
                  walker = walker.next;
                }
                return arr;
              };
              Yallist.prototype.toArrayReverse = function() {
                var arr = new Array(this.length);
                for (var i2 = 0, walker = this.tail; walker !== null; i2++) {
                  arr[i2] = walker.value;
                  walker = walker.prev;
                }
                return arr;
              };
              Yallist.prototype.slice = function(from, to) {
                to = to || this.length;
                if (to < 0) {
                  to += this.length;
                }
                from = from || 0;
                if (from < 0) {
                  from += this.length;
                }
                var ret = new Yallist();
                if (to < from || to < 0) {
                  return ret;
                }
                if (from < 0) {
                  from = 0;
                }
                if (to > this.length) {
                  to = this.length;
                }
                for (var i2 = 0, walker = this.head; walker !== null && i2 < from; i2++) {
                  walker = walker.next;
                }
                for (; walker !== null && i2 < to; i2++, walker = walker.next) {
                  ret.push(walker.value);
                }
                return ret;
              };
              Yallist.prototype.sliceReverse = function(from, to) {
                to = to || this.length;
                if (to < 0) {
                  to += this.length;
                }
                from = from || 0;
                if (from < 0) {
                  from += this.length;
                }
                var ret = new Yallist();
                if (to < from || to < 0) {
                  return ret;
                }
                if (from < 0) {
                  from = 0;
                }
                if (to > this.length) {
                  to = this.length;
                }
                for (var i2 = this.length, walker = this.tail; walker !== null && i2 > to; i2--) {
                  walker = walker.prev;
                }
                for (; walker !== null && i2 > from; i2--, walker = walker.prev) {
                  ret.push(walker.value);
                }
                return ret;
              };
              Yallist.prototype.reverse = function() {
                var head = this.head;
                var tail = this.tail;
                for (var walker = head; walker !== null; walker = walker.prev) {
                  var p = walker.prev;
                  walker.prev = walker.next;
                  walker.next = p;
                }
                this.head = tail;
                this.tail = head;
                return this;
              };
              function push(self2, item) {
                self2.tail = new Node2(item, self2.tail, null, self2);
                if (!self2.head) {
                  self2.head = self2.tail;
                }
                self2.length++;
              }
              function unshift(self2, item) {
                self2.head = new Node2(item, null, self2.head, self2);
                if (!self2.tail) {
                  self2.tail = self2.head;
                }
                self2.length++;
              }
              function Node2(value, prev, next, list) {
                if (!(this instanceof Node2)) {
                  return new Node2(value, prev, next, list);
                }
                this.list = list;
                this.value = value;
                if (prev) {
                  prev.next = this;
                  this.prev = prev;
                } else {
                  this.prev = null;
                }
                if (next) {
                  next.prev = this;
                  this.next = next;
                } else {
                  this.next = null;
                }
              }
            }
          };
          var __webpack_module_cache__ = {};
          function __webpack_require__2(moduleId) {
            var cachedModule = __webpack_module_cache__[moduleId];
            if (cachedModule !== void 0) {
              return cachedModule.exports;
            }
            var module3 = __webpack_module_cache__[moduleId] = {
              exports: {}
            };
            __webpack_modules__[moduleId].call(module3.exports, module3, module3.exports, __webpack_require__2);
            return module3.exports;
          }
          (() => {
            __webpack_require__2.n = (module3) => {
              var getter = module3 && module3.__esModule ? () => module3["default"] : () => module3;
              __webpack_require__2.d(getter, { a: getter });
              return getter;
            };
          })();
          (() => {
            __webpack_require__2.d = (exports3, definition) => {
              for (var key2 in definition) {
                if (__webpack_require__2.o(definition, key2) && !__webpack_require__2.o(exports3, key2)) {
                  Object.defineProperty(exports3, key2, { enumerable: true, get: definition[key2] });
                }
              }
            };
          })();
          (() => {
            __webpack_require__2.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);
          })();
          (() => {
            __webpack_require__2.r = (exports3) => {
              if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                Object.defineProperty(exports3, Symbol.toStringTag, { value: "Module" });
              }
              Object.defineProperty(exports3, "__esModule", { value: true });
            };
          })();
          var __webpack_exports__ = {};
          (() => {
            "use strict";
            __webpack_require__2.r(__webpack_exports__);
            __webpack_require__2.d(__webpack_exports__, {
              "connectToDevTools": () => connectToDevTools
            });
            ;
            function _classCallCheck(instance, Constructor) {
              if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
              }
            }
            function _defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            function _createClass(Constructor, protoProps, staticProps) {
              if (protoProps)
                _defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                _defineProperties(Constructor, staticProps);
              return Constructor;
            }
            function _defineProperty(obj, key2, value) {
              if (key2 in obj) {
                Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
              } else {
                obj[key2] = value;
              }
              return obj;
            }
            var EventEmitter = /* @__PURE__ */ function() {
              function EventEmitter2() {
                _classCallCheck(this, EventEmitter2);
                _defineProperty(this, "listenersMap", /* @__PURE__ */ new Map());
              }
              _createClass(EventEmitter2, [{
                key: "addListener",
                value: function addListener(event, listener) {
                  var listeners = this.listenersMap.get(event);
                  if (listeners === void 0) {
                    this.listenersMap.set(event, [listener]);
                  } else {
                    var index = listeners.indexOf(listener);
                    if (index < 0) {
                      listeners.push(listener);
                    }
                  }
                }
              }, {
                key: "emit",
                value: function emit(event) {
                  var listeners = this.listenersMap.get(event);
                  if (listeners !== void 0) {
                    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                      args[_key - 1] = arguments[_key];
                    }
                    if (listeners.length === 1) {
                      var listener = listeners[0];
                      listener.apply(null, args);
                    } else {
                      var didThrow = false;
                      var caughtError = null;
                      var clonedListeners = Array.from(listeners);
                      for (var i2 = 0; i2 < clonedListeners.length; i2++) {
                        var _listener = clonedListeners[i2];
                        try {
                          _listener.apply(null, args);
                        } catch (error) {
                          if (caughtError === null) {
                            didThrow = true;
                            caughtError = error;
                          }
                        }
                      }
                      if (didThrow) {
                        throw caughtError;
                      }
                    }
                  }
                }
              }, {
                key: "removeAllListeners",
                value: function removeAllListeners() {
                  this.listenersMap.clear();
                }
              }, {
                key: "removeListener",
                value: function removeListener(event, listener) {
                  var listeners = this.listenersMap.get(event);
                  if (listeners !== void 0) {
                    var index = listeners.indexOf(listener);
                    if (index >= 0) {
                      listeners.splice(index, 1);
                    }
                  }
                }
              }]);
              return EventEmitter2;
            }();
            var lodash_throttle = __webpack_require__2(172);
            var lodash_throttle_default = /* @__PURE__ */ __webpack_require__2.n(lodash_throttle);
            ;
            var CHROME_WEBSTORE_EXTENSION_ID = "fmkadmapgofadopljbjfkapdkoienihi";
            var INTERNAL_EXTENSION_ID = "dnjnjgbfilfphmojnmhliehogmojhclc";
            var LOCAL_EXTENSION_ID = "ikiahnapldjmdmpkmfhjdjilojjhgcbf";
            var __DEBUG__ = false;
            var __PERFORMANCE_PROFILE__ = false;
            var TREE_OPERATION_ADD = 1;
            var TREE_OPERATION_REMOVE = 2;
            var TREE_OPERATION_REORDER_CHILDREN = 3;
            var TREE_OPERATION_UPDATE_TREE_BASE_DURATION = 4;
            var TREE_OPERATION_UPDATE_ERRORS_OR_WARNINGS = 5;
            var TREE_OPERATION_REMOVE_ROOT = 6;
            var TREE_OPERATION_SET_SUBTREE_MODE = 7;
            var PROFILING_FLAG_BASIC_SUPPORT = 1;
            var PROFILING_FLAG_TIMELINE_SUPPORT = 2;
            var LOCAL_STORAGE_DEFAULT_TAB_KEY = "React::DevTools::defaultTab";
            var constants_LOCAL_STORAGE_COMPONENT_FILTER_PREFERENCES_KEY = "React::DevTools::componentFilters";
            var SESSION_STORAGE_LAST_SELECTION_KEY = "React::DevTools::lastSelection";
            var constants_LOCAL_STORAGE_OPEN_IN_EDITOR_URL = "React::DevTools::openInEditorUrl";
            var LOCAL_STORAGE_OPEN_IN_EDITOR_URL_PRESET = "React::DevTools::openInEditorUrlPreset";
            var LOCAL_STORAGE_PARSE_HOOK_NAMES_KEY = "React::DevTools::parseHookNames";
            var SESSION_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY = "React::DevTools::recordChangeDescriptions";
            var SESSION_STORAGE_RELOAD_AND_PROFILE_KEY = "React::DevTools::reloadAndProfile";
            var constants_LOCAL_STORAGE_SHOULD_BREAK_ON_CONSOLE_ERRORS = "React::DevTools::breakOnConsoleErrors";
            var LOCAL_STORAGE_BROWSER_THEME = "React::DevTools::theme";
            var constants_LOCAL_STORAGE_SHOULD_APPEND_COMPONENT_STACK_KEY = "React::DevTools::appendComponentStack";
            var constants_LOCAL_STORAGE_SHOW_INLINE_WARNINGS_AND_ERRORS_KEY = "React::DevTools::showInlineWarningsAndErrors";
            var LOCAL_STORAGE_TRACE_UPDATES_ENABLED_KEY = "React::DevTools::traceUpdatesEnabled";
            var constants_LOCAL_STORAGE_HIDE_CONSOLE_LOGS_IN_STRICT_MODE = "React::DevTools::hideConsoleLogsInStrictMode";
            var LOCAL_STORAGE_SUPPORTS_PROFILING_KEY = "React::DevTools::supportsProfiling";
            var PROFILER_EXPORT_VERSION = 5;
            ;
            function storage_localStorageGetItem(key2) {
              try {
                return localStorage.getItem(key2);
              } catch (error) {
                return null;
              }
            }
            function localStorageRemoveItem(key2) {
              try {
                localStorage.removeItem(key2);
              } catch (error) {
              }
            }
            function storage_localStorageSetItem(key2, value) {
              try {
                return localStorage.setItem(key2, value);
              } catch (error) {
              }
            }
            function sessionStorageGetItem(key2) {
              try {
                return sessionStorage.getItem(key2);
              } catch (error) {
                return null;
              }
            }
            function sessionStorageRemoveItem(key2) {
              try {
                sessionStorage.removeItem(key2);
              } catch (error) {
              }
            }
            function sessionStorageSetItem(key2, value) {
              try {
                return sessionStorage.setItem(key2, value);
              } catch (error) {
              }
            }
            ;
            var simpleIsEqual = function simpleIsEqual2(a, b) {
              return a === b;
            };
            function esm(resultFn) {
              var isEqual = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : simpleIsEqual;
              var lastThis = void 0;
              var lastArgs = [];
              var lastResult = void 0;
              var calledOnce = false;
              var isNewArgEqualToLast = function isNewArgEqualToLast2(newArg, index) {
                return isEqual(newArg, lastArgs[index]);
              };
              var result = function result2() {
                for (var _len = arguments.length, newArgs = Array(_len), _key = 0; _key < _len; _key++) {
                  newArgs[_key] = arguments[_key];
                }
                if (calledOnce && lastThis === this && newArgs.length === lastArgs.length && newArgs.every(isNewArgEqualToLast)) {
                  return lastResult;
                }
                calledOnce = true;
                lastThis = this;
                lastArgs = newArgs;
                lastResult = resultFn.apply(this, newArgs);
                return lastResult;
              };
              return result;
            }
            ;
            function getOwnerWindow(node) {
              if (!node.ownerDocument) {
                return null;
              }
              return node.ownerDocument.defaultView;
            }
            function getOwnerIframe(node) {
              var nodeWindow = getOwnerWindow(node);
              if (nodeWindow) {
                return nodeWindow.frameElement;
              }
              return null;
            }
            function getBoundingClientRectWithBorderOffset(node) {
              var dimensions = getElementDimensions(node);
              return mergeRectOffsets([node.getBoundingClientRect(), {
                top: dimensions.borderTop,
                left: dimensions.borderLeft,
                bottom: dimensions.borderBottom,
                right: dimensions.borderRight,
                width: 0,
                height: 0
              }]);
            }
            function mergeRectOffsets(rects) {
              return rects.reduce(function(previousRect, rect) {
                if (previousRect == null) {
                  return rect;
                }
                return {
                  top: previousRect.top + rect.top,
                  left: previousRect.left + rect.left,
                  width: previousRect.width,
                  height: previousRect.height,
                  bottom: previousRect.bottom + rect.bottom,
                  right: previousRect.right + rect.right
                };
              });
            }
            function getNestedBoundingClientRect(node, boundaryWindow) {
              var ownerIframe = getOwnerIframe(node);
              if (ownerIframe && ownerIframe !== boundaryWindow) {
                var rects = [node.getBoundingClientRect()];
                var currentIframe = ownerIframe;
                var onlyOneMore = false;
                while (currentIframe) {
                  var rect = getBoundingClientRectWithBorderOffset(currentIframe);
                  rects.push(rect);
                  currentIframe = getOwnerIframe(currentIframe);
                  if (onlyOneMore) {
                    break;
                  }
                  if (currentIframe && getOwnerWindow(currentIframe) === boundaryWindow) {
                    onlyOneMore = true;
                  }
                }
                return mergeRectOffsets(rects);
              } else {
                return node.getBoundingClientRect();
              }
            }
            function getElementDimensions(domElement) {
              var calculatedStyle = window.getComputedStyle(domElement);
              return {
                borderLeft: parseInt(calculatedStyle.borderLeftWidth, 10),
                borderRight: parseInt(calculatedStyle.borderRightWidth, 10),
                borderTop: parseInt(calculatedStyle.borderTopWidth, 10),
                borderBottom: parseInt(calculatedStyle.borderBottomWidth, 10),
                marginLeft: parseInt(calculatedStyle.marginLeft, 10),
                marginRight: parseInt(calculatedStyle.marginRight, 10),
                marginTop: parseInt(calculatedStyle.marginTop, 10),
                marginBottom: parseInt(calculatedStyle.marginBottom, 10),
                paddingLeft: parseInt(calculatedStyle.paddingLeft, 10),
                paddingRight: parseInt(calculatedStyle.paddingRight, 10),
                paddingTop: parseInt(calculatedStyle.paddingTop, 10),
                paddingBottom: parseInt(calculatedStyle.paddingBottom, 10)
              };
            }
            ;
            function Overlay_classCallCheck(instance, Constructor) {
              if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
              }
            }
            function Overlay_defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            function Overlay_createClass(Constructor, protoProps, staticProps) {
              if (protoProps)
                Overlay_defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                Overlay_defineProperties(Constructor, staticProps);
              return Constructor;
            }
            var Overlay_assign = Object.assign;
            var OverlayRect = /* @__PURE__ */ function() {
              function OverlayRect2(doc, container) {
                Overlay_classCallCheck(this, OverlayRect2);
                this.node = doc.createElement("div");
                this.border = doc.createElement("div");
                this.padding = doc.createElement("div");
                this.content = doc.createElement("div");
                this.border.style.borderColor = overlayStyles.border;
                this.padding.style.borderColor = overlayStyles.padding;
                this.content.style.backgroundColor = overlayStyles.background;
                Overlay_assign(this.node.style, {
                  borderColor: overlayStyles.margin,
                  pointerEvents: "none",
                  position: "fixed"
                });
                this.node.style.zIndex = "10000000";
                this.node.appendChild(this.border);
                this.border.appendChild(this.padding);
                this.padding.appendChild(this.content);
                container.appendChild(this.node);
              }
              Overlay_createClass(OverlayRect2, [{
                key: "remove",
                value: function remove() {
                  if (this.node.parentNode) {
                    this.node.parentNode.removeChild(this.node);
                  }
                }
              }, {
                key: "update",
                value: function update(box, dims) {
                  boxWrap(dims, "margin", this.node);
                  boxWrap(dims, "border", this.border);
                  boxWrap(dims, "padding", this.padding);
                  Overlay_assign(this.content.style, {
                    height: box.height - dims.borderTop - dims.borderBottom - dims.paddingTop - dims.paddingBottom + "px",
                    width: box.width - dims.borderLeft - dims.borderRight - dims.paddingLeft - dims.paddingRight + "px"
                  });
                  Overlay_assign(this.node.style, {
                    top: box.top - dims.marginTop + "px",
                    left: box.left - dims.marginLeft + "px"
                  });
                }
              }]);
              return OverlayRect2;
            }();
            var OverlayTip = /* @__PURE__ */ function() {
              function OverlayTip2(doc, container) {
                Overlay_classCallCheck(this, OverlayTip2);
                this.tip = doc.createElement("div");
                Overlay_assign(this.tip.style, {
                  display: "flex",
                  flexFlow: "row nowrap",
                  backgroundColor: "#333740",
                  borderRadius: "2px",
                  fontFamily: '"SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace',
                  fontWeight: "bold",
                  padding: "3px 5px",
                  pointerEvents: "none",
                  position: "fixed",
                  fontSize: "12px",
                  whiteSpace: "nowrap"
                });
                this.nameSpan = doc.createElement("span");
                this.tip.appendChild(this.nameSpan);
                Overlay_assign(this.nameSpan.style, {
                  color: "#ee78e6",
                  borderRight: "1px solid #aaaaaa",
                  paddingRight: "0.5rem",
                  marginRight: "0.5rem"
                });
                this.dimSpan = doc.createElement("span");
                this.tip.appendChild(this.dimSpan);
                Overlay_assign(this.dimSpan.style, {
                  color: "#d7d7d7"
                });
                this.tip.style.zIndex = "10000000";
                container.appendChild(this.tip);
              }
              Overlay_createClass(OverlayTip2, [{
                key: "remove",
                value: function remove() {
                  if (this.tip.parentNode) {
                    this.tip.parentNode.removeChild(this.tip);
                  }
                }
              }, {
                key: "updateText",
                value: function updateText(name, width, height) {
                  this.nameSpan.textContent = name;
                  this.dimSpan.textContent = Math.round(width) + "px \xD7 " + Math.round(height) + "px";
                }
              }, {
                key: "updatePosition",
                value: function updatePosition(dims, bounds) {
                  var tipRect = this.tip.getBoundingClientRect();
                  var tipPos = findTipPos(dims, bounds, {
                    width: tipRect.width,
                    height: tipRect.height
                  });
                  Overlay_assign(this.tip.style, tipPos.style);
                }
              }]);
              return OverlayTip2;
            }();
            var Overlay = /* @__PURE__ */ function() {
              function Overlay2(agent2) {
                Overlay_classCallCheck(this, Overlay2);
                var currentWindow = window.__REACT_DEVTOOLS_TARGET_WINDOW__ || window;
                this.window = currentWindow;
                var tipBoundsWindow = window.__REACT_DEVTOOLS_TARGET_WINDOW__ || window;
                this.tipBoundsWindow = tipBoundsWindow;
                var doc = currentWindow.document;
                this.container = doc.createElement("div");
                this.container.style.zIndex = "10000000";
                this.tip = new OverlayTip(doc, this.container);
                this.rects = [];
                this.agent = agent2;
                doc.body.appendChild(this.container);
              }
              Overlay_createClass(Overlay2, [{
                key: "remove",
                value: function remove() {
                  this.tip.remove();
                  this.rects.forEach(function(rect) {
                    rect.remove();
                  });
                  this.rects.length = 0;
                  if (this.container.parentNode) {
                    this.container.parentNode.removeChild(this.container);
                  }
                }
              }, {
                key: "inspect",
                value: function inspect(nodes, name) {
                  var _this = this;
                  var elements = nodes.filter(function(node2) {
                    return node2.nodeType === Node.ELEMENT_NODE;
                  });
                  while (this.rects.length > elements.length) {
                    var rect = this.rects.pop();
                    rect.remove();
                  }
                  if (elements.length === 0) {
                    return;
                  }
                  while (this.rects.length < elements.length) {
                    this.rects.push(new OverlayRect(this.window.document, this.container));
                  }
                  var outerBox = {
                    top: Number.POSITIVE_INFINITY,
                    right: Number.NEGATIVE_INFINITY,
                    bottom: Number.NEGATIVE_INFINITY,
                    left: Number.POSITIVE_INFINITY
                  };
                  elements.forEach(function(element, index) {
                    var box = getNestedBoundingClientRect(element, _this.window);
                    var dims = getElementDimensions(element);
                    outerBox.top = Math.min(outerBox.top, box.top - dims.marginTop);
                    outerBox.right = Math.max(outerBox.right, box.left + box.width + dims.marginRight);
                    outerBox.bottom = Math.max(outerBox.bottom, box.top + box.height + dims.marginBottom);
                    outerBox.left = Math.min(outerBox.left, box.left - dims.marginLeft);
                    var rect2 = _this.rects[index];
                    rect2.update(box, dims);
                  });
                  if (!name) {
                    name = elements[0].nodeName.toLowerCase();
                    var node = elements[0];
                    var rendererInterface = this.agent.getBestMatchingRendererInterface(node);
                    if (rendererInterface) {
                      var id = rendererInterface.getFiberIDForNative(node, true);
                      if (id) {
                        var ownerName = rendererInterface.getDisplayNameForFiberID(id, true);
                        if (ownerName) {
                          name += " (in " + ownerName + ")";
                        }
                      }
                    }
                  }
                  this.tip.updateText(name, outerBox.right - outerBox.left, outerBox.bottom - outerBox.top);
                  var tipBounds = getNestedBoundingClientRect(this.tipBoundsWindow.document.documentElement, this.window);
                  this.tip.updatePosition({
                    top: outerBox.top,
                    left: outerBox.left,
                    height: outerBox.bottom - outerBox.top,
                    width: outerBox.right - outerBox.left
                  }, {
                    top: tipBounds.top + this.tipBoundsWindow.scrollY,
                    left: tipBounds.left + this.tipBoundsWindow.scrollX,
                    height: this.tipBoundsWindow.innerHeight,
                    width: this.tipBoundsWindow.innerWidth
                  });
                }
              }]);
              return Overlay2;
            }();
            function findTipPos(dims, bounds, tipSize) {
              var tipHeight = Math.max(tipSize.height, 20);
              var tipWidth = Math.max(tipSize.width, 60);
              var margin = 5;
              var top;
              if (dims.top + dims.height + tipHeight <= bounds.top + bounds.height) {
                if (dims.top + dims.height < bounds.top + 0) {
                  top = bounds.top + margin;
                } else {
                  top = dims.top + dims.height + margin;
                }
              } else if (dims.top - tipHeight <= bounds.top + bounds.height) {
                if (dims.top - tipHeight - margin < bounds.top + margin) {
                  top = bounds.top + margin;
                } else {
                  top = dims.top - tipHeight - margin;
                }
              } else {
                top = bounds.top + bounds.height - tipHeight - margin;
              }
              var left = dims.left + margin;
              if (dims.left < bounds.left) {
                left = bounds.left + margin;
              }
              if (dims.left + tipWidth > bounds.left + bounds.width) {
                left = bounds.left + bounds.width - tipWidth - margin;
              }
              top += "px";
              left += "px";
              return {
                style: {
                  top,
                  left
                }
              };
            }
            function boxWrap(dims, what, node) {
              Overlay_assign(node.style, {
                borderTopWidth: dims[what + "Top"] + "px",
                borderLeftWidth: dims[what + "Left"] + "px",
                borderRightWidth: dims[what + "Right"] + "px",
                borderBottomWidth: dims[what + "Bottom"] + "px",
                borderStyle: "solid"
              });
            }
            var overlayStyles = {
              background: "rgba(120, 170, 210, 0.7)",
              padding: "rgba(77, 200, 0, 0.3)",
              margin: "rgba(255, 155, 0, 0.3)",
              border: "rgba(255, 200, 50, 0.3)"
            };
            ;
            var SHOW_DURATION = 2e3;
            var timeoutID = null;
            var overlay = null;
            function hideOverlay(agent2) {
              if (window.document == null) {
                agent2.emit("hideNativeHighlight");
                return;
              }
              timeoutID = null;
              if (overlay !== null) {
                overlay.remove();
                overlay = null;
              }
            }
            function showOverlay(elements, componentName, agent2, hideAfterTimeout) {
              if (window.document == null) {
                if (elements != null && elements[0] != null) {
                  agent2.emit("showNativeHighlight", elements[0]);
                }
                return;
              }
              if (timeoutID !== null) {
                clearTimeout(timeoutID);
              }
              if (elements == null) {
                return;
              }
              if (overlay === null) {
                overlay = new Overlay(agent2);
              }
              overlay.inspect(elements, componentName);
              if (hideAfterTimeout) {
                timeoutID = setTimeout(function() {
                  return hideOverlay(agent2);
                }, SHOW_DURATION);
              }
            }
            ;
            var iframesListeningTo = /* @__PURE__ */ new Set();
            function setupHighlighter(bridge, agent2) {
              bridge.addListener("clearNativeElementHighlight", clearNativeElementHighlight);
              bridge.addListener("highlightNativeElement", highlightNativeElement);
              bridge.addListener("shutdown", stopInspectingNative);
              bridge.addListener("startInspectingNative", startInspectingNative);
              bridge.addListener("stopInspectingNative", stopInspectingNative);
              function startInspectingNative() {
                registerListenersOnWindow(window);
              }
              function registerListenersOnWindow(window2) {
                if (window2 && typeof window2.addEventListener === "function") {
                  window2.addEventListener("click", onClick, true);
                  window2.addEventListener("mousedown", onMouseEvent, true);
                  window2.addEventListener("mouseover", onMouseEvent, true);
                  window2.addEventListener("mouseup", onMouseEvent, true);
                  window2.addEventListener("pointerdown", onPointerDown, true);
                  window2.addEventListener("pointermove", onPointerMove, true);
                  window2.addEventListener("pointerup", onPointerUp, true);
                } else {
                  agent2.emit("startInspectingNative");
                }
              }
              function stopInspectingNative() {
                hideOverlay(agent2);
                removeListenersOnWindow(window);
                iframesListeningTo.forEach(function(frame) {
                  try {
                    removeListenersOnWindow(frame.contentWindow);
                  } catch (error) {
                  }
                });
                iframesListeningTo = /* @__PURE__ */ new Set();
              }
              function removeListenersOnWindow(window2) {
                if (window2 && typeof window2.removeEventListener === "function") {
                  window2.removeEventListener("click", onClick, true);
                  window2.removeEventListener("mousedown", onMouseEvent, true);
                  window2.removeEventListener("mouseover", onMouseEvent, true);
                  window2.removeEventListener("mouseup", onMouseEvent, true);
                  window2.removeEventListener("pointerdown", onPointerDown, true);
                  window2.removeEventListener("pointermove", onPointerMove, true);
                  window2.removeEventListener("pointerup", onPointerUp, true);
                } else {
                  agent2.emit("stopInspectingNative");
                }
              }
              function clearNativeElementHighlight() {
                hideOverlay(agent2);
              }
              function highlightNativeElement(_ref) {
                var displayName = _ref.displayName, hideAfterTimeout = _ref.hideAfterTimeout, id = _ref.id, openNativeElementsPanel = _ref.openNativeElementsPanel, rendererID = _ref.rendererID, scrollIntoView = _ref.scrollIntoView;
                var renderer = agent2.rendererInterfaces[rendererID];
                if (renderer == null) {
                  console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  hideOverlay(agent2);
                  return;
                }
                if (!renderer.hasFiberWithId(id)) {
                  hideOverlay(agent2);
                  return;
                }
                var nodes = renderer.findNativeNodesForFiberID(id);
                if (nodes != null && nodes[0] != null) {
                  var node = nodes[0];
                  if (scrollIntoView && typeof node.scrollIntoView === "function") {
                    node.scrollIntoView({
                      block: "nearest",
                      inline: "nearest"
                    });
                  }
                  showOverlay(nodes, displayName, agent2, hideAfterTimeout);
                  if (openNativeElementsPanel) {
                    window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$0 = node;
                    bridge.send("syncSelectionToNativeElementsPanel");
                  }
                } else {
                  hideOverlay(agent2);
                }
              }
              function onClick(event) {
                event.preventDefault();
                event.stopPropagation();
                stopInspectingNative();
                bridge.send("stopInspectingNative", true);
              }
              function onMouseEvent(event) {
                event.preventDefault();
                event.stopPropagation();
              }
              function onPointerDown(event) {
                event.preventDefault();
                event.stopPropagation();
                selectFiberForNode(getEventTarget(event));
              }
              var lastHoveredNode = null;
              function onPointerMove(event) {
                event.preventDefault();
                event.stopPropagation();
                var target = getEventTarget(event);
                if (lastHoveredNode === target)
                  return;
                lastHoveredNode = target;
                if (target.tagName === "IFRAME") {
                  var iframe = target;
                  try {
                    if (!iframesListeningTo.has(iframe)) {
                      var _window = iframe.contentWindow;
                      registerListenersOnWindow(_window);
                      iframesListeningTo.add(iframe);
                    }
                  } catch (error) {
                  }
                }
                showOverlay([target], null, agent2, false);
                selectFiberForNode(target);
              }
              function onPointerUp(event) {
                event.preventDefault();
                event.stopPropagation();
              }
              var selectFiberForNode = lodash_throttle_default()(
                esm(function(node) {
                  var id = agent2.getIDForNode(node);
                  if (id !== null) {
                    bridge.send("selectFiber", id);
                  }
                }),
                200,
                {
                  leading: false
                }
              );
              function getEventTarget(event) {
                if (event.composed) {
                  return event.composedPath()[0];
                }
                return event.target;
              }
            }
            ;
            var OUTLINE_COLOR = "#f0f0f0";
            var COLORS = ["#37afa9", "#63b19e", "#80b393", "#97b488", "#abb67d", "#beb771", "#cfb965", "#dfba57", "#efbb49", "#febc38"];
            var canvas = null;
            function draw(nodeToData2, agent2) {
              if (window.document == null) {
                var nodesToDraw = [];
                iterateNodes(nodeToData2, function(_, color, node) {
                  nodesToDraw.push({
                    node,
                    color
                  });
                });
                agent2.emit("drawTraceUpdates", nodesToDraw);
                return;
              }
              if (canvas === null) {
                initialize();
              }
              var canvasFlow = canvas;
              canvasFlow.width = window.innerWidth;
              canvasFlow.height = window.innerHeight;
              var context = canvasFlow.getContext("2d");
              context.clearRect(0, 0, canvasFlow.width, canvasFlow.height);
              iterateNodes(nodeToData2, function(rect, color) {
                if (rect !== null) {
                  drawBorder(context, rect, color);
                }
              });
            }
            function iterateNodes(nodeToData2, execute) {
              nodeToData2.forEach(function(_ref, node) {
                var count = _ref.count, rect = _ref.rect;
                var colorIndex = Math.min(COLORS.length - 1, count - 1);
                var color = COLORS[colorIndex];
                execute(rect, color, node);
              });
            }
            function drawBorder(context, rect, color) {
              var height = rect.height, left = rect.left, top = rect.top, width = rect.width;
              context.lineWidth = 1;
              context.strokeStyle = OUTLINE_COLOR;
              context.strokeRect(left - 1, top - 1, width + 2, height + 2);
              context.lineWidth = 1;
              context.strokeStyle = OUTLINE_COLOR;
              context.strokeRect(left + 1, top + 1, width - 1, height - 1);
              context.strokeStyle = color;
              context.setLineDash([0]);
              context.lineWidth = 1;
              context.strokeRect(left, top, width - 1, height - 1);
              context.setLineDash([0]);
            }
            function destroy(agent2) {
              if (window.document == null) {
                agent2.emit("disableTraceUpdates");
                return;
              }
              if (canvas !== null) {
                if (canvas.parentNode != null) {
                  canvas.parentNode.removeChild(canvas);
                }
                canvas = null;
              }
            }
            function initialize() {
              canvas = window.document.createElement("canvas");
              canvas.style.cssText = "\n    xx-background-color: red;\n    xx-opacity: 0.5;\n    bottom: 0;\n    left: 0;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 1000000000;\n  ";
              var root = window.document.documentElement;
              root.insertBefore(canvas, root.firstChild);
            }
            ;
            function _typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                _typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                _typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return _typeof(obj);
            }
            var DISPLAY_DURATION = 250;
            var MAX_DISPLAY_DURATION = 3e3;
            var REMEASUREMENT_AFTER_DURATION = 250;
            var getCurrentTime = (typeof performance === "undefined" ? "undefined" : _typeof(performance)) === "object" && typeof performance.now === "function" ? function() {
              return performance.now();
            } : function() {
              return Date.now();
            };
            var nodeToData = /* @__PURE__ */ new Map();
            var agent = null;
            var drawAnimationFrameID = null;
            var isEnabled = false;
            var redrawTimeoutID = null;
            function TraceUpdates_initialize(injectedAgent) {
              agent = injectedAgent;
              agent.addListener("traceUpdates", traceUpdates);
            }
            function toggleEnabled(value) {
              isEnabled = value;
              if (!isEnabled) {
                nodeToData.clear();
                if (drawAnimationFrameID !== null) {
                  cancelAnimationFrame(drawAnimationFrameID);
                  drawAnimationFrameID = null;
                }
                if (redrawTimeoutID !== null) {
                  clearTimeout(redrawTimeoutID);
                  redrawTimeoutID = null;
                }
                destroy(agent);
              }
            }
            function traceUpdates(nodes) {
              if (!isEnabled) {
                return;
              }
              nodes.forEach(function(node) {
                var data = nodeToData.get(node);
                var now = getCurrentTime();
                var lastMeasuredAt = data != null ? data.lastMeasuredAt : 0;
                var rect = data != null ? data.rect : null;
                if (rect === null || lastMeasuredAt + REMEASUREMENT_AFTER_DURATION < now) {
                  lastMeasuredAt = now;
                  rect = measureNode(node);
                }
                nodeToData.set(node, {
                  count: data != null ? data.count + 1 : 1,
                  expirationTime: data != null ? Math.min(now + MAX_DISPLAY_DURATION, data.expirationTime + DISPLAY_DURATION) : now + DISPLAY_DURATION,
                  lastMeasuredAt,
                  rect
                });
              });
              if (redrawTimeoutID !== null) {
                clearTimeout(redrawTimeoutID);
                redrawTimeoutID = null;
              }
              if (drawAnimationFrameID === null) {
                drawAnimationFrameID = requestAnimationFrame(prepareToDraw);
              }
            }
            function prepareToDraw() {
              drawAnimationFrameID = null;
              redrawTimeoutID = null;
              var now = getCurrentTime();
              var earliestExpiration = Number.MAX_VALUE;
              nodeToData.forEach(function(data, node) {
                if (data.expirationTime < now) {
                  nodeToData.delete(node);
                } else {
                  earliestExpiration = Math.min(earliestExpiration, data.expirationTime);
                }
              });
              draw(nodeToData, agent);
              if (earliestExpiration !== Number.MAX_VALUE) {
                redrawTimeoutID = setTimeout(prepareToDraw, earliestExpiration - now);
              }
            }
            function measureNode(node) {
              if (!node || typeof node.getBoundingClientRect !== "function") {
                return null;
              }
              var currentWindow = window.__REACT_DEVTOOLS_TARGET_WINDOW__ || window;
              return getNestedBoundingClientRect(node, currentWindow);
            }
            ;
            function esm_typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                esm_typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                esm_typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return esm_typeof(obj);
            }
            function _slicedToArray(arr, i2) {
              return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i2) || _unsupportedIterableToArray(arr, i2) || _nonIterableRest();
            }
            function _nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function _unsupportedIterableToArray(o, minLen) {
              if (!o)
                return;
              if (typeof o === "string")
                return _arrayLikeToArray(o, minLen);
              var n = Object.prototype.toString.call(o).slice(8, -1);
              if (n === "Object" && o.constructor)
                n = o.constructor.name;
              if (n === "Map" || n === "Set")
                return Array.from(o);
              if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                return _arrayLikeToArray(o, minLen);
            }
            function _arrayLikeToArray(arr, len) {
              if (len == null || len > arr.length)
                len = arr.length;
              for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
                arr2[i2] = arr[i2];
              }
              return arr2;
            }
            function _iterableToArrayLimit(arr, i2) {
              if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
                return;
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err2) {
                _d = true;
                _e = err2;
              } finally {
                try {
                  if (!_n && _i["return"] != null)
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            function _arrayWithHoles(arr) {
              if (Array.isArray(arr))
                return arr;
            }
            var compareVersions = function compareVersions2(v1, v2) {
              var n1 = validateAndParse(v1);
              var n2 = validateAndParse(v2);
              var p1 = n1.pop();
              var p2 = n2.pop();
              var r = compareSegments(n1, n2);
              if (r !== 0)
                return r;
              if (p1 && p2) {
                return compareSegments(p1.split("."), p2.split("."));
              } else if (p1 || p2) {
                return p1 ? -1 : 1;
              }
              return 0;
            };
            var validate = function validate2(version) {
              return typeof version === "string" && /^[v\d]/.test(version) && semver.test(version);
            };
            var compare = function compare2(v1, v2, operator) {
              assertValidOperator(operator);
              var res = compareVersions(v1, v2);
              return operatorResMap[operator].includes(res);
            };
            var satisfies = function satisfies2(version, range) {
              var m = range.match(/^([<>=~^]+)/);
              var op = m ? m[1] : "=";
              if (op !== "^" && op !== "~")
                return compare(version, range, op);
              var _validateAndParse = validateAndParse(version), _validateAndParse2 = _slicedToArray(_validateAndParse, 5), v1 = _validateAndParse2[0], v2 = _validateAndParse2[1], v3 = _validateAndParse2[2], vp = _validateAndParse2[4];
              var _validateAndParse3 = validateAndParse(range), _validateAndParse4 = _slicedToArray(_validateAndParse3, 5), r1 = _validateAndParse4[0], r2 = _validateAndParse4[1], r3 = _validateAndParse4[2], rp = _validateAndParse4[4];
              var v = [v1, v2, v3];
              var r = [r1, r2 !== null && r2 !== void 0 ? r2 : "x", r3 !== null && r3 !== void 0 ? r3 : "x"];
              if (rp) {
                if (!vp)
                  return false;
                if (compareSegments(v, r) !== 0)
                  return false;
                if (compareSegments(vp.split("."), rp.split(".")) === -1)
                  return false;
              }
              var nonZero = r.findIndex(function(v4) {
                return v4 !== "0";
              }) + 1;
              var i2 = op === "~" ? 2 : nonZero > 1 ? nonZero : 1;
              if (compareSegments(v.slice(0, i2), r.slice(0, i2)) !== 0)
                return false;
              if (compareSegments(v.slice(i2), r.slice(i2)) === -1)
                return false;
              return true;
            };
            var semver = /^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i;
            var validateAndParse = function validateAndParse2(version) {
              if (typeof version !== "string") {
                throw new TypeError("Invalid argument expected string");
              }
              var match = version.match(semver);
              if (!match) {
                throw new Error("Invalid argument not valid semver ('".concat(version, "' received)"));
              }
              match.shift();
              return match;
            };
            var isWildcard = function isWildcard2(s) {
              return s === "*" || s === "x" || s === "X";
            };
            var tryParse = function tryParse2(v) {
              var n = parseInt(v, 10);
              return isNaN(n) ? v : n;
            };
            var forceType = function forceType2(a, b) {
              return esm_typeof(a) !== esm_typeof(b) ? [String(a), String(b)] : [a, b];
            };
            var compareStrings = function compareStrings2(a, b) {
              if (isWildcard(a) || isWildcard(b))
                return 0;
              var _forceType = forceType(tryParse(a), tryParse(b)), _forceType2 = _slicedToArray(_forceType, 2), ap = _forceType2[0], bp = _forceType2[1];
              if (ap > bp)
                return 1;
              if (ap < bp)
                return -1;
              return 0;
            };
            var compareSegments = function compareSegments2(a, b) {
              for (var i2 = 0; i2 < Math.max(a.length, b.length); i2++) {
                var r = compareStrings(a[i2] || "0", b[i2] || "0");
                if (r !== 0)
                  return r;
              }
              return 0;
            };
            var operatorResMap = {
              ">": [1],
              ">=": [0, 1],
              "=": [0],
              "<=": [-1, 0],
              "<": [-1]
            };
            var allowedOperators = Object.keys(operatorResMap);
            var assertValidOperator = function assertValidOperator2(op) {
              if (typeof op !== "string") {
                throw new TypeError("Invalid operator type, expected string but got ".concat(esm_typeof(op)));
              }
              if (allowedOperators.indexOf(op) === -1) {
                throw new Error("Invalid operator, expected one of ".concat(allowedOperators.join("|")));
              }
            };
            var lru_cache = __webpack_require__2(730);
            var lru_cache_default = /* @__PURE__ */ __webpack_require__2.n(lru_cache);
            var react_is = __webpack_require__2(550);
            ;
            function ReactSymbols_typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                ReactSymbols_typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                ReactSymbols_typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return ReactSymbols_typeof(obj);
            }
            var REACT_ELEMENT_TYPE = Symbol.for("react.element");
            var REACT_PORTAL_TYPE = Symbol.for("react.portal");
            var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
            var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
            var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
            var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
            var REACT_CONTEXT_TYPE = Symbol.for("react.context");
            var REACT_SERVER_CONTEXT_TYPE = Symbol.for("react.server_context");
            var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
            var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
            var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
            var REACT_MEMO_TYPE = Symbol.for("react.memo");
            var REACT_LAZY_TYPE = Symbol.for("react.lazy");
            var REACT_SCOPE_TYPE = Symbol.for("react.scope");
            var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
            var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
            var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
            var REACT_CACHE_TYPE = Symbol.for("react.cache");
            var REACT_TRACING_MARKER_TYPE = Symbol.for("react.tracing_marker");
            var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for("react.default_value");
            var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel");
            var REACT_POSTPONE_TYPE = Symbol.for("react.postpone");
            var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
            var FAUX_ITERATOR_SYMBOL = "@@iterator";
            function getIteratorFn(maybeIterable) {
              if (maybeIterable === null || ReactSymbols_typeof(maybeIterable) !== "object") {
                return null;
              }
              var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
              if (typeof maybeIterator === "function") {
                return maybeIterator;
              }
              return null;
            }
            ;
            var types_ElementTypeClass = 1;
            var ElementTypeContext = 2;
            var types_ElementTypeFunction = 5;
            var types_ElementTypeForwardRef = 6;
            var ElementTypeHostComponent = 7;
            var types_ElementTypeMemo = 8;
            var ElementTypeOtherOrUnknown = 9;
            var ElementTypeProfiler = 10;
            var ElementTypeRoot = 11;
            var ElementTypeSuspense = 12;
            var ElementTypeSuspenseList = 13;
            var ElementTypeTracingMarker = 14;
            var ComponentFilterElementType = 1;
            var ComponentFilterDisplayName = 2;
            var ComponentFilterLocation = 3;
            var ComponentFilterHOC = 4;
            var StrictMode = 1;
            ;
            var isArray = Array.isArray;
            const src_isArray = isArray;
            ;
            var process2 = __webpack_require__2(169);
            function utils_typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                utils_typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                utils_typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return utils_typeof(obj);
            }
            function _toConsumableArray(arr) {
              return _arrayWithoutHoles(arr) || _iterableToArray(arr) || utils_unsupportedIterableToArray(arr) || _nonIterableSpread();
            }
            function _nonIterableSpread() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function utils_unsupportedIterableToArray(o, minLen) {
              if (!o)
                return;
              if (typeof o === "string")
                return utils_arrayLikeToArray(o, minLen);
              var n = Object.prototype.toString.call(o).slice(8, -1);
              if (n === "Object" && o.constructor)
                n = o.constructor.name;
              if (n === "Map" || n === "Set")
                return Array.from(o);
              if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                return utils_arrayLikeToArray(o, minLen);
            }
            function _iterableToArray(iter) {
              if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
                return Array.from(iter);
            }
            function _arrayWithoutHoles(arr) {
              if (Array.isArray(arr))
                return utils_arrayLikeToArray(arr);
            }
            function utils_arrayLikeToArray(arr, len) {
              if (len == null || len > arr.length)
                len = arr.length;
              for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
                arr2[i2] = arr[i2];
              }
              return arr2;
            }
            var utils_hasOwnProperty = Object.prototype.hasOwnProperty;
            var cachedDisplayNames = /* @__PURE__ */ new WeakMap();
            var encodedStringCache = new (lru_cache_default())({
              max: 1e3
            });
            function alphaSortKeys(a, b) {
              if (a.toString() > b.toString()) {
                return 1;
              } else if (b.toString() > a.toString()) {
                return -1;
              } else {
                return 0;
              }
            }
            function getAllEnumerableKeys(obj) {
              var keys = /* @__PURE__ */ new Set();
              var current = obj;
              var _loop = function _loop2() {
                var currentKeys = [].concat(_toConsumableArray(Object.keys(current)), _toConsumableArray(Object.getOwnPropertySymbols(current)));
                var descriptors = Object.getOwnPropertyDescriptors(current);
                currentKeys.forEach(function(key2) {
                  if (descriptors[key2].enumerable) {
                    keys.add(key2);
                  }
                });
                current = Object.getPrototypeOf(current);
              };
              while (current != null) {
                _loop();
              }
              return keys;
            }
            function getWrappedDisplayName(outerType, innerType, wrapperName, fallbackName) {
              var displayName = outerType.displayName;
              return displayName || "".concat(wrapperName, "(").concat(getDisplayName(innerType, fallbackName), ")");
            }
            function getDisplayName(type2) {
              var fallbackName = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "Anonymous";
              var nameFromCache = cachedDisplayNames.get(type2);
              if (nameFromCache != null) {
                return nameFromCache;
              }
              var displayName = fallbackName;
              if (typeof type2.displayName === "string") {
                displayName = type2.displayName;
              } else if (typeof type2.name === "string" && type2.name !== "") {
                displayName = type2.name;
              }
              cachedDisplayNames.set(type2, displayName);
              return displayName;
            }
            var uidCounter = 0;
            function getUID() {
              return ++uidCounter;
            }
            function utfDecodeString(array) {
              var string = "";
              for (var i2 = 0; i2 < array.length; i2++) {
                var char = array[i2];
                string += String.fromCodePoint(char);
              }
              return string;
            }
            function surrogatePairToCodePoint(charCode1, charCode2) {
              return ((charCode1 & 1023) << 10) + (charCode2 & 1023) + 65536;
            }
            function utfEncodeString(string) {
              var cached = encodedStringCache.get(string);
              if (cached !== void 0) {
                return cached;
              }
              var encoded = [];
              var i2 = 0;
              var charCode;
              while (i2 < string.length) {
                charCode = string.charCodeAt(i2);
                if ((charCode & 63488) === 55296) {
                  encoded.push(surrogatePairToCodePoint(charCode, string.charCodeAt(++i2)));
                } else {
                  encoded.push(charCode);
                }
                ++i2;
              }
              encodedStringCache.set(string, encoded);
              return encoded;
            }
            function printOperationsArray(operations) {
              var rendererID = operations[0];
              var rootID = operations[1];
              var logs = ["operations for renderer:".concat(rendererID, " and root:").concat(rootID)];
              var i2 = 2;
              var stringTable = [
                null
              ];
              var stringTableSize = operations[i2++];
              var stringTableEnd = i2 + stringTableSize;
              while (i2 < stringTableEnd) {
                var nextLength = operations[i2++];
                var nextString = utfDecodeString(operations.slice(i2, i2 + nextLength));
                stringTable.push(nextString);
                i2 += nextLength;
              }
              while (i2 < operations.length) {
                var operation = operations[i2];
                switch (operation) {
                  case TREE_OPERATION_ADD: {
                    var _id = operations[i2 + 1];
                    var type2 = operations[i2 + 2];
                    i2 += 3;
                    if (type2 === ElementTypeRoot) {
                      logs.push("Add new root node ".concat(_id));
                      i2++;
                      i2++;
                      i2++;
                      i2++;
                    } else {
                      var parentID = operations[i2];
                      i2++;
                      i2++;
                      var displayNameStringID = operations[i2];
                      var displayName = stringTable[displayNameStringID];
                      i2++;
                      i2++;
                      logs.push("Add node ".concat(_id, " (").concat(displayName || "null", ") as child of ").concat(parentID));
                    }
                    break;
                  }
                  case TREE_OPERATION_REMOVE: {
                    var removeLength = operations[i2 + 1];
                    i2 += 2;
                    for (var removeIndex = 0; removeIndex < removeLength; removeIndex++) {
                      var _id2 = operations[i2];
                      i2 += 1;
                      logs.push("Remove node ".concat(_id2));
                    }
                    break;
                  }
                  case TREE_OPERATION_REMOVE_ROOT: {
                    i2 += 1;
                    logs.push("Remove root ".concat(rootID));
                    break;
                  }
                  case TREE_OPERATION_SET_SUBTREE_MODE: {
                    var _id3 = operations[i2 + 1];
                    var mode = operations[i2 + 1];
                    i2 += 3;
                    logs.push("Mode ".concat(mode, " set for subtree with root ").concat(_id3));
                    break;
                  }
                  case TREE_OPERATION_REORDER_CHILDREN: {
                    var _id4 = operations[i2 + 1];
                    var numChildren = operations[i2 + 2];
                    i2 += 3;
                    var children = operations.slice(i2, i2 + numChildren);
                    i2 += numChildren;
                    logs.push("Re-order node ".concat(_id4, " children ").concat(children.join(",")));
                    break;
                  }
                  case TREE_OPERATION_UPDATE_TREE_BASE_DURATION:
                    i2 += 3;
                    break;
                  case TREE_OPERATION_UPDATE_ERRORS_OR_WARNINGS:
                    var id = operations[i2 + 1];
                    var numErrors = operations[i2 + 2];
                    var numWarnings = operations[i2 + 3];
                    i2 += 4;
                    logs.push("Node ".concat(id, " has ").concat(numErrors, " errors and ").concat(numWarnings, " warnings"));
                    break;
                  default:
                    throw Error('Unsupported Bridge operation "'.concat(operation, '"'));
                }
              }
              console.log(logs.join("\n  "));
            }
            function getDefaultComponentFilters() {
              return [{
                type: ComponentFilterElementType,
                value: ElementTypeHostComponent,
                isEnabled: true
              }];
            }
            function getSavedComponentFilters() {
              try {
                var raw = localStorageGetItem(LOCAL_STORAGE_COMPONENT_FILTER_PREFERENCES_KEY);
                if (raw != null) {
                  return JSON.parse(raw);
                }
              } catch (error) {
              }
              return getDefaultComponentFilters();
            }
            function setSavedComponentFilters(componentFilters) {
              localStorageSetItem(LOCAL_STORAGE_COMPONENT_FILTER_PREFERENCES_KEY, JSON.stringify(componentFilters));
            }
            function parseBool(s) {
              if (s === "true") {
                return true;
              }
              if (s === "false") {
                return false;
              }
            }
            function castBool(v) {
              if (v === true || v === false) {
                return v;
              }
            }
            function castBrowserTheme(v) {
              if (v === "light" || v === "dark" || v === "auto") {
                return v;
              }
            }
            function getAppendComponentStack() {
              var _parseBool;
              var raw = localStorageGetItem(LOCAL_STORAGE_SHOULD_APPEND_COMPONENT_STACK_KEY);
              return (_parseBool = parseBool(raw)) !== null && _parseBool !== void 0 ? _parseBool : true;
            }
            function getBreakOnConsoleErrors() {
              var _parseBool2;
              var raw = localStorageGetItem(LOCAL_STORAGE_SHOULD_BREAK_ON_CONSOLE_ERRORS);
              return (_parseBool2 = parseBool(raw)) !== null && _parseBool2 !== void 0 ? _parseBool2 : false;
            }
            function getHideConsoleLogsInStrictMode() {
              var _parseBool3;
              var raw = localStorageGetItem(LOCAL_STORAGE_HIDE_CONSOLE_LOGS_IN_STRICT_MODE);
              return (_parseBool3 = parseBool(raw)) !== null && _parseBool3 !== void 0 ? _parseBool3 : false;
            }
            function getShowInlineWarningsAndErrors() {
              var _parseBool4;
              var raw = localStorageGetItem(LOCAL_STORAGE_SHOW_INLINE_WARNINGS_AND_ERRORS_KEY);
              return (_parseBool4 = parseBool(raw)) !== null && _parseBool4 !== void 0 ? _parseBool4 : true;
            }
            function getDefaultOpenInEditorURL() {
              return typeof process2.env.EDITOR_URL === "string" ? process2.env.EDITOR_URL : "";
            }
            function getOpenInEditorURL() {
              try {
                var raw = localStorageGetItem(LOCAL_STORAGE_OPEN_IN_EDITOR_URL);
                if (raw != null) {
                  return JSON.parse(raw);
                }
              } catch (error) {
              }
              return getDefaultOpenInEditorURL();
            }
            function separateDisplayNameAndHOCs(displayName, type2) {
              if (displayName === null) {
                return [null, null];
              }
              var hocDisplayNames = null;
              switch (type2) {
                case ElementTypeClass:
                case ElementTypeForwardRef:
                case ElementTypeFunction:
                case ElementTypeMemo:
                  if (displayName.indexOf("(") >= 0) {
                    var matches = displayName.match(/[^()]+/g);
                    if (matches != null) {
                      displayName = matches.pop();
                      hocDisplayNames = matches;
                    }
                  }
                  break;
                default:
                  break;
              }
              return [displayName, hocDisplayNames];
            }
            function shallowDiffers(prev, next) {
              for (var attribute in prev) {
                if (!(attribute in next)) {
                  return true;
                }
              }
              for (var _attribute in next) {
                if (prev[_attribute] !== next[_attribute]) {
                  return true;
                }
              }
              return false;
            }
            function utils_getInObject(object, path) {
              return path.reduce(function(reduced, attr) {
                if (reduced) {
                  if (utils_hasOwnProperty.call(reduced, attr)) {
                    return reduced[attr];
                  }
                  if (typeof reduced[Symbol.iterator] === "function") {
                    return Array.from(reduced)[attr];
                  }
                }
                return null;
              }, object);
            }
            function deletePathInObject(object, path) {
              var length = path.length;
              var last = path[length - 1];
              if (object != null) {
                var parent = utils_getInObject(object, path.slice(0, length - 1));
                if (parent) {
                  if (src_isArray(parent)) {
                    parent.splice(last, 1);
                  } else {
                    delete parent[last];
                  }
                }
              }
            }
            function renamePathInObject(object, oldPath, newPath) {
              var length = oldPath.length;
              if (object != null) {
                var parent = utils_getInObject(object, oldPath.slice(0, length - 1));
                if (parent) {
                  var lastOld = oldPath[length - 1];
                  var lastNew = newPath[length - 1];
                  parent[lastNew] = parent[lastOld];
                  if (src_isArray(parent)) {
                    parent.splice(lastOld, 1);
                  } else {
                    delete parent[lastOld];
                  }
                }
              }
            }
            function utils_setInObject(object, path, value) {
              var length = path.length;
              var last = path[length - 1];
              if (object != null) {
                var parent = utils_getInObject(object, path.slice(0, length - 1));
                if (parent) {
                  parent[last] = value;
                }
              }
            }
            function getDataType(data) {
              if (data === null) {
                return "null";
              } else if (data === void 0) {
                return "undefined";
              }
              if ((0, react_is.isElement)(data)) {
                return "react_element";
              }
              if (typeof HTMLElement !== "undefined" && data instanceof HTMLElement) {
                return "html_element";
              }
              var type2 = utils_typeof(data);
              switch (type2) {
                case "bigint":
                  return "bigint";
                case "boolean":
                  return "boolean";
                case "function":
                  return "function";
                case "number":
                  if (Number.isNaN(data)) {
                    return "nan";
                  } else if (!Number.isFinite(data)) {
                    return "infinity";
                  } else {
                    return "number";
                  }
                case "object":
                  if (src_isArray(data)) {
                    return "array";
                  } else if (ArrayBuffer.isView(data)) {
                    return utils_hasOwnProperty.call(data.constructor, "BYTES_PER_ELEMENT") ? "typed_array" : "data_view";
                  } else if (data.constructor && data.constructor.name === "ArrayBuffer") {
                    return "array_buffer";
                  } else if (typeof data[Symbol.iterator] === "function") {
                    var iterator = data[Symbol.iterator]();
                    if (!iterator) {
                    } else {
                      return iterator === data ? "opaque_iterator" : "iterator";
                    }
                  } else if (data.constructor && data.constructor.name === "RegExp") {
                    return "regexp";
                  } else {
                    var toStringValue = Object.prototype.toString.call(data);
                    if (toStringValue === "[object Date]") {
                      return "date";
                    } else if (toStringValue === "[object HTMLAllCollection]") {
                      return "html_all_collection";
                    }
                  }
                  if (!isPlainObject(data)) {
                    return "class_instance";
                  }
                  return "object";
                case "string":
                  return "string";
                case "symbol":
                  return "symbol";
                case "undefined":
                  if (Object.prototype.toString.call(data) === "[object HTMLAllCollection]") {
                    return "html_all_collection";
                  }
                  return "undefined";
                default:
                  return "unknown";
              }
            }
            function getDisplayNameForReactElement(element) {
              var elementType = (0, react_is.typeOf)(element);
              switch (elementType) {
                case react_is.ContextConsumer:
                  return "ContextConsumer";
                case react_is.ContextProvider:
                  return "ContextProvider";
                case react_is.ForwardRef:
                  return "ForwardRef";
                case react_is.Fragment:
                  return "Fragment";
                case react_is.Lazy:
                  return "Lazy";
                case react_is.Memo:
                  return "Memo";
                case react_is.Portal:
                  return "Portal";
                case react_is.Profiler:
                  return "Profiler";
                case react_is.StrictMode:
                  return "StrictMode";
                case react_is.Suspense:
                  return "Suspense";
                case REACT_SUSPENSE_LIST_TYPE:
                  return "SuspenseList";
                case REACT_TRACING_MARKER_TYPE:
                  return "TracingMarker";
                default:
                  var type2 = element.type;
                  if (typeof type2 === "string") {
                    return type2;
                  } else if (typeof type2 === "function") {
                    return getDisplayName(type2, "Anonymous");
                  } else if (type2 != null) {
                    return "NotImplementedInDevtools";
                  } else {
                    return "Element";
                  }
              }
            }
            var MAX_PREVIEW_STRING_LENGTH = 50;
            function truncateForDisplay(string) {
              var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : MAX_PREVIEW_STRING_LENGTH;
              if (string.length > length) {
                return string.slice(0, length) + "\u2026";
              } else {
                return string;
              }
            }
            function formatDataForPreview(data, showFormattedValue) {
              if (data != null && utils_hasOwnProperty.call(data, meta.type)) {
                return showFormattedValue ? data[meta.preview_long] : data[meta.preview_short];
              }
              var type2 = getDataType(data);
              switch (type2) {
                case "html_element":
                  return "<".concat(truncateForDisplay(data.tagName.toLowerCase()), " />");
                case "function":
                  return truncateForDisplay("\u0192 ".concat(typeof data.name === "function" ? "" : data.name, "() {}"));
                case "string":
                  return '"'.concat(data, '"');
                case "bigint":
                  return truncateForDisplay(data.toString() + "n");
                case "regexp":
                  return truncateForDisplay(data.toString());
                case "symbol":
                  return truncateForDisplay(data.toString());
                case "react_element":
                  return "<".concat(truncateForDisplay(getDisplayNameForReactElement(data) || "Unknown"), " />");
                case "array_buffer":
                  return "ArrayBuffer(".concat(data.byteLength, ")");
                case "data_view":
                  return "DataView(".concat(data.buffer.byteLength, ")");
                case "array":
                  if (showFormattedValue) {
                    var formatted = "";
                    for (var i2 = 0; i2 < data.length; i2++) {
                      if (i2 > 0) {
                        formatted += ", ";
                      }
                      formatted += formatDataForPreview(data[i2], false);
                      if (formatted.length > MAX_PREVIEW_STRING_LENGTH) {
                        break;
                      }
                    }
                    return "[".concat(truncateForDisplay(formatted), "]");
                  } else {
                    var length = utils_hasOwnProperty.call(data, meta.size) ? data[meta.size] : data.length;
                    return "Array(".concat(length, ")");
                  }
                case "typed_array":
                  var shortName = "".concat(data.constructor.name, "(").concat(data.length, ")");
                  if (showFormattedValue) {
                    var _formatted = "";
                    for (var _i = 0; _i < data.length; _i++) {
                      if (_i > 0) {
                        _formatted += ", ";
                      }
                      _formatted += data[_i];
                      if (_formatted.length > MAX_PREVIEW_STRING_LENGTH) {
                        break;
                      }
                    }
                    return "".concat(shortName, " [").concat(truncateForDisplay(_formatted), "]");
                  } else {
                    return shortName;
                  }
                case "iterator":
                  var name = data.constructor.name;
                  if (showFormattedValue) {
                    var array = Array.from(data);
                    var _formatted2 = "";
                    for (var _i2 = 0; _i2 < array.length; _i2++) {
                      var entryOrEntries = array[_i2];
                      if (_i2 > 0) {
                        _formatted2 += ", ";
                      }
                      if (src_isArray(entryOrEntries)) {
                        var key2 = formatDataForPreview(entryOrEntries[0], true);
                        var value = formatDataForPreview(entryOrEntries[1], false);
                        _formatted2 += "".concat(key2, " => ").concat(value);
                      } else {
                        _formatted2 += formatDataForPreview(entryOrEntries, false);
                      }
                      if (_formatted2.length > MAX_PREVIEW_STRING_LENGTH) {
                        break;
                      }
                    }
                    return "".concat(name, "(").concat(data.size, ") {").concat(truncateForDisplay(_formatted2), "}");
                  } else {
                    return "".concat(name, "(").concat(data.size, ")");
                  }
                case "opaque_iterator": {
                  return data[Symbol.toStringTag];
                }
                case "date":
                  return data.toString();
                case "class_instance":
                  return data.constructor.name;
                case "object":
                  if (showFormattedValue) {
                    var keys = Array.from(getAllEnumerableKeys(data)).sort(alphaSortKeys);
                    var _formatted3 = "";
                    for (var _i3 = 0; _i3 < keys.length; _i3++) {
                      var _key = keys[_i3];
                      if (_i3 > 0) {
                        _formatted3 += ", ";
                      }
                      _formatted3 += "".concat(_key.toString(), ": ").concat(formatDataForPreview(data[_key], false));
                      if (_formatted3.length > MAX_PREVIEW_STRING_LENGTH) {
                        break;
                      }
                    }
                    return "{".concat(truncateForDisplay(_formatted3), "}");
                  } else {
                    return "{\u2026}";
                  }
                case "boolean":
                case "number":
                case "infinity":
                case "nan":
                case "null":
                case "undefined":
                  return data;
                default:
                  try {
                    return truncateForDisplay(String(data));
                  } catch (error) {
                    return "unserializable";
                  }
              }
            }
            var isPlainObject = function isPlainObject2(object) {
              var objectPrototype = Object.getPrototypeOf(object);
              if (!objectPrototype)
                return true;
              var objectParentPrototype = Object.getPrototypeOf(objectPrototype);
              return !objectParentPrototype;
            };
            ;
            function ownKeys(object, enumerableOnly) {
              var keys = Object.keys(object);
              if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                if (enumerableOnly)
                  symbols = symbols.filter(function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                  });
                keys.push.apply(keys, symbols);
              }
              return keys;
            }
            function _objectSpread(target) {
              for (var i2 = 1; i2 < arguments.length; i2++) {
                var source = arguments[i2] != null ? arguments[i2] : {};
                if (i2 % 2) {
                  ownKeys(Object(source), true).forEach(function(key2) {
                    hydration_defineProperty(target, key2, source[key2]);
                  });
                } else if (Object.getOwnPropertyDescriptors) {
                  Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
                } else {
                  ownKeys(Object(source)).forEach(function(key2) {
                    Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
                  });
                }
              }
              return target;
            }
            function hydration_defineProperty(obj, key2, value) {
              if (key2 in obj) {
                Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
              } else {
                obj[key2] = value;
              }
              return obj;
            }
            var meta = {
              inspectable: Symbol("inspectable"),
              inspected: Symbol("inspected"),
              name: Symbol("name"),
              preview_long: Symbol("preview_long"),
              preview_short: Symbol("preview_short"),
              readonly: Symbol("readonly"),
              size: Symbol("size"),
              type: Symbol("type"),
              unserializable: Symbol("unserializable")
            };
            var LEVEL_THRESHOLD = 2;
            function createDehydrated(type2, inspectable, data, cleaned, path) {
              cleaned.push(path);
              var dehydrated = {
                inspectable,
                type: type2,
                preview_long: formatDataForPreview(data, true),
                preview_short: formatDataForPreview(data, false),
                name: !data.constructor || data.constructor.name === "Object" ? "" : data.constructor.name
              };
              if (type2 === "array" || type2 === "typed_array") {
                dehydrated.size = data.length;
              } else if (type2 === "object") {
                dehydrated.size = Object.keys(data).length;
              }
              if (type2 === "iterator" || type2 === "typed_array") {
                dehydrated.readonly = true;
              }
              return dehydrated;
            }
            function dehydrate(data, cleaned, unserializable, path, isPathAllowed) {
              var level2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 0;
              var type2 = getDataType(data);
              var isPathAllowedCheck;
              switch (type2) {
                case "html_element":
                  cleaned.push(path);
                  return {
                    inspectable: false,
                    preview_short: formatDataForPreview(data, false),
                    preview_long: formatDataForPreview(data, true),
                    name: data.tagName,
                    type: type2
                  };
                case "function":
                  cleaned.push(path);
                  return {
                    inspectable: false,
                    preview_short: formatDataForPreview(data, false),
                    preview_long: formatDataForPreview(data, true),
                    name: typeof data.name === "function" || !data.name ? "function" : data.name,
                    type: type2
                  };
                case "string":
                  isPathAllowedCheck = isPathAllowed(path);
                  if (isPathAllowedCheck) {
                    return data;
                  } else {
                    return data.length <= 500 ? data : data.slice(0, 500) + "...";
                  }
                case "bigint":
                  cleaned.push(path);
                  return {
                    inspectable: false,
                    preview_short: formatDataForPreview(data, false),
                    preview_long: formatDataForPreview(data, true),
                    name: data.toString(),
                    type: type2
                  };
                case "symbol":
                  cleaned.push(path);
                  return {
                    inspectable: false,
                    preview_short: formatDataForPreview(data, false),
                    preview_long: formatDataForPreview(data, true),
                    name: data.toString(),
                    type: type2
                  };
                case "react_element":
                  cleaned.push(path);
                  return {
                    inspectable: false,
                    preview_short: formatDataForPreview(data, false),
                    preview_long: formatDataForPreview(data, true),
                    name: getDisplayNameForReactElement(data) || "Unknown",
                    type: type2
                  };
                case "array_buffer":
                case "data_view":
                  cleaned.push(path);
                  return {
                    inspectable: false,
                    preview_short: formatDataForPreview(data, false),
                    preview_long: formatDataForPreview(data, true),
                    name: type2 === "data_view" ? "DataView" : "ArrayBuffer",
                    size: data.byteLength,
                    type: type2
                  };
                case "array":
                  isPathAllowedCheck = isPathAllowed(path);
                  if (level2 >= LEVEL_THRESHOLD && !isPathAllowedCheck) {
                    return createDehydrated(type2, true, data, cleaned, path);
                  }
                  return data.map(function(item, i2) {
                    return dehydrate(item, cleaned, unserializable, path.concat([i2]), isPathAllowed, isPathAllowedCheck ? 1 : level2 + 1);
                  });
                case "html_all_collection":
                case "typed_array":
                case "iterator":
                  isPathAllowedCheck = isPathAllowed(path);
                  if (level2 >= LEVEL_THRESHOLD && !isPathAllowedCheck) {
                    return createDehydrated(type2, true, data, cleaned, path);
                  } else {
                    var unserializableValue = {
                      unserializable: true,
                      type: type2,
                      readonly: true,
                      size: type2 === "typed_array" ? data.length : void 0,
                      preview_short: formatDataForPreview(data, false),
                      preview_long: formatDataForPreview(data, true),
                      name: !data.constructor || data.constructor.name === "Object" ? "" : data.constructor.name
                    };
                    Array.from(data).forEach(function(item, i2) {
                      return unserializableValue[i2] = dehydrate(item, cleaned, unserializable, path.concat([i2]), isPathAllowed, isPathAllowedCheck ? 1 : level2 + 1);
                    });
                    unserializable.push(path);
                    return unserializableValue;
                  }
                case "opaque_iterator":
                  cleaned.push(path);
                  return {
                    inspectable: false,
                    preview_short: formatDataForPreview(data, false),
                    preview_long: formatDataForPreview(data, true),
                    name: data[Symbol.toStringTag],
                    type: type2
                  };
                case "date":
                  cleaned.push(path);
                  return {
                    inspectable: false,
                    preview_short: formatDataForPreview(data, false),
                    preview_long: formatDataForPreview(data, true),
                    name: data.toString(),
                    type: type2
                  };
                case "regexp":
                  cleaned.push(path);
                  return {
                    inspectable: false,
                    preview_short: formatDataForPreview(data, false),
                    preview_long: formatDataForPreview(data, true),
                    name: data.toString(),
                    type: type2
                  };
                case "object":
                  isPathAllowedCheck = isPathAllowed(path);
                  if (level2 >= LEVEL_THRESHOLD && !isPathAllowedCheck) {
                    return createDehydrated(type2, true, data, cleaned, path);
                  } else {
                    var object = {};
                    getAllEnumerableKeys(data).forEach(function(key2) {
                      var name = key2.toString();
                      object[name] = dehydrate(data[key2], cleaned, unserializable, path.concat([name]), isPathAllowed, isPathAllowedCheck ? 1 : level2 + 1);
                    });
                    return object;
                  }
                case "class_instance":
                  isPathAllowedCheck = isPathAllowed(path);
                  if (level2 >= LEVEL_THRESHOLD && !isPathAllowedCheck) {
                    return createDehydrated(type2, true, data, cleaned, path);
                  }
                  var value = {
                    unserializable: true,
                    type: type2,
                    readonly: true,
                    preview_short: formatDataForPreview(data, false),
                    preview_long: formatDataForPreview(data, true),
                    name: data.constructor.name
                  };
                  getAllEnumerableKeys(data).forEach(function(key2) {
                    var keyAsString = key2.toString();
                    value[keyAsString] = dehydrate(data[key2], cleaned, unserializable, path.concat([keyAsString]), isPathAllowed, isPathAllowedCheck ? 1 : level2 + 1);
                  });
                  unserializable.push(path);
                  return value;
                case "infinity":
                case "nan":
                case "undefined":
                  cleaned.push(path);
                  return {
                    type: type2
                  };
                default:
                  return data;
              }
            }
            function fillInPath(object, data, path, value) {
              var target = getInObject(object, path);
              if (target != null) {
                if (!target[meta.unserializable]) {
                  delete target[meta.inspectable];
                  delete target[meta.inspected];
                  delete target[meta.name];
                  delete target[meta.preview_long];
                  delete target[meta.preview_short];
                  delete target[meta.readonly];
                  delete target[meta.size];
                  delete target[meta.type];
                }
              }
              if (value !== null && data.unserializable.length > 0) {
                var unserializablePath = data.unserializable[0];
                var isMatch = unserializablePath.length === path.length;
                for (var i2 = 0; i2 < path.length; i2++) {
                  if (path[i2] !== unserializablePath[i2]) {
                    isMatch = false;
                    break;
                  }
                }
                if (isMatch) {
                  upgradeUnserializable(value, value);
                }
              }
              setInObject(object, path, value);
            }
            function hydrate(object, cleaned, unserializable) {
              cleaned.forEach(function(path) {
                var length = path.length;
                var last = path[length - 1];
                var parent = getInObject(object, path.slice(0, length - 1));
                if (!parent || !parent.hasOwnProperty(last)) {
                  return;
                }
                var value = parent[last];
                if (!value) {
                  return;
                } else if (value.type === "infinity") {
                  parent[last] = Infinity;
                } else if (value.type === "nan") {
                  parent[last] = NaN;
                } else if (value.type === "undefined") {
                  parent[last] = void 0;
                } else {
                  var replaced = {};
                  replaced[meta.inspectable] = !!value.inspectable;
                  replaced[meta.inspected] = false;
                  replaced[meta.name] = value.name;
                  replaced[meta.preview_long] = value.preview_long;
                  replaced[meta.preview_short] = value.preview_short;
                  replaced[meta.size] = value.size;
                  replaced[meta.readonly] = !!value.readonly;
                  replaced[meta.type] = value.type;
                  parent[last] = replaced;
                }
              });
              unserializable.forEach(function(path) {
                var length = path.length;
                var last = path[length - 1];
                var parent = getInObject(object, path.slice(0, length - 1));
                if (!parent || !parent.hasOwnProperty(last)) {
                  return;
                }
                var node = parent[last];
                var replacement = _objectSpread({}, node);
                upgradeUnserializable(replacement, node);
                parent[last] = replacement;
              });
              return object;
            }
            function upgradeUnserializable(destination, source) {
              var _Object$definePropert;
              Object.defineProperties(destination, (_Object$definePropert = {}, hydration_defineProperty(_Object$definePropert, meta.inspected, {
                configurable: true,
                enumerable: false,
                value: !!source.inspected
              }), hydration_defineProperty(_Object$definePropert, meta.name, {
                configurable: true,
                enumerable: false,
                value: source.name
              }), hydration_defineProperty(_Object$definePropert, meta.preview_long, {
                configurable: true,
                enumerable: false,
                value: source.preview_long
              }), hydration_defineProperty(_Object$definePropert, meta.preview_short, {
                configurable: true,
                enumerable: false,
                value: source.preview_short
              }), hydration_defineProperty(_Object$definePropert, meta.size, {
                configurable: true,
                enumerable: false,
                value: source.size
              }), hydration_defineProperty(_Object$definePropert, meta.readonly, {
                configurable: true,
                enumerable: false,
                value: !!source.readonly
              }), hydration_defineProperty(_Object$definePropert, meta.type, {
                configurable: true,
                enumerable: false,
                value: source.type
              }), hydration_defineProperty(_Object$definePropert, meta.unserializable, {
                configurable: true,
                enumerable: false,
                value: !!source.unserializable
              }), _Object$definePropert));
              delete destination.inspected;
              delete destination.name;
              delete destination.preview_long;
              delete destination.preview_short;
              delete destination.size;
              delete destination.readonly;
              delete destination.type;
              delete destination.unserializable;
            }
            ;
            var isArrayImpl = Array.isArray;
            function isArray_isArray(a) {
              return isArrayImpl(a);
            }
            const shared_isArray = isArray_isArray;
            ;
            function utils_toConsumableArray(arr) {
              return utils_arrayWithoutHoles(arr) || utils_iterableToArray(arr) || backend_utils_unsupportedIterableToArray(arr) || utils_nonIterableSpread();
            }
            function utils_nonIterableSpread() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function backend_utils_unsupportedIterableToArray(o, minLen) {
              if (!o)
                return;
              if (typeof o === "string")
                return backend_utils_arrayLikeToArray(o, minLen);
              var n = Object.prototype.toString.call(o).slice(8, -1);
              if (n === "Object" && o.constructor)
                n = o.constructor.name;
              if (n === "Map" || n === "Set")
                return Array.from(o);
              if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                return backend_utils_arrayLikeToArray(o, minLen);
            }
            function utils_iterableToArray(iter) {
              if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
                return Array.from(iter);
            }
            function utils_arrayWithoutHoles(arr) {
              if (Array.isArray(arr))
                return backend_utils_arrayLikeToArray(arr);
            }
            function backend_utils_arrayLikeToArray(arr, len) {
              if (len == null || len > arr.length)
                len = arr.length;
              for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
                arr2[i2] = arr[i2];
              }
              return arr2;
            }
            function backend_utils_typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                backend_utils_typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                backend_utils_typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return backend_utils_typeof(obj);
            }
            function utils_ownKeys(object, enumerableOnly) {
              var keys = Object.keys(object);
              if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                if (enumerableOnly)
                  symbols = symbols.filter(function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                  });
                keys.push.apply(keys, symbols);
              }
              return keys;
            }
            function utils_objectSpread(target) {
              for (var i2 = 1; i2 < arguments.length; i2++) {
                var source = arguments[i2] != null ? arguments[i2] : {};
                if (i2 % 2) {
                  utils_ownKeys(Object(source), true).forEach(function(key2) {
                    utils_defineProperty(target, key2, source[key2]);
                  });
                } else if (Object.getOwnPropertyDescriptors) {
                  Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
                } else {
                  utils_ownKeys(Object(source)).forEach(function(key2) {
                    Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
                  });
                }
              }
              return target;
            }
            function utils_defineProperty(obj, key2, value) {
              if (key2 in obj) {
                Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
              } else {
                obj[key2] = value;
              }
              return obj;
            }
            var FIRST_DEVTOOLS_BACKEND_LOCKSTEP_VER = "999.9.9";
            function hasAssignedBackend(version) {
              if (version == null || version === "") {
                return false;
              }
              return gte(version, FIRST_DEVTOOLS_BACKEND_LOCKSTEP_VER);
            }
            function cleanForBridge(data, isPathAllowed) {
              var path = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
              if (data !== null) {
                var cleanedPaths = [];
                var unserializablePaths = [];
                var cleanedData = dehydrate(data, cleanedPaths, unserializablePaths, path, isPathAllowed);
                return {
                  data: cleanedData,
                  cleaned: cleanedPaths,
                  unserializable: unserializablePaths
                };
              } else {
                return null;
              }
            }
            function copyWithDelete(obj, path) {
              var index = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
              var key2 = path[index];
              var updated = shared_isArray(obj) ? obj.slice() : utils_objectSpread({}, obj);
              if (index + 1 === path.length) {
                if (shared_isArray(updated)) {
                  updated.splice(key2, 1);
                } else {
                  delete updated[key2];
                }
              } else {
                updated[key2] = copyWithDelete(obj[key2], path, index + 1);
              }
              return updated;
            }
            function copyWithRename(obj, oldPath, newPath) {
              var index = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
              var oldKey = oldPath[index];
              var updated = shared_isArray(obj) ? obj.slice() : utils_objectSpread({}, obj);
              if (index + 1 === oldPath.length) {
                var newKey = newPath[index];
                updated[newKey] = updated[oldKey];
                if (shared_isArray(updated)) {
                  updated.splice(oldKey, 1);
                } else {
                  delete updated[oldKey];
                }
              } else {
                updated[oldKey] = copyWithRename(obj[oldKey], oldPath, newPath, index + 1);
              }
              return updated;
            }
            function copyWithSet(obj, path, value) {
              var index = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
              if (index >= path.length) {
                return value;
              }
              var key2 = path[index];
              var updated = shared_isArray(obj) ? obj.slice() : utils_objectSpread({}, obj);
              updated[key2] = copyWithSet(obj[key2], path, value, index + 1);
              return updated;
            }
            function getEffectDurations(root) {
              var effectDuration = null;
              var passiveEffectDuration = null;
              var hostRoot = root.current;
              if (hostRoot != null) {
                var stateNode = hostRoot.stateNode;
                if (stateNode != null) {
                  effectDuration = stateNode.effectDuration != null ? stateNode.effectDuration : null;
                  passiveEffectDuration = stateNode.passiveEffectDuration != null ? stateNode.passiveEffectDuration : null;
                }
              }
              return {
                effectDuration,
                passiveEffectDuration
              };
            }
            function serializeToString(data) {
              if (data === void 0) {
                return "undefined";
              }
              var cache = /* @__PURE__ */ new Set();
              return JSON.stringify(data, function(key2, value) {
                if (backend_utils_typeof(value) === "object" && value !== null) {
                  if (cache.has(value)) {
                    return;
                  }
                  cache.add(value);
                }
                if (typeof value === "bigint") {
                  return value.toString() + "n";
                }
                return value;
              }, 2);
            }
            function formatWithStyles(inputArgs, style) {
              if (inputArgs === void 0 || inputArgs === null || inputArgs.length === 0 || typeof inputArgs[0] === "string" && inputArgs[0].match(/([^%]|^)(%c)/g) || style === void 0) {
                return inputArgs;
              }
              var REGEXP = /([^%]|^)((%%)*)(%([oOdisf]))/g;
              if (typeof inputArgs[0] === "string" && inputArgs[0].match(REGEXP)) {
                return ["%c".concat(inputArgs[0]), style].concat(utils_toConsumableArray(inputArgs.slice(1)));
              } else {
                var firstArg = inputArgs.reduce(function(formatStr, elem, i2) {
                  if (i2 > 0) {
                    formatStr += " ";
                  }
                  switch (backend_utils_typeof(elem)) {
                    case "string":
                    case "boolean":
                    case "symbol":
                      return formatStr += "%s";
                    case "number":
                      var formatting = Number.isInteger(elem) ? "%i" : "%f";
                      return formatStr += formatting;
                    default:
                      return formatStr += "%o";
                  }
                }, "%c");
                return [firstArg, style].concat(utils_toConsumableArray(inputArgs));
              }
            }
            function format(maybeMessage) {
              for (var _len = arguments.length, inputArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                inputArgs[_key - 1] = arguments[_key];
              }
              var args = inputArgs.slice();
              var formatted = String(maybeMessage);
              if (typeof maybeMessage === "string") {
                if (args.length) {
                  var REGEXP = /(%?)(%([jds]))/g;
                  formatted = formatted.replace(REGEXP, function(match, escaped, ptn, flag) {
                    var arg2 = args.shift();
                    switch (flag) {
                      case "s":
                        arg2 += "";
                        break;
                      case "d":
                      case "i":
                        arg2 = parseInt(arg2, 10).toString();
                        break;
                      case "f":
                        arg2 = parseFloat(arg2).toString();
                        break;
                    }
                    if (!escaped) {
                      return arg2;
                    }
                    args.unshift(arg2);
                    return match;
                  });
                }
              }
              if (args.length) {
                for (var i2 = 0; i2 < args.length; i2++) {
                  formatted += " " + String(args[i2]);
                }
              }
              formatted = formatted.replace(/%{2,2}/g, "%");
              return String(formatted);
            }
            function isSynchronousXHRSupported() {
              return !!(window.document && window.document.featurePolicy && window.document.featurePolicy.allowsFeature("sync-xhr"));
            }
            function gt() {
              var a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              var b = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
              return compareVersions(a, b) === 1;
            }
            function gte() {
              var a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              var b = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
              return compareVersions(a, b) > -1;
            }
            var react_debug_tools = __webpack_require__2(987);
            ;
            var CONCURRENT_MODE_NUMBER = 60111;
            var CONCURRENT_MODE_SYMBOL_STRING = "Symbol(react.concurrent_mode)";
            var CONTEXT_NUMBER = 60110;
            var CONTEXT_SYMBOL_STRING = "Symbol(react.context)";
            var SERVER_CONTEXT_SYMBOL_STRING = "Symbol(react.server_context)";
            var DEPRECATED_ASYNC_MODE_SYMBOL_STRING = "Symbol(react.async_mode)";
            var ELEMENT_NUMBER = 60103;
            var ELEMENT_SYMBOL_STRING = "Symbol(react.element)";
            var DEBUG_TRACING_MODE_NUMBER = 60129;
            var DEBUG_TRACING_MODE_SYMBOL_STRING = "Symbol(react.debug_trace_mode)";
            var ReactSymbols_FORWARD_REF_NUMBER = 60112;
            var ReactSymbols_FORWARD_REF_SYMBOL_STRING = "Symbol(react.forward_ref)";
            var FRAGMENT_NUMBER = 60107;
            var FRAGMENT_SYMBOL_STRING = "Symbol(react.fragment)";
            var ReactSymbols_LAZY_NUMBER = 60116;
            var ReactSymbols_LAZY_SYMBOL_STRING = "Symbol(react.lazy)";
            var ReactSymbols_MEMO_NUMBER = 60115;
            var ReactSymbols_MEMO_SYMBOL_STRING = "Symbol(react.memo)";
            var PORTAL_NUMBER = 60106;
            var PORTAL_SYMBOL_STRING = "Symbol(react.portal)";
            var PROFILER_NUMBER = 60114;
            var PROFILER_SYMBOL_STRING = "Symbol(react.profiler)";
            var PROVIDER_NUMBER = 60109;
            var PROVIDER_SYMBOL_STRING = "Symbol(react.provider)";
            var SCOPE_NUMBER = 60119;
            var SCOPE_SYMBOL_STRING = "Symbol(react.scope)";
            var STRICT_MODE_NUMBER = 60108;
            var STRICT_MODE_SYMBOL_STRING = "Symbol(react.strict_mode)";
            var ReactSymbols_SUSPENSE_NUMBER = 60113;
            var ReactSymbols_SUSPENSE_SYMBOL_STRING = "Symbol(react.suspense)";
            var ReactSymbols_SUSPENSE_LIST_NUMBER = 60120;
            var ReactSymbols_SUSPENSE_LIST_SYMBOL_STRING = "Symbol(react.suspense_list)";
            var SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED_SYMBOL_STRING = "Symbol(react.server_context.defaultValue)";
            ;
            var consoleManagedByDevToolsDuringStrictMode = false;
            var enableLogger = false;
            var enableStyleXFeatures = false;
            var isInternalFacebookBuild = false;
            null;
            ;
            function is(x, y) {
              return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
            }
            var objectIs = typeof Object.is === "function" ? Object.is : is;
            const shared_objectIs = objectIs;
            ;
            var hasOwnProperty_hasOwnProperty = Object.prototype.hasOwnProperty;
            const shared_hasOwnProperty = hasOwnProperty_hasOwnProperty;
            ;
            var cachedStyleNameToValueMap = /* @__PURE__ */ new Map();
            function getStyleXData(data) {
              var sources = /* @__PURE__ */ new Set();
              var resolvedStyles = {};
              crawlData(data, sources, resolvedStyles);
              return {
                sources: Array.from(sources).sort(),
                resolvedStyles
              };
            }
            function crawlData(data, sources, resolvedStyles) {
              if (data == null) {
                return;
              }
              if (src_isArray(data)) {
                data.forEach(function(entry) {
                  if (entry == null) {
                    return;
                  }
                  if (src_isArray(entry)) {
                    crawlData(entry, sources, resolvedStyles);
                  } else {
                    crawlObjectProperties(entry, sources, resolvedStyles);
                  }
                });
              } else {
                crawlObjectProperties(data, sources, resolvedStyles);
              }
              resolvedStyles = Object.fromEntries(Object.entries(resolvedStyles).sort());
            }
            function crawlObjectProperties(entry, sources, resolvedStyles) {
              var keys = Object.keys(entry);
              keys.forEach(function(key2) {
                var value = entry[key2];
                if (typeof value === "string") {
                  if (key2 === value) {
                    sources.add(key2);
                  } else {
                    var propertyValue = getPropertyValueForStyleName(value);
                    if (propertyValue != null) {
                      resolvedStyles[key2] = propertyValue;
                    }
                  }
                } else {
                  var nestedStyle = {};
                  resolvedStyles[key2] = nestedStyle;
                  crawlData([value], sources, nestedStyle);
                }
              });
            }
            function getPropertyValueForStyleName(styleName) {
              if (cachedStyleNameToValueMap.has(styleName)) {
                return cachedStyleNameToValueMap.get(styleName);
              }
              for (var styleSheetIndex = 0; styleSheetIndex < document.styleSheets.length; styleSheetIndex++) {
                var styleSheet = document.styleSheets[styleSheetIndex];
                var rules = null;
                try {
                  rules = styleSheet.cssRules;
                } catch (_e) {
                  continue;
                }
                for (var ruleIndex = 0; ruleIndex < rules.length; ruleIndex++) {
                  if (!(rules[ruleIndex] instanceof CSSStyleRule)) {
                    continue;
                  }
                  var rule = rules[ruleIndex];
                  var cssText = rule.cssText, selectorText = rule.selectorText, style = rule.style;
                  if (selectorText != null) {
                    if (selectorText.startsWith(".".concat(styleName))) {
                      var match = cssText.match(/{ *([a-z\-]+):/);
                      if (match !== null) {
                        var property = match[1];
                        var value = style.getPropertyValue(property);
                        cachedStyleNameToValueMap.set(styleName, value);
                        return value;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
              return null;
            }
            ;
            var CHANGE_LOG_URL = "https://github.com/facebook/react/blob/main/packages/react-devtools/CHANGELOG.md";
            var UNSUPPORTED_VERSION_URL = "https://reactjs.org/blog/2019/08/15/new-react-devtools.html#how-do-i-get-the-old-version-back";
            var REACT_DEVTOOLS_WORKPLACE_URL = "https://fburl.com/react-devtools-workplace-group";
            var THEME_STYLES = {
              light: {
                "--color-attribute-name": "#ef6632",
                "--color-attribute-name-not-editable": "#23272f",
                "--color-attribute-name-inverted": "rgba(255, 255, 255, 0.7)",
                "--color-attribute-value": "#1a1aa6",
                "--color-attribute-value-inverted": "#ffffff",
                "--color-attribute-editable-value": "#1a1aa6",
                "--color-background": "#ffffff",
                "--color-background-hover": "rgba(0, 136, 250, 0.1)",
                "--color-background-inactive": "#e5e5e5",
                "--color-background-invalid": "#fff0f0",
                "--color-background-selected": "#0088fa",
                "--color-button-background": "#ffffff",
                "--color-button-background-focus": "#ededed",
                "--color-button": "#5f6673",
                "--color-button-disabled": "#cfd1d5",
                "--color-button-active": "#0088fa",
                "--color-button-focus": "#23272f",
                "--color-button-hover": "#23272f",
                "--color-border": "#eeeeee",
                "--color-commit-did-not-render-fill": "#cfd1d5",
                "--color-commit-did-not-render-fill-text": "#000000",
                "--color-commit-did-not-render-pattern": "#cfd1d5",
                "--color-commit-did-not-render-pattern-text": "#333333",
                "--color-commit-gradient-0": "#37afa9",
                "--color-commit-gradient-1": "#63b19e",
                "--color-commit-gradient-2": "#80b393",
                "--color-commit-gradient-3": "#97b488",
                "--color-commit-gradient-4": "#abb67d",
                "--color-commit-gradient-5": "#beb771",
                "--color-commit-gradient-6": "#cfb965",
                "--color-commit-gradient-7": "#dfba57",
                "--color-commit-gradient-8": "#efbb49",
                "--color-commit-gradient-9": "#febc38",
                "--color-commit-gradient-text": "#000000",
                "--color-component-name": "#6a51b2",
                "--color-component-name-inverted": "#ffffff",
                "--color-component-badge-background": "rgba(0, 0, 0, 0.1)",
                "--color-component-badge-background-inverted": "rgba(255, 255, 255, 0.25)",
                "--color-component-badge-count": "#777d88",
                "--color-component-badge-count-inverted": "rgba(255, 255, 255, 0.7)",
                "--color-console-error-badge-text": "#ffffff",
                "--color-console-error-background": "#fff0f0",
                "--color-console-error-border": "#ffd6d6",
                "--color-console-error-icon": "#eb3941",
                "--color-console-error-text": "#fe2e31",
                "--color-console-warning-badge-text": "#000000",
                "--color-console-warning-background": "#fffbe5",
                "--color-console-warning-border": "#fff5c1",
                "--color-console-warning-icon": "#f4bd00",
                "--color-console-warning-text": "#64460c",
                "--color-context-background": "rgba(0,0,0,.9)",
                "--color-context-background-hover": "rgba(255, 255, 255, 0.1)",
                "--color-context-background-selected": "#178fb9",
                "--color-context-border": "#3d424a",
                "--color-context-text": "#ffffff",
                "--color-context-text-selected": "#ffffff",
                "--color-dim": "#777d88",
                "--color-dimmer": "#cfd1d5",
                "--color-dimmest": "#eff0f1",
                "--color-error-background": "hsl(0, 100%, 97%)",
                "--color-error-border": "hsl(0, 100%, 92%)",
                "--color-error-text": "#ff0000",
                "--color-expand-collapse-toggle": "#777d88",
                "--color-link": "#0000ff",
                "--color-modal-background": "rgba(255, 255, 255, 0.75)",
                "--color-bridge-version-npm-background": "#eff0f1",
                "--color-bridge-version-npm-text": "#000000",
                "--color-bridge-version-number": "#0088fa",
                "--color-primitive-hook-badge-background": "#e5e5e5",
                "--color-primitive-hook-badge-text": "#5f6673",
                "--color-record-active": "#fc3a4b",
                "--color-record-hover": "#3578e5",
                "--color-record-inactive": "#0088fa",
                "--color-resize-bar": "#eeeeee",
                "--color-resize-bar-active": "#dcdcdc",
                "--color-resize-bar-border": "#d1d1d1",
                "--color-resize-bar-dot": "#333333",
                "--color-timeline-internal-module": "#d1d1d1",
                "--color-timeline-internal-module-hover": "#c9c9c9",
                "--color-timeline-internal-module-text": "#444",
                "--color-timeline-native-event": "#ccc",
                "--color-timeline-native-event-hover": "#aaa",
                "--color-timeline-network-primary": "#fcf3dc",
                "--color-timeline-network-primary-hover": "#f0e7d1",
                "--color-timeline-network-secondary": "#efc457",
                "--color-timeline-network-secondary-hover": "#e3ba52",
                "--color-timeline-priority-background": "#f6f6f6",
                "--color-timeline-priority-border": "#eeeeee",
                "--color-timeline-user-timing": "#c9cacd",
                "--color-timeline-user-timing-hover": "#93959a",
                "--color-timeline-react-idle": "#d3e5f6",
                "--color-timeline-react-idle-hover": "#c3d9ef",
                "--color-timeline-react-render": "#9fc3f3",
                "--color-timeline-react-render-hover": "#83afe9",
                "--color-timeline-react-render-text": "#11365e",
                "--color-timeline-react-commit": "#c88ff0",
                "--color-timeline-react-commit-hover": "#b281d6",
                "--color-timeline-react-commit-text": "#3e2c4a",
                "--color-timeline-react-layout-effects": "#b281d6",
                "--color-timeline-react-layout-effects-hover": "#9d71bd",
                "--color-timeline-react-layout-effects-text": "#3e2c4a",
                "--color-timeline-react-passive-effects": "#b281d6",
                "--color-timeline-react-passive-effects-hover": "#9d71bd",
                "--color-timeline-react-passive-effects-text": "#3e2c4a",
                "--color-timeline-react-schedule": "#9fc3f3",
                "--color-timeline-react-schedule-hover": "#2683E2",
                "--color-timeline-react-suspense-rejected": "#f1cc14",
                "--color-timeline-react-suspense-rejected-hover": "#ffdf37",
                "--color-timeline-react-suspense-resolved": "#a6e59f",
                "--color-timeline-react-suspense-resolved-hover": "#89d281",
                "--color-timeline-react-suspense-unresolved": "#c9cacd",
                "--color-timeline-react-suspense-unresolved-hover": "#93959a",
                "--color-timeline-thrown-error": "#ee1638",
                "--color-timeline-thrown-error-hover": "#da1030",
                "--color-timeline-text-color": "#000000",
                "--color-timeline-text-dim-color": "#ccc",
                "--color-timeline-react-work-border": "#eeeeee",
                "--color-search-match": "yellow",
                "--color-search-match-current": "#f7923b",
                "--color-selected-tree-highlight-active": "rgba(0, 136, 250, 0.1)",
                "--color-selected-tree-highlight-inactive": "rgba(0, 0, 0, 0.05)",
                "--color-scroll-caret": "rgba(150, 150, 150, 0.5)",
                "--color-tab-selected-border": "#0088fa",
                "--color-text": "#000000",
                "--color-text-invalid": "#ff0000",
                "--color-text-selected": "#ffffff",
                "--color-toggle-background-invalid": "#fc3a4b",
                "--color-toggle-background-on": "#0088fa",
                "--color-toggle-background-off": "#cfd1d5",
                "--color-toggle-text": "#ffffff",
                "--color-warning-background": "#fb3655",
                "--color-warning-background-hover": "#f82042",
                "--color-warning-text-color": "#ffffff",
                "--color-warning-text-color-inverted": "#fd4d69",
                "--color-scroll-thumb": "#c2c2c2",
                "--color-scroll-track": "#fafafa",
                "--color-tooltip-background": "rgba(0, 0, 0, 0.9)",
                "--color-tooltip-text": "#ffffff"
              },
              dark: {
                "--color-attribute-name": "#9d87d2",
                "--color-attribute-name-not-editable": "#ededed",
                "--color-attribute-name-inverted": "#282828",
                "--color-attribute-value": "#cedae0",
                "--color-attribute-value-inverted": "#ffffff",
                "--color-attribute-editable-value": "yellow",
                "--color-background": "#282c34",
                "--color-background-hover": "rgba(255, 255, 255, 0.1)",
                "--color-background-inactive": "#3d424a",
                "--color-background-invalid": "#5c0000",
                "--color-background-selected": "#178fb9",
                "--color-button-background": "#282c34",
                "--color-button-background-focus": "#3d424a",
                "--color-button": "#afb3b9",
                "--color-button-active": "#61dafb",
                "--color-button-disabled": "#4f5766",
                "--color-button-focus": "#a2e9fc",
                "--color-button-hover": "#ededed",
                "--color-border": "#3d424a",
                "--color-commit-did-not-render-fill": "#777d88",
                "--color-commit-did-not-render-fill-text": "#000000",
                "--color-commit-did-not-render-pattern": "#666c77",
                "--color-commit-did-not-render-pattern-text": "#ffffff",
                "--color-commit-gradient-0": "#37afa9",
                "--color-commit-gradient-1": "#63b19e",
                "--color-commit-gradient-2": "#80b393",
                "--color-commit-gradient-3": "#97b488",
                "--color-commit-gradient-4": "#abb67d",
                "--color-commit-gradient-5": "#beb771",
                "--color-commit-gradient-6": "#cfb965",
                "--color-commit-gradient-7": "#dfba57",
                "--color-commit-gradient-8": "#efbb49",
                "--color-commit-gradient-9": "#febc38",
                "--color-commit-gradient-text": "#000000",
                "--color-component-name": "#61dafb",
                "--color-component-name-inverted": "#282828",
                "--color-component-badge-background": "rgba(255, 255, 255, 0.25)",
                "--color-component-badge-background-inverted": "rgba(0, 0, 0, 0.25)",
                "--color-component-badge-count": "#8f949d",
                "--color-component-badge-count-inverted": "rgba(255, 255, 255, 0.7)",
                "--color-console-error-badge-text": "#000000",
                "--color-console-error-background": "#290000",
                "--color-console-error-border": "#5c0000",
                "--color-console-error-icon": "#eb3941",
                "--color-console-error-text": "#fc7f7f",
                "--color-console-warning-badge-text": "#000000",
                "--color-console-warning-background": "#332b00",
                "--color-console-warning-border": "#665500",
                "--color-console-warning-icon": "#f4bd00",
                "--color-console-warning-text": "#f5f2ed",
                "--color-context-background": "rgba(255,255,255,.95)",
                "--color-context-background-hover": "rgba(0, 136, 250, 0.1)",
                "--color-context-background-selected": "#0088fa",
                "--color-context-border": "#eeeeee",
                "--color-context-text": "#000000",
                "--color-context-text-selected": "#ffffff",
                "--color-dim": "#8f949d",
                "--color-dimmer": "#777d88",
                "--color-dimmest": "#4f5766",
                "--color-error-background": "#200",
                "--color-error-border": "#900",
                "--color-error-text": "#f55",
                "--color-expand-collapse-toggle": "#8f949d",
                "--color-link": "#61dafb",
                "--color-modal-background": "rgba(0, 0, 0, 0.75)",
                "--color-bridge-version-npm-background": "rgba(0, 0, 0, 0.25)",
                "--color-bridge-version-npm-text": "#ffffff",
                "--color-bridge-version-number": "yellow",
                "--color-primitive-hook-badge-background": "rgba(0, 0, 0, 0.25)",
                "--color-primitive-hook-badge-text": "rgba(255, 255, 255, 0.7)",
                "--color-record-active": "#fc3a4b",
                "--color-record-hover": "#a2e9fc",
                "--color-record-inactive": "#61dafb",
                "--color-resize-bar": "#282c34",
                "--color-resize-bar-active": "#31363f",
                "--color-resize-bar-border": "#3d424a",
                "--color-resize-bar-dot": "#cfd1d5",
                "--color-timeline-internal-module": "#303542",
                "--color-timeline-internal-module-hover": "#363b4a",
                "--color-timeline-internal-module-text": "#7f8899",
                "--color-timeline-native-event": "#b2b2b2",
                "--color-timeline-native-event-hover": "#949494",
                "--color-timeline-network-primary": "#fcf3dc",
                "--color-timeline-network-primary-hover": "#e3dbc5",
                "--color-timeline-network-secondary": "#efc457",
                "--color-timeline-network-secondary-hover": "#d6af4d",
                "--color-timeline-priority-background": "#1d2129",
                "--color-timeline-priority-border": "#282c34",
                "--color-timeline-user-timing": "#c9cacd",
                "--color-timeline-user-timing-hover": "#93959a",
                "--color-timeline-react-idle": "#3d485b",
                "--color-timeline-react-idle-hover": "#465269",
                "--color-timeline-react-render": "#2683E2",
                "--color-timeline-react-render-hover": "#1a76d4",
                "--color-timeline-react-render-text": "#11365e",
                "--color-timeline-react-commit": "#731fad",
                "--color-timeline-react-commit-hover": "#611b94",
                "--color-timeline-react-commit-text": "#e5c1ff",
                "--color-timeline-react-layout-effects": "#611b94",
                "--color-timeline-react-layout-effects-hover": "#51167a",
                "--color-timeline-react-layout-effects-text": "#e5c1ff",
                "--color-timeline-react-passive-effects": "#611b94",
                "--color-timeline-react-passive-effects-hover": "#51167a",
                "--color-timeline-react-passive-effects-text": "#e5c1ff",
                "--color-timeline-react-schedule": "#2683E2",
                "--color-timeline-react-schedule-hover": "#1a76d4",
                "--color-timeline-react-suspense-rejected": "#f1cc14",
                "--color-timeline-react-suspense-rejected-hover": "#e4c00f",
                "--color-timeline-react-suspense-resolved": "#a6e59f",
                "--color-timeline-react-suspense-resolved-hover": "#89d281",
                "--color-timeline-react-suspense-unresolved": "#c9cacd",
                "--color-timeline-react-suspense-unresolved-hover": "#93959a",
                "--color-timeline-thrown-error": "#fb3655",
                "--color-timeline-thrown-error-hover": "#f82042",
                "--color-timeline-text-color": "#282c34",
                "--color-timeline-text-dim-color": "#555b66",
                "--color-timeline-react-work-border": "#3d424a",
                "--color-search-match": "yellow",
                "--color-search-match-current": "#f7923b",
                "--color-selected-tree-highlight-active": "rgba(23, 143, 185, 0.15)",
                "--color-selected-tree-highlight-inactive": "rgba(255, 255, 255, 0.05)",
                "--color-scroll-caret": "#4f5766",
                "--color-shadow": "rgba(0, 0, 0, 0.5)",
                "--color-tab-selected-border": "#178fb9",
                "--color-text": "#ffffff",
                "--color-text-invalid": "#ff8080",
                "--color-text-selected": "#ffffff",
                "--color-toggle-background-invalid": "#fc3a4b",
                "--color-toggle-background-on": "#178fb9",
                "--color-toggle-background-off": "#777d88",
                "--color-toggle-text": "#ffffff",
                "--color-warning-background": "#ee1638",
                "--color-warning-background-hover": "#da1030",
                "--color-warning-text-color": "#ffffff",
                "--color-warning-text-color-inverted": "#ee1638",
                "--color-scroll-thumb": "#afb3b9",
                "--color-scroll-track": "#313640",
                "--color-tooltip-background": "rgba(255, 255, 255, 0.95)",
                "--color-tooltip-text": "#000000"
              },
              compact: {
                "--font-size-monospace-small": "9px",
                "--font-size-monospace-normal": "11px",
                "--font-size-monospace-large": "15px",
                "--font-size-sans-small": "10px",
                "--font-size-sans-normal": "12px",
                "--font-size-sans-large": "14px",
                "--line-height-data": "18px"
              },
              comfortable: {
                "--font-size-monospace-small": "10px",
                "--font-size-monospace-normal": "13px",
                "--font-size-monospace-large": "17px",
                "--font-size-sans-small": "12px",
                "--font-size-sans-normal": "14px",
                "--font-size-sans-large": "16px",
                "--line-height-data": "22px"
              }
            };
            var COMFORTABLE_LINE_HEIGHT = parseInt(THEME_STYLES.comfortable["--line-height-data"], 10);
            var COMPACT_LINE_HEIGHT = parseInt(THEME_STYLES.compact["--line-height-data"], 10);
            ;
            var REACT_TOTAL_NUM_LANES = 31;
            var SCHEDULING_PROFILER_VERSION = 1;
            var SNAPSHOT_MAX_HEIGHT = 60;
            ;
            function DevToolsConsolePatching_ownKeys(object, enumerableOnly) {
              var keys = Object.keys(object);
              if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                if (enumerableOnly)
                  symbols = symbols.filter(function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                  });
                keys.push.apply(keys, symbols);
              }
              return keys;
            }
            function DevToolsConsolePatching_objectSpread(target) {
              for (var i2 = 1; i2 < arguments.length; i2++) {
                var source = arguments[i2] != null ? arguments[i2] : {};
                if (i2 % 2) {
                  DevToolsConsolePatching_ownKeys(Object(source), true).forEach(function(key2) {
                    DevToolsConsolePatching_defineProperty(target, key2, source[key2]);
                  });
                } else if (Object.getOwnPropertyDescriptors) {
                  Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
                } else {
                  DevToolsConsolePatching_ownKeys(Object(source)).forEach(function(key2) {
                    Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
                  });
                }
              }
              return target;
            }
            function DevToolsConsolePatching_defineProperty(obj, key2, value) {
              if (key2 in obj) {
                Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
              } else {
                obj[key2] = value;
              }
              return obj;
            }
            var disabledDepth = 0;
            var prevLog;
            var prevInfo;
            var prevWarn;
            var prevError;
            var prevGroup;
            var prevGroupCollapsed;
            var prevGroupEnd;
            function disabledLog() {
            }
            disabledLog.__reactDisabledLog = true;
            function disableLogs() {
              if (disabledDepth === 0) {
                prevLog = console.log;
                prevInfo = console.info;
                prevWarn = console.warn;
                prevError = console.error;
                prevGroup = console.group;
                prevGroupCollapsed = console.groupCollapsed;
                prevGroupEnd = console.groupEnd;
                var props = {
                  configurable: true,
                  enumerable: true,
                  value: disabledLog,
                  writable: true
                };
                Object.defineProperties(console, {
                  info: props,
                  log: props,
                  warn: props,
                  error: props,
                  group: props,
                  groupCollapsed: props,
                  groupEnd: props
                });
              }
              disabledDepth++;
            }
            function reenableLogs() {
              disabledDepth--;
              if (disabledDepth === 0) {
                var props = {
                  configurable: true,
                  enumerable: true,
                  writable: true
                };
                Object.defineProperties(console, {
                  log: DevToolsConsolePatching_objectSpread(DevToolsConsolePatching_objectSpread({}, props), {}, {
                    value: prevLog
                  }),
                  info: DevToolsConsolePatching_objectSpread(DevToolsConsolePatching_objectSpread({}, props), {}, {
                    value: prevInfo
                  }),
                  warn: DevToolsConsolePatching_objectSpread(DevToolsConsolePatching_objectSpread({}, props), {}, {
                    value: prevWarn
                  }),
                  error: DevToolsConsolePatching_objectSpread(DevToolsConsolePatching_objectSpread({}, props), {}, {
                    value: prevError
                  }),
                  group: DevToolsConsolePatching_objectSpread(DevToolsConsolePatching_objectSpread({}, props), {}, {
                    value: prevGroup
                  }),
                  groupCollapsed: DevToolsConsolePatching_objectSpread(DevToolsConsolePatching_objectSpread({}, props), {}, {
                    value: prevGroupCollapsed
                  }),
                  groupEnd: DevToolsConsolePatching_objectSpread(DevToolsConsolePatching_objectSpread({}, props), {}, {
                    value: prevGroupEnd
                  })
                });
              }
              if (disabledDepth < 0) {
                console.error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
              }
            }
            ;
            function DevToolsComponentStackFrame_typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                DevToolsComponentStackFrame_typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                DevToolsComponentStackFrame_typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return DevToolsComponentStackFrame_typeof(obj);
            }
            var prefix2;
            function describeBuiltInComponentFrame(name, ownerFn) {
              if (prefix2 === void 0) {
                try {
                  throw Error();
                } catch (x) {
                  var match = x.stack.trim().match(/\n( *(at )?)/);
                  prefix2 = match && match[1] || "";
                }
              }
              return "\n" + prefix2 + name;
            }
            var reentry = false;
            var componentFrameCache;
            if (false) {
              var PossiblyWeakMap;
            }
            function describeNativeComponentFrame(fn, construct, currentDispatcherRef) {
              if (!fn || reentry) {
                return "";
              }
              if (false) {
                var frame;
              }
              var control;
              var previousPrepareStackTrace = Error.prepareStackTrace;
              Error.prepareStackTrace = void 0;
              reentry = true;
              var previousDispatcher = currentDispatcherRef.current;
              currentDispatcherRef.current = null;
              disableLogs();
              try {
                if (construct) {
                  var Fake = function Fake2() {
                    throw Error();
                  };
                  Object.defineProperty(Fake.prototype, "props", {
                    set: function set() {
                      throw Error();
                    }
                  });
                  if ((typeof Reflect === "undefined" ? "undefined" : DevToolsComponentStackFrame_typeof(Reflect)) === "object" && Reflect.construct) {
                    try {
                      Reflect.construct(Fake, []);
                    } catch (x) {
                      control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                  } else {
                    try {
                      Fake.call();
                    } catch (x) {
                      control = x;
                    }
                    fn.call(Fake.prototype);
                  }
                } else {
                  try {
                    throw Error();
                  } catch (x) {
                    control = x;
                  }
                  fn();
                }
              } catch (sample) {
                if (sample && control && typeof sample.stack === "string") {
                  var sampleLines = sample.stack.split("\n");
                  var controlLines = control.stack.split("\n");
                  var s = sampleLines.length - 1;
                  var c = controlLines.length - 1;
                  while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                    c--;
                  }
                  for (; s >= 1 && c >= 0; s--, c--) {
                    if (sampleLines[s] !== controlLines[c]) {
                      if (s !== 1 || c !== 1) {
                        do {
                          s--;
                          c--;
                          if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                            if (false) {
                            }
                            return _frame;
                          }
                        } while (s >= 1 && c >= 0);
                      }
                      break;
                    }
                  }
                }
              } finally {
                reentry = false;
                Error.prepareStackTrace = previousPrepareStackTrace;
                currentDispatcherRef.current = previousDispatcher;
                reenableLogs();
              }
              var name = fn ? fn.displayName || fn.name : "";
              var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
              if (false) {
              }
              return syntheticFrame;
            }
            function describeClassComponentFrame(ctor, ownerFn, currentDispatcherRef) {
              return describeNativeComponentFrame(ctor, true, currentDispatcherRef);
            }
            function describeFunctionComponentFrame(fn, ownerFn, currentDispatcherRef) {
              return describeNativeComponentFrame(fn, false, currentDispatcherRef);
            }
            function shouldConstruct(Component) {
              var prototype = Component.prototype;
              return !!(prototype && prototype.isReactComponent);
            }
            function describeUnknownElementTypeFrameInDEV(type2, ownerFn, currentDispatcherRef) {
              if (true) {
                return "";
              }
              if (type2 == null) {
                return "";
              }
              if (typeof type2 === "function") {
                return describeNativeComponentFrame(type2, shouldConstruct(type2), currentDispatcherRef);
              }
              if (typeof type2 === "string") {
                return describeBuiltInComponentFrame(type2, ownerFn);
              }
              switch (type2) {
                case SUSPENSE_NUMBER:
                case SUSPENSE_SYMBOL_STRING:
                  return describeBuiltInComponentFrame("Suspense", ownerFn);
                case SUSPENSE_LIST_NUMBER:
                case SUSPENSE_LIST_SYMBOL_STRING:
                  return describeBuiltInComponentFrame("SuspenseList", ownerFn);
              }
              if (DevToolsComponentStackFrame_typeof(type2) === "object") {
                switch (type2.$$typeof) {
                  case FORWARD_REF_NUMBER:
                  case FORWARD_REF_SYMBOL_STRING:
                    return describeFunctionComponentFrame(type2.render, ownerFn, currentDispatcherRef);
                  case MEMO_NUMBER:
                  case MEMO_SYMBOL_STRING:
                    return describeUnknownElementTypeFrameInDEV(type2.type, ownerFn, currentDispatcherRef);
                  case LAZY_NUMBER:
                  case LAZY_SYMBOL_STRING: {
                    var lazyComponent = type2;
                    var payload = lazyComponent._payload;
                    var init = lazyComponent._init;
                    try {
                      return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn, currentDispatcherRef);
                    } catch (x) {
                    }
                  }
                }
              }
              return "";
            }
            ;
            function describeFiber(workTagMap, workInProgress, currentDispatcherRef) {
              var HostComponent = workTagMap.HostComponent, LazyComponent = workTagMap.LazyComponent, SuspenseComponent = workTagMap.SuspenseComponent, SuspenseListComponent = workTagMap.SuspenseListComponent, FunctionComponent = workTagMap.FunctionComponent, IndeterminateComponent = workTagMap.IndeterminateComponent, SimpleMemoComponent = workTagMap.SimpleMemoComponent, ForwardRef = workTagMap.ForwardRef, ClassComponent = workTagMap.ClassComponent;
              var owner = false ? 0 : null;
              switch (workInProgress.tag) {
                case HostComponent:
                  return describeBuiltInComponentFrame(workInProgress.type, owner);
                case LazyComponent:
                  return describeBuiltInComponentFrame("Lazy", owner);
                case SuspenseComponent:
                  return describeBuiltInComponentFrame("Suspense", owner);
                case SuspenseListComponent:
                  return describeBuiltInComponentFrame("SuspenseList", owner);
                case FunctionComponent:
                case IndeterminateComponent:
                case SimpleMemoComponent:
                  return describeFunctionComponentFrame(workInProgress.type, owner, currentDispatcherRef);
                case ForwardRef:
                  return describeFunctionComponentFrame(workInProgress.type.render, owner, currentDispatcherRef);
                case ClassComponent:
                  return describeClassComponentFrame(workInProgress.type, owner, currentDispatcherRef);
                default:
                  return "";
              }
            }
            function getStackByFiberInDevAndProd(workTagMap, workInProgress, currentDispatcherRef) {
              try {
                var info = "";
                var node = workInProgress;
                do {
                  info += describeFiber(workTagMap, node, currentDispatcherRef);
                  node = node.return;
                } while (node);
                return info;
              } catch (x) {
                return "\nError generating stack: " + x.message + "\n" + x.stack;
              }
            }
            ;
            function profilingHooks_slicedToArray(arr, i2) {
              return profilingHooks_arrayWithHoles(arr) || profilingHooks_iterableToArrayLimit(arr, i2) || profilingHooks_unsupportedIterableToArray(arr, i2) || profilingHooks_nonIterableRest();
            }
            function profilingHooks_nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function profilingHooks_unsupportedIterableToArray(o, minLen) {
              if (!o)
                return;
              if (typeof o === "string")
                return profilingHooks_arrayLikeToArray(o, minLen);
              var n = Object.prototype.toString.call(o).slice(8, -1);
              if (n === "Object" && o.constructor)
                n = o.constructor.name;
              if (n === "Map" || n === "Set")
                return Array.from(o);
              if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                return profilingHooks_arrayLikeToArray(o, minLen);
            }
            function profilingHooks_arrayLikeToArray(arr, len) {
              if (len == null || len > arr.length)
                len = arr.length;
              for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
                arr2[i2] = arr[i2];
              }
              return arr2;
            }
            function profilingHooks_iterableToArrayLimit(arr, i2) {
              if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
                return;
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err2) {
                _d = true;
                _e = err2;
              } finally {
                try {
                  if (!_n && _i["return"] != null)
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            function profilingHooks_arrayWithHoles(arr) {
              if (Array.isArray(arr))
                return arr;
            }
            function profilingHooks_typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                profilingHooks_typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                profilingHooks_typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return profilingHooks_typeof(obj);
            }
            var TIME_OFFSET = 10;
            var performanceTarget = null;
            var supportsUserTiming = typeof performance !== "undefined" && typeof performance.mark === "function" && typeof performance.clearMarks === "function";
            var supportsUserTimingV3 = false;
            if (supportsUserTiming) {
              var CHECK_V3_MARK = "__v3";
              var markOptions = {};
              Object.defineProperty(markOptions, "startTime", {
                get: function get() {
                  supportsUserTimingV3 = true;
                  return 0;
                },
                set: function set() {
                }
              });
              try {
                performance.mark(CHECK_V3_MARK, markOptions);
              } catch (error) {
              } finally {
                performance.clearMarks(CHECK_V3_MARK);
              }
            }
            if (supportsUserTimingV3) {
              performanceTarget = performance;
            }
            var profilingHooks_getCurrentTime = (typeof performance === "undefined" ? "undefined" : profilingHooks_typeof(performance)) === "object" && typeof performance.now === "function" ? function() {
              return performance.now();
            } : function() {
              return Date.now();
            };
            function setPerformanceMock_ONLY_FOR_TESTING(performanceMock) {
              performanceTarget = performanceMock;
              supportsUserTiming = performanceMock !== null;
              supportsUserTimingV3 = performanceMock !== null;
            }
            function createProfilingHooks(_ref) {
              var getDisplayNameForFiber = _ref.getDisplayNameForFiber, getIsProfiling = _ref.getIsProfiling, getLaneLabelMap = _ref.getLaneLabelMap, workTagMap = _ref.workTagMap, currentDispatcherRef = _ref.currentDispatcherRef, reactVersion = _ref.reactVersion;
              var currentBatchUID = 0;
              var currentReactComponentMeasure = null;
              var currentReactMeasuresStack = [];
              var currentTimelineData = null;
              var currentFiberStacks = /* @__PURE__ */ new Map();
              var isProfiling = false;
              var nextRenderShouldStartNewBatch = false;
              function getRelativeTime() {
                var currentTime = profilingHooks_getCurrentTime();
                if (currentTimelineData) {
                  if (currentTimelineData.startTime === 0) {
                    currentTimelineData.startTime = currentTime - TIME_OFFSET;
                  }
                  return currentTime - currentTimelineData.startTime;
                }
                return 0;
              }
              function getInternalModuleRanges() {
                if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.getInternalModuleRanges === "function") {
                  var ranges = __REACT_DEVTOOLS_GLOBAL_HOOK__.getInternalModuleRanges();
                  if (shared_isArray(ranges)) {
                    return ranges;
                  }
                }
                return null;
              }
              function getTimelineData() {
                return currentTimelineData;
              }
              function laneToLanesArray(lanes) {
                var lanesArray = [];
                var lane = 1;
                for (var index = 0; index < REACT_TOTAL_NUM_LANES; index++) {
                  if (lane & lanes) {
                    lanesArray.push(lane);
                  }
                  lane *= 2;
                }
                return lanesArray;
              }
              var laneToLabelMap = typeof getLaneLabelMap === "function" ? getLaneLabelMap() : null;
              function markMetadata() {
                markAndClear("--react-version-".concat(reactVersion));
                markAndClear("--profiler-version-".concat(SCHEDULING_PROFILER_VERSION));
                var ranges = getInternalModuleRanges();
                if (ranges) {
                  for (var i2 = 0; i2 < ranges.length; i2++) {
                    var range = ranges[i2];
                    if (shared_isArray(range) && range.length === 2) {
                      var _ranges$i = profilingHooks_slicedToArray(ranges[i2], 2), startStackFrame = _ranges$i[0], stopStackFrame = _ranges$i[1];
                      markAndClear("--react-internal-module-start-".concat(startStackFrame));
                      markAndClear("--react-internal-module-stop-".concat(stopStackFrame));
                    }
                  }
                }
                if (laneToLabelMap != null) {
                  var labels = Array.from(laneToLabelMap.values()).join(",");
                  markAndClear("--react-lane-labels-".concat(labels));
                }
              }
              function markAndClear(markName) {
                performanceTarget.mark(markName);
                performanceTarget.clearMarks(markName);
              }
              function recordReactMeasureStarted(type2, lanes) {
                var depth = 0;
                if (currentReactMeasuresStack.length > 0) {
                  var top = currentReactMeasuresStack[currentReactMeasuresStack.length - 1];
                  depth = top.type === "render-idle" ? top.depth : top.depth + 1;
                }
                var lanesArray = laneToLanesArray(lanes);
                var reactMeasure = {
                  type: type2,
                  batchUID: currentBatchUID,
                  depth,
                  lanes: lanesArray,
                  timestamp: getRelativeTime(),
                  duration: 0
                };
                currentReactMeasuresStack.push(reactMeasure);
                if (currentTimelineData) {
                  var _currentTimelineData = currentTimelineData, batchUIDToMeasuresMap = _currentTimelineData.batchUIDToMeasuresMap, laneToReactMeasureMap = _currentTimelineData.laneToReactMeasureMap;
                  var reactMeasures = batchUIDToMeasuresMap.get(currentBatchUID);
                  if (reactMeasures != null) {
                    reactMeasures.push(reactMeasure);
                  } else {
                    batchUIDToMeasuresMap.set(currentBatchUID, [reactMeasure]);
                  }
                  lanesArray.forEach(function(lane) {
                    reactMeasures = laneToReactMeasureMap.get(lane);
                    if (reactMeasures) {
                      reactMeasures.push(reactMeasure);
                    }
                  });
                }
              }
              function recordReactMeasureCompleted(type2) {
                var currentTime = getRelativeTime();
                if (currentReactMeasuresStack.length === 0) {
                  console.error('Unexpected type "%s" completed at %sms while currentReactMeasuresStack is empty.', type2, currentTime);
                  return;
                }
                var top = currentReactMeasuresStack.pop();
                if (top.type !== type2) {
                  console.error('Unexpected type "%s" completed at %sms before "%s" completed.', type2, currentTime, top.type);
                }
                top.duration = currentTime - top.timestamp;
                if (currentTimelineData) {
                  currentTimelineData.duration = getRelativeTime() + TIME_OFFSET;
                }
              }
              function markCommitStarted(lanes) {
                if (isProfiling) {
                  recordReactMeasureStarted("commit", lanes);
                  nextRenderShouldStartNewBatch = true;
                }
                if (supportsUserTimingV3) {
                  markAndClear("--commit-start-".concat(lanes));
                  markMetadata();
                }
              }
              function markCommitStopped() {
                if (isProfiling) {
                  recordReactMeasureCompleted("commit");
                  recordReactMeasureCompleted("render-idle");
                }
                if (supportsUserTimingV3) {
                  markAndClear("--commit-stop");
                }
              }
              function markComponentRenderStarted(fiber) {
                if (isProfiling || supportsUserTimingV3) {
                  var componentName = getDisplayNameForFiber(fiber) || "Unknown";
                  if (isProfiling) {
                    if (isProfiling) {
                      currentReactComponentMeasure = {
                        componentName,
                        duration: 0,
                        timestamp: getRelativeTime(),
                        type: "render",
                        warning: null
                      };
                    }
                  }
                  if (supportsUserTimingV3) {
                    markAndClear("--component-render-start-".concat(componentName));
                  }
                }
              }
              function markComponentRenderStopped() {
                if (isProfiling) {
                  if (currentReactComponentMeasure) {
                    if (currentTimelineData) {
                      currentTimelineData.componentMeasures.push(currentReactComponentMeasure);
                    }
                    currentReactComponentMeasure.duration = getRelativeTime() - currentReactComponentMeasure.timestamp;
                    currentReactComponentMeasure = null;
                  }
                }
                if (supportsUserTimingV3) {
                  markAndClear("--component-render-stop");
                }
              }
              function markComponentLayoutEffectMountStarted(fiber) {
                if (isProfiling || supportsUserTimingV3) {
                  var componentName = getDisplayNameForFiber(fiber) || "Unknown";
                  if (isProfiling) {
                    if (isProfiling) {
                      currentReactComponentMeasure = {
                        componentName,
                        duration: 0,
                        timestamp: getRelativeTime(),
                        type: "layout-effect-mount",
                        warning: null
                      };
                    }
                  }
                  if (supportsUserTimingV3) {
                    markAndClear("--component-layout-effect-mount-start-".concat(componentName));
                  }
                }
              }
              function markComponentLayoutEffectMountStopped() {
                if (isProfiling) {
                  if (currentReactComponentMeasure) {
                    if (currentTimelineData) {
                      currentTimelineData.componentMeasures.push(currentReactComponentMeasure);
                    }
                    currentReactComponentMeasure.duration = getRelativeTime() - currentReactComponentMeasure.timestamp;
                    currentReactComponentMeasure = null;
                  }
                }
                if (supportsUserTimingV3) {
                  markAndClear("--component-layout-effect-mount-stop");
                }
              }
              function markComponentLayoutEffectUnmountStarted(fiber) {
                if (isProfiling || supportsUserTimingV3) {
                  var componentName = getDisplayNameForFiber(fiber) || "Unknown";
                  if (isProfiling) {
                    if (isProfiling) {
                      currentReactComponentMeasure = {
                        componentName,
                        duration: 0,
                        timestamp: getRelativeTime(),
                        type: "layout-effect-unmount",
                        warning: null
                      };
                    }
                  }
                  if (supportsUserTimingV3) {
                    markAndClear("--component-layout-effect-unmount-start-".concat(componentName));
                  }
                }
              }
              function markComponentLayoutEffectUnmountStopped() {
                if (isProfiling) {
                  if (currentReactComponentMeasure) {
                    if (currentTimelineData) {
                      currentTimelineData.componentMeasures.push(currentReactComponentMeasure);
                    }
                    currentReactComponentMeasure.duration = getRelativeTime() - currentReactComponentMeasure.timestamp;
                    currentReactComponentMeasure = null;
                  }
                }
                if (supportsUserTimingV3) {
                  markAndClear("--component-layout-effect-unmount-stop");
                }
              }
              function markComponentPassiveEffectMountStarted(fiber) {
                if (isProfiling || supportsUserTimingV3) {
                  var componentName = getDisplayNameForFiber(fiber) || "Unknown";
                  if (isProfiling) {
                    if (isProfiling) {
                      currentReactComponentMeasure = {
                        componentName,
                        duration: 0,
                        timestamp: getRelativeTime(),
                        type: "passive-effect-mount",
                        warning: null
                      };
                    }
                  }
                  if (supportsUserTimingV3) {
                    markAndClear("--component-passive-effect-mount-start-".concat(componentName));
                  }
                }
              }
              function markComponentPassiveEffectMountStopped() {
                if (isProfiling) {
                  if (currentReactComponentMeasure) {
                    if (currentTimelineData) {
                      currentTimelineData.componentMeasures.push(currentReactComponentMeasure);
                    }
                    currentReactComponentMeasure.duration = getRelativeTime() - currentReactComponentMeasure.timestamp;
                    currentReactComponentMeasure = null;
                  }
                }
                if (supportsUserTimingV3) {
                  markAndClear("--component-passive-effect-mount-stop");
                }
              }
              function markComponentPassiveEffectUnmountStarted(fiber) {
                if (isProfiling || supportsUserTimingV3) {
                  var componentName = getDisplayNameForFiber(fiber) || "Unknown";
                  if (isProfiling) {
                    if (isProfiling) {
                      currentReactComponentMeasure = {
                        componentName,
                        duration: 0,
                        timestamp: getRelativeTime(),
                        type: "passive-effect-unmount",
                        warning: null
                      };
                    }
                  }
                  if (supportsUserTimingV3) {
                    markAndClear("--component-passive-effect-unmount-start-".concat(componentName));
                  }
                }
              }
              function markComponentPassiveEffectUnmountStopped() {
                if (isProfiling) {
                  if (currentReactComponentMeasure) {
                    if (currentTimelineData) {
                      currentTimelineData.componentMeasures.push(currentReactComponentMeasure);
                    }
                    currentReactComponentMeasure.duration = getRelativeTime() - currentReactComponentMeasure.timestamp;
                    currentReactComponentMeasure = null;
                  }
                }
                if (supportsUserTimingV3) {
                  markAndClear("--component-passive-effect-unmount-stop");
                }
              }
              function markComponentErrored(fiber, thrownValue, lanes) {
                if (isProfiling || supportsUserTimingV3) {
                  var componentName = getDisplayNameForFiber(fiber) || "Unknown";
                  var phase = fiber.alternate === null ? "mount" : "update";
                  var message = "";
                  if (thrownValue !== null && profilingHooks_typeof(thrownValue) === "object" && typeof thrownValue.message === "string") {
                    message = thrownValue.message;
                  } else if (typeof thrownValue === "string") {
                    message = thrownValue;
                  }
                  if (isProfiling) {
                    if (currentTimelineData) {
                      currentTimelineData.thrownErrors.push({
                        componentName,
                        message,
                        phase,
                        timestamp: getRelativeTime(),
                        type: "thrown-error"
                      });
                    }
                  }
                  if (supportsUserTimingV3) {
                    markAndClear("--error-".concat(componentName, "-").concat(phase, "-").concat(message));
                  }
                }
              }
              var PossiblyWeakMap2 = typeof WeakMap === "function" ? WeakMap : Map;
              var wakeableIDs = new PossiblyWeakMap2();
              var wakeableID = 0;
              function getWakeableID(wakeable) {
                if (!wakeableIDs.has(wakeable)) {
                  wakeableIDs.set(wakeable, wakeableID++);
                }
                return wakeableIDs.get(wakeable);
              }
              function markComponentSuspended(fiber, wakeable, lanes) {
                if (isProfiling || supportsUserTimingV3) {
                  var eventType = wakeableIDs.has(wakeable) ? "resuspend" : "suspend";
                  var id = getWakeableID(wakeable);
                  var componentName = getDisplayNameForFiber(fiber) || "Unknown";
                  var phase = fiber.alternate === null ? "mount" : "update";
                  var displayName = wakeable.displayName || "";
                  var suspenseEvent = null;
                  if (isProfiling) {
                    suspenseEvent = {
                      componentName,
                      depth: 0,
                      duration: 0,
                      id: "".concat(id),
                      phase,
                      promiseName: displayName,
                      resolution: "unresolved",
                      timestamp: getRelativeTime(),
                      type: "suspense",
                      warning: null
                    };
                    if (currentTimelineData) {
                      currentTimelineData.suspenseEvents.push(suspenseEvent);
                    }
                  }
                  if (supportsUserTimingV3) {
                    markAndClear("--suspense-".concat(eventType, "-").concat(id, "-").concat(componentName, "-").concat(phase, "-").concat(lanes, "-").concat(displayName));
                  }
                  wakeable.then(function() {
                    if (suspenseEvent) {
                      suspenseEvent.duration = getRelativeTime() - suspenseEvent.timestamp;
                      suspenseEvent.resolution = "resolved";
                    }
                    if (supportsUserTimingV3) {
                      markAndClear("--suspense-resolved-".concat(id, "-").concat(componentName));
                    }
                  }, function() {
                    if (suspenseEvent) {
                      suspenseEvent.duration = getRelativeTime() - suspenseEvent.timestamp;
                      suspenseEvent.resolution = "rejected";
                    }
                    if (supportsUserTimingV3) {
                      markAndClear("--suspense-rejected-".concat(id, "-").concat(componentName));
                    }
                  });
                }
              }
              function markLayoutEffectsStarted(lanes) {
                if (isProfiling) {
                  recordReactMeasureStarted("layout-effects", lanes);
                }
                if (supportsUserTimingV3) {
                  markAndClear("--layout-effects-start-".concat(lanes));
                }
              }
              function markLayoutEffectsStopped() {
                if (isProfiling) {
                  recordReactMeasureCompleted("layout-effects");
                }
                if (supportsUserTimingV3) {
                  markAndClear("--layout-effects-stop");
                }
              }
              function markPassiveEffectsStarted(lanes) {
                if (isProfiling) {
                  recordReactMeasureStarted("passive-effects", lanes);
                }
                if (supportsUserTimingV3) {
                  markAndClear("--passive-effects-start-".concat(lanes));
                }
              }
              function markPassiveEffectsStopped() {
                if (isProfiling) {
                  recordReactMeasureCompleted("passive-effects");
                }
                if (supportsUserTimingV3) {
                  markAndClear("--passive-effects-stop");
                }
              }
              function markRenderStarted(lanes) {
                if (isProfiling) {
                  if (nextRenderShouldStartNewBatch) {
                    nextRenderShouldStartNewBatch = false;
                    currentBatchUID++;
                  }
                  if (currentReactMeasuresStack.length === 0 || currentReactMeasuresStack[currentReactMeasuresStack.length - 1].type !== "render-idle") {
                    recordReactMeasureStarted("render-idle", lanes);
                  }
                  recordReactMeasureStarted("render", lanes);
                }
                if (supportsUserTimingV3) {
                  markAndClear("--render-start-".concat(lanes));
                }
              }
              function markRenderYielded() {
                if (isProfiling) {
                  recordReactMeasureCompleted("render");
                }
                if (supportsUserTimingV3) {
                  markAndClear("--render-yield");
                }
              }
              function markRenderStopped() {
                if (isProfiling) {
                  recordReactMeasureCompleted("render");
                }
                if (supportsUserTimingV3) {
                  markAndClear("--render-stop");
                }
              }
              function markRenderScheduled(lane) {
                if (isProfiling) {
                  if (currentTimelineData) {
                    currentTimelineData.schedulingEvents.push({
                      lanes: laneToLanesArray(lane),
                      timestamp: getRelativeTime(),
                      type: "schedule-render",
                      warning: null
                    });
                  }
                }
                if (supportsUserTimingV3) {
                  markAndClear("--schedule-render-".concat(lane));
                }
              }
              function markForceUpdateScheduled(fiber, lane) {
                if (isProfiling || supportsUserTimingV3) {
                  var componentName = getDisplayNameForFiber(fiber) || "Unknown";
                  if (isProfiling) {
                    if (currentTimelineData) {
                      currentTimelineData.schedulingEvents.push({
                        componentName,
                        lanes: laneToLanesArray(lane),
                        timestamp: getRelativeTime(),
                        type: "schedule-force-update",
                        warning: null
                      });
                    }
                  }
                  if (supportsUserTimingV3) {
                    markAndClear("--schedule-forced-update-".concat(lane, "-").concat(componentName));
                  }
                }
              }
              function getParentFibers(fiber) {
                var parents = [];
                var parent = fiber;
                while (parent !== null) {
                  parents.push(parent);
                  parent = parent.return;
                }
                return parents;
              }
              function markStateUpdateScheduled(fiber, lane) {
                if (isProfiling || supportsUserTimingV3) {
                  var componentName = getDisplayNameForFiber(fiber) || "Unknown";
                  if (isProfiling) {
                    if (currentTimelineData) {
                      var event = {
                        componentName,
                        lanes: laneToLanesArray(lane),
                        timestamp: getRelativeTime(),
                        type: "schedule-state-update",
                        warning: null
                      };
                      currentFiberStacks.set(event, getParentFibers(fiber));
                      currentTimelineData.schedulingEvents.push(event);
                    }
                  }
                  if (supportsUserTimingV3) {
                    markAndClear("--schedule-state-update-".concat(lane, "-").concat(componentName));
                  }
                }
              }
              function toggleProfilingStatus(value) {
                if (isProfiling !== value) {
                  isProfiling = value;
                  if (isProfiling) {
                    var internalModuleSourceToRanges = /* @__PURE__ */ new Map();
                    if (supportsUserTimingV3) {
                      var ranges = getInternalModuleRanges();
                      if (ranges) {
                        for (var i2 = 0; i2 < ranges.length; i2++) {
                          var range = ranges[i2];
                          if (shared_isArray(range) && range.length === 2) {
                            var _ranges$i2 = profilingHooks_slicedToArray(ranges[i2], 2), startStackFrame = _ranges$i2[0], stopStackFrame = _ranges$i2[1];
                            markAndClear("--react-internal-module-start-".concat(startStackFrame));
                            markAndClear("--react-internal-module-stop-".concat(stopStackFrame));
                          }
                        }
                      }
                    }
                    var laneToReactMeasureMap = /* @__PURE__ */ new Map();
                    var lane = 1;
                    for (var index = 0; index < REACT_TOTAL_NUM_LANES; index++) {
                      laneToReactMeasureMap.set(lane, []);
                      lane *= 2;
                    }
                    currentBatchUID = 0;
                    currentReactComponentMeasure = null;
                    currentReactMeasuresStack = [];
                    currentFiberStacks = /* @__PURE__ */ new Map();
                    currentTimelineData = {
                      internalModuleSourceToRanges,
                      laneToLabelMap: laneToLabelMap || /* @__PURE__ */ new Map(),
                      reactVersion,
                      componentMeasures: [],
                      schedulingEvents: [],
                      suspenseEvents: [],
                      thrownErrors: [],
                      batchUIDToMeasuresMap: /* @__PURE__ */ new Map(),
                      duration: 0,
                      laneToReactMeasureMap,
                      startTime: 0,
                      flamechart: [],
                      nativeEvents: [],
                      networkMeasures: [],
                      otherUserTimingMarks: [],
                      snapshots: [],
                      snapshotHeight: 0
                    };
                    nextRenderShouldStartNewBatch = true;
                  } else {
                    if (currentTimelineData !== null) {
                      currentTimelineData.schedulingEvents.forEach(function(event) {
                        if (event.type === "schedule-state-update") {
                          var fiberStack = currentFiberStacks.get(event);
                          if (fiberStack && currentDispatcherRef != null) {
                            event.componentStack = fiberStack.reduce(function(trace, fiber) {
                              return trace + describeFiber(workTagMap, fiber, currentDispatcherRef);
                            }, "");
                          }
                        }
                      });
                    }
                    currentFiberStacks.clear();
                  }
                }
              }
              return {
                getTimelineData,
                profilingHooks: {
                  markCommitStarted,
                  markCommitStopped,
                  markComponentRenderStarted,
                  markComponentRenderStopped,
                  markComponentPassiveEffectMountStarted,
                  markComponentPassiveEffectMountStopped,
                  markComponentPassiveEffectUnmountStarted,
                  markComponentPassiveEffectUnmountStopped,
                  markComponentLayoutEffectMountStarted,
                  markComponentLayoutEffectMountStopped,
                  markComponentLayoutEffectUnmountStarted,
                  markComponentLayoutEffectUnmountStopped,
                  markComponentErrored,
                  markComponentSuspended,
                  markLayoutEffectsStarted,
                  markLayoutEffectsStopped,
                  markPassiveEffectsStarted,
                  markPassiveEffectsStopped,
                  markRenderStarted,
                  markRenderYielded,
                  markRenderStopped,
                  markRenderScheduled,
                  markForceUpdateScheduled,
                  markStateUpdateScheduled
                },
                toggleProfilingStatus
              };
            }
            ;
            function _objectWithoutProperties(source, excluded) {
              if (source == null)
                return {};
              var target = _objectWithoutPropertiesLoose(source, excluded);
              var key2, i2;
              if (Object.getOwnPropertySymbols) {
                var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
                for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
                  key2 = sourceSymbolKeys[i2];
                  if (excluded.indexOf(key2) >= 0)
                    continue;
                  if (!Object.prototype.propertyIsEnumerable.call(source, key2))
                    continue;
                  target[key2] = source[key2];
                }
              }
              return target;
            }
            function _objectWithoutPropertiesLoose(source, excluded) {
              if (source == null)
                return {};
              var target = {};
              var sourceKeys = Object.keys(source);
              var key2, i2;
              for (i2 = 0; i2 < sourceKeys.length; i2++) {
                key2 = sourceKeys[i2];
                if (excluded.indexOf(key2) >= 0)
                  continue;
                target[key2] = source[key2];
              }
              return target;
            }
            function renderer_ownKeys(object, enumerableOnly) {
              var keys = Object.keys(object);
              if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                if (enumerableOnly)
                  symbols = symbols.filter(function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                  });
                keys.push.apply(keys, symbols);
              }
              return keys;
            }
            function renderer_objectSpread(target) {
              for (var i2 = 1; i2 < arguments.length; i2++) {
                var source = arguments[i2] != null ? arguments[i2] : {};
                if (i2 % 2) {
                  renderer_ownKeys(Object(source), true).forEach(function(key2) {
                    renderer_defineProperty(target, key2, source[key2]);
                  });
                } else if (Object.getOwnPropertyDescriptors) {
                  Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
                } else {
                  renderer_ownKeys(Object(source)).forEach(function(key2) {
                    Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
                  });
                }
              }
              return target;
            }
            function renderer_defineProperty(obj, key2, value) {
              if (key2 in obj) {
                Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
              } else {
                obj[key2] = value;
              }
              return obj;
            }
            function renderer_slicedToArray(arr, i2) {
              return renderer_arrayWithHoles(arr) || renderer_iterableToArrayLimit(arr, i2) || renderer_unsupportedIterableToArray(arr, i2) || renderer_nonIterableRest();
            }
            function renderer_nonIterableRest() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function renderer_iterableToArrayLimit(arr, i2) {
              if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
                return;
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err2) {
                _d = true;
                _e = err2;
              } finally {
                try {
                  if (!_n && _i["return"] != null)
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            function renderer_arrayWithHoles(arr) {
              if (Array.isArray(arr))
                return arr;
            }
            function renderer_toConsumableArray(arr) {
              return renderer_arrayWithoutHoles(arr) || renderer_iterableToArray(arr) || renderer_unsupportedIterableToArray(arr) || renderer_nonIterableSpread();
            }
            function renderer_nonIterableSpread() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function renderer_iterableToArray(iter) {
              if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
                return Array.from(iter);
            }
            function renderer_arrayWithoutHoles(arr) {
              if (Array.isArray(arr))
                return renderer_arrayLikeToArray(arr);
            }
            function _createForOfIteratorHelper(o, allowArrayLike) {
              var it;
              if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
                if (Array.isArray(o) || (it = renderer_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
                  if (it)
                    o = it;
                  var i2 = 0;
                  var F = function F2() {
                  };
                  return { s: F, n: function n() {
                    if (i2 >= o.length)
                      return { done: true };
                    return { done: false, value: o[i2++] };
                  }, e: function e(_e2) {
                    throw _e2;
                  }, f: F };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }
              var normalCompletion = true, didErr = false, err2;
              return { s: function s() {
                it = o[Symbol.iterator]();
              }, n: function n() {
                var step = it.next();
                normalCompletion = step.done;
                return step;
              }, e: function e(_e3) {
                didErr = true;
                err2 = _e3;
              }, f: function f() {
                try {
                  if (!normalCompletion && it.return != null)
                    it.return();
                } finally {
                  if (didErr)
                    throw err2;
                }
              } };
            }
            function renderer_unsupportedIterableToArray(o, minLen) {
              if (!o)
                return;
              if (typeof o === "string")
                return renderer_arrayLikeToArray(o, minLen);
              var n = Object.prototype.toString.call(o).slice(8, -1);
              if (n === "Object" && o.constructor)
                n = o.constructor.name;
              if (n === "Map" || n === "Set")
                return Array.from(o);
              if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                return renderer_arrayLikeToArray(o, minLen);
            }
            function renderer_arrayLikeToArray(arr, len) {
              if (len == null || len > arr.length)
                len = arr.length;
              for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
                arr2[i2] = arr[i2];
              }
              return arr2;
            }
            function renderer_typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                renderer_typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                renderer_typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return renderer_typeof(obj);
            }
            function getFiberFlags(fiber) {
              return fiber.flags !== void 0 ? fiber.flags : fiber.effectTag;
            }
            var renderer_getCurrentTime = (typeof performance === "undefined" ? "undefined" : renderer_typeof(performance)) === "object" && typeof performance.now === "function" ? function() {
              return performance.now();
            } : function() {
              return Date.now();
            };
            function getInternalReactConstants(version) {
              var ReactPriorityLevels = {
                ImmediatePriority: 99,
                UserBlockingPriority: 98,
                NormalPriority: 97,
                LowPriority: 96,
                IdlePriority: 95,
                NoPriority: 90
              };
              if (gt(version, "17.0.2")) {
                ReactPriorityLevels = {
                  ImmediatePriority: 1,
                  UserBlockingPriority: 2,
                  NormalPriority: 3,
                  LowPriority: 4,
                  IdlePriority: 5,
                  NoPriority: 0
                };
              }
              var StrictModeBits = 0;
              if (gte(version, "18.0.0-alpha")) {
                StrictModeBits = 24;
              } else if (gte(version, "16.9.0")) {
                StrictModeBits = 1;
              } else if (gte(version, "16.3.0")) {
                StrictModeBits = 2;
              }
              var ReactTypeOfWork = null;
              if (gt(version, "17.0.1")) {
                ReactTypeOfWork = {
                  CacheComponent: 24,
                  ClassComponent: 1,
                  ContextConsumer: 9,
                  ContextProvider: 10,
                  CoroutineComponent: -1,
                  CoroutineHandlerPhase: -1,
                  DehydratedSuspenseComponent: 18,
                  ForwardRef: 11,
                  Fragment: 7,
                  FunctionComponent: 0,
                  HostComponent: 5,
                  HostPortal: 4,
                  HostRoot: 3,
                  HostHoistable: 26,
                  HostSingleton: 27,
                  HostText: 6,
                  IncompleteClassComponent: 17,
                  IndeterminateComponent: 2,
                  LazyComponent: 16,
                  LegacyHiddenComponent: 23,
                  MemoComponent: 14,
                  Mode: 8,
                  OffscreenComponent: 22,
                  Profiler: 12,
                  ScopeComponent: 21,
                  SimpleMemoComponent: 15,
                  SuspenseComponent: 13,
                  SuspenseListComponent: 19,
                  TracingMarkerComponent: 25,
                  YieldComponent: -1
                };
              } else if (gte(version, "17.0.0-alpha")) {
                ReactTypeOfWork = {
                  CacheComponent: -1,
                  ClassComponent: 1,
                  ContextConsumer: 9,
                  ContextProvider: 10,
                  CoroutineComponent: -1,
                  CoroutineHandlerPhase: -1,
                  DehydratedSuspenseComponent: 18,
                  ForwardRef: 11,
                  Fragment: 7,
                  FunctionComponent: 0,
                  HostComponent: 5,
                  HostPortal: 4,
                  HostRoot: 3,
                  HostHoistable: -1,
                  HostSingleton: -1,
                  HostText: 6,
                  IncompleteClassComponent: 17,
                  IndeterminateComponent: 2,
                  LazyComponent: 16,
                  LegacyHiddenComponent: 24,
                  MemoComponent: 14,
                  Mode: 8,
                  OffscreenComponent: 23,
                  Profiler: 12,
                  ScopeComponent: 21,
                  SimpleMemoComponent: 15,
                  SuspenseComponent: 13,
                  SuspenseListComponent: 19,
                  TracingMarkerComponent: -1,
                  YieldComponent: -1
                };
              } else if (gte(version, "16.6.0-beta.0")) {
                ReactTypeOfWork = {
                  CacheComponent: -1,
                  ClassComponent: 1,
                  ContextConsumer: 9,
                  ContextProvider: 10,
                  CoroutineComponent: -1,
                  CoroutineHandlerPhase: -1,
                  DehydratedSuspenseComponent: 18,
                  ForwardRef: 11,
                  Fragment: 7,
                  FunctionComponent: 0,
                  HostComponent: 5,
                  HostPortal: 4,
                  HostRoot: 3,
                  HostHoistable: -1,
                  HostSingleton: -1,
                  HostText: 6,
                  IncompleteClassComponent: 17,
                  IndeterminateComponent: 2,
                  LazyComponent: 16,
                  LegacyHiddenComponent: -1,
                  MemoComponent: 14,
                  Mode: 8,
                  OffscreenComponent: -1,
                  Profiler: 12,
                  ScopeComponent: -1,
                  SimpleMemoComponent: 15,
                  SuspenseComponent: 13,
                  SuspenseListComponent: 19,
                  TracingMarkerComponent: -1,
                  YieldComponent: -1
                };
              } else if (gte(version, "16.4.3-alpha")) {
                ReactTypeOfWork = {
                  CacheComponent: -1,
                  ClassComponent: 2,
                  ContextConsumer: 11,
                  ContextProvider: 12,
                  CoroutineComponent: -1,
                  CoroutineHandlerPhase: -1,
                  DehydratedSuspenseComponent: -1,
                  ForwardRef: 13,
                  Fragment: 9,
                  FunctionComponent: 0,
                  HostComponent: 7,
                  HostPortal: 6,
                  HostRoot: 5,
                  HostHoistable: -1,
                  HostSingleton: -1,
                  HostText: 8,
                  IncompleteClassComponent: -1,
                  IndeterminateComponent: 4,
                  LazyComponent: -1,
                  LegacyHiddenComponent: -1,
                  MemoComponent: -1,
                  Mode: 10,
                  OffscreenComponent: -1,
                  Profiler: 15,
                  ScopeComponent: -1,
                  SimpleMemoComponent: -1,
                  SuspenseComponent: 16,
                  SuspenseListComponent: -1,
                  TracingMarkerComponent: -1,
                  YieldComponent: -1
                };
              } else {
                ReactTypeOfWork = {
                  CacheComponent: -1,
                  ClassComponent: 2,
                  ContextConsumer: 12,
                  ContextProvider: 13,
                  CoroutineComponent: 7,
                  CoroutineHandlerPhase: 8,
                  DehydratedSuspenseComponent: -1,
                  ForwardRef: 14,
                  Fragment: 10,
                  FunctionComponent: 1,
                  HostComponent: 5,
                  HostPortal: 4,
                  HostRoot: 3,
                  HostHoistable: -1,
                  HostSingleton: -1,
                  HostText: 6,
                  IncompleteClassComponent: -1,
                  IndeterminateComponent: 0,
                  LazyComponent: -1,
                  LegacyHiddenComponent: -1,
                  MemoComponent: -1,
                  Mode: 11,
                  OffscreenComponent: -1,
                  Profiler: 15,
                  ScopeComponent: -1,
                  SimpleMemoComponent: -1,
                  SuspenseComponent: 16,
                  SuspenseListComponent: -1,
                  TracingMarkerComponent: -1,
                  YieldComponent: 9
                };
              }
              function getTypeSymbol(type2) {
                var symbolOrNumber = renderer_typeof(type2) === "object" && type2 !== null ? type2.$$typeof : type2;
                return renderer_typeof(symbolOrNumber) === "symbol" ? symbolOrNumber.toString() : symbolOrNumber;
              }
              var _ReactTypeOfWork = ReactTypeOfWork, CacheComponent = _ReactTypeOfWork.CacheComponent, ClassComponent = _ReactTypeOfWork.ClassComponent, IncompleteClassComponent = _ReactTypeOfWork.IncompleteClassComponent, FunctionComponent = _ReactTypeOfWork.FunctionComponent, IndeterminateComponent = _ReactTypeOfWork.IndeterminateComponent, ForwardRef = _ReactTypeOfWork.ForwardRef, HostRoot = _ReactTypeOfWork.HostRoot, HostHoistable = _ReactTypeOfWork.HostHoistable, HostSingleton = _ReactTypeOfWork.HostSingleton, HostComponent = _ReactTypeOfWork.HostComponent, HostPortal = _ReactTypeOfWork.HostPortal, HostText = _ReactTypeOfWork.HostText, Fragment = _ReactTypeOfWork.Fragment, LazyComponent = _ReactTypeOfWork.LazyComponent, LegacyHiddenComponent = _ReactTypeOfWork.LegacyHiddenComponent, MemoComponent = _ReactTypeOfWork.MemoComponent, OffscreenComponent = _ReactTypeOfWork.OffscreenComponent, Profiler = _ReactTypeOfWork.Profiler, ScopeComponent = _ReactTypeOfWork.ScopeComponent, SimpleMemoComponent = _ReactTypeOfWork.SimpleMemoComponent, SuspenseComponent = _ReactTypeOfWork.SuspenseComponent, SuspenseListComponent = _ReactTypeOfWork.SuspenseListComponent, TracingMarkerComponent = _ReactTypeOfWork.TracingMarkerComponent;
              function resolveFiberType(type2) {
                var typeSymbol = getTypeSymbol(type2);
                switch (typeSymbol) {
                  case ReactSymbols_MEMO_NUMBER:
                  case ReactSymbols_MEMO_SYMBOL_STRING:
                    return resolveFiberType(type2.type);
                  case ReactSymbols_FORWARD_REF_NUMBER:
                  case ReactSymbols_FORWARD_REF_SYMBOL_STRING:
                    return type2.render;
                  default:
                    return type2;
                }
              }
              function getDisplayNameForFiber(fiber) {
                var elementType = fiber.elementType, type2 = fiber.type, tag = fiber.tag;
                var resolvedType = type2;
                if (renderer_typeof(type2) === "object" && type2 !== null) {
                  resolvedType = resolveFiberType(type2);
                }
                var resolvedContext = null;
                switch (tag) {
                  case CacheComponent:
                    return "Cache";
                  case ClassComponent:
                  case IncompleteClassComponent:
                    return getDisplayName(resolvedType);
                  case FunctionComponent:
                  case IndeterminateComponent:
                    return getDisplayName(resolvedType);
                  case ForwardRef:
                    return getWrappedDisplayName(elementType, resolvedType, "ForwardRef", "Anonymous");
                  case HostRoot:
                    var fiberRoot = fiber.stateNode;
                    if (fiberRoot != null && fiberRoot._debugRootType !== null) {
                      return fiberRoot._debugRootType;
                    }
                    return null;
                  case HostComponent:
                  case HostSingleton:
                  case HostHoistable:
                    return type2;
                  case HostPortal:
                  case HostText:
                    return null;
                  case Fragment:
                    return "Fragment";
                  case LazyComponent:
                    return "Lazy";
                  case MemoComponent:
                  case SimpleMemoComponent:
                    return getWrappedDisplayName(elementType, resolvedType, "Memo", "Anonymous");
                  case SuspenseComponent:
                    return "Suspense";
                  case LegacyHiddenComponent:
                    return "LegacyHidden";
                  case OffscreenComponent:
                    return "Offscreen";
                  case ScopeComponent:
                    return "Scope";
                  case SuspenseListComponent:
                    return "SuspenseList";
                  case Profiler:
                    return "Profiler";
                  case TracingMarkerComponent:
                    return "TracingMarker";
                  default:
                    var typeSymbol = getTypeSymbol(type2);
                    switch (typeSymbol) {
                      case CONCURRENT_MODE_NUMBER:
                      case CONCURRENT_MODE_SYMBOL_STRING:
                      case DEPRECATED_ASYNC_MODE_SYMBOL_STRING:
                        return null;
                      case PROVIDER_NUMBER:
                      case PROVIDER_SYMBOL_STRING:
                        resolvedContext = fiber.type._context || fiber.type.context;
                        return "".concat(resolvedContext.displayName || "Context", ".Provider");
                      case CONTEXT_NUMBER:
                      case CONTEXT_SYMBOL_STRING:
                      case SERVER_CONTEXT_SYMBOL_STRING:
                        resolvedContext = fiber.type._context || fiber.type;
                        return "".concat(resolvedContext.displayName || "Context", ".Consumer");
                      case STRICT_MODE_NUMBER:
                      case STRICT_MODE_SYMBOL_STRING:
                        return null;
                      case PROFILER_NUMBER:
                      case PROFILER_SYMBOL_STRING:
                        return "Profiler(".concat(fiber.memoizedProps.id, ")");
                      case SCOPE_NUMBER:
                      case SCOPE_SYMBOL_STRING:
                        return "Scope";
                      default:
                        return null;
                    }
                }
              }
              return {
                getDisplayNameForFiber,
                getTypeSymbol,
                ReactPriorityLevels,
                ReactTypeOfWork,
                StrictModeBits
              };
            }
            var fiberToIDMap = /* @__PURE__ */ new Map();
            var idToArbitraryFiberMap = /* @__PURE__ */ new Map();
            function attach(hook2, rendererID, renderer, global2) {
              var version = renderer.reconcilerVersion || renderer.version;
              var _getInternalReactCons = getInternalReactConstants(version), getDisplayNameForFiber = _getInternalReactCons.getDisplayNameForFiber, getTypeSymbol = _getInternalReactCons.getTypeSymbol, ReactPriorityLevels = _getInternalReactCons.ReactPriorityLevels, ReactTypeOfWork = _getInternalReactCons.ReactTypeOfWork, StrictModeBits = _getInternalReactCons.StrictModeBits;
              var CacheComponent = ReactTypeOfWork.CacheComponent, ClassComponent = ReactTypeOfWork.ClassComponent, ContextConsumer = ReactTypeOfWork.ContextConsumer, DehydratedSuspenseComponent = ReactTypeOfWork.DehydratedSuspenseComponent, ForwardRef = ReactTypeOfWork.ForwardRef, Fragment = ReactTypeOfWork.Fragment, FunctionComponent = ReactTypeOfWork.FunctionComponent, HostRoot = ReactTypeOfWork.HostRoot, HostHoistable = ReactTypeOfWork.HostHoistable, HostSingleton = ReactTypeOfWork.HostSingleton, HostPortal = ReactTypeOfWork.HostPortal, HostComponent = ReactTypeOfWork.HostComponent, HostText = ReactTypeOfWork.HostText, IncompleteClassComponent = ReactTypeOfWork.IncompleteClassComponent, IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent, LegacyHiddenComponent = ReactTypeOfWork.LegacyHiddenComponent, MemoComponent = ReactTypeOfWork.MemoComponent, OffscreenComponent = ReactTypeOfWork.OffscreenComponent, SimpleMemoComponent = ReactTypeOfWork.SimpleMemoComponent, SuspenseComponent = ReactTypeOfWork.SuspenseComponent, SuspenseListComponent = ReactTypeOfWork.SuspenseListComponent, TracingMarkerComponent = ReactTypeOfWork.TracingMarkerComponent;
              var ImmediatePriority = ReactPriorityLevels.ImmediatePriority, UserBlockingPriority = ReactPriorityLevels.UserBlockingPriority, NormalPriority = ReactPriorityLevels.NormalPriority, LowPriority = ReactPriorityLevels.LowPriority, IdlePriority = ReactPriorityLevels.IdlePriority, NoPriority = ReactPriorityLevels.NoPriority;
              var getLaneLabelMap = renderer.getLaneLabelMap, injectProfilingHooks = renderer.injectProfilingHooks, overrideHookState = renderer.overrideHookState, overrideHookStateDeletePath = renderer.overrideHookStateDeletePath, overrideHookStateRenamePath = renderer.overrideHookStateRenamePath, overrideProps = renderer.overrideProps, overridePropsDeletePath = renderer.overridePropsDeletePath, overridePropsRenamePath = renderer.overridePropsRenamePath, scheduleRefresh = renderer.scheduleRefresh, setErrorHandler = renderer.setErrorHandler, setSuspenseHandler = renderer.setSuspenseHandler, scheduleUpdate = renderer.scheduleUpdate;
              var supportsTogglingError = typeof setErrorHandler === "function" && typeof scheduleUpdate === "function";
              var supportsTogglingSuspense = typeof setSuspenseHandler === "function" && typeof scheduleUpdate === "function";
              if (typeof scheduleRefresh === "function") {
                renderer.scheduleRefresh = function() {
                  try {
                    hook2.emit("fastRefreshScheduled");
                  } finally {
                    return scheduleRefresh.apply(void 0, arguments);
                  }
                };
              }
              var getTimelineData = null;
              var toggleProfilingStatus = null;
              if (typeof injectProfilingHooks === "function") {
                var response = createProfilingHooks({
                  getDisplayNameForFiber,
                  getIsProfiling: function getIsProfiling() {
                    return isProfiling;
                  },
                  getLaneLabelMap,
                  currentDispatcherRef: renderer.currentDispatcherRef,
                  workTagMap: ReactTypeOfWork,
                  reactVersion: version
                });
                injectProfilingHooks(response.profilingHooks);
                getTimelineData = response.getTimelineData;
                toggleProfilingStatus = response.toggleProfilingStatus;
              }
              var fibersWithChangedErrorOrWarningCounts = /* @__PURE__ */ new Set();
              var pendingFiberToErrorsMap = /* @__PURE__ */ new Map();
              var pendingFiberToWarningsMap = /* @__PURE__ */ new Map();
              var fiberIDToErrorsMap = /* @__PURE__ */ new Map();
              var fiberIDToWarningsMap = /* @__PURE__ */ new Map();
              function clearErrorsAndWarnings() {
                var _iterator = _createForOfIteratorHelper(fiberIDToErrorsMap.keys()), _step;
                try {
                  for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                    var id = _step.value;
                    var _fiber = idToArbitraryFiberMap.get(id);
                    if (_fiber != null) {
                      fibersWithChangedErrorOrWarningCounts.add(_fiber);
                      updateMostRecentlyInspectedElementIfNecessary(id);
                    }
                  }
                } catch (err2) {
                  _iterator.e(err2);
                } finally {
                  _iterator.f();
                }
                var _iterator2 = _createForOfIteratorHelper(fiberIDToWarningsMap.keys()), _step2;
                try {
                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                    var _id = _step2.value;
                    var _fiber2 = idToArbitraryFiberMap.get(_id);
                    if (_fiber2 != null) {
                      fibersWithChangedErrorOrWarningCounts.add(_fiber2);
                      updateMostRecentlyInspectedElementIfNecessary(_id);
                    }
                  }
                } catch (err2) {
                  _iterator2.e(err2);
                } finally {
                  _iterator2.f();
                }
                fiberIDToErrorsMap.clear();
                fiberIDToWarningsMap.clear();
                flushPendingEvents();
              }
              function clearMessageCountHelper(fiberID, pendingFiberToMessageCountMap, fiberIDToMessageCountMap) {
                var fiber = idToArbitraryFiberMap.get(fiberID);
                if (fiber != null) {
                  pendingFiberToErrorsMap.delete(fiber);
                  if (fiberIDToMessageCountMap.has(fiberID)) {
                    fiberIDToMessageCountMap.delete(fiberID);
                    fibersWithChangedErrorOrWarningCounts.add(fiber);
                    flushPendingEvents();
                    updateMostRecentlyInspectedElementIfNecessary(fiberID);
                  } else {
                    fibersWithChangedErrorOrWarningCounts.delete(fiber);
                  }
                }
              }
              function clearErrorsForFiberID(fiberID) {
                clearMessageCountHelper(fiberID, pendingFiberToErrorsMap, fiberIDToErrorsMap);
              }
              function clearWarningsForFiberID(fiberID) {
                clearMessageCountHelper(fiberID, pendingFiberToWarningsMap, fiberIDToWarningsMap);
              }
              function updateMostRecentlyInspectedElementIfNecessary(fiberID) {
                if (mostRecentlyInspectedElement !== null && mostRecentlyInspectedElement.id === fiberID) {
                  hasElementUpdatedSinceLastInspected = true;
                }
              }
              function onErrorOrWarning(fiber, type2, args) {
                if (type2 === "error") {
                  var maybeID = getFiberIDUnsafe(fiber);
                  if (maybeID != null && forceErrorForFiberIDs.get(maybeID) === true) {
                    return;
                  }
                }
                var message = format.apply(void 0, renderer_toConsumableArray(args));
                if (__DEBUG__) {
                  debug2("onErrorOrWarning", fiber, null, "".concat(type2, ': "').concat(message, '"'));
                }
                fibersWithChangedErrorOrWarningCounts.add(fiber);
                var fiberMap = type2 === "error" ? pendingFiberToErrorsMap : pendingFiberToWarningsMap;
                var messageMap = fiberMap.get(fiber);
                if (messageMap != null) {
                  var count = messageMap.get(message) || 0;
                  messageMap.set(message, count + 1);
                } else {
                  fiberMap.set(fiber, /* @__PURE__ */ new Map([[message, 1]]));
                }
                flushPendingErrorsAndWarningsAfterDelay();
              }
              registerRenderer(renderer, onErrorOrWarning);
              patchConsoleUsingWindowValues();
              var debug2 = function debug3(name, fiber, parentFiber) {
                var extraString = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "";
                if (__DEBUG__) {
                  var displayName = fiber.tag + ":" + (getDisplayNameForFiber(fiber) || "null");
                  var maybeID = getFiberIDUnsafe(fiber) || "<no id>";
                  var parentDisplayName = parentFiber ? parentFiber.tag + ":" + (getDisplayNameForFiber(parentFiber) || "null") : "";
                  var maybeParentID = parentFiber ? getFiberIDUnsafe(parentFiber) || "<no-id>" : "";
                  console.groupCollapsed("[renderer] %c".concat(name, " %c").concat(displayName, " (").concat(maybeID, ") %c").concat(parentFiber ? "".concat(parentDisplayName, " (").concat(maybeParentID, ")") : "", " %c").concat(extraString), "color: red; font-weight: bold;", "color: blue;", "color: purple;", "color: black;");
                  console.log(new Error().stack.split("\n").slice(1).join("\n"));
                  console.groupEnd();
                }
              };
              var hideElementsWithDisplayNames = /* @__PURE__ */ new Set();
              var hideElementsWithPaths = /* @__PURE__ */ new Set();
              var hideElementsWithTypes = /* @__PURE__ */ new Set();
              var traceUpdatesEnabled = false;
              var traceUpdatesForNodes = /* @__PURE__ */ new Set();
              function applyComponentFilters(componentFilters) {
                hideElementsWithTypes.clear();
                hideElementsWithDisplayNames.clear();
                hideElementsWithPaths.clear();
                componentFilters.forEach(function(componentFilter) {
                  if (!componentFilter.isEnabled) {
                    return;
                  }
                  switch (componentFilter.type) {
                    case ComponentFilterDisplayName:
                      if (componentFilter.isValid && componentFilter.value !== "") {
                        hideElementsWithDisplayNames.add(new RegExp(componentFilter.value, "i"));
                      }
                      break;
                    case ComponentFilterElementType:
                      hideElementsWithTypes.add(componentFilter.value);
                      break;
                    case ComponentFilterLocation:
                      if (componentFilter.isValid && componentFilter.value !== "") {
                        hideElementsWithPaths.add(new RegExp(componentFilter.value, "i"));
                      }
                      break;
                    case ComponentFilterHOC:
                      hideElementsWithDisplayNames.add(new RegExp("\\("));
                      break;
                    default:
                      console.warn('Invalid component filter type "'.concat(componentFilter.type, '"'));
                      break;
                  }
                });
              }
              if (window.__REACT_DEVTOOLS_COMPONENT_FILTERS__ != null) {
                applyComponentFilters(window.__REACT_DEVTOOLS_COMPONENT_FILTERS__);
              } else {
                applyComponentFilters(getDefaultComponentFilters());
              }
              function updateComponentFilters(componentFilters) {
                if (isProfiling) {
                  throw Error("Cannot modify filter preferences while profiling");
                }
                hook2.getFiberRoots(rendererID).forEach(function(root) {
                  currentRootID = getOrGenerateFiberID(root.current);
                  pushOperation(TREE_OPERATION_REMOVE_ROOT);
                  flushPendingEvents(root);
                  currentRootID = -1;
                });
                applyComponentFilters(componentFilters);
                rootDisplayNameCounter.clear();
                hook2.getFiberRoots(rendererID).forEach(function(root) {
                  currentRootID = getOrGenerateFiberID(root.current);
                  setRootPseudoKey(currentRootID, root.current);
                  mountFiberRecursively(root.current, null, false, false);
                  flushPendingEvents(root);
                  currentRootID = -1;
                });
                reevaluateErrorsAndWarnings();
                flushPendingEvents();
              }
              function shouldFilterFiber(fiber) {
                var _debugSource = fiber._debugSource, tag = fiber.tag, type2 = fiber.type, key2 = fiber.key;
                switch (tag) {
                  case DehydratedSuspenseComponent:
                    return true;
                  case HostPortal:
                  case HostText:
                  case LegacyHiddenComponent:
                  case OffscreenComponent:
                    return true;
                  case HostRoot:
                    return false;
                  case Fragment:
                    return key2 === null;
                  default:
                    var typeSymbol = getTypeSymbol(type2);
                    switch (typeSymbol) {
                      case CONCURRENT_MODE_NUMBER:
                      case CONCURRENT_MODE_SYMBOL_STRING:
                      case DEPRECATED_ASYNC_MODE_SYMBOL_STRING:
                      case STRICT_MODE_NUMBER:
                      case STRICT_MODE_SYMBOL_STRING:
                        return true;
                      default:
                        break;
                    }
                }
                var elementType = getElementTypeForFiber(fiber);
                if (hideElementsWithTypes.has(elementType)) {
                  return true;
                }
                if (hideElementsWithDisplayNames.size > 0) {
                  var displayName = getDisplayNameForFiber(fiber);
                  if (displayName != null) {
                    var _iterator3 = _createForOfIteratorHelper(hideElementsWithDisplayNames), _step3;
                    try {
                      for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                        var displayNameRegExp = _step3.value;
                        if (displayNameRegExp.test(displayName)) {
                          return true;
                        }
                      }
                    } catch (err2) {
                      _iterator3.e(err2);
                    } finally {
                      _iterator3.f();
                    }
                  }
                }
                if (_debugSource != null && hideElementsWithPaths.size > 0) {
                  var fileName = _debugSource.fileName;
                  var _iterator4 = _createForOfIteratorHelper(hideElementsWithPaths), _step4;
                  try {
                    for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                      var pathRegExp = _step4.value;
                      if (pathRegExp.test(fileName)) {
                        return true;
                      }
                    }
                  } catch (err2) {
                    _iterator4.e(err2);
                  } finally {
                    _iterator4.f();
                  }
                }
                return false;
              }
              function getElementTypeForFiber(fiber) {
                var type2 = fiber.type, tag = fiber.tag;
                switch (tag) {
                  case ClassComponent:
                  case IncompleteClassComponent:
                    return types_ElementTypeClass;
                  case FunctionComponent:
                  case IndeterminateComponent:
                    return types_ElementTypeFunction;
                  case ForwardRef:
                    return types_ElementTypeForwardRef;
                  case HostRoot:
                    return ElementTypeRoot;
                  case HostComponent:
                  case HostHoistable:
                  case HostSingleton:
                    return ElementTypeHostComponent;
                  case HostPortal:
                  case HostText:
                  case Fragment:
                    return ElementTypeOtherOrUnknown;
                  case MemoComponent:
                  case SimpleMemoComponent:
                    return types_ElementTypeMemo;
                  case SuspenseComponent:
                    return ElementTypeSuspense;
                  case SuspenseListComponent:
                    return ElementTypeSuspenseList;
                  case TracingMarkerComponent:
                    return ElementTypeTracingMarker;
                  default:
                    var typeSymbol = getTypeSymbol(type2);
                    switch (typeSymbol) {
                      case CONCURRENT_MODE_NUMBER:
                      case CONCURRENT_MODE_SYMBOL_STRING:
                      case DEPRECATED_ASYNC_MODE_SYMBOL_STRING:
                        return ElementTypeOtherOrUnknown;
                      case PROVIDER_NUMBER:
                      case PROVIDER_SYMBOL_STRING:
                        return ElementTypeContext;
                      case CONTEXT_NUMBER:
                      case CONTEXT_SYMBOL_STRING:
                        return ElementTypeContext;
                      case STRICT_MODE_NUMBER:
                      case STRICT_MODE_SYMBOL_STRING:
                        return ElementTypeOtherOrUnknown;
                      case PROFILER_NUMBER:
                      case PROFILER_SYMBOL_STRING:
                        return ElementTypeProfiler;
                      default:
                        return ElementTypeOtherOrUnknown;
                    }
                }
              }
              var idToTreeBaseDurationMap = /* @__PURE__ */ new Map();
              var idToRootMap = /* @__PURE__ */ new Map();
              var currentRootID = -1;
              function getOrGenerateFiberID(fiber) {
                var id = null;
                if (fiberToIDMap.has(fiber)) {
                  id = fiberToIDMap.get(fiber);
                } else {
                  var _alternate = fiber.alternate;
                  if (_alternate !== null && fiberToIDMap.has(_alternate)) {
                    id = fiberToIDMap.get(_alternate);
                  }
                }
                var didGenerateID = false;
                if (id === null) {
                  didGenerateID = true;
                  id = getUID();
                }
                var refinedID = id;
                if (!fiberToIDMap.has(fiber)) {
                  fiberToIDMap.set(fiber, refinedID);
                  idToArbitraryFiberMap.set(refinedID, fiber);
                }
                var alternate = fiber.alternate;
                if (alternate !== null) {
                  if (!fiberToIDMap.has(alternate)) {
                    fiberToIDMap.set(alternate, refinedID);
                  }
                }
                if (__DEBUG__) {
                  if (didGenerateID) {
                    debug2("getOrGenerateFiberID()", fiber, fiber.return, "Generated a new UID");
                  }
                }
                return refinedID;
              }
              function getFiberIDThrows(fiber) {
                var maybeID = getFiberIDUnsafe(fiber);
                if (maybeID !== null) {
                  return maybeID;
                }
                throw Error('Could not find ID for Fiber "'.concat(getDisplayNameForFiber(fiber) || "", '"'));
              }
              function getFiberIDUnsafe(fiber) {
                if (fiberToIDMap.has(fiber)) {
                  return fiberToIDMap.get(fiber);
                } else {
                  var alternate = fiber.alternate;
                  if (alternate !== null && fiberToIDMap.has(alternate)) {
                    return fiberToIDMap.get(alternate);
                  }
                }
                return null;
              }
              function untrackFiberID(fiber) {
                if (__DEBUG__) {
                  debug2("untrackFiberID()", fiber, fiber.return, "schedule after delay");
                }
                untrackFibersSet.add(fiber);
                var alternate = fiber.alternate;
                if (alternate !== null) {
                  untrackFibersSet.add(alternate);
                }
                if (untrackFibersTimeoutID === null) {
                  untrackFibersTimeoutID = setTimeout(untrackFibers, 1e3);
                }
              }
              var untrackFibersSet = /* @__PURE__ */ new Set();
              var untrackFibersTimeoutID = null;
              function untrackFibers() {
                if (untrackFibersTimeoutID !== null) {
                  clearTimeout(untrackFibersTimeoutID);
                  untrackFibersTimeoutID = null;
                }
                untrackFibersSet.forEach(function(fiber) {
                  var fiberID = getFiberIDUnsafe(fiber);
                  if (fiberID !== null) {
                    idToArbitraryFiberMap.delete(fiberID);
                    clearErrorsForFiberID(fiberID);
                    clearWarningsForFiberID(fiberID);
                  }
                  fiberToIDMap.delete(fiber);
                  var alternate = fiber.alternate;
                  if (alternate !== null) {
                    fiberToIDMap.delete(alternate);
                  }
                  if (forceErrorForFiberIDs.has(fiberID)) {
                    forceErrorForFiberIDs.delete(fiberID);
                    if (forceErrorForFiberIDs.size === 0 && setErrorHandler != null) {
                      setErrorHandler(shouldErrorFiberAlwaysNull);
                    }
                  }
                });
                untrackFibersSet.clear();
              }
              function getChangeDescription(prevFiber, nextFiber) {
                switch (getElementTypeForFiber(nextFiber)) {
                  case types_ElementTypeClass:
                  case types_ElementTypeFunction:
                  case types_ElementTypeMemo:
                  case types_ElementTypeForwardRef:
                    if (prevFiber === null) {
                      return {
                        context: null,
                        didHooksChange: false,
                        isFirstMount: true,
                        props: null,
                        state: null
                      };
                    } else {
                      var data = {
                        context: getContextChangedKeys(nextFiber),
                        didHooksChange: false,
                        isFirstMount: false,
                        props: getChangedKeys(prevFiber.memoizedProps, nextFiber.memoizedProps),
                        state: getChangedKeys(prevFiber.memoizedState, nextFiber.memoizedState)
                      };
                      var indices = getChangedHooksIndices(prevFiber.memoizedState, nextFiber.memoizedState);
                      data.hooks = indices;
                      data.didHooksChange = indices !== null && indices.length > 0;
                      return data;
                    }
                  default:
                    return null;
                }
              }
              function updateContextsForFiber(fiber) {
                switch (getElementTypeForFiber(fiber)) {
                  case types_ElementTypeClass:
                  case types_ElementTypeForwardRef:
                  case types_ElementTypeFunction:
                  case types_ElementTypeMemo:
                    if (idToContextsMap !== null) {
                      var id = getFiberIDThrows(fiber);
                      var contexts = getContextsForFiber(fiber);
                      if (contexts !== null) {
                        idToContextsMap.set(id, contexts);
                      }
                    }
                    break;
                  default:
                    break;
                }
              }
              var NO_CONTEXT = {};
              function getContextsForFiber(fiber) {
                var legacyContext = NO_CONTEXT;
                var modernContext = NO_CONTEXT;
                switch (getElementTypeForFiber(fiber)) {
                  case types_ElementTypeClass:
                    var instance = fiber.stateNode;
                    if (instance != null) {
                      if (instance.constructor && instance.constructor.contextType != null) {
                        modernContext = instance.context;
                      } else {
                        legacyContext = instance.context;
                        if (legacyContext && Object.keys(legacyContext).length === 0) {
                          legacyContext = NO_CONTEXT;
                        }
                      }
                    }
                    return [legacyContext, modernContext];
                  case types_ElementTypeForwardRef:
                  case types_ElementTypeFunction:
                  case types_ElementTypeMemo:
                    var dependencies = fiber.dependencies;
                    if (dependencies && dependencies.firstContext) {
                      modernContext = dependencies.firstContext;
                    }
                    return [legacyContext, modernContext];
                  default:
                    return null;
                }
              }
              function crawlToInitializeContextsMap(fiber) {
                var id = getFiberIDUnsafe(fiber);
                if (id !== null) {
                  updateContextsForFiber(fiber);
                  var current = fiber.child;
                  while (current !== null) {
                    crawlToInitializeContextsMap(current);
                    current = current.sibling;
                  }
                }
              }
              function getContextChangedKeys(fiber) {
                if (idToContextsMap !== null) {
                  var id = getFiberIDThrows(fiber);
                  var prevContexts = idToContextsMap.has(id) ? idToContextsMap.get(id) : null;
                  var nextContexts = getContextsForFiber(fiber);
                  if (prevContexts == null || nextContexts == null) {
                    return null;
                  }
                  var _prevContexts = renderer_slicedToArray(prevContexts, 2), prevLegacyContext = _prevContexts[0], prevModernContext = _prevContexts[1];
                  var _nextContexts = renderer_slicedToArray(nextContexts, 2), nextLegacyContext = _nextContexts[0], nextModernContext = _nextContexts[1];
                  switch (getElementTypeForFiber(fiber)) {
                    case types_ElementTypeClass:
                      if (prevContexts && nextContexts) {
                        if (nextLegacyContext !== NO_CONTEXT) {
                          return getChangedKeys(prevLegacyContext, nextLegacyContext);
                        } else if (nextModernContext !== NO_CONTEXT) {
                          return prevModernContext !== nextModernContext;
                        }
                      }
                      break;
                    case types_ElementTypeForwardRef:
                    case types_ElementTypeFunction:
                    case types_ElementTypeMemo:
                      if (nextModernContext !== NO_CONTEXT) {
                        var prevContext = prevModernContext;
                        var nextContext = nextModernContext;
                        while (prevContext && nextContext) {
                          if (!shared_objectIs(prevContext.memoizedValue, nextContext.memoizedValue)) {
                            return true;
                          }
                          prevContext = prevContext.next;
                          nextContext = nextContext.next;
                        }
                        return false;
                      }
                      break;
                    default:
                      break;
                  }
                }
                return null;
              }
              function isHookThatCanScheduleUpdate(hookObject) {
                var queue = hookObject.queue;
                if (!queue) {
                  return false;
                }
                var boundHasOwnProperty = shared_hasOwnProperty.bind(queue);
                if (boundHasOwnProperty("pending")) {
                  return true;
                }
                return boundHasOwnProperty("value") && boundHasOwnProperty("getSnapshot") && typeof queue.getSnapshot === "function";
              }
              function didStatefulHookChange(prev, next) {
                var prevMemoizedState = prev.memoizedState;
                var nextMemoizedState = next.memoizedState;
                if (isHookThatCanScheduleUpdate(prev)) {
                  return prevMemoizedState !== nextMemoizedState;
                }
                return false;
              }
              function getChangedHooksIndices(prev, next) {
                if (prev == null || next == null) {
                  return null;
                }
                var indices = [];
                var index = 0;
                if (next.hasOwnProperty("baseState") && next.hasOwnProperty("memoizedState") && next.hasOwnProperty("next") && next.hasOwnProperty("queue")) {
                  while (next !== null) {
                    if (didStatefulHookChange(prev, next)) {
                      indices.push(index);
                    }
                    next = next.next;
                    prev = prev.next;
                    index++;
                  }
                }
                return indices;
              }
              function getChangedKeys(prev, next) {
                if (prev == null || next == null) {
                  return null;
                }
                if (next.hasOwnProperty("baseState") && next.hasOwnProperty("memoizedState") && next.hasOwnProperty("next") && next.hasOwnProperty("queue")) {
                  return null;
                }
                var keys = new Set([].concat(renderer_toConsumableArray(Object.keys(prev)), renderer_toConsumableArray(Object.keys(next))));
                var changedKeys = [];
                var _iterator5 = _createForOfIteratorHelper(keys), _step5;
                try {
                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
                    var key2 = _step5.value;
                    if (prev[key2] !== next[key2]) {
                      changedKeys.push(key2);
                    }
                  }
                } catch (err2) {
                  _iterator5.e(err2);
                } finally {
                  _iterator5.f();
                }
                return changedKeys;
              }
              function didFiberRender(prevFiber, nextFiber) {
                switch (nextFiber.tag) {
                  case ClassComponent:
                  case FunctionComponent:
                  case ContextConsumer:
                  case MemoComponent:
                  case SimpleMemoComponent:
                  case ForwardRef:
                    var PerformedWork = 1;
                    return (getFiberFlags(nextFiber) & PerformedWork) === PerformedWork;
                  default:
                    return prevFiber.memoizedProps !== nextFiber.memoizedProps || prevFiber.memoizedState !== nextFiber.memoizedState || prevFiber.ref !== nextFiber.ref;
                }
              }
              var pendingOperations = [];
              var pendingRealUnmountedIDs = [];
              var pendingSimulatedUnmountedIDs = [];
              var pendingOperationsQueue = [];
              var pendingStringTable = /* @__PURE__ */ new Map();
              var pendingStringTableLength = 0;
              var pendingUnmountedRootID = null;
              function pushOperation(op) {
                if (false) {
                }
                pendingOperations.push(op);
              }
              function shouldBailoutWithPendingOperations() {
                if (isProfiling) {
                  if (currentCommitProfilingMetadata != null && currentCommitProfilingMetadata.durations.length > 0) {
                    return false;
                  }
                }
                return pendingOperations.length === 0 && pendingRealUnmountedIDs.length === 0 && pendingSimulatedUnmountedIDs.length === 0 && pendingUnmountedRootID === null;
              }
              function flushOrQueueOperations(operations) {
                if (shouldBailoutWithPendingOperations()) {
                  return;
                }
                if (pendingOperationsQueue !== null) {
                  pendingOperationsQueue.push(operations);
                } else {
                  hook2.emit("operations", operations);
                }
              }
              var flushPendingErrorsAndWarningsAfterDelayTimeoutID = null;
              function clearPendingErrorsAndWarningsAfterDelay() {
                if (flushPendingErrorsAndWarningsAfterDelayTimeoutID !== null) {
                  clearTimeout(flushPendingErrorsAndWarningsAfterDelayTimeoutID);
                  flushPendingErrorsAndWarningsAfterDelayTimeoutID = null;
                }
              }
              function flushPendingErrorsAndWarningsAfterDelay() {
                clearPendingErrorsAndWarningsAfterDelay();
                flushPendingErrorsAndWarningsAfterDelayTimeoutID = setTimeout(function() {
                  flushPendingErrorsAndWarningsAfterDelayTimeoutID = null;
                  if (pendingOperations.length > 0) {
                    return;
                  }
                  recordPendingErrorsAndWarnings();
                  if (shouldBailoutWithPendingOperations()) {
                    return;
                  }
                  var operations = new Array(3 + pendingOperations.length);
                  operations[0] = rendererID;
                  operations[1] = currentRootID;
                  operations[2] = 0;
                  for (var j = 0; j < pendingOperations.length; j++) {
                    operations[3 + j] = pendingOperations[j];
                  }
                  flushOrQueueOperations(operations);
                  pendingOperations.length = 0;
                }, 1e3);
              }
              function reevaluateErrorsAndWarnings() {
                fibersWithChangedErrorOrWarningCounts.clear();
                fiberIDToErrorsMap.forEach(function(countMap, fiberID) {
                  var fiber = idToArbitraryFiberMap.get(fiberID);
                  if (fiber != null) {
                    fibersWithChangedErrorOrWarningCounts.add(fiber);
                  }
                });
                fiberIDToWarningsMap.forEach(function(countMap, fiberID) {
                  var fiber = idToArbitraryFiberMap.get(fiberID);
                  if (fiber != null) {
                    fibersWithChangedErrorOrWarningCounts.add(fiber);
                  }
                });
                recordPendingErrorsAndWarnings();
              }
              function mergeMapsAndGetCountHelper(fiber, fiberID, pendingFiberToMessageCountMap, fiberIDToMessageCountMap) {
                var newCount = 0;
                var messageCountMap = fiberIDToMessageCountMap.get(fiberID);
                var pendingMessageCountMap = pendingFiberToMessageCountMap.get(fiber);
                if (pendingMessageCountMap != null) {
                  if (messageCountMap == null) {
                    messageCountMap = pendingMessageCountMap;
                    fiberIDToMessageCountMap.set(fiberID, pendingMessageCountMap);
                  } else {
                    var refinedMessageCountMap = messageCountMap;
                    pendingMessageCountMap.forEach(function(pendingCount, message) {
                      var previousCount = refinedMessageCountMap.get(message) || 0;
                      refinedMessageCountMap.set(message, previousCount + pendingCount);
                    });
                  }
                }
                if (!shouldFilterFiber(fiber)) {
                  if (messageCountMap != null) {
                    messageCountMap.forEach(function(count) {
                      newCount += count;
                    });
                  }
                }
                pendingFiberToMessageCountMap.delete(fiber);
                return newCount;
              }
              function recordPendingErrorsAndWarnings() {
                clearPendingErrorsAndWarningsAfterDelay();
                fibersWithChangedErrorOrWarningCounts.forEach(function(fiber) {
                  var fiberID = getFiberIDUnsafe(fiber);
                  if (fiberID === null) {
                  } else {
                    var errorCount = mergeMapsAndGetCountHelper(fiber, fiberID, pendingFiberToErrorsMap, fiberIDToErrorsMap);
                    var warningCount = mergeMapsAndGetCountHelper(fiber, fiberID, pendingFiberToWarningsMap, fiberIDToWarningsMap);
                    pushOperation(TREE_OPERATION_UPDATE_ERRORS_OR_WARNINGS);
                    pushOperation(fiberID);
                    pushOperation(errorCount);
                    pushOperation(warningCount);
                  }
                  pendingFiberToErrorsMap.delete(fiber);
                  pendingFiberToWarningsMap.delete(fiber);
                });
                fibersWithChangedErrorOrWarningCounts.clear();
              }
              function flushPendingEvents(root) {
                recordPendingErrorsAndWarnings();
                if (shouldBailoutWithPendingOperations()) {
                  return;
                }
                var numUnmountIDs = pendingRealUnmountedIDs.length + pendingSimulatedUnmountedIDs.length + (pendingUnmountedRootID === null ? 0 : 1);
                var operations = new Array(
                  2 + 1 + pendingStringTableLength + (numUnmountIDs > 0 ? 2 + numUnmountIDs : 0) + pendingOperations.length
                );
                var i2 = 0;
                operations[i2++] = rendererID;
                operations[i2++] = currentRootID;
                operations[i2++] = pendingStringTableLength;
                pendingStringTable.forEach(function(entry, stringKey) {
                  var encodedString = entry.encodedString;
                  var length = encodedString.length;
                  operations[i2++] = length;
                  for (var j2 = 0; j2 < length; j2++) {
                    operations[i2 + j2] = encodedString[j2];
                  }
                  i2 += length;
                });
                if (numUnmountIDs > 0) {
                  operations[i2++] = TREE_OPERATION_REMOVE;
                  operations[i2++] = numUnmountIDs;
                  for (var j = pendingRealUnmountedIDs.length - 1; j >= 0; j--) {
                    operations[i2++] = pendingRealUnmountedIDs[j];
                  }
                  for (var _j = 0; _j < pendingSimulatedUnmountedIDs.length; _j++) {
                    operations[i2 + _j] = pendingSimulatedUnmountedIDs[_j];
                  }
                  i2 += pendingSimulatedUnmountedIDs.length;
                  if (pendingUnmountedRootID !== null) {
                    operations[i2] = pendingUnmountedRootID;
                    i2++;
                  }
                }
                for (var _j2 = 0; _j2 < pendingOperations.length; _j2++) {
                  operations[i2 + _j2] = pendingOperations[_j2];
                }
                i2 += pendingOperations.length;
                flushOrQueueOperations(operations);
                pendingOperations.length = 0;
                pendingRealUnmountedIDs.length = 0;
                pendingSimulatedUnmountedIDs.length = 0;
                pendingUnmountedRootID = null;
                pendingStringTable.clear();
                pendingStringTableLength = 0;
              }
              function getStringID(string) {
                if (string === null) {
                  return 0;
                }
                var existingEntry = pendingStringTable.get(string);
                if (existingEntry !== void 0) {
                  return existingEntry.id;
                }
                var id = pendingStringTable.size + 1;
                var encodedString = utfEncodeString(string);
                pendingStringTable.set(string, {
                  encodedString,
                  id
                });
                pendingStringTableLength += encodedString.length + 1;
                return id;
              }
              function recordMount(fiber, parentFiber) {
                var isRoot = fiber.tag === HostRoot;
                var id = getOrGenerateFiberID(fiber);
                if (__DEBUG__) {
                  debug2("recordMount()", fiber, parentFiber);
                }
                var hasOwnerMetadata = fiber.hasOwnProperty("_debugOwner");
                var isProfilingSupported = fiber.hasOwnProperty("treeBaseDuration");
                var profilingFlags = 0;
                if (isProfilingSupported) {
                  profilingFlags = PROFILING_FLAG_BASIC_SUPPORT;
                  if (typeof injectProfilingHooks === "function") {
                    profilingFlags |= PROFILING_FLAG_TIMELINE_SUPPORT;
                  }
                }
                if (isRoot) {
                  pushOperation(TREE_OPERATION_ADD);
                  pushOperation(id);
                  pushOperation(ElementTypeRoot);
                  pushOperation((fiber.mode & StrictModeBits) !== 0 ? 1 : 0);
                  pushOperation(profilingFlags);
                  pushOperation(StrictModeBits !== 0 ? 1 : 0);
                  pushOperation(hasOwnerMetadata ? 1 : 0);
                  if (isProfiling) {
                    if (displayNamesByRootID !== null) {
                      displayNamesByRootID.set(id, getDisplayNameForRoot(fiber));
                    }
                  }
                } else {
                  var key2 = fiber.key;
                  var displayName = getDisplayNameForFiber(fiber);
                  var elementType = getElementTypeForFiber(fiber);
                  var _debugOwner = fiber._debugOwner;
                  var ownerID = _debugOwner != null ? getOrGenerateFiberID(_debugOwner) : 0;
                  var parentID = parentFiber ? getFiberIDThrows(parentFiber) : 0;
                  var displayNameStringID = getStringID(displayName);
                  var keyString = key2 === null ? null : String(key2);
                  var keyStringID = getStringID(keyString);
                  pushOperation(TREE_OPERATION_ADD);
                  pushOperation(id);
                  pushOperation(elementType);
                  pushOperation(parentID);
                  pushOperation(ownerID);
                  pushOperation(displayNameStringID);
                  pushOperation(keyStringID);
                  if ((fiber.mode & StrictModeBits) !== 0 && (parentFiber.mode & StrictModeBits) === 0) {
                    pushOperation(TREE_OPERATION_SET_SUBTREE_MODE);
                    pushOperation(id);
                    pushOperation(StrictMode);
                  }
                }
                if (isProfilingSupported) {
                  idToRootMap.set(id, currentRootID);
                  recordProfilingDurations(fiber);
                }
              }
              function recordUnmount(fiber, isSimulated) {
                if (__DEBUG__) {
                  debug2("recordUnmount()", fiber, null, isSimulated ? "unmount is simulated" : "");
                }
                if (trackedPathMatchFiber !== null) {
                  if (fiber === trackedPathMatchFiber || fiber === trackedPathMatchFiber.alternate) {
                    setTrackedPath(null);
                  }
                }
                var unsafeID = getFiberIDUnsafe(fiber);
                if (unsafeID === null) {
                  return;
                }
                var id = unsafeID;
                var isRoot = fiber.tag === HostRoot;
                if (isRoot) {
                  pendingUnmountedRootID = id;
                } else if (!shouldFilterFiber(fiber)) {
                  if (isSimulated) {
                    pendingSimulatedUnmountedIDs.push(id);
                  } else {
                    pendingRealUnmountedIDs.push(id);
                  }
                }
                if (!fiber._debugNeedsRemount) {
                  untrackFiberID(fiber);
                  var isProfilingSupported = fiber.hasOwnProperty("treeBaseDuration");
                  if (isProfilingSupported) {
                    idToRootMap.delete(id);
                    idToTreeBaseDurationMap.delete(id);
                  }
                }
              }
              function mountFiberRecursively(firstChild, parentFiber, traverseSiblings, traceNearestHostComponentUpdate) {
                var fiber = firstChild;
                while (fiber !== null) {
                  getOrGenerateFiberID(fiber);
                  if (__DEBUG__) {
                    debug2("mountFiberRecursively()", fiber, parentFiber);
                  }
                  var mightSiblingsBeOnTrackedPath = updateTrackedPathStateBeforeMount(fiber);
                  var shouldIncludeInTree = !shouldFilterFiber(fiber);
                  if (shouldIncludeInTree) {
                    recordMount(fiber, parentFiber);
                  }
                  if (traceUpdatesEnabled) {
                    if (traceNearestHostComponentUpdate) {
                      var elementType = getElementTypeForFiber(fiber);
                      if (elementType === ElementTypeHostComponent) {
                        traceUpdatesForNodes.add(fiber.stateNode);
                        traceNearestHostComponentUpdate = false;
                      }
                    }
                  }
                  var isSuspense = fiber.tag === ReactTypeOfWork.SuspenseComponent;
                  if (isSuspense) {
                    var isTimedOut = fiber.memoizedState !== null;
                    if (isTimedOut) {
                      var primaryChildFragment = fiber.child;
                      var fallbackChildFragment = primaryChildFragment ? primaryChildFragment.sibling : null;
                      var fallbackChild = fallbackChildFragment ? fallbackChildFragment.child : null;
                      if (fallbackChild !== null) {
                        mountFiberRecursively(fallbackChild, shouldIncludeInTree ? fiber : parentFiber, true, traceNearestHostComponentUpdate);
                      }
                    } else {
                      var primaryChild = null;
                      var areSuspenseChildrenConditionallyWrapped = OffscreenComponent === -1;
                      if (areSuspenseChildrenConditionallyWrapped) {
                        primaryChild = fiber.child;
                      } else if (fiber.child !== null) {
                        primaryChild = fiber.child.child;
                      }
                      if (primaryChild !== null) {
                        mountFiberRecursively(primaryChild, shouldIncludeInTree ? fiber : parentFiber, true, traceNearestHostComponentUpdate);
                      }
                    }
                  } else {
                    if (fiber.child !== null) {
                      mountFiberRecursively(fiber.child, shouldIncludeInTree ? fiber : parentFiber, true, traceNearestHostComponentUpdate);
                    }
                  }
                  updateTrackedPathStateAfterMount(mightSiblingsBeOnTrackedPath);
                  fiber = traverseSiblings ? fiber.sibling : null;
                }
              }
              function unmountFiberChildrenRecursively(fiber) {
                if (__DEBUG__) {
                  debug2("unmountFiberChildrenRecursively()", fiber);
                }
                var isTimedOutSuspense = fiber.tag === ReactTypeOfWork.SuspenseComponent && fiber.memoizedState !== null;
                var child = fiber.child;
                if (isTimedOutSuspense) {
                  var primaryChildFragment = fiber.child;
                  var fallbackChildFragment = primaryChildFragment ? primaryChildFragment.sibling : null;
                  child = fallbackChildFragment ? fallbackChildFragment.child : null;
                }
                while (child !== null) {
                  if (child.return !== null) {
                    unmountFiberChildrenRecursively(child);
                    recordUnmount(child, true);
                  }
                  child = child.sibling;
                }
              }
              function recordProfilingDurations(fiber) {
                var id = getFiberIDThrows(fiber);
                var actualDuration = fiber.actualDuration, treeBaseDuration = fiber.treeBaseDuration;
                idToTreeBaseDurationMap.set(id, treeBaseDuration || 0);
                if (isProfiling) {
                  var alternate = fiber.alternate;
                  if (alternate == null || treeBaseDuration !== alternate.treeBaseDuration) {
                    var convertedTreeBaseDuration = Math.floor((treeBaseDuration || 0) * 1e3);
                    pushOperation(TREE_OPERATION_UPDATE_TREE_BASE_DURATION);
                    pushOperation(id);
                    pushOperation(convertedTreeBaseDuration);
                  }
                  if (alternate == null || didFiberRender(alternate, fiber)) {
                    if (actualDuration != null) {
                      var selfDuration = actualDuration;
                      var child = fiber.child;
                      while (child !== null) {
                        selfDuration -= child.actualDuration || 0;
                        child = child.sibling;
                      }
                      var metadata = currentCommitProfilingMetadata;
                      metadata.durations.push(id, actualDuration, selfDuration);
                      metadata.maxActualDuration = Math.max(metadata.maxActualDuration, actualDuration);
                      if (recordChangeDescriptions) {
                        var changeDescription = getChangeDescription(alternate, fiber);
                        if (changeDescription !== null) {
                          if (metadata.changeDescriptions !== null) {
                            metadata.changeDescriptions.set(id, changeDescription);
                          }
                        }
                        updateContextsForFiber(fiber);
                      }
                    }
                  }
                }
              }
              function recordResetChildren(fiber, childSet) {
                if (__DEBUG__) {
                  debug2("recordResetChildren()", childSet, fiber);
                }
                var nextChildren = [];
                var child = childSet;
                while (child !== null) {
                  findReorderedChildrenRecursively(child, nextChildren);
                  child = child.sibling;
                }
                var numChildren = nextChildren.length;
                if (numChildren < 2) {
                  return;
                }
                pushOperation(TREE_OPERATION_REORDER_CHILDREN);
                pushOperation(getFiberIDThrows(fiber));
                pushOperation(numChildren);
                for (var i2 = 0; i2 < nextChildren.length; i2++) {
                  pushOperation(nextChildren[i2]);
                }
              }
              function findReorderedChildrenRecursively(fiber, nextChildren) {
                if (!shouldFilterFiber(fiber)) {
                  nextChildren.push(getFiberIDThrows(fiber));
                } else {
                  var child = fiber.child;
                  var isTimedOutSuspense = fiber.tag === SuspenseComponent && fiber.memoizedState !== null;
                  if (isTimedOutSuspense) {
                    var primaryChildFragment = fiber.child;
                    var fallbackChildFragment = primaryChildFragment ? primaryChildFragment.sibling : null;
                    var fallbackChild = fallbackChildFragment ? fallbackChildFragment.child : null;
                    if (fallbackChild !== null) {
                      child = fallbackChild;
                    }
                  }
                  while (child !== null) {
                    findReorderedChildrenRecursively(child, nextChildren);
                    child = child.sibling;
                  }
                }
              }
              function updateFiberRecursively(nextFiber, prevFiber, parentFiber, traceNearestHostComponentUpdate) {
                var id = getOrGenerateFiberID(nextFiber);
                if (__DEBUG__) {
                  debug2("updateFiberRecursively()", nextFiber, parentFiber);
                }
                if (traceUpdatesEnabled) {
                  var elementType = getElementTypeForFiber(nextFiber);
                  if (traceNearestHostComponentUpdate) {
                    if (elementType === ElementTypeHostComponent) {
                      traceUpdatesForNodes.add(nextFiber.stateNode);
                      traceNearestHostComponentUpdate = false;
                    }
                  } else {
                    if (elementType === types_ElementTypeFunction || elementType === types_ElementTypeClass || elementType === ElementTypeContext || elementType === types_ElementTypeMemo || elementType === types_ElementTypeForwardRef) {
                      traceNearestHostComponentUpdate = didFiberRender(prevFiber, nextFiber);
                    }
                  }
                }
                if (mostRecentlyInspectedElement !== null && mostRecentlyInspectedElement.id === id && didFiberRender(prevFiber, nextFiber)) {
                  hasElementUpdatedSinceLastInspected = true;
                }
                var shouldIncludeInTree = !shouldFilterFiber(nextFiber);
                var isSuspense = nextFiber.tag === SuspenseComponent;
                var shouldResetChildren = false;
                var prevDidTimeout = isSuspense && prevFiber.memoizedState !== null;
                var nextDidTimeOut = isSuspense && nextFiber.memoizedState !== null;
                if (prevDidTimeout && nextDidTimeOut) {
                  var nextFiberChild = nextFiber.child;
                  var nextFallbackChildSet = nextFiberChild ? nextFiberChild.sibling : null;
                  var prevFiberChild = prevFiber.child;
                  var prevFallbackChildSet = prevFiberChild ? prevFiberChild.sibling : null;
                  if (prevFallbackChildSet == null && nextFallbackChildSet != null) {
                    mountFiberRecursively(nextFallbackChildSet, shouldIncludeInTree ? nextFiber : parentFiber, true, traceNearestHostComponentUpdate);
                    shouldResetChildren = true;
                  }
                  if (nextFallbackChildSet != null && prevFallbackChildSet != null && updateFiberRecursively(nextFallbackChildSet, prevFallbackChildSet, nextFiber, traceNearestHostComponentUpdate)) {
                    shouldResetChildren = true;
                  }
                } else if (prevDidTimeout && !nextDidTimeOut) {
                  var nextPrimaryChildSet = nextFiber.child;
                  if (nextPrimaryChildSet !== null) {
                    mountFiberRecursively(nextPrimaryChildSet, shouldIncludeInTree ? nextFiber : parentFiber, true, traceNearestHostComponentUpdate);
                  }
                  shouldResetChildren = true;
                } else if (!prevDidTimeout && nextDidTimeOut) {
                  unmountFiberChildrenRecursively(prevFiber);
                  var _nextFiberChild = nextFiber.child;
                  var _nextFallbackChildSet = _nextFiberChild ? _nextFiberChild.sibling : null;
                  if (_nextFallbackChildSet != null) {
                    mountFiberRecursively(_nextFallbackChildSet, shouldIncludeInTree ? nextFiber : parentFiber, true, traceNearestHostComponentUpdate);
                    shouldResetChildren = true;
                  }
                } else {
                  if (nextFiber.child !== prevFiber.child) {
                    var nextChild = nextFiber.child;
                    var prevChildAtSameIndex = prevFiber.child;
                    while (nextChild) {
                      if (nextChild.alternate) {
                        var prevChild = nextChild.alternate;
                        if (updateFiberRecursively(nextChild, prevChild, shouldIncludeInTree ? nextFiber : parentFiber, traceNearestHostComponentUpdate)) {
                          shouldResetChildren = true;
                        }
                        if (prevChild !== prevChildAtSameIndex) {
                          shouldResetChildren = true;
                        }
                      } else {
                        mountFiberRecursively(nextChild, shouldIncludeInTree ? nextFiber : parentFiber, false, traceNearestHostComponentUpdate);
                        shouldResetChildren = true;
                      }
                      nextChild = nextChild.sibling;
                      if (!shouldResetChildren && prevChildAtSameIndex !== null) {
                        prevChildAtSameIndex = prevChildAtSameIndex.sibling;
                      }
                    }
                    if (prevChildAtSameIndex !== null) {
                      shouldResetChildren = true;
                    }
                  } else {
                    if (traceUpdatesEnabled) {
                      if (traceNearestHostComponentUpdate) {
                        var hostFibers = findAllCurrentHostFibers(getFiberIDThrows(nextFiber));
                        hostFibers.forEach(function(hostFiber) {
                          traceUpdatesForNodes.add(hostFiber.stateNode);
                        });
                      }
                    }
                  }
                }
                if (shouldIncludeInTree) {
                  var isProfilingSupported = nextFiber.hasOwnProperty("treeBaseDuration");
                  if (isProfilingSupported) {
                    recordProfilingDurations(nextFiber);
                  }
                }
                if (shouldResetChildren) {
                  if (shouldIncludeInTree) {
                    var nextChildSet = nextFiber.child;
                    if (nextDidTimeOut) {
                      var _nextFiberChild2 = nextFiber.child;
                      nextChildSet = _nextFiberChild2 ? _nextFiberChild2.sibling : null;
                    }
                    if (nextChildSet != null) {
                      recordResetChildren(nextFiber, nextChildSet);
                    }
                    return false;
                  } else {
                    return true;
                  }
                } else {
                  return false;
                }
              }
              function cleanup() {
              }
              function rootSupportsProfiling(root) {
                if (root.memoizedInteractions != null) {
                  return true;
                } else if (root.current != null && root.current.hasOwnProperty("treeBaseDuration")) {
                  return true;
                } else {
                  return false;
                }
              }
              function flushInitialOperations() {
                var localPendingOperationsQueue = pendingOperationsQueue;
                pendingOperationsQueue = null;
                if (localPendingOperationsQueue !== null && localPendingOperationsQueue.length > 0) {
                  localPendingOperationsQueue.forEach(function(operations) {
                    hook2.emit("operations", operations);
                  });
                } else {
                  if (trackedPath !== null) {
                    mightBeOnTrackedPath = true;
                  }
                  hook2.getFiberRoots(rendererID).forEach(function(root) {
                    currentRootID = getOrGenerateFiberID(root.current);
                    setRootPseudoKey(currentRootID, root.current);
                    if (isProfiling && rootSupportsProfiling(root)) {
                      currentCommitProfilingMetadata = {
                        changeDescriptions: recordChangeDescriptions ? /* @__PURE__ */ new Map() : null,
                        durations: [],
                        commitTime: renderer_getCurrentTime() - profilingStartTime,
                        maxActualDuration: 0,
                        priorityLevel: null,
                        updaters: getUpdatersList(root),
                        effectDuration: null,
                        passiveEffectDuration: null
                      };
                    }
                    mountFiberRecursively(root.current, null, false, false);
                    flushPendingEvents(root);
                    currentRootID = -1;
                  });
                }
              }
              function getUpdatersList(root) {
                return root.memoizedUpdaters != null ? Array.from(root.memoizedUpdaters).filter(function(fiber) {
                  return getFiberIDUnsafe(fiber) !== null;
                }).map(fiberToSerializedElement) : null;
              }
              function handleCommitFiberUnmount(fiber) {
                if (!untrackFibersSet.has(fiber)) {
                  recordUnmount(fiber, false);
                }
              }
              function handlePostCommitFiberRoot(root) {
                if (isProfiling && rootSupportsProfiling(root)) {
                  if (currentCommitProfilingMetadata !== null) {
                    var _getEffectDurations = getEffectDurations(root), effectDuration = _getEffectDurations.effectDuration, passiveEffectDuration = _getEffectDurations.passiveEffectDuration;
                    currentCommitProfilingMetadata.effectDuration = effectDuration;
                    currentCommitProfilingMetadata.passiveEffectDuration = passiveEffectDuration;
                  }
                }
              }
              function handleCommitFiberRoot(root, priorityLevel) {
                var current = root.current;
                var alternate = current.alternate;
                untrackFibers();
                currentRootID = getOrGenerateFiberID(current);
                if (trackedPath !== null) {
                  mightBeOnTrackedPath = true;
                }
                if (traceUpdatesEnabled) {
                  traceUpdatesForNodes.clear();
                }
                var isProfilingSupported = rootSupportsProfiling(root);
                if (isProfiling && isProfilingSupported) {
                  currentCommitProfilingMetadata = {
                    changeDescriptions: recordChangeDescriptions ? /* @__PURE__ */ new Map() : null,
                    durations: [],
                    commitTime: renderer_getCurrentTime() - profilingStartTime,
                    maxActualDuration: 0,
                    priorityLevel: priorityLevel == null ? null : formatPriorityLevel(priorityLevel),
                    updaters: getUpdatersList(root),
                    effectDuration: null,
                    passiveEffectDuration: null
                  };
                }
                if (alternate) {
                  var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null && alternate.memoizedState.isDehydrated !== true;
                  var isMounted = current.memoizedState != null && current.memoizedState.element != null && current.memoizedState.isDehydrated !== true;
                  if (!wasMounted && isMounted) {
                    setRootPseudoKey(currentRootID, current);
                    mountFiberRecursively(current, null, false, false);
                  } else if (wasMounted && isMounted) {
                    updateFiberRecursively(current, alternate, null, false);
                  } else if (wasMounted && !isMounted) {
                    removeRootPseudoKey(currentRootID);
                    recordUnmount(current, false);
                  }
                } else {
                  setRootPseudoKey(currentRootID, current);
                  mountFiberRecursively(current, null, false, false);
                }
                if (isProfiling && isProfilingSupported) {
                  if (!shouldBailoutWithPendingOperations()) {
                    var commitProfilingMetadata = rootToCommitProfilingMetadataMap.get(currentRootID);
                    if (commitProfilingMetadata != null) {
                      commitProfilingMetadata.push(currentCommitProfilingMetadata);
                    } else {
                      rootToCommitProfilingMetadataMap.set(currentRootID, [currentCommitProfilingMetadata]);
                    }
                  }
                }
                flushPendingEvents(root);
                if (traceUpdatesEnabled) {
                  hook2.emit("traceUpdates", traceUpdatesForNodes);
                }
                currentRootID = -1;
              }
              function findAllCurrentHostFibers(id) {
                var fibers = [];
                var fiber = findCurrentFiberUsingSlowPathById(id);
                if (!fiber) {
                  return fibers;
                }
                var node = fiber;
                while (true) {
                  if (node.tag === HostComponent || node.tag === HostText) {
                    fibers.push(node);
                  } else if (node.child) {
                    node.child.return = node;
                    node = node.child;
                    continue;
                  }
                  if (node === fiber) {
                    return fibers;
                  }
                  while (!node.sibling) {
                    if (!node.return || node.return === fiber) {
                      return fibers;
                    }
                    node = node.return;
                  }
                  node.sibling.return = node.return;
                  node = node.sibling;
                }
                return fibers;
              }
              function findNativeNodesForFiberID(id) {
                try {
                  var _fiber3 = findCurrentFiberUsingSlowPathById(id);
                  if (_fiber3 === null) {
                    return null;
                  }
                  var hostFibers = findAllCurrentHostFibers(id);
                  return hostFibers.map(function(hostFiber) {
                    return hostFiber.stateNode;
                  }).filter(Boolean);
                } catch (err2) {
                  return null;
                }
              }
              function getDisplayNameForFiberID(id) {
                var fiber = idToArbitraryFiberMap.get(id);
                return fiber != null ? getDisplayNameForFiber(fiber) : null;
              }
              function getFiberForNative(hostInstance) {
                return renderer.findFiberByHostInstance(hostInstance);
              }
              function getFiberIDForNative(hostInstance) {
                var findNearestUnfilteredAncestor = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                var fiber = renderer.findFiberByHostInstance(hostInstance);
                if (fiber != null) {
                  if (findNearestUnfilteredAncestor) {
                    while (fiber !== null && shouldFilterFiber(fiber)) {
                      fiber = fiber.return;
                    }
                  }
                  return getFiberIDThrows(fiber);
                }
                return null;
              }
              function assertIsMounted(fiber) {
                if (getNearestMountedFiber(fiber) !== fiber) {
                  throw new Error("Unable to find node on an unmounted component.");
                }
              }
              function getNearestMountedFiber(fiber) {
                var node = fiber;
                var nearestMounted = fiber;
                if (!fiber.alternate) {
                  var nextNode = node;
                  do {
                    node = nextNode;
                    var Placement = 2;
                    var Hydrating = 4096;
                    if ((node.flags & (Placement | Hydrating)) !== 0) {
                      nearestMounted = node.return;
                    }
                    nextNode = node.return;
                  } while (nextNode);
                } else {
                  while (node.return) {
                    node = node.return;
                  }
                }
                if (node.tag === HostRoot) {
                  return nearestMounted;
                }
                return null;
              }
              function findCurrentFiberUsingSlowPathById(id) {
                var fiber = idToArbitraryFiberMap.get(id);
                if (fiber == null) {
                  console.warn('Could not find Fiber with id "'.concat(id, '"'));
                  return null;
                }
                var alternate = fiber.alternate;
                if (!alternate) {
                  var nearestMounted = getNearestMountedFiber(fiber);
                  if (nearestMounted === null) {
                    throw new Error("Unable to find node on an unmounted component.");
                  }
                  if (nearestMounted !== fiber) {
                    return null;
                  }
                  return fiber;
                }
                var a = fiber;
                var b = alternate;
                while (true) {
                  var parentA = a.return;
                  if (parentA === null) {
                    break;
                  }
                  var parentB = parentA.alternate;
                  if (parentB === null) {
                    var nextParent = parentA.return;
                    if (nextParent !== null) {
                      a = b = nextParent;
                      continue;
                    }
                    break;
                  }
                  if (parentA.child === parentB.child) {
                    var child = parentA.child;
                    while (child) {
                      if (child === a) {
                        assertIsMounted(parentA);
                        return fiber;
                      }
                      if (child === b) {
                        assertIsMounted(parentA);
                        return alternate;
                      }
                      child = child.sibling;
                    }
                    throw new Error("Unable to find node on an unmounted component.");
                  }
                  if (a.return !== b.return) {
                    a = parentA;
                    b = parentB;
                  } else {
                    var didFindChild = false;
                    var _child = parentA.child;
                    while (_child) {
                      if (_child === a) {
                        didFindChild = true;
                        a = parentA;
                        b = parentB;
                        break;
                      }
                      if (_child === b) {
                        didFindChild = true;
                        b = parentA;
                        a = parentB;
                        break;
                      }
                      _child = _child.sibling;
                    }
                    if (!didFindChild) {
                      _child = parentB.child;
                      while (_child) {
                        if (_child === a) {
                          didFindChild = true;
                          a = parentB;
                          b = parentA;
                          break;
                        }
                        if (_child === b) {
                          didFindChild = true;
                          b = parentB;
                          a = parentA;
                          break;
                        }
                        _child = _child.sibling;
                      }
                      if (!didFindChild) {
                        throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                      }
                    }
                  }
                  if (a.alternate !== b) {
                    throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
                  }
                }
                if (a.tag !== HostRoot) {
                  throw new Error("Unable to find node on an unmounted component.");
                }
                if (a.stateNode.current === a) {
                  return fiber;
                }
                return alternate;
              }
              function prepareViewAttributeSource(id, path) {
                if (isMostRecentlyInspectedElement(id)) {
                  window.$attribute = utils_getInObject(mostRecentlyInspectedElement, path);
                }
              }
              function prepareViewElementSource(id) {
                var fiber = idToArbitraryFiberMap.get(id);
                if (fiber == null) {
                  console.warn('Could not find Fiber with id "'.concat(id, '"'));
                  return;
                }
                var elementType = fiber.elementType, tag = fiber.tag, type2 = fiber.type;
                switch (tag) {
                  case ClassComponent:
                  case IncompleteClassComponent:
                  case IndeterminateComponent:
                  case FunctionComponent:
                    global2.$type = type2;
                    break;
                  case ForwardRef:
                    global2.$type = type2.render;
                    break;
                  case MemoComponent:
                  case SimpleMemoComponent:
                    global2.$type = elementType != null && elementType.type != null ? elementType.type : type2;
                    break;
                  default:
                    global2.$type = null;
                    break;
                }
              }
              function fiberToSerializedElement(fiber) {
                return {
                  displayName: getDisplayNameForFiber(fiber) || "Anonymous",
                  id: getFiberIDThrows(fiber),
                  key: fiber.key,
                  type: getElementTypeForFiber(fiber)
                };
              }
              function getOwnersList(id) {
                var fiber = findCurrentFiberUsingSlowPathById(id);
                if (fiber == null) {
                  return null;
                }
                var _debugOwner = fiber._debugOwner;
                var owners = [fiberToSerializedElement(fiber)];
                if (_debugOwner) {
                  var owner = _debugOwner;
                  while (owner !== null) {
                    owners.unshift(fiberToSerializedElement(owner));
                    owner = owner._debugOwner || null;
                  }
                }
                return owners;
              }
              function getInstanceAndStyle(id) {
                var instance = null;
                var style = null;
                var fiber = findCurrentFiberUsingSlowPathById(id);
                if (fiber !== null) {
                  instance = fiber.stateNode;
                  if (fiber.memoizedProps !== null) {
                    style = fiber.memoizedProps.style;
                  }
                }
                return {
                  instance,
                  style
                };
              }
              function isErrorBoundary(fiber) {
                var tag = fiber.tag, type2 = fiber.type;
                switch (tag) {
                  case ClassComponent:
                  case IncompleteClassComponent:
                    var instance = fiber.stateNode;
                    return typeof type2.getDerivedStateFromError === "function" || instance !== null && typeof instance.componentDidCatch === "function";
                  default:
                    return false;
                }
              }
              function getNearestErrorBoundaryID(fiber) {
                var parent = fiber.return;
                while (parent !== null) {
                  if (isErrorBoundary(parent)) {
                    return getFiberIDUnsafe(parent);
                  }
                  parent = parent.return;
                }
                return null;
              }
              function inspectElementRaw(id) {
                var fiber = findCurrentFiberUsingSlowPathById(id);
                if (fiber == null) {
                  return null;
                }
                var _debugOwner = fiber._debugOwner, _debugSource = fiber._debugSource, stateNode = fiber.stateNode, key2 = fiber.key, memoizedProps = fiber.memoizedProps, memoizedState = fiber.memoizedState, dependencies = fiber.dependencies, tag = fiber.tag, type2 = fiber.type;
                var elementType = getElementTypeForFiber(fiber);
                var usesHooks = (tag === FunctionComponent || tag === SimpleMemoComponent || tag === ForwardRef) && (!!memoizedState || !!dependencies);
                var showState = !usesHooks && tag !== CacheComponent;
                var typeSymbol = getTypeSymbol(type2);
                var canViewSource = false;
                var context = null;
                if (tag === ClassComponent || tag === FunctionComponent || tag === IncompleteClassComponent || tag === IndeterminateComponent || tag === MemoComponent || tag === ForwardRef || tag === SimpleMemoComponent) {
                  canViewSource = true;
                  if (stateNode && stateNode.context != null) {
                    var shouldHideContext = elementType === types_ElementTypeClass && !(type2.contextTypes || type2.contextType);
                    if (!shouldHideContext) {
                      context = stateNode.context;
                    }
                  }
                } else if (typeSymbol === CONTEXT_NUMBER || typeSymbol === CONTEXT_SYMBOL_STRING) {
                  var consumerResolvedContext = type2._context || type2;
                  context = consumerResolvedContext._currentValue || null;
                  var _current = fiber.return;
                  while (_current !== null) {
                    var currentType = _current.type;
                    var currentTypeSymbol = getTypeSymbol(currentType);
                    if (currentTypeSymbol === PROVIDER_NUMBER || currentTypeSymbol === PROVIDER_SYMBOL_STRING) {
                      var providerResolvedContext = currentType._context || currentType.context;
                      if (providerResolvedContext === consumerResolvedContext) {
                        context = _current.memoizedProps.value;
                        break;
                      }
                    }
                    _current = _current.return;
                  }
                }
                var hasLegacyContext = false;
                if (context !== null) {
                  hasLegacyContext = !!type2.contextTypes;
                  context = {
                    value: context
                  };
                }
                var owners = null;
                if (_debugOwner) {
                  owners = [];
                  var owner = _debugOwner;
                  while (owner !== null) {
                    owners.push(fiberToSerializedElement(owner));
                    owner = owner._debugOwner || null;
                  }
                }
                var isTimedOutSuspense = tag === SuspenseComponent && memoizedState !== null;
                var hooks = null;
                if (usesHooks) {
                  var originalConsoleMethods = {};
                  for (var method2 in console) {
                    try {
                      originalConsoleMethods[method2] = console[method2];
                      console[method2] = function() {
                      };
                    } catch (error) {
                    }
                  }
                  try {
                    hooks = (0, react_debug_tools.inspectHooksOfFiber)(
                      fiber,
                      renderer.currentDispatcherRef,
                      true
                    );
                  } finally {
                    for (var _method in originalConsoleMethods) {
                      try {
                        console[_method] = originalConsoleMethods[_method];
                      } catch (error) {
                      }
                    }
                  }
                }
                var rootType = null;
                var current = fiber;
                while (current.return !== null) {
                  current = current.return;
                }
                var fiberRoot = current.stateNode;
                if (fiberRoot != null && fiberRoot._debugRootType !== null) {
                  rootType = fiberRoot._debugRootType;
                }
                var errors = fiberIDToErrorsMap.get(id) || /* @__PURE__ */ new Map();
                var warnings = fiberIDToWarningsMap.get(id) || /* @__PURE__ */ new Map();
                var isErrored = false;
                var targetErrorBoundaryID;
                if (isErrorBoundary(fiber)) {
                  var DidCapture = 128;
                  isErrored = (fiber.flags & DidCapture) !== 0 || forceErrorForFiberIDs.get(id) === true;
                  targetErrorBoundaryID = isErrored ? id : getNearestErrorBoundaryID(fiber);
                } else {
                  targetErrorBoundaryID = getNearestErrorBoundaryID(fiber);
                }
                var plugins = {
                  stylex: null
                };
                if (enableStyleXFeatures) {
                  if (memoizedProps != null && memoizedProps.hasOwnProperty("xstyle")) {
                    plugins.stylex = getStyleXData(memoizedProps.xstyle);
                  }
                }
                return {
                  id,
                  canEditHooks: typeof overrideHookState === "function",
                  canEditFunctionProps: typeof overrideProps === "function",
                  canEditHooksAndDeletePaths: typeof overrideHookStateDeletePath === "function",
                  canEditHooksAndRenamePaths: typeof overrideHookStateRenamePath === "function",
                  canEditFunctionPropsDeletePaths: typeof overridePropsDeletePath === "function",
                  canEditFunctionPropsRenamePaths: typeof overridePropsRenamePath === "function",
                  canToggleError: supportsTogglingError && targetErrorBoundaryID != null,
                  isErrored,
                  targetErrorBoundaryID,
                  canToggleSuspense: supportsTogglingSuspense && (!isTimedOutSuspense || forceFallbackForSuspenseIDs.has(id)),
                  canViewSource,
                  hasLegacyContext,
                  key: key2 != null ? key2 : null,
                  displayName: getDisplayNameForFiber(fiber),
                  type: elementType,
                  context,
                  hooks,
                  props: memoizedProps,
                  state: showState ? memoizedState : null,
                  errors: Array.from(errors.entries()),
                  warnings: Array.from(warnings.entries()),
                  owners,
                  source: _debugSource || null,
                  rootType,
                  rendererPackageName: renderer.rendererPackageName,
                  rendererVersion: renderer.version,
                  plugins
                };
              }
              var mostRecentlyInspectedElement = null;
              var hasElementUpdatedSinceLastInspected = false;
              var currentlyInspectedPaths = {};
              function isMostRecentlyInspectedElement(id) {
                return mostRecentlyInspectedElement !== null && mostRecentlyInspectedElement.id === id;
              }
              function isMostRecentlyInspectedElementCurrent(id) {
                return isMostRecentlyInspectedElement(id) && !hasElementUpdatedSinceLastInspected;
              }
              function mergeInspectedPaths(path) {
                var current = currentlyInspectedPaths;
                path.forEach(function(key2) {
                  if (!current[key2]) {
                    current[key2] = {};
                  }
                  current = current[key2];
                });
              }
              function createIsPathAllowed(key2, secondaryCategory) {
                return function isPathAllowed(path) {
                  switch (secondaryCategory) {
                    case "hooks":
                      if (path.length === 1) {
                        return true;
                      }
                      if (path[path.length - 2] === "hookSource" && path[path.length - 1] === "fileName") {
                        return true;
                      }
                      if (path[path.length - 1] === "subHooks" || path[path.length - 2] === "subHooks") {
                        return true;
                      }
                      break;
                    default:
                      break;
                  }
                  var current = key2 === null ? currentlyInspectedPaths : currentlyInspectedPaths[key2];
                  if (!current) {
                    return false;
                  }
                  for (var i2 = 0; i2 < path.length; i2++) {
                    current = current[path[i2]];
                    if (!current) {
                      return false;
                    }
                  }
                  return true;
                };
              }
              function updateSelectedElement(inspectedElement) {
                var hooks = inspectedElement.hooks, id = inspectedElement.id, props = inspectedElement.props;
                var fiber = idToArbitraryFiberMap.get(id);
                if (fiber == null) {
                  console.warn('Could not find Fiber with id "'.concat(id, '"'));
                  return;
                }
                var elementType = fiber.elementType, stateNode = fiber.stateNode, tag = fiber.tag, type2 = fiber.type;
                switch (tag) {
                  case ClassComponent:
                  case IncompleteClassComponent:
                  case IndeterminateComponent:
                    global2.$r = stateNode;
                    break;
                  case FunctionComponent:
                    global2.$r = {
                      hooks,
                      props,
                      type: type2
                    };
                    break;
                  case ForwardRef:
                    global2.$r = {
                      hooks,
                      props,
                      type: type2.render
                    };
                    break;
                  case MemoComponent:
                  case SimpleMemoComponent:
                    global2.$r = {
                      hooks,
                      props,
                      type: elementType != null && elementType.type != null ? elementType.type : type2
                    };
                    break;
                  default:
                    global2.$r = null;
                    break;
                }
              }
              function storeAsGlobal(id, path, count) {
                if (isMostRecentlyInspectedElement(id)) {
                  var value = utils_getInObject(mostRecentlyInspectedElement, path);
                  var key2 = "$reactTemp".concat(count);
                  window[key2] = value;
                  console.log(key2);
                  console.log(value);
                }
              }
              function getSerializedElementValueByPath(id, path) {
                if (isMostRecentlyInspectedElement(id)) {
                  var valueToCopy = utils_getInObject(mostRecentlyInspectedElement, path);
                  return serializeToString(valueToCopy);
                }
              }
              function inspectElement(requestID, id, path, forceFullData) {
                if (path !== null) {
                  mergeInspectedPaths(path);
                }
                if (isMostRecentlyInspectedElement(id) && !forceFullData) {
                  if (!hasElementUpdatedSinceLastInspected) {
                    if (path !== null) {
                      var secondaryCategory = null;
                      if (path[0] === "hooks") {
                        secondaryCategory = "hooks";
                      }
                      return {
                        id,
                        responseID: requestID,
                        type: "hydrated-path",
                        path,
                        value: cleanForBridge(utils_getInObject(mostRecentlyInspectedElement, path), createIsPathAllowed(null, secondaryCategory), path)
                      };
                    } else {
                      return {
                        id,
                        responseID: requestID,
                        type: "no-change"
                      };
                    }
                  }
                } else {
                  currentlyInspectedPaths = {};
                }
                hasElementUpdatedSinceLastInspected = false;
                try {
                  mostRecentlyInspectedElement = inspectElementRaw(id);
                } catch (error) {
                  if (error.name === "ReactDebugToolsRenderError") {
                    var message = "Error rendering inspected element.";
                    var stack;
                    console.error(message + "\n\n", error);
                    if (error.cause != null) {
                      var _fiber4 = findCurrentFiberUsingSlowPathById(id);
                      var componentName = _fiber4 != null ? getDisplayNameForFiber(_fiber4) : null;
                      console.error("React DevTools encountered an error while trying to inspect hooks. This is most likely caused by an error in current inspected component" + (componentName != null ? ': "'.concat(componentName, '".') : ".") + "\nThe error thrown in the component is: \n\n", error.cause);
                      if (error.cause instanceof Error) {
                        message = error.cause.message || message;
                        stack = error.cause.stack;
                      }
                    }
                    return {
                      type: "error",
                      errorType: "user",
                      id,
                      responseID: requestID,
                      message,
                      stack
                    };
                  }
                  if (error.name === "ReactDebugToolsUnsupportedHookError") {
                    return {
                      type: "error",
                      errorType: "unknown-hook",
                      id,
                      responseID: requestID,
                      message: "Unsupported hook in the react-debug-tools package: " + error.message
                    };
                  }
                  console.error("Error inspecting element.\n\n", error);
                  return {
                    type: "error",
                    errorType: "uncaught",
                    id,
                    responseID: requestID,
                    message: error.message,
                    stack: error.stack
                  };
                }
                if (mostRecentlyInspectedElement === null) {
                  return {
                    id,
                    responseID: requestID,
                    type: "not-found"
                  };
                }
                updateSelectedElement(mostRecentlyInspectedElement);
                var cleanedInspectedElement = renderer_objectSpread({}, mostRecentlyInspectedElement);
                cleanedInspectedElement.context = cleanForBridge(cleanedInspectedElement.context, createIsPathAllowed("context", null));
                cleanedInspectedElement.hooks = cleanForBridge(cleanedInspectedElement.hooks, createIsPathAllowed("hooks", "hooks"));
                cleanedInspectedElement.props = cleanForBridge(cleanedInspectedElement.props, createIsPathAllowed("props", null));
                cleanedInspectedElement.state = cleanForBridge(cleanedInspectedElement.state, createIsPathAllowed("state", null));
                return {
                  id,
                  responseID: requestID,
                  type: "full-data",
                  value: cleanedInspectedElement
                };
              }
              function logElementToConsole(id) {
                var result = isMostRecentlyInspectedElementCurrent(id) ? mostRecentlyInspectedElement : inspectElementRaw(id);
                if (result === null) {
                  console.warn('Could not find Fiber with id "'.concat(id, '"'));
                  return;
                }
                var supportsGroup = typeof console.groupCollapsed === "function";
                if (supportsGroup) {
                  console.groupCollapsed(
                    "[Click to expand] %c<".concat(result.displayName || "Component", " />"),
                    "color: var(--dom-tag-name-color); font-weight: normal;"
                  );
                }
                if (result.props !== null) {
                  console.log("Props:", result.props);
                }
                if (result.state !== null) {
                  console.log("State:", result.state);
                }
                if (result.hooks !== null) {
                  console.log("Hooks:", result.hooks);
                }
                var nativeNodes = findNativeNodesForFiberID(id);
                if (nativeNodes !== null) {
                  console.log("Nodes:", nativeNodes);
                }
                if (result.source !== null) {
                  console.log("Location:", result.source);
                }
                if (window.chrome || /firefox/i.test(navigator.userAgent)) {
                  console.log("Right-click any value to save it as a global variable for further inspection.");
                }
                if (supportsGroup) {
                  console.groupEnd();
                }
              }
              function deletePath(type2, id, hookID, path) {
                var fiber = findCurrentFiberUsingSlowPathById(id);
                if (fiber !== null) {
                  var instance = fiber.stateNode;
                  switch (type2) {
                    case "context":
                      path = path.slice(1);
                      switch (fiber.tag) {
                        case ClassComponent:
                          if (path.length === 0) {
                          } else {
                            deletePathInObject(instance.context, path);
                          }
                          instance.forceUpdate();
                          break;
                        case FunctionComponent:
                          break;
                      }
                      break;
                    case "hooks":
                      if (typeof overrideHookStateDeletePath === "function") {
                        overrideHookStateDeletePath(fiber, hookID, path);
                      }
                      break;
                    case "props":
                      if (instance === null) {
                        if (typeof overridePropsDeletePath === "function") {
                          overridePropsDeletePath(fiber, path);
                        }
                      } else {
                        fiber.pendingProps = copyWithDelete(instance.props, path);
                        instance.forceUpdate();
                      }
                      break;
                    case "state":
                      deletePathInObject(instance.state, path);
                      instance.forceUpdate();
                      break;
                  }
                }
              }
              function renamePath(type2, id, hookID, oldPath, newPath) {
                var fiber = findCurrentFiberUsingSlowPathById(id);
                if (fiber !== null) {
                  var instance = fiber.stateNode;
                  switch (type2) {
                    case "context":
                      oldPath = oldPath.slice(1);
                      newPath = newPath.slice(1);
                      switch (fiber.tag) {
                        case ClassComponent:
                          if (oldPath.length === 0) {
                          } else {
                            renamePathInObject(instance.context, oldPath, newPath);
                          }
                          instance.forceUpdate();
                          break;
                        case FunctionComponent:
                          break;
                      }
                      break;
                    case "hooks":
                      if (typeof overrideHookStateRenamePath === "function") {
                        overrideHookStateRenamePath(fiber, hookID, oldPath, newPath);
                      }
                      break;
                    case "props":
                      if (instance === null) {
                        if (typeof overridePropsRenamePath === "function") {
                          overridePropsRenamePath(fiber, oldPath, newPath);
                        }
                      } else {
                        fiber.pendingProps = copyWithRename(instance.props, oldPath, newPath);
                        instance.forceUpdate();
                      }
                      break;
                    case "state":
                      renamePathInObject(instance.state, oldPath, newPath);
                      instance.forceUpdate();
                      break;
                  }
                }
              }
              function overrideValueAtPath(type2, id, hookID, path, value) {
                var fiber = findCurrentFiberUsingSlowPathById(id);
                if (fiber !== null) {
                  var instance = fiber.stateNode;
                  switch (type2) {
                    case "context":
                      path = path.slice(1);
                      switch (fiber.tag) {
                        case ClassComponent:
                          if (path.length === 0) {
                            instance.context = value;
                          } else {
                            utils_setInObject(instance.context, path, value);
                          }
                          instance.forceUpdate();
                          break;
                        case FunctionComponent:
                          break;
                      }
                      break;
                    case "hooks":
                      if (typeof overrideHookState === "function") {
                        overrideHookState(fiber, hookID, path, value);
                      }
                      break;
                    case "props":
                      switch (fiber.tag) {
                        case ClassComponent:
                          fiber.pendingProps = copyWithSet(instance.props, path, value);
                          instance.forceUpdate();
                          break;
                        default:
                          if (typeof overrideProps === "function") {
                            overrideProps(fiber, path, value);
                          }
                          break;
                      }
                      break;
                    case "state":
                      switch (fiber.tag) {
                        case ClassComponent:
                          utils_setInObject(instance.state, path, value);
                          instance.forceUpdate();
                          break;
                      }
                      break;
                  }
                }
              }
              var currentCommitProfilingMetadata = null;
              var displayNamesByRootID = null;
              var idToContextsMap = null;
              var initialTreeBaseDurationsMap = null;
              var initialIDToRootMap = null;
              var isProfiling = false;
              var profilingStartTime = 0;
              var recordChangeDescriptions = false;
              var rootToCommitProfilingMetadataMap = null;
              function getProfilingData() {
                var dataForRoots = [];
                if (rootToCommitProfilingMetadataMap === null) {
                  throw Error("getProfilingData() called before any profiling data was recorded");
                }
                rootToCommitProfilingMetadataMap.forEach(function(commitProfilingMetadata, rootID) {
                  var commitData = [];
                  var initialTreeBaseDurations = [];
                  var displayName = displayNamesByRootID !== null && displayNamesByRootID.get(rootID) || "Unknown";
                  if (initialTreeBaseDurationsMap != null) {
                    initialTreeBaseDurationsMap.forEach(function(treeBaseDuration, id) {
                      if (initialIDToRootMap != null && initialIDToRootMap.get(id) === rootID) {
                        initialTreeBaseDurations.push([id, treeBaseDuration]);
                      }
                    });
                  }
                  commitProfilingMetadata.forEach(function(commitProfilingData, commitIndex) {
                    var changeDescriptions = commitProfilingData.changeDescriptions, durations = commitProfilingData.durations, effectDuration = commitProfilingData.effectDuration, maxActualDuration = commitProfilingData.maxActualDuration, passiveEffectDuration = commitProfilingData.passiveEffectDuration, priorityLevel = commitProfilingData.priorityLevel, commitTime = commitProfilingData.commitTime, updaters = commitProfilingData.updaters;
                    var fiberActualDurations = [];
                    var fiberSelfDurations = [];
                    for (var i2 = 0; i2 < durations.length; i2 += 3) {
                      var fiberID = durations[i2];
                      fiberActualDurations.push([fiberID, durations[i2 + 1]]);
                      fiberSelfDurations.push([fiberID, durations[i2 + 2]]);
                    }
                    commitData.push({
                      changeDescriptions: changeDescriptions !== null ? Array.from(changeDescriptions.entries()) : null,
                      duration: maxActualDuration,
                      effectDuration,
                      fiberActualDurations,
                      fiberSelfDurations,
                      passiveEffectDuration,
                      priorityLevel,
                      timestamp: commitTime,
                      updaters
                    });
                  });
                  dataForRoots.push({
                    commitData,
                    displayName,
                    initialTreeBaseDurations,
                    rootID
                  });
                });
                var timelineData = null;
                if (typeof getTimelineData === "function") {
                  var currentTimelineData = getTimelineData();
                  if (currentTimelineData) {
                    var batchUIDToMeasuresMap = currentTimelineData.batchUIDToMeasuresMap, internalModuleSourceToRanges = currentTimelineData.internalModuleSourceToRanges, laneToLabelMap = currentTimelineData.laneToLabelMap, laneToReactMeasureMap = currentTimelineData.laneToReactMeasureMap, rest = _objectWithoutProperties(currentTimelineData, ["batchUIDToMeasuresMap", "internalModuleSourceToRanges", "laneToLabelMap", "laneToReactMeasureMap"]);
                    timelineData = renderer_objectSpread(renderer_objectSpread({}, rest), {}, {
                      batchUIDToMeasuresKeyValueArray: Array.from(batchUIDToMeasuresMap.entries()),
                      internalModuleSourceToRanges: Array.from(internalModuleSourceToRanges.entries()),
                      laneToLabelKeyValueArray: Array.from(laneToLabelMap.entries()),
                      laneToReactMeasureKeyValueArray: Array.from(laneToReactMeasureMap.entries())
                    });
                  }
                }
                return {
                  dataForRoots,
                  rendererID,
                  timelineData
                };
              }
              function startProfiling(shouldRecordChangeDescriptions) {
                if (isProfiling) {
                  return;
                }
                recordChangeDescriptions = shouldRecordChangeDescriptions;
                displayNamesByRootID = /* @__PURE__ */ new Map();
                initialTreeBaseDurationsMap = new Map(idToTreeBaseDurationMap);
                initialIDToRootMap = new Map(idToRootMap);
                idToContextsMap = /* @__PURE__ */ new Map();
                hook2.getFiberRoots(rendererID).forEach(function(root) {
                  var rootID = getFiberIDThrows(root.current);
                  displayNamesByRootID.set(rootID, getDisplayNameForRoot(root.current));
                  if (shouldRecordChangeDescriptions) {
                    crawlToInitializeContextsMap(root.current);
                  }
                });
                isProfiling = true;
                profilingStartTime = renderer_getCurrentTime();
                rootToCommitProfilingMetadataMap = /* @__PURE__ */ new Map();
                if (toggleProfilingStatus !== null) {
                  toggleProfilingStatus(true);
                }
              }
              function stopProfiling() {
                isProfiling = false;
                recordChangeDescriptions = false;
                if (toggleProfilingStatus !== null) {
                  toggleProfilingStatus(false);
                }
              }
              if (sessionStorageGetItem(SESSION_STORAGE_RELOAD_AND_PROFILE_KEY) === "true") {
                startProfiling(sessionStorageGetItem(SESSION_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY) === "true");
              }
              function shouldErrorFiberAlwaysNull() {
                return null;
              }
              var forceErrorForFiberIDs = /* @__PURE__ */ new Map();
              function shouldErrorFiberAccordingToMap(fiber) {
                if (typeof setErrorHandler !== "function") {
                  throw new Error("Expected overrideError() to not get called for earlier React versions.");
                }
                var id = getFiberIDUnsafe(fiber);
                if (id === null) {
                  return null;
                }
                var status = null;
                if (forceErrorForFiberIDs.has(id)) {
                  status = forceErrorForFiberIDs.get(id);
                  if (status === false) {
                    forceErrorForFiberIDs.delete(id);
                    if (forceErrorForFiberIDs.size === 0) {
                      setErrorHandler(shouldErrorFiberAlwaysNull);
                    }
                  }
                }
                return status;
              }
              function overrideError(id, forceError) {
                if (typeof setErrorHandler !== "function" || typeof scheduleUpdate !== "function") {
                  throw new Error("Expected overrideError() to not get called for earlier React versions.");
                }
                forceErrorForFiberIDs.set(id, forceError);
                if (forceErrorForFiberIDs.size === 1) {
                  setErrorHandler(shouldErrorFiberAccordingToMap);
                }
                var fiber = idToArbitraryFiberMap.get(id);
                if (fiber != null) {
                  scheduleUpdate(fiber);
                }
              }
              function shouldSuspendFiberAlwaysFalse() {
                return false;
              }
              var forceFallbackForSuspenseIDs = /* @__PURE__ */ new Set();
              function shouldSuspendFiberAccordingToSet(fiber) {
                var maybeID = getFiberIDUnsafe(fiber);
                return maybeID !== null && forceFallbackForSuspenseIDs.has(maybeID);
              }
              function overrideSuspense(id, forceFallback) {
                if (typeof setSuspenseHandler !== "function" || typeof scheduleUpdate !== "function") {
                  throw new Error("Expected overrideSuspense() to not get called for earlier React versions.");
                }
                if (forceFallback) {
                  forceFallbackForSuspenseIDs.add(id);
                  if (forceFallbackForSuspenseIDs.size === 1) {
                    setSuspenseHandler(shouldSuspendFiberAccordingToSet);
                  }
                } else {
                  forceFallbackForSuspenseIDs.delete(id);
                  if (forceFallbackForSuspenseIDs.size === 0) {
                    setSuspenseHandler(shouldSuspendFiberAlwaysFalse);
                  }
                }
                var fiber = idToArbitraryFiberMap.get(id);
                if (fiber != null) {
                  scheduleUpdate(fiber);
                }
              }
              var trackedPath = null;
              var trackedPathMatchFiber = null;
              var trackedPathMatchDepth = -1;
              var mightBeOnTrackedPath = false;
              function setTrackedPath(path) {
                if (path === null) {
                  trackedPathMatchFiber = null;
                  trackedPathMatchDepth = -1;
                  mightBeOnTrackedPath = false;
                }
                trackedPath = path;
              }
              function updateTrackedPathStateBeforeMount(fiber) {
                if (trackedPath === null || !mightBeOnTrackedPath) {
                  return false;
                }
                var returnFiber = fiber.return;
                var returnAlternate = returnFiber !== null ? returnFiber.alternate : null;
                if (trackedPathMatchFiber === returnFiber || trackedPathMatchFiber === returnAlternate && returnAlternate !== null) {
                  var actualFrame = getPathFrame(fiber);
                  var expectedFrame = trackedPath[trackedPathMatchDepth + 1];
                  if (expectedFrame === void 0) {
                    throw new Error("Expected to see a frame at the next depth.");
                  }
                  if (actualFrame.index === expectedFrame.index && actualFrame.key === expectedFrame.key && actualFrame.displayName === expectedFrame.displayName) {
                    trackedPathMatchFiber = fiber;
                    trackedPathMatchDepth++;
                    if (trackedPathMatchDepth === trackedPath.length - 1) {
                      mightBeOnTrackedPath = false;
                    } else {
                      mightBeOnTrackedPath = true;
                    }
                    return false;
                  }
                }
                mightBeOnTrackedPath = false;
                return true;
              }
              function updateTrackedPathStateAfterMount(mightSiblingsBeOnTrackedPath) {
                mightBeOnTrackedPath = mightSiblingsBeOnTrackedPath;
              }
              var rootPseudoKeys = /* @__PURE__ */ new Map();
              var rootDisplayNameCounter = /* @__PURE__ */ new Map();
              function setRootPseudoKey(id, fiber) {
                var name = getDisplayNameForRoot(fiber);
                var counter = rootDisplayNameCounter.get(name) || 0;
                rootDisplayNameCounter.set(name, counter + 1);
                var pseudoKey = "".concat(name, ":").concat(counter);
                rootPseudoKeys.set(id, pseudoKey);
              }
              function removeRootPseudoKey(id) {
                var pseudoKey = rootPseudoKeys.get(id);
                if (pseudoKey === void 0) {
                  throw new Error("Expected root pseudo key to be known.");
                }
                var name = pseudoKey.slice(0, pseudoKey.lastIndexOf(":"));
                var counter = rootDisplayNameCounter.get(name);
                if (counter === void 0) {
                  throw new Error("Expected counter to be known.");
                }
                if (counter > 1) {
                  rootDisplayNameCounter.set(name, counter - 1);
                } else {
                  rootDisplayNameCounter.delete(name);
                }
                rootPseudoKeys.delete(id);
              }
              function getDisplayNameForRoot(fiber) {
                var preferredDisplayName = null;
                var fallbackDisplayName = null;
                var child = fiber.child;
                for (var i2 = 0; i2 < 3; i2++) {
                  if (child === null) {
                    break;
                  }
                  var displayName = getDisplayNameForFiber(child);
                  if (displayName !== null) {
                    if (typeof child.type === "function") {
                      preferredDisplayName = displayName;
                    } else if (fallbackDisplayName === null) {
                      fallbackDisplayName = displayName;
                    }
                  }
                  if (preferredDisplayName !== null) {
                    break;
                  }
                  child = child.child;
                }
                return preferredDisplayName || fallbackDisplayName || "Anonymous";
              }
              function getPathFrame(fiber) {
                var key2 = fiber.key;
                var displayName = getDisplayNameForFiber(fiber);
                var index = fiber.index;
                switch (fiber.tag) {
                  case HostRoot:
                    var id = getFiberIDThrows(fiber);
                    var pseudoKey = rootPseudoKeys.get(id);
                    if (pseudoKey === void 0) {
                      throw new Error("Expected mounted root to have known pseudo key.");
                    }
                    displayName = pseudoKey;
                    break;
                  case HostComponent:
                    displayName = fiber.type;
                    break;
                  default:
                    break;
                }
                return {
                  displayName,
                  key: key2,
                  index
                };
              }
              function getPathForElement(id) {
                var fiber = idToArbitraryFiberMap.get(id);
                if (fiber == null) {
                  return null;
                }
                var keyPath = [];
                while (fiber !== null) {
                  keyPath.push(getPathFrame(fiber));
                  fiber = fiber.return;
                }
                keyPath.reverse();
                return keyPath;
              }
              function getBestMatchForTrackedPath() {
                if (trackedPath === null) {
                  return null;
                }
                if (trackedPathMatchFiber === null) {
                  return null;
                }
                var fiber = trackedPathMatchFiber;
                while (fiber !== null && shouldFilterFiber(fiber)) {
                  fiber = fiber.return;
                }
                if (fiber === null) {
                  return null;
                }
                return {
                  id: getFiberIDThrows(fiber),
                  isFullMatch: trackedPathMatchDepth === trackedPath.length - 1
                };
              }
              var formatPriorityLevel = function formatPriorityLevel2(priorityLevel) {
                if (priorityLevel == null) {
                  return "Unknown";
                }
                switch (priorityLevel) {
                  case ImmediatePriority:
                    return "Immediate";
                  case UserBlockingPriority:
                    return "User-Blocking";
                  case NormalPriority:
                    return "Normal";
                  case LowPriority:
                    return "Low";
                  case IdlePriority:
                    return "Idle";
                  case NoPriority:
                  default:
                    return "Unknown";
                }
              };
              function setTraceUpdatesEnabled(isEnabled2) {
                traceUpdatesEnabled = isEnabled2;
              }
              function hasFiberWithId(id) {
                return idToArbitraryFiberMap.has(id);
              }
              return {
                cleanup,
                clearErrorsAndWarnings,
                clearErrorsForFiberID,
                clearWarningsForFiberID,
                getSerializedElementValueByPath,
                deletePath,
                findNativeNodesForFiberID,
                flushInitialOperations,
                getBestMatchForTrackedPath,
                getDisplayNameForFiberID,
                getFiberForNative,
                getFiberIDForNative,
                getInstanceAndStyle,
                getOwnersList,
                getPathForElement,
                getProfilingData,
                handleCommitFiberRoot,
                handleCommitFiberUnmount,
                handlePostCommitFiberRoot,
                hasFiberWithId,
                inspectElement,
                logElementToConsole,
                patchConsoleForStrictMode: patchForStrictMode,
                prepareViewAttributeSource,
                prepareViewElementSource,
                overrideError,
                overrideSuspense,
                overrideValueAtPath,
                renamePath,
                renderer,
                setTraceUpdatesEnabled,
                setTrackedPath,
                startProfiling,
                stopProfiling,
                storeAsGlobal,
                unpatchConsoleForStrictMode: unpatchForStrictMode,
                updateComponentFilters
              };
            }
            ;
            function console_toConsumableArray(arr) {
              return console_arrayWithoutHoles(arr) || console_iterableToArray(arr) || console_unsupportedIterableToArray(arr) || console_nonIterableSpread();
            }
            function console_nonIterableSpread() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function console_iterableToArray(iter) {
              if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
                return Array.from(iter);
            }
            function console_arrayWithoutHoles(arr) {
              if (Array.isArray(arr))
                return console_arrayLikeToArray(arr);
            }
            function console_createForOfIteratorHelper(o, allowArrayLike) {
              var it;
              if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
                if (Array.isArray(o) || (it = console_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
                  if (it)
                    o = it;
                  var i2 = 0;
                  var F = function F2() {
                  };
                  return { s: F, n: function n() {
                    if (i2 >= o.length)
                      return { done: true };
                    return { done: false, value: o[i2++] };
                  }, e: function e(_e) {
                    throw _e;
                  }, f: F };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }
              var normalCompletion = true, didErr = false, err2;
              return { s: function s() {
                it = o[Symbol.iterator]();
              }, n: function n() {
                var step = it.next();
                normalCompletion = step.done;
                return step;
              }, e: function e(_e2) {
                didErr = true;
                err2 = _e2;
              }, f: function f() {
                try {
                  if (!normalCompletion && it.return != null)
                    it.return();
                } finally {
                  if (didErr)
                    throw err2;
                }
              } };
            }
            function console_unsupportedIterableToArray(o, minLen) {
              if (!o)
                return;
              if (typeof o === "string")
                return console_arrayLikeToArray(o, minLen);
              var n = Object.prototype.toString.call(o).slice(8, -1);
              if (n === "Object" && o.constructor)
                n = o.constructor.name;
              if (n === "Map" || n === "Set")
                return Array.from(o);
              if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                return console_arrayLikeToArray(o, minLen);
            }
            function console_arrayLikeToArray(arr, len) {
              if (len == null || len > arr.length)
                len = arr.length;
              for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
                arr2[i2] = arr[i2];
              }
              return arr2;
            }
            var OVERRIDE_CONSOLE_METHODS = ["error", "trace", "warn"];
            var DIMMED_NODE_CONSOLE_COLOR = "\x1B[2m%s\x1B[0m";
            var PREFIX_REGEX = /\s{4}(in|at)\s{1}/;
            var ROW_COLUMN_NUMBER_REGEX = /:\d+:\d+(\n|$)/;
            function isStringComponentStack(text) {
              return PREFIX_REGEX.test(text) || ROW_COLUMN_NUMBER_REGEX.test(text);
            }
            var STYLE_DIRECTIVE_REGEX = /^%c/;
            function isStrictModeOverride(args, method2) {
              return args.length >= 2 && STYLE_DIRECTIVE_REGEX.test(args[0]) && args[1] === "color: ".concat(getConsoleColor(method2) || "");
            }
            function getConsoleColor(method2) {
              switch (method2) {
                case "warn":
                  return consoleSettingsRef.browserTheme === "light" ? "rgba(250, 180, 50, 0.75)" : "rgba(250, 180, 50, 0.5)";
                case "error":
                  return consoleSettingsRef.browserTheme === "light" ? "rgba(250, 123, 130, 0.75)" : "rgba(250, 123, 130, 0.5)";
                case "log":
                default:
                  return consoleSettingsRef.browserTheme === "light" ? "rgba(125, 125, 125, 0.75)" : "rgba(125, 125, 125, 0.5)";
              }
            }
            var injectedRenderers = /* @__PURE__ */ new Map();
            var targetConsole = console;
            var targetConsoleMethods = {};
            for (var method in console) {
              targetConsoleMethods[method] = console[method];
            }
            var unpatchFn = null;
            var isNode = false;
            try {
              isNode = void 0 === global;
            } catch (error) {
            }
            function dangerous_setTargetConsoleForTesting(targetConsoleForTesting) {
              targetConsole = targetConsoleForTesting;
              targetConsoleMethods = {};
              for (var _method in targetConsole) {
                targetConsoleMethods[_method] = console[_method];
              }
            }
            function registerRenderer(renderer, onErrorOrWarning) {
              var currentDispatcherRef = renderer.currentDispatcherRef, getCurrentFiber = renderer.getCurrentFiber, findFiberByHostInstance = renderer.findFiberByHostInstance, version = renderer.version;
              if (typeof findFiberByHostInstance !== "function") {
                return;
              }
              if (currentDispatcherRef != null && typeof getCurrentFiber === "function") {
                var _getInternalReactCons = getInternalReactConstants(version), ReactTypeOfWork = _getInternalReactCons.ReactTypeOfWork;
                injectedRenderers.set(renderer, {
                  currentDispatcherRef,
                  getCurrentFiber,
                  workTagMap: ReactTypeOfWork,
                  onErrorOrWarning
                });
              }
            }
            var consoleSettingsRef = {
              appendComponentStack: false,
              breakOnConsoleErrors: false,
              showInlineWarningsAndErrors: false,
              hideConsoleLogsInStrictMode: false,
              browserTheme: "dark"
            };
            function patch(_ref) {
              var appendComponentStack = _ref.appendComponentStack, breakOnConsoleErrors = _ref.breakOnConsoleErrors, showInlineWarningsAndErrors = _ref.showInlineWarningsAndErrors, hideConsoleLogsInStrictMode = _ref.hideConsoleLogsInStrictMode, browserTheme = _ref.browserTheme;
              consoleSettingsRef.appendComponentStack = appendComponentStack;
              consoleSettingsRef.breakOnConsoleErrors = breakOnConsoleErrors;
              consoleSettingsRef.showInlineWarningsAndErrors = showInlineWarningsAndErrors;
              consoleSettingsRef.hideConsoleLogsInStrictMode = hideConsoleLogsInStrictMode;
              consoleSettingsRef.browserTheme = browserTheme;
              if (appendComponentStack || breakOnConsoleErrors || showInlineWarningsAndErrors) {
                if (unpatchFn !== null) {
                  return;
                }
                var originalConsoleMethods = {};
                unpatchFn = function unpatchFn2() {
                  for (var _method2 in originalConsoleMethods) {
                    try {
                      targetConsole[_method2] = originalConsoleMethods[_method2];
                    } catch (error) {
                    }
                  }
                };
                OVERRIDE_CONSOLE_METHODS.forEach(function(method2) {
                  try {
                    var originalMethod = originalConsoleMethods[method2] = targetConsole[method2].__REACT_DEVTOOLS_ORIGINAL_METHOD__ ? targetConsole[method2].__REACT_DEVTOOLS_ORIGINAL_METHOD__ : targetConsole[method2];
                    var overrideMethod = function overrideMethod2() {
                      var shouldAppendWarningStack = false;
                      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                        args[_key] = arguments[_key];
                      }
                      if (method2 !== "log") {
                        if (consoleSettingsRef.appendComponentStack) {
                          var lastArg = args.length > 0 ? args[args.length - 1] : null;
                          var alreadyHasComponentStack = typeof lastArg === "string" && isStringComponentStack(lastArg);
                          shouldAppendWarningStack = !alreadyHasComponentStack;
                        }
                      }
                      var shouldShowInlineWarningsAndErrors = consoleSettingsRef.showInlineWarningsAndErrors && (method2 === "error" || method2 === "warn");
                      var _iterator = console_createForOfIteratorHelper(injectedRenderers.values()), _step;
                      try {
                        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                          var _step$value = _step.value, currentDispatcherRef = _step$value.currentDispatcherRef, getCurrentFiber = _step$value.getCurrentFiber, onErrorOrWarning = _step$value.onErrorOrWarning, workTagMap = _step$value.workTagMap;
                          var current = getCurrentFiber();
                          if (current != null) {
                            try {
                              if (shouldShowInlineWarningsAndErrors) {
                                if (typeof onErrorOrWarning === "function") {
                                  onErrorOrWarning(
                                    current,
                                    method2,
                                    args.slice()
                                  );
                                }
                              }
                              if (shouldAppendWarningStack) {
                                var componentStack = getStackByFiberInDevAndProd(workTagMap, current, currentDispatcherRef);
                                if (componentStack !== "") {
                                  if (isStrictModeOverride(args, method2)) {
                                    args[0] = "".concat(args[0], " %s");
                                    args.push(componentStack);
                                  } else {
                                    args.push(componentStack);
                                  }
                                }
                              }
                            } catch (error) {
                              setTimeout(function() {
                                throw error;
                              }, 0);
                            } finally {
                              break;
                            }
                          }
                        }
                      } catch (err2) {
                        _iterator.e(err2);
                      } finally {
                        _iterator.f();
                      }
                      if (consoleSettingsRef.breakOnConsoleErrors) {
                        debugger;
                      }
                      originalMethod.apply(void 0, args);
                    };
                    overrideMethod.__REACT_DEVTOOLS_ORIGINAL_METHOD__ = originalMethod;
                    originalMethod.__REACT_DEVTOOLS_OVERRIDE_METHOD__ = overrideMethod;
                    targetConsole[method2] = overrideMethod;
                  } catch (error) {
                  }
                });
              } else {
                unpatch();
              }
            }
            function unpatch() {
              if (unpatchFn !== null) {
                unpatchFn();
                unpatchFn = null;
              }
            }
            var unpatchForStrictModeFn = null;
            function patchForStrictMode() {
              if (consoleManagedByDevToolsDuringStrictMode) {
                var overrideConsoleMethods = ["error", "group", "groupCollapsed", "info", "log", "trace", "warn"];
                if (unpatchForStrictModeFn !== null) {
                  return;
                }
                var originalConsoleMethods = {};
                unpatchForStrictModeFn = function unpatchForStrictModeFn2() {
                  for (var _method3 in originalConsoleMethods) {
                    try {
                      targetConsole[_method3] = originalConsoleMethods[_method3];
                    } catch (error) {
                    }
                  }
                };
                overrideConsoleMethods.forEach(function(method2) {
                  try {
                    var originalMethod = originalConsoleMethods[method2] = targetConsole[method2].__REACT_DEVTOOLS_STRICT_MODE_ORIGINAL_METHOD__ ? targetConsole[method2].__REACT_DEVTOOLS_STRICT_MODE_ORIGINAL_METHOD__ : targetConsole[method2];
                    var overrideMethod = function overrideMethod2() {
                      if (!consoleSettingsRef.hideConsoleLogsInStrictMode) {
                        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                          args[_key2] = arguments[_key2];
                        }
                        if (isNode) {
                          originalMethod(DIMMED_NODE_CONSOLE_COLOR, format.apply(void 0, args));
                        } else {
                          var color = getConsoleColor(method2);
                          if (color) {
                            originalMethod.apply(void 0, console_toConsumableArray(formatWithStyles(args, "color: ".concat(color))));
                          } else {
                            throw Error("Console color is not defined");
                          }
                        }
                      }
                    };
                    overrideMethod.__REACT_DEVTOOLS_STRICT_MODE_ORIGINAL_METHOD__ = originalMethod;
                    originalMethod.__REACT_DEVTOOLS_STRICT_MODE_OVERRIDE_METHOD__ = overrideMethod;
                    targetConsole[method2] = overrideMethod;
                  } catch (error) {
                  }
                });
              }
            }
            function unpatchForStrictMode() {
              if (consoleManagedByDevToolsDuringStrictMode) {
                if (unpatchForStrictModeFn !== null) {
                  unpatchForStrictModeFn();
                  unpatchForStrictModeFn = null;
                }
              }
            }
            function patchConsoleUsingWindowValues() {
              var _castBool, _castBool2, _castBool3, _castBool4, _castBrowserTheme;
              var appendComponentStack = (_castBool = castBool(window.__REACT_DEVTOOLS_APPEND_COMPONENT_STACK__)) !== null && _castBool !== void 0 ? _castBool : true;
              var breakOnConsoleErrors = (_castBool2 = castBool(window.__REACT_DEVTOOLS_BREAK_ON_CONSOLE_ERRORS__)) !== null && _castBool2 !== void 0 ? _castBool2 : false;
              var showInlineWarningsAndErrors = (_castBool3 = castBool(window.__REACT_DEVTOOLS_SHOW_INLINE_WARNINGS_AND_ERRORS__)) !== null && _castBool3 !== void 0 ? _castBool3 : true;
              var hideConsoleLogsInStrictMode = (_castBool4 = castBool(window.__REACT_DEVTOOLS_HIDE_CONSOLE_LOGS_IN_STRICT_MODE__)) !== null && _castBool4 !== void 0 ? _castBool4 : false;
              var browserTheme = (_castBrowserTheme = castBrowserTheme(window.__REACT_DEVTOOLS_BROWSER_THEME__)) !== null && _castBrowserTheme !== void 0 ? _castBrowserTheme : "dark";
              patch({
                appendComponentStack,
                breakOnConsoleErrors,
                showInlineWarningsAndErrors,
                hideConsoleLogsInStrictMode,
                browserTheme
              });
            }
            function writeConsolePatchSettingsToWindow(settings) {
              window.__REACT_DEVTOOLS_APPEND_COMPONENT_STACK__ = settings.appendComponentStack;
              window.__REACT_DEVTOOLS_BREAK_ON_CONSOLE_ERRORS__ = settings.breakOnConsoleErrors;
              window.__REACT_DEVTOOLS_SHOW_INLINE_WARNINGS_AND_ERRORS__ = settings.showInlineWarningsAndErrors;
              window.__REACT_DEVTOOLS_HIDE_CONSOLE_LOGS_IN_STRICT_MODE__ = settings.hideConsoleLogsInStrictMode;
              window.__REACT_DEVTOOLS_BROWSER_THEME__ = settings.browserTheme;
            }
            function installConsoleFunctionsToWindow() {
              window.__REACT_DEVTOOLS_CONSOLE_FUNCTIONS__ = {
                patchConsoleUsingWindowValues,
                registerRendererWithConsole: registerRenderer
              };
            }
            ;
            function bridge_typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                bridge_typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                bridge_typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return bridge_typeof(obj);
            }
            function bridge_toConsumableArray(arr) {
              return bridge_arrayWithoutHoles(arr) || bridge_iterableToArray(arr) || bridge_unsupportedIterableToArray(arr) || bridge_nonIterableSpread();
            }
            function bridge_nonIterableSpread() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function bridge_unsupportedIterableToArray(o, minLen) {
              if (!o)
                return;
              if (typeof o === "string")
                return bridge_arrayLikeToArray(o, minLen);
              var n = Object.prototype.toString.call(o).slice(8, -1);
              if (n === "Object" && o.constructor)
                n = o.constructor.name;
              if (n === "Map" || n === "Set")
                return Array.from(o);
              if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                return bridge_arrayLikeToArray(o, minLen);
            }
            function bridge_iterableToArray(iter) {
              if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
                return Array.from(iter);
            }
            function bridge_arrayWithoutHoles(arr) {
              if (Array.isArray(arr))
                return bridge_arrayLikeToArray(arr);
            }
            function bridge_arrayLikeToArray(arr, len) {
              if (len == null || len > arr.length)
                len = arr.length;
              for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
                arr2[i2] = arr[i2];
              }
              return arr2;
            }
            function bridge_classCallCheck(instance, Constructor) {
              if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
              }
            }
            function bridge_defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            function bridge_createClass(Constructor, protoProps, staticProps) {
              if (protoProps)
                bridge_defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                bridge_defineProperties(Constructor, staticProps);
              return Constructor;
            }
            function _inherits(subClass, superClass) {
              if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function");
              }
              subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
              if (superClass)
                _setPrototypeOf(subClass, superClass);
            }
            function _setPrototypeOf(o, p) {
              _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
                o2.__proto__ = p2;
                return o2;
              };
              return _setPrototypeOf(o, p);
            }
            function _createSuper(Derived) {
              var hasNativeReflectConstruct = _isNativeReflectConstruct();
              return function _createSuperInternal() {
                var Super = _getPrototypeOf(Derived), result;
                if (hasNativeReflectConstruct) {
                  var NewTarget = _getPrototypeOf(this).constructor;
                  result = Reflect.construct(Super, arguments, NewTarget);
                } else {
                  result = Super.apply(this, arguments);
                }
                return _possibleConstructorReturn(this, result);
              };
            }
            function _possibleConstructorReturn(self2, call) {
              if (call && (bridge_typeof(call) === "object" || typeof call === "function")) {
                return call;
              }
              return _assertThisInitialized(self2);
            }
            function _assertThisInitialized(self2) {
              if (self2 === void 0) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              }
              return self2;
            }
            function _isNativeReflectConstruct() {
              if (typeof Reflect === "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy === "function")
                return true;
              try {
                Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                }));
                return true;
              } catch (e) {
                return false;
              }
            }
            function _getPrototypeOf(o) {
              _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
                return o2.__proto__ || Object.getPrototypeOf(o2);
              };
              return _getPrototypeOf(o);
            }
            function bridge_defineProperty(obj, key2, value) {
              if (key2 in obj) {
                Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
              } else {
                obj[key2] = value;
              }
              return obj;
            }
            var BATCH_DURATION = 100;
            var BRIDGE_PROTOCOL = [
              {
                version: 0,
                minNpmVersion: '"<4.11.0"',
                maxNpmVersion: '"<4.11.0"'
              },
              {
                version: 1,
                minNpmVersion: "4.13.0",
                maxNpmVersion: "4.21.0"
              },
              {
                version: 2,
                minNpmVersion: "4.22.0",
                maxNpmVersion: null
              }
            ];
            var currentBridgeProtocol = BRIDGE_PROTOCOL[BRIDGE_PROTOCOL.length - 1];
            var Bridge = /* @__PURE__ */ function(_EventEmitter) {
              _inherits(Bridge2, _EventEmitter);
              var _super = _createSuper(Bridge2);
              function Bridge2(wall) {
                var _this;
                bridge_classCallCheck(this, Bridge2);
                _this = _super.call(this);
                bridge_defineProperty(_assertThisInitialized(_this), "_isShutdown", false);
                bridge_defineProperty(_assertThisInitialized(_this), "_messageQueue", []);
                bridge_defineProperty(_assertThisInitialized(_this), "_timeoutID", null);
                bridge_defineProperty(_assertThisInitialized(_this), "_wallUnlisten", null);
                bridge_defineProperty(_assertThisInitialized(_this), "_flush", function() {
                  if (_this._timeoutID !== null) {
                    clearTimeout(_this._timeoutID);
                    _this._timeoutID = null;
                  }
                  if (_this._messageQueue.length) {
                    for (var i2 = 0; i2 < _this._messageQueue.length; i2 += 2) {
                      var _this$_wall;
                      (_this$_wall = _this._wall).send.apply(_this$_wall, [_this._messageQueue[i2]].concat(bridge_toConsumableArray(_this._messageQueue[i2 + 1])));
                    }
                    _this._messageQueue.length = 0;
                    _this._timeoutID = setTimeout(_this._flush, BATCH_DURATION);
                  }
                });
                bridge_defineProperty(_assertThisInitialized(_this), "overrideValueAtPath", function(_ref) {
                  var id = _ref.id, path = _ref.path, rendererID = _ref.rendererID, type2 = _ref.type, value = _ref.value;
                  switch (type2) {
                    case "context":
                      _this.send("overrideContext", {
                        id,
                        path,
                        rendererID,
                        wasForwarded: true,
                        value
                      });
                      break;
                    case "hooks":
                      _this.send("overrideHookState", {
                        id,
                        path,
                        rendererID,
                        wasForwarded: true,
                        value
                      });
                      break;
                    case "props":
                      _this.send("overrideProps", {
                        id,
                        path,
                        rendererID,
                        wasForwarded: true,
                        value
                      });
                      break;
                    case "state":
                      _this.send("overrideState", {
                        id,
                        path,
                        rendererID,
                        wasForwarded: true,
                        value
                      });
                      break;
                  }
                });
                _this._wall = wall;
                _this._wallUnlisten = wall.listen(function(message) {
                  if (message && message.event) {
                    _assertThisInitialized(_this).emit(message.event, message.payload);
                  }
                }) || null;
                _this.addListener("overrideValueAtPath", _this.overrideValueAtPath);
                return _this;
              }
              bridge_createClass(Bridge2, [{
                key: "send",
                value: function send(event) {
                  if (this._isShutdown) {
                    console.warn('Cannot send message "'.concat(event, '" through a Bridge that has been shutdown.'));
                    return;
                  }
                  for (var _len = arguments.length, payload = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    payload[_key - 1] = arguments[_key];
                  }
                  this._messageQueue.push(event, payload);
                  if (!this._timeoutID) {
                    this._timeoutID = setTimeout(this._flush, 0);
                  }
                }
              }, {
                key: "shutdown",
                value: function shutdown() {
                  if (this._isShutdown) {
                    console.warn("Bridge was already shutdown.");
                    return;
                  }
                  this.emit("shutdown");
                  this.send("shutdown");
                  this._isShutdown = true;
                  this.addListener = function() {
                  };
                  this.emit = function() {
                  };
                  this.removeAllListeners();
                  var wallUnlisten = this._wallUnlisten;
                  if (wallUnlisten) {
                    wallUnlisten();
                  }
                  do {
                    this._flush();
                  } while (this._messageQueue.length);
                  if (this._timeoutID !== null) {
                    clearTimeout(this._timeoutID);
                    this._timeoutID = null;
                  }
                }
              }, {
                key: "wall",
                get: function get() {
                  return this._wall;
                }
              }]);
              return Bridge2;
            }(EventEmitter);
            const src_bridge = Bridge;
            ;
            function agent_typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                agent_typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                agent_typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return agent_typeof(obj);
            }
            function agent_classCallCheck(instance, Constructor) {
              if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
              }
            }
            function agent_defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            function agent_createClass(Constructor, protoProps, staticProps) {
              if (protoProps)
                agent_defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                agent_defineProperties(Constructor, staticProps);
              return Constructor;
            }
            function agent_inherits(subClass, superClass) {
              if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function");
              }
              subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
              if (superClass)
                agent_setPrototypeOf(subClass, superClass);
            }
            function agent_setPrototypeOf(o, p) {
              agent_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
                o2.__proto__ = p2;
                return o2;
              };
              return agent_setPrototypeOf(o, p);
            }
            function agent_createSuper(Derived) {
              var hasNativeReflectConstruct = agent_isNativeReflectConstruct();
              return function _createSuperInternal() {
                var Super = agent_getPrototypeOf(Derived), result;
                if (hasNativeReflectConstruct) {
                  var NewTarget = agent_getPrototypeOf(this).constructor;
                  result = Reflect.construct(Super, arguments, NewTarget);
                } else {
                  result = Super.apply(this, arguments);
                }
                return agent_possibleConstructorReturn(this, result);
              };
            }
            function agent_possibleConstructorReturn(self2, call) {
              if (call && (agent_typeof(call) === "object" || typeof call === "function")) {
                return call;
              }
              return agent_assertThisInitialized(self2);
            }
            function agent_assertThisInitialized(self2) {
              if (self2 === void 0) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              }
              return self2;
            }
            function agent_isNativeReflectConstruct() {
              if (typeof Reflect === "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy === "function")
                return true;
              try {
                Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                }));
                return true;
              } catch (e) {
                return false;
              }
            }
            function agent_getPrototypeOf(o) {
              agent_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
                return o2.__proto__ || Object.getPrototypeOf(o2);
              };
              return agent_getPrototypeOf(o);
            }
            function agent_defineProperty(obj, key2, value) {
              if (key2 in obj) {
                Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
              } else {
                obj[key2] = value;
              }
              return obj;
            }
            var debug = function debug2(methodName) {
              if (__DEBUG__) {
                var _console;
                for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                  args[_key - 1] = arguments[_key];
                }
                (_console = console).log.apply(_console, ["%cAgent %c".concat(methodName), "color: purple; font-weight: bold;", "font-weight: bold;"].concat(args));
              }
            };
            var Agent = /* @__PURE__ */ function(_EventEmitter) {
              agent_inherits(Agent2, _EventEmitter);
              var _super = agent_createSuper(Agent2);
              function Agent2(bridge) {
                var _this;
                agent_classCallCheck(this, Agent2);
                _this = _super.call(this);
                agent_defineProperty(agent_assertThisInitialized(_this), "_isProfiling", false);
                agent_defineProperty(agent_assertThisInitialized(_this), "_recordChangeDescriptions", false);
                agent_defineProperty(agent_assertThisInitialized(_this), "_rendererInterfaces", {});
                agent_defineProperty(agent_assertThisInitialized(_this), "_persistedSelection", null);
                agent_defineProperty(agent_assertThisInitialized(_this), "_persistedSelectionMatch", null);
                agent_defineProperty(agent_assertThisInitialized(_this), "_traceUpdatesEnabled", false);
                agent_defineProperty(agent_assertThisInitialized(_this), "clearErrorsAndWarnings", function(_ref) {
                  var rendererID = _ref.rendererID;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '"'));
                  } else {
                    renderer.clearErrorsAndWarnings();
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "clearErrorsForFiberID", function(_ref2) {
                  var id = _ref2.id, rendererID = _ref2.rendererID;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '"'));
                  } else {
                    renderer.clearErrorsForFiberID(id);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "clearWarningsForFiberID", function(_ref3) {
                  var id = _ref3.id, rendererID = _ref3.rendererID;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '"'));
                  } else {
                    renderer.clearWarningsForFiberID(id);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "copyElementPath", function(_ref4) {
                  var id = _ref4.id, path = _ref4.path, rendererID = _ref4.rendererID;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  } else {
                    var value = renderer.getSerializedElementValueByPath(id, path);
                    if (value != null) {
                      _this._bridge.send("saveToClipboard", value);
                    } else {
                      console.warn('Unable to obtain serialized value for element "'.concat(id, '"'));
                    }
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "deletePath", function(_ref5) {
                  var hookID = _ref5.hookID, id = _ref5.id, path = _ref5.path, rendererID = _ref5.rendererID, type2 = _ref5.type;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  } else {
                    renderer.deletePath(type2, id, hookID, path);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "getBackendVersion", function() {
                  var version = "4.28.5-ef8a840bd";
                  if (version) {
                    _this._bridge.send("backendVersion", version);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "getBridgeProtocol", function() {
                  _this._bridge.send("bridgeProtocol", currentBridgeProtocol);
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "getProfilingData", function(_ref6) {
                  var rendererID = _ref6.rendererID;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '"'));
                  }
                  _this._bridge.send("profilingData", renderer.getProfilingData());
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "getProfilingStatus", function() {
                  _this._bridge.send("profilingStatus", _this._isProfiling);
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "getOwnersList", function(_ref7) {
                  var id = _ref7.id, rendererID = _ref7.rendererID;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  } else {
                    var owners = renderer.getOwnersList(id);
                    _this._bridge.send("ownersList", {
                      id,
                      owners
                    });
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "inspectElement", function(_ref8) {
                  var forceFullData = _ref8.forceFullData, id = _ref8.id, path = _ref8.path, rendererID = _ref8.rendererID, requestID = _ref8.requestID;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  } else {
                    _this._bridge.send("inspectedElement", renderer.inspectElement(requestID, id, path, forceFullData));
                    if (_this._persistedSelectionMatch === null || _this._persistedSelectionMatch.id !== id) {
                      _this._persistedSelection = null;
                      _this._persistedSelectionMatch = null;
                      renderer.setTrackedPath(null);
                      _this._throttledPersistSelection(rendererID, id);
                    }
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "logElementToConsole", function(_ref9) {
                  var id = _ref9.id, rendererID = _ref9.rendererID;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  } else {
                    renderer.logElementToConsole(id);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "overrideError", function(_ref10) {
                  var id = _ref10.id, rendererID = _ref10.rendererID, forceError = _ref10.forceError;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  } else {
                    renderer.overrideError(id, forceError);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "overrideSuspense", function(_ref11) {
                  var id = _ref11.id, rendererID = _ref11.rendererID, forceFallback = _ref11.forceFallback;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  } else {
                    renderer.overrideSuspense(id, forceFallback);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "overrideValueAtPath", function(_ref12) {
                  var hookID = _ref12.hookID, id = _ref12.id, path = _ref12.path, rendererID = _ref12.rendererID, type2 = _ref12.type, value = _ref12.value;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  } else {
                    renderer.overrideValueAtPath(type2, id, hookID, path, value);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "overrideContext", function(_ref13) {
                  var id = _ref13.id, path = _ref13.path, rendererID = _ref13.rendererID, wasForwarded = _ref13.wasForwarded, value = _ref13.value;
                  if (!wasForwarded) {
                    _this.overrideValueAtPath({
                      id,
                      path,
                      rendererID,
                      type: "context",
                      value
                    });
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "overrideHookState", function(_ref14) {
                  var id = _ref14.id, hookID = _ref14.hookID, path = _ref14.path, rendererID = _ref14.rendererID, wasForwarded = _ref14.wasForwarded, value = _ref14.value;
                  if (!wasForwarded) {
                    _this.overrideValueAtPath({
                      id,
                      path,
                      rendererID,
                      type: "hooks",
                      value
                    });
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "overrideProps", function(_ref15) {
                  var id = _ref15.id, path = _ref15.path, rendererID = _ref15.rendererID, wasForwarded = _ref15.wasForwarded, value = _ref15.value;
                  if (!wasForwarded) {
                    _this.overrideValueAtPath({
                      id,
                      path,
                      rendererID,
                      type: "props",
                      value
                    });
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "overrideState", function(_ref16) {
                  var id = _ref16.id, path = _ref16.path, rendererID = _ref16.rendererID, wasForwarded = _ref16.wasForwarded, value = _ref16.value;
                  if (!wasForwarded) {
                    _this.overrideValueAtPath({
                      id,
                      path,
                      rendererID,
                      type: "state",
                      value
                    });
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "reloadAndProfile", function(recordChangeDescriptions) {
                  sessionStorageSetItem(SESSION_STORAGE_RELOAD_AND_PROFILE_KEY, "true");
                  sessionStorageSetItem(SESSION_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY, recordChangeDescriptions ? "true" : "false");
                  _this._bridge.send("reloadAppForProfiling");
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "renamePath", function(_ref17) {
                  var hookID = _ref17.hookID, id = _ref17.id, newPath = _ref17.newPath, oldPath = _ref17.oldPath, rendererID = _ref17.rendererID, type2 = _ref17.type;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  } else {
                    renderer.renamePath(type2, id, hookID, oldPath, newPath);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "setTraceUpdatesEnabled", function(traceUpdatesEnabled) {
                  _this._traceUpdatesEnabled = traceUpdatesEnabled;
                  toggleEnabled(traceUpdatesEnabled);
                  for (var rendererID in _this._rendererInterfaces) {
                    var renderer = _this._rendererInterfaces[rendererID];
                    renderer.setTraceUpdatesEnabled(traceUpdatesEnabled);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "syncSelectionFromNativeElementsPanel", function() {
                  var target = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$0;
                  if (target == null) {
                    return;
                  }
                  _this.selectNode(target);
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "shutdown", function() {
                  _this.emit("shutdown");
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "startProfiling", function(recordChangeDescriptions) {
                  _this._recordChangeDescriptions = recordChangeDescriptions;
                  _this._isProfiling = true;
                  for (var rendererID in _this._rendererInterfaces) {
                    var renderer = _this._rendererInterfaces[rendererID];
                    renderer.startProfiling(recordChangeDescriptions);
                  }
                  _this._bridge.send("profilingStatus", _this._isProfiling);
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "stopProfiling", function() {
                  _this._isProfiling = false;
                  _this._recordChangeDescriptions = false;
                  for (var rendererID in _this._rendererInterfaces) {
                    var renderer = _this._rendererInterfaces[rendererID];
                    renderer.stopProfiling();
                  }
                  _this._bridge.send("profilingStatus", _this._isProfiling);
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "stopInspectingNative", function(selected) {
                  _this._bridge.send("stopInspectingNative", selected);
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "storeAsGlobal", function(_ref18) {
                  var count = _ref18.count, id = _ref18.id, path = _ref18.path, rendererID = _ref18.rendererID;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  } else {
                    renderer.storeAsGlobal(id, path, count);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "updateConsolePatchSettings", function(_ref19) {
                  var appendComponentStack = _ref19.appendComponentStack, breakOnConsoleErrors = _ref19.breakOnConsoleErrors, showInlineWarningsAndErrors = _ref19.showInlineWarningsAndErrors, hideConsoleLogsInStrictMode = _ref19.hideConsoleLogsInStrictMode, browserTheme = _ref19.browserTheme;
                  patch({
                    appendComponentStack,
                    breakOnConsoleErrors,
                    showInlineWarningsAndErrors,
                    hideConsoleLogsInStrictMode,
                    browserTheme
                  });
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "updateComponentFilters", function(componentFilters) {
                  for (var rendererID in _this._rendererInterfaces) {
                    var renderer = _this._rendererInterfaces[rendererID];
                    renderer.updateComponentFilters(componentFilters);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "viewAttributeSource", function(_ref20) {
                  var id = _ref20.id, path = _ref20.path, rendererID = _ref20.rendererID;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  } else {
                    renderer.prepareViewAttributeSource(id, path);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "viewElementSource", function(_ref21) {
                  var id = _ref21.id, rendererID = _ref21.rendererID;
                  var renderer = _this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '" for element "').concat(id, '"'));
                  } else {
                    renderer.prepareViewElementSource(id);
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "onTraceUpdates", function(nodes) {
                  _this.emit("traceUpdates", nodes);
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "onFastRefreshScheduled", function() {
                  if (__DEBUG__) {
                    debug("onFastRefreshScheduled");
                  }
                  _this._bridge.send("fastRefreshScheduled");
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "onHookOperations", function(operations) {
                  if (__DEBUG__) {
                    debug("onHookOperations", "(".concat(operations.length, ") [").concat(operations.join(", "), "]"));
                  }
                  _this._bridge.send("operations", operations);
                  if (_this._persistedSelection !== null) {
                    var rendererID = operations[0];
                    if (_this._persistedSelection.rendererID === rendererID) {
                      var renderer = _this._rendererInterfaces[rendererID];
                      if (renderer == null) {
                        console.warn('Invalid renderer id "'.concat(rendererID, '"'));
                      } else {
                        var prevMatch = _this._persistedSelectionMatch;
                        var nextMatch = renderer.getBestMatchForTrackedPath();
                        _this._persistedSelectionMatch = nextMatch;
                        var prevMatchID = prevMatch !== null ? prevMatch.id : null;
                        var nextMatchID = nextMatch !== null ? nextMatch.id : null;
                        if (prevMatchID !== nextMatchID) {
                          if (nextMatchID !== null) {
                            _this._bridge.send("selectFiber", nextMatchID);
                          }
                        }
                        if (nextMatch !== null && nextMatch.isFullMatch) {
                          _this._persistedSelection = null;
                          _this._persistedSelectionMatch = null;
                          renderer.setTrackedPath(null);
                        }
                      }
                    }
                  }
                });
                agent_defineProperty(agent_assertThisInitialized(_this), "_throttledPersistSelection", lodash_throttle_default()(function(rendererID, id) {
                  var renderer = _this._rendererInterfaces[rendererID];
                  var path = renderer != null ? renderer.getPathForElement(id) : null;
                  if (path !== null) {
                    sessionStorageSetItem(SESSION_STORAGE_LAST_SELECTION_KEY, JSON.stringify({
                      rendererID,
                      path
                    }));
                  } else {
                    sessionStorageRemoveItem(SESSION_STORAGE_LAST_SELECTION_KEY);
                  }
                }, 1e3));
                if (sessionStorageGetItem(SESSION_STORAGE_RELOAD_AND_PROFILE_KEY) === "true") {
                  _this._recordChangeDescriptions = sessionStorageGetItem(SESSION_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY) === "true";
                  _this._isProfiling = true;
                  sessionStorageRemoveItem(SESSION_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY);
                  sessionStorageRemoveItem(SESSION_STORAGE_RELOAD_AND_PROFILE_KEY);
                }
                var persistedSelectionString = sessionStorageGetItem(SESSION_STORAGE_LAST_SELECTION_KEY);
                if (persistedSelectionString != null) {
                  _this._persistedSelection = JSON.parse(persistedSelectionString);
                }
                _this._bridge = bridge;
                bridge.addListener("clearErrorsAndWarnings", _this.clearErrorsAndWarnings);
                bridge.addListener("clearErrorsForFiberID", _this.clearErrorsForFiberID);
                bridge.addListener("clearWarningsForFiberID", _this.clearWarningsForFiberID);
                bridge.addListener("copyElementPath", _this.copyElementPath);
                bridge.addListener("deletePath", _this.deletePath);
                bridge.addListener("getBackendVersion", _this.getBackendVersion);
                bridge.addListener("getBridgeProtocol", _this.getBridgeProtocol);
                bridge.addListener("getProfilingData", _this.getProfilingData);
                bridge.addListener("getProfilingStatus", _this.getProfilingStatus);
                bridge.addListener("getOwnersList", _this.getOwnersList);
                bridge.addListener("inspectElement", _this.inspectElement);
                bridge.addListener("logElementToConsole", _this.logElementToConsole);
                bridge.addListener("overrideError", _this.overrideError);
                bridge.addListener("overrideSuspense", _this.overrideSuspense);
                bridge.addListener("overrideValueAtPath", _this.overrideValueAtPath);
                bridge.addListener("reloadAndProfile", _this.reloadAndProfile);
                bridge.addListener("renamePath", _this.renamePath);
                bridge.addListener("setTraceUpdatesEnabled", _this.setTraceUpdatesEnabled);
                bridge.addListener("startProfiling", _this.startProfiling);
                bridge.addListener("stopProfiling", _this.stopProfiling);
                bridge.addListener("storeAsGlobal", _this.storeAsGlobal);
                bridge.addListener("syncSelectionFromNativeElementsPanel", _this.syncSelectionFromNativeElementsPanel);
                bridge.addListener("shutdown", _this.shutdown);
                bridge.addListener("updateConsolePatchSettings", _this.updateConsolePatchSettings);
                bridge.addListener("updateComponentFilters", _this.updateComponentFilters);
                bridge.addListener("viewAttributeSource", _this.viewAttributeSource);
                bridge.addListener("viewElementSource", _this.viewElementSource);
                bridge.addListener("overrideContext", _this.overrideContext);
                bridge.addListener("overrideHookState", _this.overrideHookState);
                bridge.addListener("overrideProps", _this.overrideProps);
                bridge.addListener("overrideState", _this.overrideState);
                if (_this._isProfiling) {
                  bridge.send("profilingStatus", true);
                }
                var _version = "4.28.5-ef8a840bd";
                if (_version) {
                  _this._bridge.send("backendVersion", _version);
                }
                _this._bridge.send("bridgeProtocol", currentBridgeProtocol);
                var isBackendStorageAPISupported = false;
                try {
                  localStorage.getItem("test");
                  isBackendStorageAPISupported = true;
                } catch (error) {
                }
                bridge.send("isBackendStorageAPISupported", isBackendStorageAPISupported);
                bridge.send("isSynchronousXHRSupported", isSynchronousXHRSupported());
                setupHighlighter(bridge, agent_assertThisInitialized(_this));
                TraceUpdates_initialize(agent_assertThisInitialized(_this));
                return _this;
              }
              agent_createClass(Agent2, [{
                key: "getInstanceAndStyle",
                value: function getInstanceAndStyle(_ref22) {
                  var id = _ref22.id, rendererID = _ref22.rendererID;
                  var renderer = this._rendererInterfaces[rendererID];
                  if (renderer == null) {
                    console.warn('Invalid renderer id "'.concat(rendererID, '"'));
                    return null;
                  }
                  return renderer.getInstanceAndStyle(id);
                }
              }, {
                key: "getBestMatchingRendererInterface",
                value: function getBestMatchingRendererInterface(node) {
                  var bestMatch = null;
                  for (var rendererID in this._rendererInterfaces) {
                    var renderer = this._rendererInterfaces[rendererID];
                    var fiber = renderer.getFiberForNative(node);
                    if (fiber !== null) {
                      if (fiber.stateNode === node) {
                        return renderer;
                      } else if (bestMatch === null) {
                        bestMatch = renderer;
                      }
                    }
                  }
                  return bestMatch;
                }
              }, {
                key: "getIDForNode",
                value: function getIDForNode(node) {
                  var rendererInterface = this.getBestMatchingRendererInterface(node);
                  if (rendererInterface != null) {
                    try {
                      return rendererInterface.getFiberIDForNative(node, true);
                    } catch (error) {
                    }
                  }
                  return null;
                }
              }, {
                key: "selectNode",
                value: function selectNode(target) {
                  var id = this.getIDForNode(target);
                  if (id !== null) {
                    this._bridge.send("selectFiber", id);
                  }
                }
              }, {
                key: "setRendererInterface",
                value: function setRendererInterface(rendererID, rendererInterface) {
                  this._rendererInterfaces[rendererID] = rendererInterface;
                  if (this._isProfiling) {
                    rendererInterface.startProfiling(this._recordChangeDescriptions);
                  }
                  rendererInterface.setTraceUpdatesEnabled(this._traceUpdatesEnabled);
                  var selection = this._persistedSelection;
                  if (selection !== null && selection.rendererID === rendererID) {
                    rendererInterface.setTrackedPath(selection.path);
                  }
                }
              }, {
                key: "onUnsupportedRenderer",
                value: function onUnsupportedRenderer(rendererID) {
                  this._bridge.send("unsupportedRendererVersion", rendererID);
                }
              }, {
                key: "rendererInterfaces",
                get: function get() {
                  return this._rendererInterfaces;
                }
              }]);
              return Agent2;
            }(EventEmitter);
            ;
            function hook_typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                hook_typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                hook_typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return hook_typeof(obj);
            }
            function hook_toConsumableArray(arr) {
              return hook_arrayWithoutHoles(arr) || hook_iterableToArray(arr) || hook_unsupportedIterableToArray(arr) || hook_nonIterableSpread();
            }
            function hook_nonIterableSpread() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function hook_unsupportedIterableToArray(o, minLen) {
              if (!o)
                return;
              if (typeof o === "string")
                return hook_arrayLikeToArray(o, minLen);
              var n = Object.prototype.toString.call(o).slice(8, -1);
              if (n === "Object" && o.constructor)
                n = o.constructor.name;
              if (n === "Map" || n === "Set")
                return Array.from(o);
              if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                return hook_arrayLikeToArray(o, minLen);
            }
            function hook_iterableToArray(iter) {
              if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
                return Array.from(iter);
            }
            function hook_arrayWithoutHoles(arr) {
              if (Array.isArray(arr))
                return hook_arrayLikeToArray(arr);
            }
            function hook_arrayLikeToArray(arr, len) {
              if (len == null || len > arr.length)
                len = arr.length;
              for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
                arr2[i2] = arr[i2];
              }
              return arr2;
            }
            function installHook(target) {
              if (target.hasOwnProperty("__REACT_DEVTOOLS_GLOBAL_HOOK__")) {
                return null;
              }
              var targetConsole2 = console;
              var targetConsoleMethods2 = {};
              for (var method2 in console) {
                targetConsoleMethods2[method2] = console[method2];
              }
              function dangerous_setTargetConsoleForTesting2(targetConsoleForTesting) {
                targetConsole2 = targetConsoleForTesting;
                targetConsoleMethods2 = {};
                for (var _method in targetConsole2) {
                  targetConsoleMethods2[_method] = console[_method];
                }
              }
              function detectReactBuildType(renderer) {
                try {
                  if (typeof renderer.version === "string") {
                    if (renderer.bundleType > 0) {
                      return "development";
                    }
                    return "production";
                  }
                  var _toString = Function.prototype.toString;
                  if (renderer.Mount && renderer.Mount._renderNewRootComponent) {
                    var renderRootCode = _toString.call(renderer.Mount._renderNewRootComponent);
                    if (renderRootCode.indexOf("function") !== 0) {
                      return "production";
                    }
                    if (renderRootCode.indexOf("storedMeasure") !== -1) {
                      return "development";
                    }
                    if (renderRootCode.indexOf("should be a pure function") !== -1) {
                      if (renderRootCode.indexOf("NODE_ENV") !== -1) {
                        return "development";
                      }
                      if (renderRootCode.indexOf("development") !== -1) {
                        return "development";
                      }
                      if (renderRootCode.indexOf("true") !== -1) {
                        return "development";
                      }
                      if (renderRootCode.indexOf("nextElement") !== -1 || renderRootCode.indexOf("nextComponent") !== -1) {
                        return "unminified";
                      } else {
                        return "development";
                      }
                    }
                    if (renderRootCode.indexOf("nextElement") !== -1 || renderRootCode.indexOf("nextComponent") !== -1) {
                      return "unminified";
                    }
                    return "outdated";
                  }
                } catch (err2) {
                }
                return "production";
              }
              function checkDCE(fn) {
                try {
                  var _toString2 = Function.prototype.toString;
                  var code = _toString2.call(fn);
                  if (code.indexOf("^_^") > -1) {
                    hasDetectedBadDCE = true;
                    setTimeout(function() {
                      throw new Error("React is running in production mode, but dead code elimination has not been applied. Read how to correctly configure React for production: https://reactjs.org/link/perf-use-production-build");
                    });
                  }
                } catch (err2) {
                }
              }
              function formatWithStyles2(inputArgs, style) {
                if (inputArgs === void 0 || inputArgs === null || inputArgs.length === 0 || typeof inputArgs[0] === "string" && inputArgs[0].match(/([^%]|^)(%c)/g) || style === void 0) {
                  return inputArgs;
                }
                var REGEXP = /([^%]|^)((%%)*)(%([oOdisf]))/g;
                if (typeof inputArgs[0] === "string" && inputArgs[0].match(REGEXP)) {
                  return ["%c".concat(inputArgs[0]), style].concat(hook_toConsumableArray(inputArgs.slice(1)));
                } else {
                  var firstArg = inputArgs.reduce(function(formatStr, elem, i2) {
                    if (i2 > 0) {
                      formatStr += " ";
                    }
                    switch (hook_typeof(elem)) {
                      case "string":
                      case "boolean":
                      case "symbol":
                        return formatStr += "%s";
                      case "number":
                        var formatting = Number.isInteger(elem) ? "%i" : "%f";
                        return formatStr += formatting;
                      default:
                        return formatStr += "%o";
                    }
                  }, "%c");
                  return [firstArg, style].concat(hook_toConsumableArray(inputArgs));
                }
              }
              var unpatchFn2 = null;
              function patchConsoleForInitialRenderInStrictMode(_ref) {
                var hideConsoleLogsInStrictMode = _ref.hideConsoleLogsInStrictMode, browserTheme = _ref.browserTheme;
                var overrideConsoleMethods = ["error", "group", "groupCollapsed", "info", "log", "trace", "warn"];
                if (unpatchFn2 !== null) {
                  return;
                }
                var originalConsoleMethods = {};
                unpatchFn2 = function unpatchFn3() {
                  for (var _method2 in originalConsoleMethods) {
                    try {
                      targetConsole2[_method2] = originalConsoleMethods[_method2];
                    } catch (error) {
                    }
                  }
                };
                overrideConsoleMethods.forEach(function(method3) {
                  try {
                    var originalMethod = originalConsoleMethods[method3] = targetConsole2[method3].__REACT_DEVTOOLS_STRICT_MODE_ORIGINAL_METHOD__ ? targetConsole2[method3].__REACT_DEVTOOLS_STRICT_MODE_ORIGINAL_METHOD__ : targetConsole2[method3];
                    var overrideMethod = function overrideMethod2() {
                      if (!hideConsoleLogsInStrictMode) {
                        var color;
                        switch (method3) {
                          case "warn":
                            color = browserTheme === "light" ? "rgba(250, 180, 50, 0.75)" : "rgba(250, 180, 50, 0.5)";
                            break;
                          case "error":
                            color = browserTheme === "light" ? "rgba(250, 123, 130, 0.75)" : "rgba(250, 123, 130, 0.5)";
                            break;
                          case "log":
                          default:
                            color = browserTheme === "light" ? "rgba(125, 125, 125, 0.75)" : "rgba(125, 125, 125, 0.5)";
                            break;
                        }
                        if (color) {
                          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                            args[_key] = arguments[_key];
                          }
                          originalMethod.apply(void 0, hook_toConsumableArray(formatWithStyles2(args, "color: ".concat(color))));
                        } else {
                          throw Error("Console color is not defined");
                        }
                      }
                    };
                    overrideMethod.__REACT_DEVTOOLS_STRICT_MODE_ORIGINAL_METHOD__ = originalMethod;
                    originalMethod.__REACT_DEVTOOLS_STRICT_MODE_OVERRIDE_METHOD__ = overrideMethod;
                    targetConsole2[method3] = overrideMethod;
                  } catch (error) {
                  }
                });
              }
              function unpatchConsoleForInitialRenderInStrictMode() {
                if (unpatchFn2 !== null) {
                  unpatchFn2();
                  unpatchFn2 = null;
                }
              }
              var uidCounter2 = 0;
              function inject(renderer) {
                var id = ++uidCounter2;
                renderers.set(id, renderer);
                var reactBuildType = hasDetectedBadDCE ? "deadcode" : detectReactBuildType(renderer);
                if (target.hasOwnProperty("__REACT_DEVTOOLS_CONSOLE_FUNCTIONS__")) {
                  var _target$__REACT_DEVTO = target.__REACT_DEVTOOLS_CONSOLE_FUNCTIONS__, registerRendererWithConsole = _target$__REACT_DEVTO.registerRendererWithConsole, patchConsoleUsingWindowValues2 = _target$__REACT_DEVTO.patchConsoleUsingWindowValues;
                  if (typeof registerRendererWithConsole === "function" && typeof patchConsoleUsingWindowValues2 === "function") {
                    registerRendererWithConsole(renderer);
                    patchConsoleUsingWindowValues2();
                  }
                }
                var attach2 = target.__REACT_DEVTOOLS_ATTACH__;
                if (typeof attach2 === "function") {
                  var rendererInterface = attach2(hook2, id, renderer, target);
                  hook2.rendererInterfaces.set(id, rendererInterface);
                }
                hook2.emit("renderer", {
                  id,
                  renderer,
                  reactBuildType
                });
                return id;
              }
              var hasDetectedBadDCE = false;
              function sub(event, fn) {
                hook2.on(event, fn);
                return function() {
                  return hook2.off(event, fn);
                };
              }
              function on(event, fn) {
                if (!listeners[event]) {
                  listeners[event] = [];
                }
                listeners[event].push(fn);
              }
              function off(event, fn) {
                if (!listeners[event]) {
                  return;
                }
                var index = listeners[event].indexOf(fn);
                if (index !== -1) {
                  listeners[event].splice(index, 1);
                }
                if (!listeners[event].length) {
                  delete listeners[event];
                }
              }
              function emit(event, data) {
                if (listeners[event]) {
                  listeners[event].map(function(fn) {
                    return fn(data);
                  });
                }
              }
              function getFiberRoots(rendererID) {
                var roots = fiberRoots;
                if (!roots[rendererID]) {
                  roots[rendererID] = /* @__PURE__ */ new Set();
                }
                return roots[rendererID];
              }
              function onCommitFiberUnmount(rendererID, fiber) {
                var rendererInterface = rendererInterfaces.get(rendererID);
                if (rendererInterface != null) {
                  rendererInterface.handleCommitFiberUnmount(fiber);
                }
              }
              function onCommitFiberRoot(rendererID, root, priorityLevel) {
                var mountedRoots = hook2.getFiberRoots(rendererID);
                var current = root.current;
                var isKnownRoot = mountedRoots.has(root);
                var isUnmounting = current.memoizedState == null || current.memoizedState.element == null;
                if (!isKnownRoot && !isUnmounting) {
                  mountedRoots.add(root);
                } else if (isKnownRoot && isUnmounting) {
                  mountedRoots.delete(root);
                }
                var rendererInterface = rendererInterfaces.get(rendererID);
                if (rendererInterface != null) {
                  rendererInterface.handleCommitFiberRoot(root, priorityLevel);
                }
              }
              function onPostCommitFiberRoot(rendererID, root) {
                var rendererInterface = rendererInterfaces.get(rendererID);
                if (rendererInterface != null) {
                  rendererInterface.handlePostCommitFiberRoot(root);
                }
              }
              function setStrictMode(rendererID, isStrictMode) {
                var rendererInterface = rendererInterfaces.get(rendererID);
                if (rendererInterface != null) {
                  if (isStrictMode) {
                    rendererInterface.patchConsoleForStrictMode();
                  } else {
                    rendererInterface.unpatchConsoleForStrictMode();
                  }
                } else {
                  if (isStrictMode) {
                    var hideConsoleLogsInStrictMode = window.__REACT_DEVTOOLS_HIDE_CONSOLE_LOGS_IN_STRICT_MODE__ === true;
                    var browserTheme = window.__REACT_DEVTOOLS_BROWSER_THEME__;
                    patchConsoleForInitialRenderInStrictMode({
                      hideConsoleLogsInStrictMode,
                      browserTheme
                    });
                  } else {
                    unpatchConsoleForInitialRenderInStrictMode();
                  }
                }
              }
              var openModuleRangesStack = [];
              var moduleRanges = [];
              function getTopStackFrameString(error) {
                var frames = error.stack.split("\n");
                var frame = frames.length > 1 ? frames[1] : null;
                return frame;
              }
              function getInternalModuleRanges() {
                return moduleRanges;
              }
              function registerInternalModuleStart(error) {
                var startStackFrame = getTopStackFrameString(error);
                if (startStackFrame !== null) {
                  openModuleRangesStack.push(startStackFrame);
                }
              }
              function registerInternalModuleStop(error) {
                if (openModuleRangesStack.length > 0) {
                  var startStackFrame = openModuleRangesStack.pop();
                  var stopStackFrame = getTopStackFrameString(error);
                  if (stopStackFrame !== null) {
                    moduleRanges.push([startStackFrame, stopStackFrame]);
                  }
                }
              }
              var fiberRoots = {};
              var rendererInterfaces = /* @__PURE__ */ new Map();
              var listeners = {};
              var renderers = /* @__PURE__ */ new Map();
              var backends = /* @__PURE__ */ new Map();
              var hook2 = {
                rendererInterfaces,
                listeners,
                backends,
                renderers,
                emit,
                getFiberRoots,
                inject,
                on,
                off,
                sub,
                supportsFiber: true,
                checkDCE,
                onCommitFiberUnmount,
                onCommitFiberRoot,
                onPostCommitFiberRoot,
                setStrictMode,
                getInternalModuleRanges,
                registerInternalModuleStart,
                registerInternalModuleStop
              };
              if (false) {
              }
              Object.defineProperty(target, "__REACT_DEVTOOLS_GLOBAL_HOOK__", {
                configurable: false,
                enumerable: false,
                get: function get() {
                  return hook2;
                }
              });
              return hook2;
            }
            ;
            function decorate(object, attr, fn) {
              var old = object[attr];
              object[attr] = function(instance) {
                return fn.call(this, old, arguments);
              };
              return old;
            }
            function decorateMany(source, fns) {
              var olds = {};
              for (var name in fns) {
                olds[name] = decorate(source, name, fns[name]);
              }
              return olds;
            }
            function restoreMany(source, olds) {
              for (var name in olds) {
                source[name] = olds[name];
              }
            }
            function forceUpdate(instance) {
              if (typeof instance.forceUpdate === "function") {
                instance.forceUpdate();
              } else if (instance.updater != null && typeof instance.updater.enqueueForceUpdate === "function") {
                instance.updater.enqueueForceUpdate(this, function() {
                }, "forceUpdate");
              }
            }
            ;
            function legacy_renderer_ownKeys(object, enumerableOnly) {
              var keys = Object.keys(object);
              if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                if (enumerableOnly)
                  symbols = symbols.filter(function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                  });
                keys.push.apply(keys, symbols);
              }
              return keys;
            }
            function legacy_renderer_objectSpread(target) {
              for (var i2 = 1; i2 < arguments.length; i2++) {
                var source = arguments[i2] != null ? arguments[i2] : {};
                if (i2 % 2) {
                  legacy_renderer_ownKeys(Object(source), true).forEach(function(key2) {
                    legacy_renderer_defineProperty(target, key2, source[key2]);
                  });
                } else if (Object.getOwnPropertyDescriptors) {
                  Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
                } else {
                  legacy_renderer_ownKeys(Object(source)).forEach(function(key2) {
                    Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
                  });
                }
              }
              return target;
            }
            function legacy_renderer_defineProperty(obj, key2, value) {
              if (key2 in obj) {
                Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
              } else {
                obj[key2] = value;
              }
              return obj;
            }
            function legacy_renderer_typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                legacy_renderer_typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                legacy_renderer_typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return legacy_renderer_typeof(obj);
            }
            function getData(internalInstance) {
              var displayName = null;
              var key2 = null;
              if (internalInstance._currentElement != null) {
                if (internalInstance._currentElement.key) {
                  key2 = String(internalInstance._currentElement.key);
                }
                var elementType = internalInstance._currentElement.type;
                if (typeof elementType === "string") {
                  displayName = elementType;
                } else if (typeof elementType === "function") {
                  displayName = getDisplayName(elementType);
                }
              }
              return {
                displayName,
                key: key2
              };
            }
            function getElementType(internalInstance) {
              if (internalInstance._currentElement != null) {
                var elementType = internalInstance._currentElement.type;
                if (typeof elementType === "function") {
                  var publicInstance = internalInstance.getPublicInstance();
                  if (publicInstance !== null) {
                    return types_ElementTypeClass;
                  } else {
                    return types_ElementTypeFunction;
                  }
                } else if (typeof elementType === "string") {
                  return ElementTypeHostComponent;
                }
              }
              return ElementTypeOtherOrUnknown;
            }
            function getChildren(internalInstance) {
              var children = [];
              if (legacy_renderer_typeof(internalInstance) !== "object") {
              } else if (internalInstance._currentElement === null || internalInstance._currentElement === false) {
              } else if (internalInstance._renderedComponent) {
                var child = internalInstance._renderedComponent;
                if (getElementType(child) !== ElementTypeOtherOrUnknown) {
                  children.push(child);
                }
              } else if (internalInstance._renderedChildren) {
                var renderedChildren = internalInstance._renderedChildren;
                for (var name in renderedChildren) {
                  var _child = renderedChildren[name];
                  if (getElementType(_child) !== ElementTypeOtherOrUnknown) {
                    children.push(_child);
                  }
                }
              }
              return children;
            }
            function renderer_attach(hook2, rendererID, renderer, global2) {
              var idToInternalInstanceMap = /* @__PURE__ */ new Map();
              var internalInstanceToIDMap = /* @__PURE__ */ new WeakMap();
              var internalInstanceToRootIDMap = /* @__PURE__ */ new WeakMap();
              var getInternalIDForNative = null;
              var findNativeNodeForInternalID;
              var getFiberForNative = function getFiberForNative2(node) {
                return null;
              };
              if (renderer.ComponentTree) {
                getInternalIDForNative = function getInternalIDForNative2(node, findNearestUnfilteredAncestor) {
                  var internalInstance = renderer.ComponentTree.getClosestInstanceFromNode(node);
                  return internalInstanceToIDMap.get(internalInstance) || null;
                };
                findNativeNodeForInternalID = function findNativeNodeForInternalID2(id) {
                  var internalInstance = idToInternalInstanceMap.get(id);
                  return renderer.ComponentTree.getNodeFromInstance(internalInstance);
                };
                getFiberForNative = function getFiberForNative2(node) {
                  return renderer.ComponentTree.getClosestInstanceFromNode(node);
                };
              } else if (renderer.Mount.getID && renderer.Mount.getNode) {
                getInternalIDForNative = function getInternalIDForNative2(node, findNearestUnfilteredAncestor) {
                  return null;
                };
                findNativeNodeForInternalID = function findNativeNodeForInternalID2(id) {
                  return null;
                };
              }
              function getDisplayNameForFiberID(id) {
                var internalInstance = idToInternalInstanceMap.get(id);
                return internalInstance ? getData(internalInstance).displayName : null;
              }
              function getID(internalInstance) {
                if (legacy_renderer_typeof(internalInstance) !== "object" || internalInstance === null) {
                  throw new Error("Invalid internal instance: " + internalInstance);
                }
                if (!internalInstanceToIDMap.has(internalInstance)) {
                  var _id = getUID();
                  internalInstanceToIDMap.set(internalInstance, _id);
                  idToInternalInstanceMap.set(_id, internalInstance);
                }
                return internalInstanceToIDMap.get(internalInstance);
              }
              function areEqualArrays(a, b) {
                if (a.length !== b.length) {
                  return false;
                }
                for (var i2 = 0; i2 < a.length; i2++) {
                  if (a[i2] !== b[i2]) {
                    return false;
                  }
                }
                return true;
              }
              var parentIDStack = [];
              var oldReconcilerMethods = null;
              if (renderer.Reconciler) {
                oldReconcilerMethods = decorateMany(renderer.Reconciler, {
                  mountComponent: function mountComponent(fn, args) {
                    var internalInstance = args[0];
                    var hostContainerInfo = args[3];
                    if (getElementType(internalInstance) === ElementTypeOtherOrUnknown) {
                      return fn.apply(this, args);
                    }
                    if (hostContainerInfo._topLevelWrapper === void 0) {
                      return fn.apply(this, args);
                    }
                    var id = getID(internalInstance);
                    var parentID = parentIDStack.length > 0 ? parentIDStack[parentIDStack.length - 1] : 0;
                    recordMount(internalInstance, id, parentID);
                    parentIDStack.push(id);
                    internalInstanceToRootIDMap.set(internalInstance, getID(hostContainerInfo._topLevelWrapper));
                    try {
                      var result = fn.apply(this, args);
                      parentIDStack.pop();
                      return result;
                    } catch (err2) {
                      parentIDStack = [];
                      throw err2;
                    } finally {
                      if (parentIDStack.length === 0) {
                        var rootID = internalInstanceToRootIDMap.get(internalInstance);
                        if (rootID === void 0) {
                          throw new Error("Expected to find root ID.");
                        }
                        flushPendingEvents(rootID);
                      }
                    }
                  },
                  performUpdateIfNecessary: function performUpdateIfNecessary(fn, args) {
                    var internalInstance = args[0];
                    if (getElementType(internalInstance) === ElementTypeOtherOrUnknown) {
                      return fn.apply(this, args);
                    }
                    var id = getID(internalInstance);
                    parentIDStack.push(id);
                    var prevChildren = getChildren(internalInstance);
                    try {
                      var result = fn.apply(this, args);
                      var nextChildren = getChildren(internalInstance);
                      if (!areEqualArrays(prevChildren, nextChildren)) {
                        recordReorder(internalInstance, id, nextChildren);
                      }
                      parentIDStack.pop();
                      return result;
                    } catch (err2) {
                      parentIDStack = [];
                      throw err2;
                    } finally {
                      if (parentIDStack.length === 0) {
                        var rootID = internalInstanceToRootIDMap.get(internalInstance);
                        if (rootID === void 0) {
                          throw new Error("Expected to find root ID.");
                        }
                        flushPendingEvents(rootID);
                      }
                    }
                  },
                  receiveComponent: function receiveComponent(fn, args) {
                    var internalInstance = args[0];
                    if (getElementType(internalInstance) === ElementTypeOtherOrUnknown) {
                      return fn.apply(this, args);
                    }
                    var id = getID(internalInstance);
                    parentIDStack.push(id);
                    var prevChildren = getChildren(internalInstance);
                    try {
                      var result = fn.apply(this, args);
                      var nextChildren = getChildren(internalInstance);
                      if (!areEqualArrays(prevChildren, nextChildren)) {
                        recordReorder(internalInstance, id, nextChildren);
                      }
                      parentIDStack.pop();
                      return result;
                    } catch (err2) {
                      parentIDStack = [];
                      throw err2;
                    } finally {
                      if (parentIDStack.length === 0) {
                        var rootID = internalInstanceToRootIDMap.get(internalInstance);
                        if (rootID === void 0) {
                          throw new Error("Expected to find root ID.");
                        }
                        flushPendingEvents(rootID);
                      }
                    }
                  },
                  unmountComponent: function unmountComponent(fn, args) {
                    var internalInstance = args[0];
                    if (getElementType(internalInstance) === ElementTypeOtherOrUnknown) {
                      return fn.apply(this, args);
                    }
                    var id = getID(internalInstance);
                    parentIDStack.push(id);
                    try {
                      var result = fn.apply(this, args);
                      parentIDStack.pop();
                      recordUnmount(internalInstance, id);
                      return result;
                    } catch (err2) {
                      parentIDStack = [];
                      throw err2;
                    } finally {
                      if (parentIDStack.length === 0) {
                        var rootID = internalInstanceToRootIDMap.get(internalInstance);
                        if (rootID === void 0) {
                          throw new Error("Expected to find root ID.");
                        }
                        flushPendingEvents(rootID);
                      }
                    }
                  }
                });
              }
              function cleanup() {
                if (oldReconcilerMethods !== null) {
                  if (renderer.Component) {
                    restoreMany(renderer.Component.Mixin, oldReconcilerMethods);
                  } else {
                    restoreMany(renderer.Reconciler, oldReconcilerMethods);
                  }
                }
                oldReconcilerMethods = null;
              }
              function recordMount(internalInstance, id, parentID) {
                var isRoot = parentID === 0;
                if (__DEBUG__) {
                  console.log("%crecordMount()", "color: green; font-weight: bold;", id, getData(internalInstance).displayName);
                }
                if (isRoot) {
                  var hasOwnerMetadata = internalInstance._currentElement != null && internalInstance._currentElement._owner != null;
                  pushOperation(TREE_OPERATION_ADD);
                  pushOperation(id);
                  pushOperation(ElementTypeRoot);
                  pushOperation(0);
                  pushOperation(0);
                  pushOperation(0);
                  pushOperation(hasOwnerMetadata ? 1 : 0);
                } else {
                  var type2 = getElementType(internalInstance);
                  var _getData = getData(internalInstance), displayName = _getData.displayName, key2 = _getData.key;
                  var ownerID = internalInstance._currentElement != null && internalInstance._currentElement._owner != null ? getID(internalInstance._currentElement._owner) : 0;
                  var displayNameStringID = getStringID(displayName);
                  var keyStringID = getStringID(key2);
                  pushOperation(TREE_OPERATION_ADD);
                  pushOperation(id);
                  pushOperation(type2);
                  pushOperation(parentID);
                  pushOperation(ownerID);
                  pushOperation(displayNameStringID);
                  pushOperation(keyStringID);
                }
              }
              function recordReorder(internalInstance, id, nextChildren) {
                pushOperation(TREE_OPERATION_REORDER_CHILDREN);
                pushOperation(id);
                var nextChildIDs = nextChildren.map(getID);
                pushOperation(nextChildIDs.length);
                for (var i2 = 0; i2 < nextChildIDs.length; i2++) {
                  pushOperation(nextChildIDs[i2]);
                }
              }
              function recordUnmount(internalInstance, id) {
                pendingUnmountedIDs.push(id);
                idToInternalInstanceMap.delete(id);
              }
              function crawlAndRecordInitialMounts(id, parentID, rootID) {
                if (__DEBUG__) {
                  console.group("crawlAndRecordInitialMounts() id:", id);
                }
                var internalInstance = idToInternalInstanceMap.get(id);
                if (internalInstance != null) {
                  internalInstanceToRootIDMap.set(internalInstance, rootID);
                  recordMount(internalInstance, id, parentID);
                  getChildren(internalInstance).forEach(function(child) {
                    return crawlAndRecordInitialMounts(getID(child), id, rootID);
                  });
                }
                if (__DEBUG__) {
                  console.groupEnd();
                }
              }
              function flushInitialOperations() {
                var roots = renderer.Mount._instancesByReactRootID || renderer.Mount._instancesByContainerID;
                for (var key2 in roots) {
                  var internalInstance = roots[key2];
                  var _id2 = getID(internalInstance);
                  crawlAndRecordInitialMounts(_id2, 0, _id2);
                  flushPendingEvents(_id2);
                }
              }
              var pendingOperations = [];
              var pendingStringTable = /* @__PURE__ */ new Map();
              var pendingUnmountedIDs = [];
              var pendingStringTableLength = 0;
              var pendingUnmountedRootID = null;
              function flushPendingEvents(rootID) {
                if (pendingOperations.length === 0 && pendingUnmountedIDs.length === 0 && pendingUnmountedRootID === null) {
                  return;
                }
                var numUnmountIDs = pendingUnmountedIDs.length + (pendingUnmountedRootID === null ? 0 : 1);
                var operations = new Array(
                  2 + 1 + pendingStringTableLength + (numUnmountIDs > 0 ? 2 + numUnmountIDs : 0) + pendingOperations.length
                );
                var i2 = 0;
                operations[i2++] = rendererID;
                operations[i2++] = rootID;
                operations[i2++] = pendingStringTableLength;
                pendingStringTable.forEach(function(value, key2) {
                  operations[i2++] = key2.length;
                  var encodedKey = utfEncodeString(key2);
                  for (var j2 = 0; j2 < encodedKey.length; j2++) {
                    operations[i2 + j2] = encodedKey[j2];
                  }
                  i2 += key2.length;
                });
                if (numUnmountIDs > 0) {
                  operations[i2++] = TREE_OPERATION_REMOVE;
                  operations[i2++] = numUnmountIDs;
                  for (var j = 0; j < pendingUnmountedIDs.length; j++) {
                    operations[i2++] = pendingUnmountedIDs[j];
                  }
                  if (pendingUnmountedRootID !== null) {
                    operations[i2] = pendingUnmountedRootID;
                    i2++;
                  }
                }
                for (var _j = 0; _j < pendingOperations.length; _j++) {
                  operations[i2 + _j] = pendingOperations[_j];
                }
                i2 += pendingOperations.length;
                if (__DEBUG__) {
                  printOperationsArray(operations);
                }
                hook2.emit("operations", operations);
                pendingOperations.length = 0;
                pendingUnmountedIDs = [];
                pendingUnmountedRootID = null;
                pendingStringTable.clear();
                pendingStringTableLength = 0;
              }
              function pushOperation(op) {
                if (false) {
                }
                pendingOperations.push(op);
              }
              function getStringID(str) {
                if (str === null) {
                  return 0;
                }
                var existingID = pendingStringTable.get(str);
                if (existingID !== void 0) {
                  return existingID;
                }
                var stringID = pendingStringTable.size + 1;
                pendingStringTable.set(str, stringID);
                pendingStringTableLength += str.length + 1;
                return stringID;
              }
              var currentlyInspectedElementID = null;
              var currentlyInspectedPaths = {};
              function mergeInspectedPaths(path) {
                var current = currentlyInspectedPaths;
                path.forEach(function(key2) {
                  if (!current[key2]) {
                    current[key2] = {};
                  }
                  current = current[key2];
                });
              }
              function createIsPathAllowed(key2) {
                return function isPathAllowed(path) {
                  var current = currentlyInspectedPaths[key2];
                  if (!current) {
                    return false;
                  }
                  for (var i2 = 0; i2 < path.length; i2++) {
                    current = current[path[i2]];
                    if (!current) {
                      return false;
                    }
                  }
                  return true;
                };
              }
              function getInstanceAndStyle(id) {
                var instance = null;
                var style = null;
                var internalInstance = idToInternalInstanceMap.get(id);
                if (internalInstance != null) {
                  instance = internalInstance._instance || null;
                  var element = internalInstance._currentElement;
                  if (element != null && element.props != null) {
                    style = element.props.style || null;
                  }
                }
                return {
                  instance,
                  style
                };
              }
              function updateSelectedElement(id) {
                var internalInstance = idToInternalInstanceMap.get(id);
                if (internalInstance == null) {
                  console.warn('Could not find instance with id "'.concat(id, '"'));
                  return;
                }
                switch (getElementType(internalInstance)) {
                  case types_ElementTypeClass:
                    global2.$r = internalInstance._instance;
                    break;
                  case types_ElementTypeFunction:
                    var element = internalInstance._currentElement;
                    if (element == null) {
                      console.warn('Could not find element with id "'.concat(id, '"'));
                      return;
                    }
                    global2.$r = {
                      props: element.props,
                      type: element.type
                    };
                    break;
                  default:
                    global2.$r = null;
                    break;
                }
              }
              function storeAsGlobal(id, path, count) {
                var inspectedElement = inspectElementRaw(id);
                if (inspectedElement !== null) {
                  var value = utils_getInObject(inspectedElement, path);
                  var key2 = "$reactTemp".concat(count);
                  window[key2] = value;
                  console.log(key2);
                  console.log(value);
                }
              }
              function getSerializedElementValueByPath(id, path) {
                var inspectedElement = inspectElementRaw(id);
                if (inspectedElement !== null) {
                  var valueToCopy = utils_getInObject(inspectedElement, path);
                  return serializeToString(valueToCopy);
                }
              }
              function inspectElement(requestID, id, path, forceFullData) {
                if (forceFullData || currentlyInspectedElementID !== id) {
                  currentlyInspectedElementID = id;
                  currentlyInspectedPaths = {};
                }
                var inspectedElement = inspectElementRaw(id);
                if (inspectedElement === null) {
                  return {
                    id,
                    responseID: requestID,
                    type: "not-found"
                  };
                }
                if (path !== null) {
                  mergeInspectedPaths(path);
                }
                updateSelectedElement(id);
                inspectedElement.context = cleanForBridge(inspectedElement.context, createIsPathAllowed("context"));
                inspectedElement.props = cleanForBridge(inspectedElement.props, createIsPathAllowed("props"));
                inspectedElement.state = cleanForBridge(inspectedElement.state, createIsPathAllowed("state"));
                return {
                  id,
                  responseID: requestID,
                  type: "full-data",
                  value: inspectedElement
                };
              }
              function inspectElementRaw(id) {
                var internalInstance = idToInternalInstanceMap.get(id);
                if (internalInstance == null) {
                  return null;
                }
                var _getData2 = getData(internalInstance), displayName = _getData2.displayName, key2 = _getData2.key;
                var type2 = getElementType(internalInstance);
                var context = null;
                var owners = null;
                var props = null;
                var state = null;
                var source = null;
                var element = internalInstance._currentElement;
                if (element !== null) {
                  props = element.props;
                  source = element._source != null ? element._source : null;
                  var owner = element._owner;
                  if (owner) {
                    owners = [];
                    while (owner != null) {
                      owners.push({
                        displayName: getData(owner).displayName || "Unknown",
                        id: getID(owner),
                        key: element.key,
                        type: getElementType(owner)
                      });
                      if (owner._currentElement) {
                        owner = owner._currentElement._owner;
                      }
                    }
                  }
                }
                var publicInstance = internalInstance._instance;
                if (publicInstance != null) {
                  context = publicInstance.context || null;
                  state = publicInstance.state || null;
                }
                var errors = [];
                var warnings = [];
                return {
                  id,
                  canEditHooks: false,
                  canEditFunctionProps: false,
                  canEditHooksAndDeletePaths: false,
                  canEditHooksAndRenamePaths: false,
                  canEditFunctionPropsDeletePaths: false,
                  canEditFunctionPropsRenamePaths: false,
                  canToggleError: false,
                  isErrored: false,
                  targetErrorBoundaryID: null,
                  canToggleSuspense: false,
                  canViewSource: type2 === types_ElementTypeClass || type2 === types_ElementTypeFunction,
                  hasLegacyContext: true,
                  displayName,
                  type: type2,
                  key: key2 != null ? key2 : null,
                  context,
                  hooks: null,
                  props,
                  state,
                  errors,
                  warnings,
                  owners,
                  source,
                  rootType: null,
                  rendererPackageName: null,
                  rendererVersion: null,
                  plugins: {
                    stylex: null
                  }
                };
              }
              function logElementToConsole(id) {
                var result = inspectElementRaw(id);
                if (result === null) {
                  console.warn('Could not find element with id "'.concat(id, '"'));
                  return;
                }
                var supportsGroup = typeof console.groupCollapsed === "function";
                if (supportsGroup) {
                  console.groupCollapsed(
                    "[Click to expand] %c<".concat(result.displayName || "Component", " />"),
                    "color: var(--dom-tag-name-color); font-weight: normal;"
                  );
                }
                if (result.props !== null) {
                  console.log("Props:", result.props);
                }
                if (result.state !== null) {
                  console.log("State:", result.state);
                }
                if (result.context !== null) {
                  console.log("Context:", result.context);
                }
                var nativeNode = findNativeNodeForInternalID(id);
                if (nativeNode !== null) {
                  console.log("Node:", nativeNode);
                }
                if (window.chrome || /firefox/i.test(navigator.userAgent)) {
                  console.log("Right-click any value to save it as a global variable for further inspection.");
                }
                if (supportsGroup) {
                  console.groupEnd();
                }
              }
              function prepareViewAttributeSource(id, path) {
                var inspectedElement = inspectElementRaw(id);
                if (inspectedElement !== null) {
                  window.$attribute = utils_getInObject(inspectedElement, path);
                }
              }
              function prepareViewElementSource(id) {
                var internalInstance = idToInternalInstanceMap.get(id);
                if (internalInstance == null) {
                  console.warn('Could not find instance with id "'.concat(id, '"'));
                  return;
                }
                var element = internalInstance._currentElement;
                if (element == null) {
                  console.warn('Could not find element with id "'.concat(id, '"'));
                  return;
                }
                global2.$type = element.type;
              }
              function deletePath(type2, id, hookID, path) {
                var internalInstance = idToInternalInstanceMap.get(id);
                if (internalInstance != null) {
                  var publicInstance = internalInstance._instance;
                  if (publicInstance != null) {
                    switch (type2) {
                      case "context":
                        deletePathInObject(publicInstance.context, path);
                        forceUpdate(publicInstance);
                        break;
                      case "hooks":
                        throw new Error("Hooks not supported by this renderer");
                      case "props":
                        var element = internalInstance._currentElement;
                        internalInstance._currentElement = legacy_renderer_objectSpread(legacy_renderer_objectSpread({}, element), {}, {
                          props: copyWithDelete(element.props, path)
                        });
                        forceUpdate(publicInstance);
                        break;
                      case "state":
                        deletePathInObject(publicInstance.state, path);
                        forceUpdate(publicInstance);
                        break;
                    }
                  }
                }
              }
              function renamePath(type2, id, hookID, oldPath, newPath) {
                var internalInstance = idToInternalInstanceMap.get(id);
                if (internalInstance != null) {
                  var publicInstance = internalInstance._instance;
                  if (publicInstance != null) {
                    switch (type2) {
                      case "context":
                        renamePathInObject(publicInstance.context, oldPath, newPath);
                        forceUpdate(publicInstance);
                        break;
                      case "hooks":
                        throw new Error("Hooks not supported by this renderer");
                      case "props":
                        var element = internalInstance._currentElement;
                        internalInstance._currentElement = legacy_renderer_objectSpread(legacy_renderer_objectSpread({}, element), {}, {
                          props: copyWithRename(element.props, oldPath, newPath)
                        });
                        forceUpdate(publicInstance);
                        break;
                      case "state":
                        renamePathInObject(publicInstance.state, oldPath, newPath);
                        forceUpdate(publicInstance);
                        break;
                    }
                  }
                }
              }
              function overrideValueAtPath(type2, id, hookID, path, value) {
                var internalInstance = idToInternalInstanceMap.get(id);
                if (internalInstance != null) {
                  var publicInstance = internalInstance._instance;
                  if (publicInstance != null) {
                    switch (type2) {
                      case "context":
                        utils_setInObject(publicInstance.context, path, value);
                        forceUpdate(publicInstance);
                        break;
                      case "hooks":
                        throw new Error("Hooks not supported by this renderer");
                      case "props":
                        var element = internalInstance._currentElement;
                        internalInstance._currentElement = legacy_renderer_objectSpread(legacy_renderer_objectSpread({}, element), {}, {
                          props: copyWithSet(element.props, path, value)
                        });
                        forceUpdate(publicInstance);
                        break;
                      case "state":
                        utils_setInObject(publicInstance.state, path, value);
                        forceUpdate(publicInstance);
                        break;
                    }
                  }
                }
              }
              var getProfilingData = function getProfilingData2() {
                throw new Error("getProfilingData not supported by this renderer");
              };
              var handleCommitFiberRoot = function handleCommitFiberRoot2() {
                throw new Error("handleCommitFiberRoot not supported by this renderer");
              };
              var handleCommitFiberUnmount = function handleCommitFiberUnmount2() {
                throw new Error("handleCommitFiberUnmount not supported by this renderer");
              };
              var handlePostCommitFiberRoot = function handlePostCommitFiberRoot2() {
                throw new Error("handlePostCommitFiberRoot not supported by this renderer");
              };
              var overrideError = function overrideError2() {
                throw new Error("overrideError not supported by this renderer");
              };
              var overrideSuspense = function overrideSuspense2() {
                throw new Error("overrideSuspense not supported by this renderer");
              };
              var startProfiling = function startProfiling2() {
              };
              var stopProfiling = function stopProfiling2() {
              };
              function getBestMatchForTrackedPath() {
                return null;
              }
              function getPathForElement(id) {
                return null;
              }
              function updateComponentFilters(componentFilters) {
              }
              function setTraceUpdatesEnabled(enabled) {
              }
              function setTrackedPath(path) {
              }
              function getOwnersList(id) {
                return null;
              }
              function clearErrorsAndWarnings() {
              }
              function clearErrorsForFiberID(id) {
              }
              function clearWarningsForFiberID(id) {
              }
              function patchConsoleForStrictMode() {
              }
              function unpatchConsoleForStrictMode() {
              }
              function hasFiberWithId(id) {
                return idToInternalInstanceMap.has(id);
              }
              return {
                clearErrorsAndWarnings,
                clearErrorsForFiberID,
                clearWarningsForFiberID,
                cleanup,
                getSerializedElementValueByPath,
                deletePath,
                flushInitialOperations,
                getBestMatchForTrackedPath,
                getDisplayNameForFiberID,
                getFiberForNative,
                getFiberIDForNative: getInternalIDForNative,
                getInstanceAndStyle,
                findNativeNodesForFiberID: function findNativeNodesForFiberID(id) {
                  var nativeNode = findNativeNodeForInternalID(id);
                  return nativeNode == null ? null : [nativeNode];
                },
                getOwnersList,
                getPathForElement,
                getProfilingData,
                handleCommitFiberRoot,
                handleCommitFiberUnmount,
                handlePostCommitFiberRoot,
                hasFiberWithId,
                inspectElement,
                logElementToConsole,
                overrideError,
                overrideSuspense,
                overrideValueAtPath,
                renamePath,
                patchConsoleForStrictMode,
                prepareViewAttributeSource,
                prepareViewElementSource,
                renderer,
                setTraceUpdatesEnabled,
                setTrackedPath,
                startProfiling,
                stopProfiling,
                storeAsGlobal,
                unpatchConsoleForStrictMode,
                updateComponentFilters
              };
            }
            ;
            function isMatchingRender(version) {
              return !hasAssignedBackend(version);
            }
            function initBackend(hook2, agent2, global2) {
              if (hook2 == null) {
                return function() {
                };
              }
              var subs = [
                hook2.sub("renderer-attached", function(_ref) {
                  var id = _ref.id, renderer = _ref.renderer, rendererInterface = _ref.rendererInterface;
                  agent2.setRendererInterface(id, rendererInterface);
                  rendererInterface.flushInitialOperations();
                }),
                hook2.sub("unsupported-renderer-version", function(id) {
                  agent2.onUnsupportedRenderer(id);
                }),
                hook2.sub("fastRefreshScheduled", agent2.onFastRefreshScheduled),
                hook2.sub("operations", agent2.onHookOperations),
                hook2.sub("traceUpdates", agent2.onTraceUpdates)
              ];
              var attachRenderer = function attachRenderer2(id, renderer) {
                if (!isMatchingRender(renderer.reconcilerVersion || renderer.version)) {
                  return;
                }
                var rendererInterface = hook2.rendererInterfaces.get(id);
                if (rendererInterface == null) {
                  if (typeof renderer.findFiberByHostInstance === "function") {
                    rendererInterface = attach(hook2, id, renderer, global2);
                  } else if (renderer.ComponentTree) {
                    rendererInterface = renderer_attach(hook2, id, renderer, global2);
                  } else {
                  }
                  if (rendererInterface != null) {
                    hook2.rendererInterfaces.set(id, rendererInterface);
                  }
                }
                if (rendererInterface != null) {
                  hook2.emit("renderer-attached", {
                    id,
                    renderer,
                    rendererInterface
                  });
                } else {
                  hook2.emit("unsupported-renderer-version", id);
                }
              };
              hook2.renderers.forEach(function(renderer, id) {
                attachRenderer(id, renderer);
              });
              subs.push(hook2.sub("renderer", function(_ref2) {
                var id = _ref2.id, renderer = _ref2.renderer;
                attachRenderer(id, renderer);
              }));
              hook2.emit("react-devtools", agent2);
              hook2.reactDevtoolsAgent = agent2;
              var onAgentShutdown = function onAgentShutdown2() {
                subs.forEach(function(fn) {
                  return fn();
                });
                hook2.rendererInterfaces.forEach(function(rendererInterface) {
                  rendererInterface.cleanup();
                });
                hook2.reactDevtoolsAgent = null;
              };
              agent2.addListener("shutdown", onAgentShutdown);
              subs.push(function() {
                agent2.removeListener("shutdown", onAgentShutdown);
              });
              return function() {
                subs.forEach(function(fn) {
                  return fn();
                });
              };
            }
            ;
            function resolveBoxStyle(prefix3, style) {
              var hasParts = false;
              var result = {
                bottom: 0,
                left: 0,
                right: 0,
                top: 0
              };
              var styleForAll = style[prefix3];
              if (styleForAll != null) {
                for (var _i = 0, _Object$keys = Object.keys(result); _i < _Object$keys.length; _i++) {
                  var key2 = _Object$keys[_i];
                  result[key2] = styleForAll;
                }
                hasParts = true;
              }
              var styleForHorizontal = style[prefix3 + "Horizontal"];
              if (styleForHorizontal != null) {
                result.left = styleForHorizontal;
                result.right = styleForHorizontal;
                hasParts = true;
              } else {
                var styleForLeft = style[prefix3 + "Left"];
                if (styleForLeft != null) {
                  result.left = styleForLeft;
                  hasParts = true;
                }
                var styleForRight = style[prefix3 + "Right"];
                if (styleForRight != null) {
                  result.right = styleForRight;
                  hasParts = true;
                }
                var styleForEnd = style[prefix3 + "End"];
                if (styleForEnd != null) {
                  result.right = styleForEnd;
                  hasParts = true;
                }
                var styleForStart = style[prefix3 + "Start"];
                if (styleForStart != null) {
                  result.left = styleForStart;
                  hasParts = true;
                }
              }
              var styleForVertical = style[prefix3 + "Vertical"];
              if (styleForVertical != null) {
                result.bottom = styleForVertical;
                result.top = styleForVertical;
                hasParts = true;
              } else {
                var styleForBottom = style[prefix3 + "Bottom"];
                if (styleForBottom != null) {
                  result.bottom = styleForBottom;
                  hasParts = true;
                }
                var styleForTop = style[prefix3 + "Top"];
                if (styleForTop != null) {
                  result.top = styleForTop;
                  hasParts = true;
                }
              }
              return hasParts ? result : null;
            }
            ;
            function setupNativeStyleEditor_typeof(obj) {
              "@babel/helpers - typeof";
              if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                setupNativeStyleEditor_typeof = function _typeof2(obj2) {
                  return typeof obj2;
                };
              } else {
                setupNativeStyleEditor_typeof = function _typeof2(obj2) {
                  return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                };
              }
              return setupNativeStyleEditor_typeof(obj);
            }
            function setupNativeStyleEditor_defineProperty(obj, key2, value) {
              if (key2 in obj) {
                Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
              } else {
                obj[key2] = value;
              }
              return obj;
            }
            function setupNativeStyleEditor(bridge, agent2, resolveNativeStyle, validAttributes) {
              bridge.addListener("NativeStyleEditor_measure", function(_ref) {
                var id = _ref.id, rendererID = _ref.rendererID;
                measureStyle(agent2, bridge, resolveNativeStyle, id, rendererID);
              });
              bridge.addListener("NativeStyleEditor_renameAttribute", function(_ref2) {
                var id = _ref2.id, rendererID = _ref2.rendererID, oldName = _ref2.oldName, newName = _ref2.newName, value = _ref2.value;
                renameStyle(agent2, id, rendererID, oldName, newName, value);
                setTimeout(function() {
                  return measureStyle(agent2, bridge, resolveNativeStyle, id, rendererID);
                });
              });
              bridge.addListener("NativeStyleEditor_setValue", function(_ref3) {
                var id = _ref3.id, rendererID = _ref3.rendererID, name = _ref3.name, value = _ref3.value;
                setStyle(agent2, id, rendererID, name, value);
                setTimeout(function() {
                  return measureStyle(agent2, bridge, resolveNativeStyle, id, rendererID);
                });
              });
              bridge.send("isNativeStyleEditorSupported", {
                isSupported: true,
                validAttributes
              });
            }
            var EMPTY_BOX_STYLE = {
              top: 0,
              left: 0,
              right: 0,
              bottom: 0
            };
            var componentIDToStyleOverrides = /* @__PURE__ */ new Map();
            function measureStyle(agent2, bridge, resolveNativeStyle, id, rendererID) {
              var data = agent2.getInstanceAndStyle({
                id,
                rendererID
              });
              if (!data || !data.style) {
                bridge.send("NativeStyleEditor_styleAndLayout", {
                  id,
                  layout: null,
                  style: null
                });
                return;
              }
              var instance = data.instance, style = data.style;
              var resolvedStyle = resolveNativeStyle(style);
              var styleOverrides = componentIDToStyleOverrides.get(id);
              if (styleOverrides != null) {
                resolvedStyle = Object.assign({}, resolvedStyle, styleOverrides);
              }
              if (!instance || typeof instance.measure !== "function") {
                bridge.send("NativeStyleEditor_styleAndLayout", {
                  id,
                  layout: null,
                  style: resolvedStyle || null
                });
                return;
              }
              instance.measure(function(x, y, width, height, left, top) {
                if (typeof x !== "number") {
                  bridge.send("NativeStyleEditor_styleAndLayout", {
                    id,
                    layout: null,
                    style: resolvedStyle || null
                  });
                  return;
                }
                var margin = resolvedStyle != null && resolveBoxStyle("margin", resolvedStyle) || EMPTY_BOX_STYLE;
                var padding = resolvedStyle != null && resolveBoxStyle("padding", resolvedStyle) || EMPTY_BOX_STYLE;
                bridge.send("NativeStyleEditor_styleAndLayout", {
                  id,
                  layout: {
                    x,
                    y,
                    width,
                    height,
                    left,
                    top,
                    margin,
                    padding
                  },
                  style: resolvedStyle || null
                });
              });
            }
            function shallowClone(object) {
              var cloned = {};
              for (var n in object) {
                cloned[n] = object[n];
              }
              return cloned;
            }
            function renameStyle(agent2, id, rendererID, oldName, newName, value) {
              var _ref4;
              var data = agent2.getInstanceAndStyle({
                id,
                rendererID
              });
              if (!data || !data.style) {
                return;
              }
              var instance = data.instance, style = data.style;
              var newStyle = newName ? (_ref4 = {}, setupNativeStyleEditor_defineProperty(_ref4, oldName, void 0), setupNativeStyleEditor_defineProperty(_ref4, newName, value), _ref4) : setupNativeStyleEditor_defineProperty({}, oldName, void 0);
              var customStyle;
              if (instance !== null && typeof instance.setNativeProps === "function") {
                var styleOverrides = componentIDToStyleOverrides.get(id);
                if (!styleOverrides) {
                  componentIDToStyleOverrides.set(id, newStyle);
                } else {
                  Object.assign(styleOverrides, newStyle);
                }
                instance.setNativeProps({
                  style: newStyle
                });
              } else if (src_isArray(style)) {
                var lastIndex = style.length - 1;
                if (setupNativeStyleEditor_typeof(style[lastIndex]) === "object" && !src_isArray(style[lastIndex])) {
                  customStyle = shallowClone(style[lastIndex]);
                  delete customStyle[oldName];
                  if (newName) {
                    customStyle[newName] = value;
                  } else {
                    customStyle[oldName] = void 0;
                  }
                  agent2.overrideValueAtPath({
                    type: "props",
                    id,
                    rendererID,
                    path: ["style", lastIndex],
                    value: customStyle
                  });
                } else {
                  agent2.overrideValueAtPath({
                    type: "props",
                    id,
                    rendererID,
                    path: ["style"],
                    value: style.concat([newStyle])
                  });
                }
              } else if (setupNativeStyleEditor_typeof(style) === "object") {
                customStyle = shallowClone(style);
                delete customStyle[oldName];
                if (newName) {
                  customStyle[newName] = value;
                } else {
                  customStyle[oldName] = void 0;
                }
                agent2.overrideValueAtPath({
                  type: "props",
                  id,
                  rendererID,
                  path: ["style"],
                  value: customStyle
                });
              } else {
                agent2.overrideValueAtPath({
                  type: "props",
                  id,
                  rendererID,
                  path: ["style"],
                  value: [style, newStyle]
                });
              }
              agent2.emit("hideNativeHighlight");
            }
            function setStyle(agent2, id, rendererID, name, value) {
              var data = agent2.getInstanceAndStyle({
                id,
                rendererID
              });
              if (!data || !data.style) {
                return;
              }
              var instance = data.instance, style = data.style;
              var newStyle = setupNativeStyleEditor_defineProperty({}, name, value);
              if (instance !== null && typeof instance.setNativeProps === "function") {
                var styleOverrides = componentIDToStyleOverrides.get(id);
                if (!styleOverrides) {
                  componentIDToStyleOverrides.set(id, newStyle);
                } else {
                  Object.assign(styleOverrides, newStyle);
                }
                instance.setNativeProps({
                  style: newStyle
                });
              } else if (src_isArray(style)) {
                var lastLength = style.length - 1;
                if (setupNativeStyleEditor_typeof(style[lastLength]) === "object" && !src_isArray(style[lastLength])) {
                  agent2.overrideValueAtPath({
                    type: "props",
                    id,
                    rendererID,
                    path: ["style", lastLength, name],
                    value
                  });
                } else {
                  agent2.overrideValueAtPath({
                    type: "props",
                    id,
                    rendererID,
                    path: ["style"],
                    value: style.concat([newStyle])
                  });
                }
              } else {
                agent2.overrideValueAtPath({
                  type: "props",
                  id,
                  rendererID,
                  path: ["style"],
                  value: [style, newStyle]
                });
              }
              agent2.emit("hideNativeHighlight");
            }
            ;
            function initializeUsingCachedSettings(devToolsSettingsManager) {
              initializeConsolePatchSettings(devToolsSettingsManager);
            }
            function initializeConsolePatchSettings(devToolsSettingsManager) {
              if (devToolsSettingsManager.getConsolePatchSettings == null) {
                return;
              }
              var consolePatchSettingsString = devToolsSettingsManager.getConsolePatchSettings();
              if (consolePatchSettingsString == null) {
                return;
              }
              var parsedConsolePatchSettings = parseConsolePatchSettings(consolePatchSettingsString);
              if (parsedConsolePatchSettings == null) {
                return;
              }
              writeConsolePatchSettingsToWindow(parsedConsolePatchSettings);
            }
            function parseConsolePatchSettings(consolePatchSettingsString) {
              var _castBool, _castBool2, _castBool3, _castBool4, _castBrowserTheme;
              var parsedValue = JSON.parse(consolePatchSettingsString !== null && consolePatchSettingsString !== void 0 ? consolePatchSettingsString : "{}");
              var appendComponentStack = parsedValue.appendComponentStack, breakOnConsoleErrors = parsedValue.breakOnConsoleErrors, showInlineWarningsAndErrors = parsedValue.showInlineWarningsAndErrors, hideConsoleLogsInStrictMode = parsedValue.hideConsoleLogsInStrictMode, browserTheme = parsedValue.browserTheme;
              return {
                appendComponentStack: (_castBool = castBool(appendComponentStack)) !== null && _castBool !== void 0 ? _castBool : true,
                breakOnConsoleErrors: (_castBool2 = castBool(breakOnConsoleErrors)) !== null && _castBool2 !== void 0 ? _castBool2 : false,
                showInlineWarningsAndErrors: (_castBool3 = castBool(showInlineWarningsAndErrors)) !== null && _castBool3 !== void 0 ? _castBool3 : true,
                hideConsoleLogsInStrictMode: (_castBool4 = castBool(hideConsoleLogsInStrictMode)) !== null && _castBool4 !== void 0 ? _castBool4 : false,
                browserTheme: (_castBrowserTheme = castBrowserTheme(browserTheme)) !== null && _castBrowserTheme !== void 0 ? _castBrowserTheme : "dark"
              };
            }
            function cacheConsolePatchSettings(devToolsSettingsManager, value) {
              if (devToolsSettingsManager.setConsolePatchSettings == null) {
                return;
              }
              devToolsSettingsManager.setConsolePatchSettings(JSON.stringify(value));
            }
            ;
            installConsoleFunctionsToWindow();
            installHook(window);
            var hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
            var savedComponentFilters = getDefaultComponentFilters();
            function backend_debug(methodName) {
              if (__DEBUG__) {
                var _console;
                for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                  args[_key - 1] = arguments[_key];
                }
                (_console = console).log.apply(_console, ["%c[core/backend] %c".concat(methodName), "color: teal; font-weight: bold;", "font-weight: bold;"].concat(args));
              }
            }
            function connectToDevTools(options) {
              if (hook == null) {
                return;
              }
              var _ref = options || {}, _ref$host = _ref.host, host = _ref$host === void 0 ? "localhost" : _ref$host, nativeStyleEditorValidAttributes = _ref.nativeStyleEditorValidAttributes, _ref$useHttps = _ref.useHttps, useHttps = _ref$useHttps === void 0 ? false : _ref$useHttps, _ref$port = _ref.port, port = _ref$port === void 0 ? 8097 : _ref$port, websocket = _ref.websocket, _ref$resolveRNStyle = _ref.resolveRNStyle, resolveRNStyle = _ref$resolveRNStyle === void 0 ? null : _ref$resolveRNStyle, _ref$retryConnectionD = _ref.retryConnectionDelay, retryConnectionDelay = _ref$retryConnectionD === void 0 ? 2e3 : _ref$retryConnectionD, _ref$isAppActive = _ref.isAppActive, isAppActive = _ref$isAppActive === void 0 ? function() {
                return true;
              } : _ref$isAppActive, devToolsSettingsManager = _ref.devToolsSettingsManager;
              var protocol = useHttps ? "wss" : "ws";
              var retryTimeoutID = null;
              function scheduleRetry() {
                if (retryTimeoutID === null) {
                  retryTimeoutID = setTimeout(function() {
                    return connectToDevTools(options);
                  }, retryConnectionDelay);
                }
              }
              if (devToolsSettingsManager != null) {
                try {
                  initializeUsingCachedSettings(devToolsSettingsManager);
                } catch (e) {
                  console.error(e);
                }
              }
              if (!isAppActive()) {
                scheduleRetry();
                return;
              }
              var bridge = null;
              var messageListeners = [];
              var uri = protocol + "://" + host + ":" + port;
              var ws = websocket ? websocket : new window.WebSocket(uri);
              ws.onclose = handleClose;
              ws.onerror = handleFailed;
              ws.onmessage = handleMessage;
              ws.onopen = function() {
                bridge = new src_bridge({
                  listen: function listen(fn) {
                    messageListeners.push(fn);
                    return function() {
                      var index = messageListeners.indexOf(fn);
                      if (index >= 0) {
                        messageListeners.splice(index, 1);
                      }
                    };
                  },
                  send: function send(event, payload, transferable) {
                    if (ws.readyState === ws.OPEN) {
                      if (__DEBUG__) {
                        backend_debug("wall.send()", event, payload);
                      }
                      ws.send(JSON.stringify({
                        event,
                        payload
                      }));
                    } else {
                      if (__DEBUG__) {
                        backend_debug("wall.send()", "Shutting down bridge because of closed WebSocket connection");
                      }
                      if (bridge !== null) {
                        bridge.shutdown();
                      }
                      scheduleRetry();
                    }
                  }
                });
                bridge.addListener("updateComponentFilters", function(componentFilters) {
                  savedComponentFilters = componentFilters;
                });
                if (devToolsSettingsManager != null && bridge != null) {
                  bridge.addListener("updateConsolePatchSettings", function(consolePatchSettings) {
                    return cacheConsolePatchSettings(devToolsSettingsManager, consolePatchSettings);
                  });
                }
                if (window.__REACT_DEVTOOLS_COMPONENT_FILTERS__ == null) {
                  bridge.send("overrideComponentFilters", savedComponentFilters);
                }
                var agent2 = new Agent(bridge);
                agent2.addListener("shutdown", function() {
                  hook.emit("shutdown");
                });
                initBackend(hook, agent2, window);
                if (resolveRNStyle != null || hook.resolveRNStyle != null) {
                  setupNativeStyleEditor(
                    bridge,
                    agent2,
                    resolveRNStyle || hook.resolveRNStyle,
                    nativeStyleEditorValidAttributes || hook.nativeStyleEditorValidAttributes || null
                  );
                } else {
                  var lazyResolveRNStyle;
                  var lazyNativeStyleEditorValidAttributes;
                  var initAfterTick = function initAfterTick2() {
                    if (bridge !== null) {
                      setupNativeStyleEditor(bridge, agent2, lazyResolveRNStyle, lazyNativeStyleEditorValidAttributes);
                    }
                  };
                  if (!hook.hasOwnProperty("resolveRNStyle")) {
                    Object.defineProperty(hook, "resolveRNStyle", {
                      enumerable: false,
                      get: function get() {
                        return lazyResolveRNStyle;
                      },
                      set: function set(value) {
                        lazyResolveRNStyle = value;
                        initAfterTick();
                      }
                    });
                  }
                  if (!hook.hasOwnProperty("nativeStyleEditorValidAttributes")) {
                    Object.defineProperty(hook, "nativeStyleEditorValidAttributes", {
                      enumerable: false,
                      get: function get() {
                        return lazyNativeStyleEditorValidAttributes;
                      },
                      set: function set(value) {
                        lazyNativeStyleEditorValidAttributes = value;
                        initAfterTick();
                      }
                    });
                  }
                }
              };
              function handleClose() {
                if (__DEBUG__) {
                  backend_debug("WebSocket.onclose");
                }
                if (bridge !== null) {
                  bridge.emit("shutdown");
                }
                scheduleRetry();
              }
              function handleFailed() {
                if (__DEBUG__) {
                  backend_debug("WebSocket.onerror");
                }
                scheduleRetry();
              }
              function handleMessage(event) {
                var data;
                try {
                  if (typeof event.data === "string") {
                    data = JSON.parse(event.data);
                    if (__DEBUG__) {
                      backend_debug("WebSocket.onmessage", data);
                    }
                  } else {
                    throw Error();
                  }
                } catch (e) {
                  console.error("[React DevTools] Failed to parse JSON: " + event.data);
                  return;
                }
                messageListeners.forEach(function(fn) {
                  try {
                    fn(data);
                  } catch (error) {
                    console.log("[React DevTools] Error calling listener", data);
                    console.log("error:", error);
                    throw error;
                  }
                });
              }
            }
          })();
          return __webpack_exports__;
        })();
      });
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/devtools.js
  var require_devtools = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/devtools.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      require_devtools_window_polyfill();
      var react_devtools_core_1 = require_backend();
      react_devtools_core_1.connectToDevTools();
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/reconciler.js
  var require_reconciler = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/reconciler.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var scheduler_1 = require_scheduler();
      var react_reconciler_1 = __importDefault(require_react_reconciler());
      var yoga_layout_prebuilt_1 = __importDefault(require_entry_browser());
      var dom_1 = require_dom();
      if (process.env.DEV === "true") {
        require_devtools();
      }
      var cleanupYogaNode = (node) => {
        node === null || node === void 0 ? void 0 : node.unsetMeasureFunc();
        node === null || node === void 0 ? void 0 : node.freeRecursive();
      };
      exports2.default = react_reconciler_1.default({
        schedulePassiveEffects: scheduler_1.unstable_scheduleCallback,
        cancelPassiveEffects: scheduler_1.unstable_cancelCallback,
        now: Date.now,
        getRootHostContext: () => ({
          isInsideText: false
        }),
        prepareForCommit: () => {
        },
        resetAfterCommit: (rootNode) => {
          if (rootNode.isStaticDirty) {
            rootNode.isStaticDirty = false;
            if (typeof rootNode.onImmediateRender === "function") {
              rootNode.onImmediateRender();
            }
            return;
          }
          if (typeof rootNode.onRender === "function") {
            rootNode.onRender();
          }
        },
        getChildHostContext: (parentHostContext, type2) => {
          const previousIsInsideText = parentHostContext.isInsideText;
          const isInsideText = type2 === "ink-text" || type2 === "ink-virtual-text";
          if (previousIsInsideText === isInsideText) {
            return parentHostContext;
          }
          return { isInsideText };
        },
        shouldSetTextContent: () => false,
        createInstance: (originalType, newProps, _root, hostContext) => {
          if (hostContext.isInsideText && originalType === "ink-box") {
            throw new Error(`<Box> can\u2019t be nested inside <Text> component`);
          }
          const type2 = originalType === "ink-text" && hostContext.isInsideText ? "ink-virtual-text" : originalType;
          const node = dom_1.createNode(type2);
          for (const [key2, value] of Object.entries(newProps)) {
            if (key2 === "children") {
              continue;
            } else if (key2 === "style") {
              dom_1.setStyle(node, value);
            } else if (key2 === "internal_transform") {
              node.internal_transform = value;
            } else if (key2 === "internal_static") {
              node.internal_static = true;
            } else {
              dom_1.setAttribute(node, key2, value);
            }
          }
          return node;
        },
        createTextInstance: (text, _root, hostContext) => {
          if (!hostContext.isInsideText) {
            throw new Error(`Text string "${text}" must be rendered inside <Text> component`);
          }
          return dom_1.createTextNode(text);
        },
        resetTextContent: () => {
        },
        hideTextInstance: (node) => {
          dom_1.setTextNodeValue(node, "");
        },
        unhideTextInstance: (node, text) => {
          dom_1.setTextNodeValue(node, text);
        },
        getPublicInstance: (instance) => instance,
        hideInstance: (node) => {
          var _a2;
          (_a2 = node.yogaNode) === null || _a2 === void 0 ? void 0 : _a2.setDisplay(yoga_layout_prebuilt_1.default.DISPLAY_NONE);
        },
        unhideInstance: (node) => {
          var _a2;
          (_a2 = node.yogaNode) === null || _a2 === void 0 ? void 0 : _a2.setDisplay(yoga_layout_prebuilt_1.default.DISPLAY_FLEX);
        },
        appendInitialChild: dom_1.appendChildNode,
        appendChild: dom_1.appendChildNode,
        insertBefore: dom_1.insertBeforeNode,
        finalizeInitialChildren: (node, _type, _props, rootNode) => {
          if (node.internal_static) {
            rootNode.isStaticDirty = true;
            rootNode.staticNode = node;
          }
          return false;
        },
        supportsMutation: true,
        appendChildToContainer: dom_1.appendChildNode,
        insertInContainerBefore: dom_1.insertBeforeNode,
        removeChildFromContainer: (node, removeNode) => {
          dom_1.removeChildNode(node, removeNode);
          cleanupYogaNode(removeNode.yogaNode);
        },
        prepareUpdate: (node, _type, oldProps, newProps, rootNode) => {
          if (node.internal_static) {
            rootNode.isStaticDirty = true;
          }
          const updatePayload = {};
          const keys = Object.keys(newProps);
          for (const key2 of keys) {
            if (newProps[key2] !== oldProps[key2]) {
              const isStyle = key2 === "style" && typeof newProps.style === "object" && typeof oldProps.style === "object";
              if (isStyle) {
                const newStyle = newProps.style;
                const oldStyle = oldProps.style;
                const styleKeys = Object.keys(newStyle);
                for (const styleKey of styleKeys) {
                  if (styleKey === "borderStyle" || styleKey === "borderColor") {
                    if (typeof updatePayload.style !== "object") {
                      const style = {};
                      updatePayload.style = style;
                    }
                    updatePayload.style.borderStyle = newStyle.borderStyle;
                    updatePayload.style.borderColor = newStyle.borderColor;
                  }
                  if (newStyle[styleKey] !== oldStyle[styleKey]) {
                    if (typeof updatePayload.style !== "object") {
                      const style = {};
                      updatePayload.style = style;
                    }
                    updatePayload.style[styleKey] = newStyle[styleKey];
                  }
                }
                continue;
              }
              updatePayload[key2] = newProps[key2];
            }
          }
          return updatePayload;
        },
        commitUpdate: (node, updatePayload) => {
          for (const [key2, value] of Object.entries(updatePayload)) {
            if (key2 === "children") {
              continue;
            } else if (key2 === "style") {
              dom_1.setStyle(node, value);
            } else if (key2 === "internal_transform") {
              node.internal_transform = value;
            } else if (key2 === "internal_static") {
              node.internal_static = true;
            } else {
              dom_1.setAttribute(node, key2, value);
            }
          }
        },
        commitTextUpdate: (node, _oldText, newText) => {
          dom_1.setTextNodeValue(node, newText);
        },
        removeChild: (node, removeNode) => {
          dom_1.removeChildNode(node, removeNode);
          cleanupYogaNode(removeNode.yogaNode);
        }
      });
    }
  });

  // ../../../.yarn/cache/indent-string-npm-4.0.0-7b717435b2-cd3f5cbc9c.zip/node_modules/indent-string/index.js
  var require_indent_string = __commonJS({
    "../../../.yarn/cache/indent-string-npm-4.0.0-7b717435b2-cd3f5cbc9c.zip/node_modules/indent-string/index.js"(exports2, module2) {
      "use strict";
      module2.exports = (string, count = 1, options) => {
        options = {
          indent: " ",
          includeEmptyLines: false,
          ...options
        };
        if (typeof string !== "string") {
          throw new TypeError(
            `Expected \`input\` to be a \`string\`, got \`${typeof string}\``
          );
        }
        if (typeof count !== "number") {
          throw new TypeError(
            `Expected \`count\` to be a \`number\`, got \`${typeof count}\``
          );
        }
        if (typeof options.indent !== "string") {
          throw new TypeError(
            `Expected \`options.indent\` to be a \`string\`, got \`${typeof options.indent}\``
          );
        }
        if (count === 0) {
          return string;
        }
        const regex = options.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;
        return string.replace(regex, options.indent.repeat(count));
      };
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/get-max-width.js
  var require_get_max_width = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/get-max-width.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var yoga_layout_prebuilt_1 = __importDefault(require_entry_browser());
      exports2.default = (yogaNode) => {
        return yogaNode.getComputedWidth() - yogaNode.getComputedPadding(yoga_layout_prebuilt_1.default.EDGE_LEFT) - yogaNode.getComputedPadding(yoga_layout_prebuilt_1.default.EDGE_RIGHT) - yogaNode.getComputedBorder(yoga_layout_prebuilt_1.default.EDGE_LEFT) - yogaNode.getComputedBorder(yoga_layout_prebuilt_1.default.EDGE_RIGHT);
      };
    }
  });

  // ../../../.yarn/cache/cli-boxes-npm-2.2.1-7125a5ba44-be79f8ec23.zip/node_modules/cli-boxes/boxes.json
  var require_boxes = __commonJS({
    "../../../.yarn/cache/cli-boxes-npm-2.2.1-7125a5ba44-be79f8ec23.zip/node_modules/cli-boxes/boxes.json"(exports2, module2) {
      module2.exports = {
        single: {
          topLeft: "\u250C",
          topRight: "\u2510",
          bottomRight: "\u2518",
          bottomLeft: "\u2514",
          vertical: "\u2502",
          horizontal: "\u2500"
        },
        double: {
          topLeft: "\u2554",
          topRight: "\u2557",
          bottomRight: "\u255D",
          bottomLeft: "\u255A",
          vertical: "\u2551",
          horizontal: "\u2550"
        },
        round: {
          topLeft: "\u256D",
          topRight: "\u256E",
          bottomRight: "\u256F",
          bottomLeft: "\u2570",
          vertical: "\u2502",
          horizontal: "\u2500"
        },
        bold: {
          topLeft: "\u250F",
          topRight: "\u2513",
          bottomRight: "\u251B",
          bottomLeft: "\u2517",
          vertical: "\u2503",
          horizontal: "\u2501"
        },
        singleDouble: {
          topLeft: "\u2553",
          topRight: "\u2556",
          bottomRight: "\u255C",
          bottomLeft: "\u2559",
          vertical: "\u2551",
          horizontal: "\u2500"
        },
        doubleSingle: {
          topLeft: "\u2552",
          topRight: "\u2555",
          bottomRight: "\u255B",
          bottomLeft: "\u2558",
          vertical: "\u2502",
          horizontal: "\u2550"
        },
        classic: {
          topLeft: "+",
          topRight: "+",
          bottomRight: "+",
          bottomLeft: "+",
          vertical: "|",
          horizontal: "-"
        }
      };
    }
  });

  // ../../../.yarn/cache/cli-boxes-npm-2.2.1-7125a5ba44-be79f8ec23.zip/node_modules/cli-boxes/index.js
  var require_cli_boxes = __commonJS({
    "../../../.yarn/cache/cli-boxes-npm-2.2.1-7125a5ba44-be79f8ec23.zip/node_modules/cli-boxes/index.js"(exports2, module2) {
      "use strict";
      var cliBoxes = require_boxes();
      module2.exports = cliBoxes;
      module2.exports.default = cliBoxes;
    }
  });

  // ../../../.yarn/cache/has-flag-npm-4.0.0-32af9f0536-261a135703.zip/node_modules/has-flag/index.js
  var require_has_flag = __commonJS({
    "../../../.yarn/cache/has-flag-npm-4.0.0-32af9f0536-261a135703.zip/node_modules/has-flag/index.js"(exports2, module2) {
      "use strict";
      module2.exports = (flag, argv = process.argv) => {
        const prefix2 = flag.startsWith("-") ? "" : flag.length === 1 ? "-" : "--";
        const position = argv.indexOf(prefix2 + flag);
        const terminatorPosition = argv.indexOf("--");
        return position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);
      };
    }
  });

  // ../../../.yarn/cache/supports-color-npm-7.1.0-df2ba1e338-f5b2df5336.zip/node_modules/supports-color/index.js
  var require_supports_color = __commonJS({
    "../../../.yarn/cache/supports-color-npm-7.1.0-df2ba1e338-f5b2df5336.zip/node_modules/supports-color/index.js"(exports2, module2) {
      "use strict";
      var os = __require("os");
      var tty = __require("tty");
      var hasFlag = require_has_flag();
      var { env } = process;
      var forceColor2;
      if (hasFlag("no-color") || hasFlag("no-colors") || hasFlag("color=false") || hasFlag("color=never")) {
        forceColor2 = 0;
      } else if (hasFlag("color") || hasFlag("colors") || hasFlag("color=true") || hasFlag("color=always")) {
        forceColor2 = 1;
      }
      if ("FORCE_COLOR" in env) {
        if (env.FORCE_COLOR === "true") {
          forceColor2 = 1;
        } else if (env.FORCE_COLOR === "false") {
          forceColor2 = 0;
        } else {
          forceColor2 = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);
        }
      }
      function translateLevel(level2) {
        if (level2 === 0) {
          return false;
        }
        return {
          level: level2,
          hasBasic: true,
          has256: level2 >= 2,
          has16m: level2 >= 3
        };
      }
      function supportsColor2(haveStream, streamIsTTY) {
        if (forceColor2 === 0) {
          return 0;
        }
        if (hasFlag("color=16m") || hasFlag("color=full") || hasFlag("color=truecolor")) {
          return 3;
        }
        if (hasFlag("color=256")) {
          return 2;
        }
        if (haveStream && !streamIsTTY && forceColor2 === void 0) {
          return 0;
        }
        const min = forceColor2 || 0;
        if (env.TERM === "dumb") {
          return min;
        }
        if (process.platform === "win32") {
          const osRelease = os.release().split(".");
          if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
            return Number(osRelease[2]) >= 14931 ? 3 : 2;
          }
          return 1;
        }
        if ("CI" in env) {
          if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI"].some((sign) => sign in env) || env.CI_NAME === "codeship") {
            return 1;
          }
          return min;
        }
        if ("TEAMCITY_VERSION" in env) {
          return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
        }
        if ("GITHUB_ACTIONS" in env) {
          return 1;
        }
        if (env.COLORTERM === "truecolor") {
          return 3;
        }
        if ("TERM_PROGRAM" in env) {
          const version = parseInt((env.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
          switch (env.TERM_PROGRAM) {
            case "iTerm.app":
              return version >= 3 ? 3 : 2;
            case "Apple_Terminal":
              return 2;
          }
        }
        if (/-256(color)?$/i.test(env.TERM)) {
          return 2;
        }
        if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
          return 1;
        }
        if ("COLORTERM" in env) {
          return 1;
        }
        return min;
      }
      function getSupportLevel(stream) {
        const level2 = supportsColor2(stream, stream && stream.isTTY);
        return translateLevel(level2);
      }
      module2.exports = {
        supportsColor: getSupportLevel,
        stdout: translateLevel(supportsColor2(true, tty.isatty(1))),
        stderr: translateLevel(supportsColor2(true, tty.isatty(2)))
      };
    }
  });

  // ../../../.yarn/cache/chalk-npm-4.1.1-f1ce6bae57-ae5031f496.zip/node_modules/chalk/source/util.js
  var require_util = __commonJS({
    "../../../.yarn/cache/chalk-npm-4.1.1-f1ce6bae57-ae5031f496.zip/node_modules/chalk/source/util.js"(exports2, module2) {
      "use strict";
      var stringReplaceAll = (string, substring, replacer) => {
        let index = string.indexOf(substring);
        if (index === -1) {
          return string;
        }
        const substringLength = substring.length;
        let endIndex = 0;
        let returnValue = "";
        do {
          returnValue += string.substr(endIndex, index - endIndex) + substring + replacer;
          endIndex = index + substringLength;
          index = string.indexOf(substring, endIndex);
        } while (index !== -1);
        returnValue += string.substr(endIndex);
        return returnValue;
      };
      var stringEncaseCRLFWithFirstIndex = (string, prefix2, postfix, index) => {
        let endIndex = 0;
        let returnValue = "";
        do {
          const gotCR = string[index - 1] === "\r";
          returnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix2 + (gotCR ? "\r\n" : "\n") + postfix;
          endIndex = index + 1;
          index = string.indexOf("\n", endIndex);
        } while (index !== -1);
        returnValue += string.substr(endIndex);
        return returnValue;
      };
      module2.exports = {
        stringReplaceAll,
        stringEncaseCRLFWithFirstIndex
      };
    }
  });

  // ../../../.yarn/cache/chalk-npm-4.1.1-f1ce6bae57-ae5031f496.zip/node_modules/chalk/source/templates.js
  var require_templates = __commonJS({
    "../../../.yarn/cache/chalk-npm-4.1.1-f1ce6bae57-ae5031f496.zip/node_modules/chalk/source/templates.js"(exports2, module2) {
      "use strict";
      var TEMPLATE_REGEX = /(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi;
      var STYLE_REGEX = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g;
      var STRING_REGEX = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/;
      var ESCAPE_REGEX = /\\(u(?:[a-f\d]{4}|{[a-f\d]{1,6}})|x[a-f\d]{2}|.)|([^\\])/gi;
      var ESCAPES = /* @__PURE__ */ new Map([
        ["n", "\n"],
        ["r", "\r"],
        ["t", "	"],
        ["b", "\b"],
        ["f", "\f"],
        ["v", "\v"],
        ["0", "\0"],
        ["\\", "\\"],
        ["e", "\x1B"],
        ["a", "\x07"]
      ]);
      function unescape(c) {
        const u = c[0] === "u";
        const bracket = c[1] === "{";
        if (u && !bracket && c.length === 5 || c[0] === "x" && c.length === 3) {
          return String.fromCharCode(parseInt(c.slice(1), 16));
        }
        if (u && bracket) {
          return String.fromCodePoint(parseInt(c.slice(2, -1), 16));
        }
        return ESCAPES.get(c) || c;
      }
      function parseArguments(name, arguments_) {
        const results = [];
        const chunks = arguments_.trim().split(/\s*,\s*/g);
        let matches;
        for (const chunk of chunks) {
          const number = Number(chunk);
          if (!Number.isNaN(number)) {
            results.push(number);
          } else if (matches = chunk.match(STRING_REGEX)) {
            results.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));
          } else {
            throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);
          }
        }
        return results;
      }
      function parseStyle(style) {
        STYLE_REGEX.lastIndex = 0;
        const results = [];
        let matches;
        while ((matches = STYLE_REGEX.exec(style)) !== null) {
          const name = matches[1];
          if (matches[2]) {
            const args = parseArguments(name, matches[2]);
            results.push([name].concat(args));
          } else {
            results.push([name]);
          }
        }
        return results;
      }
      function buildStyle(chalk, styles) {
        const enabled = {};
        for (const layer of styles) {
          for (const style of layer.styles) {
            enabled[style[0]] = layer.inverse ? null : style.slice(1);
          }
        }
        let current = chalk;
        for (const [styleName, styles2] of Object.entries(enabled)) {
          if (!Array.isArray(styles2)) {
            continue;
          }
          if (!(styleName in current)) {
            throw new Error(`Unknown Chalk style: ${styleName}`);
          }
          current = styles2.length > 0 ? current[styleName](...styles2) : current[styleName];
        }
        return current;
      }
      module2.exports = (chalk, temporary) => {
        const styles = [];
        const chunks = [];
        let chunk = [];
        temporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {
          if (escapeCharacter) {
            chunk.push(unescape(escapeCharacter));
          } else if (style) {
            const string = chunk.join("");
            chunk = [];
            chunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));
            styles.push({ inverse, styles: parseStyle(style) });
          } else if (close) {
            if (styles.length === 0) {
              throw new Error("Found extraneous } in Chalk template literal");
            }
            chunks.push(buildStyle(chalk, styles)(chunk.join("")));
            chunk = [];
            styles.pop();
          } else {
            chunk.push(character);
          }
        });
        chunks.push(chunk.join(""));
        if (styles.length > 0) {
          const errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? "" : "s"} (\`}\`)`;
          throw new Error(errMessage);
        }
        return chunks.join("");
      };
    }
  });

  // ../../../.yarn/cache/chalk-npm-4.1.1-f1ce6bae57-ae5031f496.zip/node_modules/chalk/source/index.js
  var require_source = __commonJS({
    "../../../.yarn/cache/chalk-npm-4.1.1-f1ce6bae57-ae5031f496.zip/node_modules/chalk/source/index.js"(exports2, module2) {
      "use strict";
      var ansiStyles = require_ansi_styles();
      var { stdout: stdoutColor, stderr: stderrColor } = require_supports_color();
      var {
        stringReplaceAll,
        stringEncaseCRLFWithFirstIndex
      } = require_util();
      var { isArray } = Array;
      var levelMapping = [
        "ansi",
        "ansi",
        "ansi256",
        "ansi16m"
      ];
      var styles = /* @__PURE__ */ Object.create(null);
      var applyOptions = (object, options = {}) => {
        if (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {
          throw new Error("The `level` option should be an integer from 0 to 3");
        }
        const colorLevel = stdoutColor ? stdoutColor.level : 0;
        object.level = options.level === void 0 ? colorLevel : options.level;
      };
      var ChalkClass = class {
        constructor(options) {
          return chalkFactory(options);
        }
      };
      var chalkFactory = (options) => {
        const chalk2 = {};
        applyOptions(chalk2, options);
        chalk2.template = (...arguments_) => chalkTag(chalk2.template, ...arguments_);
        Object.setPrototypeOf(chalk2, Chalk.prototype);
        Object.setPrototypeOf(chalk2.template, chalk2);
        chalk2.template.constructor = () => {
          throw new Error("`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.");
        };
        chalk2.template.Instance = ChalkClass;
        return chalk2.template;
      };
      function Chalk(options) {
        return chalkFactory(options);
      }
      for (const [styleName, style] of Object.entries(ansiStyles)) {
        styles[styleName] = {
          get() {
            const builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);
            Object.defineProperty(this, styleName, { value: builder });
            return builder;
          }
        };
      }
      styles.visible = {
        get() {
          const builder = createBuilder(this, this._styler, true);
          Object.defineProperty(this, "visible", { value: builder });
          return builder;
        }
      };
      var usedModels = ["rgb", "hex", "keyword", "hsl", "hsv", "hwb", "ansi", "ansi256"];
      for (const model of usedModels) {
        styles[model] = {
          get() {
            const { level: level2 } = this;
            return function(...arguments_) {
              const styler = createStyler(ansiStyles.color[levelMapping[level2]][model](...arguments_), ansiStyles.color.close, this._styler);
              return createBuilder(this, styler, this._isEmpty);
            };
          }
        };
      }
      for (const model of usedModels) {
        const bgModel = "bg" + model[0].toUpperCase() + model.slice(1);
        styles[bgModel] = {
          get() {
            const { level: level2 } = this;
            return function(...arguments_) {
              const styler = createStyler(ansiStyles.bgColor[levelMapping[level2]][model](...arguments_), ansiStyles.bgColor.close, this._styler);
              return createBuilder(this, styler, this._isEmpty);
            };
          }
        };
      }
      var proto = Object.defineProperties(() => {
      }, {
        ...styles,
        level: {
          enumerable: true,
          get() {
            return this._generator.level;
          },
          set(level2) {
            this._generator.level = level2;
          }
        }
      });
      var createStyler = (open, close, parent) => {
        let openAll;
        let closeAll;
        if (parent === void 0) {
          openAll = open;
          closeAll = close;
        } else {
          openAll = parent.openAll + open;
          closeAll = close + parent.closeAll;
        }
        return {
          open,
          close,
          openAll,
          closeAll,
          parent
        };
      };
      var createBuilder = (self2, _styler, _isEmpty) => {
        const builder = (...arguments_) => {
          if (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {
            return applyStyle(builder, chalkTag(builder, ...arguments_));
          }
          return applyStyle(builder, arguments_.length === 1 ? "" + arguments_[0] : arguments_.join(" "));
        };
        Object.setPrototypeOf(builder, proto);
        builder._generator = self2;
        builder._styler = _styler;
        builder._isEmpty = _isEmpty;
        return builder;
      };
      var applyStyle = (self2, string) => {
        if (self2.level <= 0 || !string) {
          return self2._isEmpty ? "" : string;
        }
        let styler = self2._styler;
        if (styler === void 0) {
          return string;
        }
        const { openAll, closeAll } = styler;
        if (string.indexOf("\x1B") !== -1) {
          while (styler !== void 0) {
            string = stringReplaceAll(string, styler.close, styler.open);
            styler = styler.parent;
          }
        }
        const lfIndex = string.indexOf("\n");
        if (lfIndex !== -1) {
          string = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);
        }
        return openAll + string + closeAll;
      };
      var template;
      var chalkTag = (chalk2, ...strings) => {
        const [firstString] = strings;
        if (!isArray(firstString) || !isArray(firstString.raw)) {
          return strings.join(" ");
        }
        const arguments_ = strings.slice(1);
        const parts = [firstString.raw[0]];
        for (let i2 = 1; i2 < firstString.length; i2++) {
          parts.push(
            String(arguments_[i2 - 1]).replace(/[{}\\]/g, "\\$&"),
            String(firstString.raw[i2])
          );
        }
        if (template === void 0) {
          template = require_templates();
        }
        return template(chalk2, parts.join(""));
      };
      Object.defineProperties(Chalk.prototype, styles);
      var chalk = Chalk();
      chalk.supportsColor = stdoutColor;
      chalk.stderr = Chalk({ level: stderrColor ? stderrColor.level : 0 });
      chalk.stderr.supportsColor = stderrColor;
      module2.exports = chalk;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/colorize.js
  var require_colorize = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/colorize.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var chalk_1 = __importDefault(require_source());
      var RGB_LIKE_REGEX = /^(rgb|hsl|hsv|hwb)\(\s?(\d+),\s?(\d+),\s?(\d+)\s?\)$/;
      var ANSI_REGEX = /^(ansi|ansi256)\(\s?(\d+)\s?\)$/;
      var getMethod = (name, type2) => {
        if (type2 === "foreground") {
          return name;
        }
        return "bg" + name[0].toUpperCase() + name.slice(1);
      };
      exports2.default = (str, color, type2) => {
        if (!color) {
          return str;
        }
        if (color in chalk_1.default) {
          const method = getMethod(color, type2);
          return chalk_1.default[method](str);
        }
        if (color.startsWith("#")) {
          const method = getMethod("hex", type2);
          return chalk_1.default[method](color)(str);
        }
        if (color.startsWith("ansi")) {
          const matches = ANSI_REGEX.exec(color);
          if (!matches) {
            return str;
          }
          const method = getMethod(matches[1], type2);
          const value = Number(matches[2]);
          return chalk_1.default[method](value)(str);
        }
        const isRgbLike = color.startsWith("rgb") || color.startsWith("hsl") || color.startsWith("hsv") || color.startsWith("hwb");
        if (isRgbLike) {
          const matches = RGB_LIKE_REGEX.exec(color);
          if (!matches) {
            return str;
          }
          const method = getMethod(matches[1], type2);
          const firstValue = Number(matches[2]);
          const secondValue = Number(matches[3]);
          const thirdValue = Number(matches[4]);
          return chalk_1.default[method](firstValue, secondValue, thirdValue)(str);
        }
        return str;
      };
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/render-border.js
  var require_render_border = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/render-border.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var cli_boxes_1 = __importDefault(require_cli_boxes());
      var colorize_1 = __importDefault(require_colorize());
      exports2.default = (x, y, node, output) => {
        if (typeof node.style.borderStyle === "string") {
          const width = node.yogaNode.getComputedWidth();
          const height = node.yogaNode.getComputedHeight();
          const color = node.style.borderColor;
          const box = cli_boxes_1.default[node.style.borderStyle];
          const topBorder = colorize_1.default(box.topLeft + box.horizontal.repeat(width - 2) + box.topRight, color, "foreground");
          const verticalBorder = (colorize_1.default(box.vertical, color, "foreground") + "\n").repeat(height - 2);
          const bottomBorder = colorize_1.default(box.bottomLeft + box.horizontal.repeat(width - 2) + box.bottomRight, color, "foreground");
          output.write(x, y, topBorder, { transformers: [] });
          output.write(x, y + 1, verticalBorder, { transformers: [] });
          output.write(x + width - 1, y + 1, verticalBorder, { transformers: [] });
          output.write(x, y + height - 1, bottomBorder, { transformers: [] });
        }
      };
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/render-node-to-output.js
  var require_render_node_to_output = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/render-node-to-output.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var yoga_layout_prebuilt_1 = __importDefault(require_entry_browser());
      var widest_line_1 = __importDefault(require_widest_line());
      var indent_string_1 = __importDefault(require_indent_string());
      var wrap_text_1 = __importDefault(require_wrap_text());
      var get_max_width_1 = __importDefault(require_get_max_width());
      var squash_text_nodes_1 = __importDefault(require_squash_text_nodes());
      var render_border_1 = __importDefault(require_render_border());
      var applyPaddingToText = (node, text) => {
        var _a2;
        const yogaNode = (_a2 = node.childNodes[0]) === null || _a2 === void 0 ? void 0 : _a2.yogaNode;
        if (yogaNode) {
          const offsetX = yogaNode.getComputedLeft();
          const offsetY = yogaNode.getComputedTop();
          text = "\n".repeat(offsetY) + indent_string_1.default(text, offsetX);
        }
        return text;
      };
      var renderNodeToOutput = (node, output, options) => {
        var _a2;
        const { offsetX = 0, offsetY = 0, transformers = [], skipStaticElements } = options;
        if (skipStaticElements && node.internal_static) {
          return;
        }
        const { yogaNode } = node;
        if (yogaNode) {
          if (yogaNode.getDisplay() === yoga_layout_prebuilt_1.default.DISPLAY_NONE) {
            return;
          }
          const x = offsetX + yogaNode.getComputedLeft();
          const y = offsetY + yogaNode.getComputedTop();
          let newTransformers = transformers;
          if (typeof node.internal_transform === "function") {
            newTransformers = [node.internal_transform, ...transformers];
          }
          if (node.nodeName === "ink-text") {
            let text = squash_text_nodes_1.default(node);
            if (text.length > 0) {
              const currentWidth = widest_line_1.default(text);
              const maxWidth = get_max_width_1.default(yogaNode);
              if (currentWidth > maxWidth) {
                const textWrap = (_a2 = node.style.textWrap) !== null && _a2 !== void 0 ? _a2 : "wrap";
                text = wrap_text_1.default(text, maxWidth, textWrap);
              }
              text = applyPaddingToText(node, text);
              output.write(x, y, text, { transformers: newTransformers });
            }
            return;
          }
          if (node.nodeName === "ink-box") {
            render_border_1.default(x, y, node, output);
          }
          if (node.nodeName === "ink-root" || node.nodeName === "ink-box") {
            for (const childNode of node.childNodes) {
              renderNodeToOutput(childNode, output, {
                offsetX: x,
                offsetY: y,
                transformers: newTransformers,
                skipStaticElements
              });
            }
          }
        }
      };
      exports2.default = renderNodeToOutput;
    }
  });

  // ../../../.yarn/cache/ansi-regex-npm-4.1.0-4a7d8413fe-97aa465953.zip/node_modules/ansi-regex/index.js
  var require_ansi_regex2 = __commonJS({
    "../../../.yarn/cache/ansi-regex-npm-4.1.0-4a7d8413fe-97aa465953.zip/node_modules/ansi-regex/index.js"(exports2, module2) {
      "use strict";
      module2.exports = (options) => {
        options = Object.assign({
          onlyFirst: false
        }, options);
        const pattern = [
          "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
          "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"
        ].join("|");
        return new RegExp(pattern, options.onlyFirst ? void 0 : "g");
      };
    }
  });

  // ../../../.yarn/cache/strip-ansi-npm-5.2.0-275214c316-bdb5f76ade.zip/node_modules/strip-ansi/index.js
  var require_strip_ansi2 = __commonJS({
    "../../../.yarn/cache/strip-ansi-npm-5.2.0-275214c316-bdb5f76ade.zip/node_modules/strip-ansi/index.js"(exports2, module2) {
      "use strict";
      var ansiRegex = require_ansi_regex2();
      var stripAnsi = (string) => typeof string === "string" ? string.replace(ansiRegex(), "") : string;
      module2.exports = stripAnsi;
      module2.exports.default = stripAnsi;
    }
  });

  // ../../../.yarn/cache/astral-regex-npm-1.0.0-2df7c41332-93417fc087.zip/node_modules/astral-regex/index.js
  var require_astral_regex2 = __commonJS({
    "../../../.yarn/cache/astral-regex-npm-1.0.0-2df7c41332-93417fc087.zip/node_modules/astral-regex/index.js"(exports2, module2) {
      "use strict";
      var regex = "[\uD800-\uDBFF][\uDC00-\uDFFF]";
      module2.exports = (opts) => opts && opts.exact ? new RegExp(`^${regex}$`) : new RegExp(regex, "g");
    }
  });

  // ../../../.yarn/cache/string-length-npm-3.1.0-25999ba941-b09ccacc2f.zip/node_modules/string-length/index.js
  var require_string_length = __commonJS({
    "../../../.yarn/cache/string-length-npm-3.1.0-25999ba941-b09ccacc2f.zip/node_modules/string-length/index.js"(exports2, module2) {
      "use strict";
      var stripAnsi = require_strip_ansi2();
      var astralRegex = require_astral_regex2();
      var stringLength = (string) => stripAnsi(string).replace(astralRegex(), " ").length;
      module2.exports = stringLength;
      module2.exports.default = stringLength;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/output.js
  var require_output = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/output.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var slice_ansi_1 = __importDefault(require_slice_ansi());
      var string_length_1 = __importDefault(require_string_length());
      var Output = class {
        constructor(options) {
          this.writes = [];
          const { width, height } = options;
          this.width = width;
          this.height = height;
        }
        write(x, y, text, options) {
          const { transformers } = options;
          if (!text) {
            return;
          }
          this.writes.push({ x, y, text, transformers });
        }
        get() {
          const output = [];
          for (let y = 0; y < this.height; y++) {
            output.push(" ".repeat(this.width));
          }
          for (const write of this.writes) {
            const { x, y, text, transformers } = write;
            const lines = text.split("\n");
            let offsetY = 0;
            for (let line of lines) {
              const currentLine = output[y + offsetY];
              if (!currentLine) {
                continue;
              }
              const length = string_length_1.default(line);
              for (const transformer of transformers) {
                line = transformer(line);
              }
              output[y + offsetY] = slice_ansi_1.default(currentLine, 0, x) + line + slice_ansi_1.default(currentLine, x + length);
              offsetY++;
            }
          }
          const generatedOutput = output.map((line) => line.trimRight()).join("\n");
          return {
            output: generatedOutput,
            height: output.length
          };
        }
      };
      exports2.default = Output;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/renderer.js
  var require_renderer = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/renderer.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var yoga_layout_prebuilt_1 = __importDefault(require_entry_browser());
      var render_node_to_output_1 = __importDefault(require_render_node_to_output());
      var output_1 = __importDefault(require_output());
      exports2.default = (node, terminalWidth) => {
        var _a2;
        node.yogaNode.setWidth(terminalWidth);
        if (node.yogaNode) {
          node.yogaNode.calculateLayout(void 0, void 0, yoga_layout_prebuilt_1.default.DIRECTION_LTR);
          const output = new output_1.default({
            width: node.yogaNode.getComputedWidth(),
            height: node.yogaNode.getComputedHeight()
          });
          render_node_to_output_1.default(node, output, { skipStaticElements: true });
          let staticOutput;
          if ((_a2 = node.staticNode) === null || _a2 === void 0 ? void 0 : _a2.yogaNode) {
            staticOutput = new output_1.default({
              width: node.staticNode.yogaNode.getComputedWidth(),
              height: node.staticNode.yogaNode.getComputedHeight()
            });
            render_node_to_output_1.default(node.staticNode, staticOutput, {
              skipStaticElements: false
            });
          }
          const { output: generatedOutput, height: outputHeight } = output.get();
          return {
            output: generatedOutput,
            outputHeight,
            staticOutput: staticOutput ? `${staticOutput.get().output}
` : ""
          };
        }
        return {
          output: "",
          outputHeight: 0,
          staticOutput: ""
        };
      };
    }
  });

  // ../../../.yarn/cache/patch-console-npm-1.0.0-b0870d3256-8cd738aa47.zip/node_modules/patch-console/build/index.js
  var require_build = __commonJS({
    "../../../.yarn/cache/patch-console-npm-1.0.0-b0870d3256-8cd738aa47.zip/node_modules/patch-console/build/index.js"(exports2, module2) {
      "use strict";
      var stream_1 = __require("stream");
      var CONSOLE_METHODS = [
        "assert",
        "count",
        "countReset",
        "debug",
        "dir",
        "dirxml",
        "error",
        "group",
        "groupCollapsed",
        "groupEnd",
        "info",
        "log",
        "table",
        "time",
        "timeEnd",
        "timeLog",
        "trace",
        "warn"
      ];
      var originalMethods = {};
      var patchConsole = (callback) => {
        const stdout = new stream_1.PassThrough();
        const stderr = new stream_1.PassThrough();
        stdout.write = (data) => callback("stdout", data);
        stderr.write = (data) => callback("stderr", data);
        const internalConsole = new console.Console(stdout, stderr);
        for (const method of CONSOLE_METHODS) {
          originalMethods[method] = console[method];
          console[method] = internalConsole[method];
        }
        return () => {
          for (const method of CONSOLE_METHODS) {
            console[method] = originalMethods[method];
          }
          originalMethods = {};
        };
      };
      module2.exports = patchConsole;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/instances.js
  var require_instances = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/instances.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.default = /* @__PURE__ */ new WeakMap();
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/AppContext.js
  var require_AppContext = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/AppContext.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = require_react();
      var AppContext = react_1.createContext({
        exit: () => {
        }
      });
      AppContext.displayName = "InternalAppContext";
      exports2.default = AppContext;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/StdinContext.js
  var require_StdinContext = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/StdinContext.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = require_react();
      var StdinContext = react_1.createContext({
        stdin: void 0,
        setRawMode: () => {
        },
        isRawModeSupported: false,
        internal_exitOnCtrlC: true
      });
      StdinContext.displayName = "InternalStdinContext";
      exports2.default = StdinContext;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/StdoutContext.js
  var require_StdoutContext = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/StdoutContext.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = require_react();
      var StdoutContext = react_1.createContext({
        stdout: void 0,
        write: () => {
        }
      });
      StdoutContext.displayName = "InternalStdoutContext";
      exports2.default = StdoutContext;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/StderrContext.js
  var require_StderrContext = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/StderrContext.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = require_react();
      var StderrContext = react_1.createContext({
        stderr: void 0,
        write: () => {
        }
      });
      StderrContext.displayName = "InternalStderrContext";
      exports2.default = StderrContext;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/FocusContext.js
  var require_FocusContext = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/FocusContext.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = require_react();
      var FocusContext = react_1.createContext({
        activeId: void 0,
        add: () => {
        },
        remove: () => {
        },
        activate: () => {
        },
        deactivate: () => {
        },
        enableFocus: () => {
        },
        disableFocus: () => {
        },
        focusNext: () => {
        },
        focusPrevious: () => {
        }
      });
      FocusContext.displayName = "InternalFocusContext";
      exports2.default = FocusContext;
    }
  });

  // ../../../.yarn/cache/escape-string-regexp-npm-2.0.0-aef69d2a25-9f8a2d5743.zip/node_modules/escape-string-regexp/index.js
  var require_escape_string_regexp = __commonJS({
    "../../../.yarn/cache/escape-string-regexp-npm-2.0.0-aef69d2a25-9f8a2d5743.zip/node_modules/escape-string-regexp/index.js"(exports2, module2) {
      "use strict";
      var matchOperatorsRegex = /[|\\{}()[\]^$+*?.-]/g;
      module2.exports = (string) => {
        if (typeof string !== "string") {
          throw new TypeError("Expected a string");
        }
        return string.replace(matchOperatorsRegex, "\\$&");
      };
    }
  });

  // ../../../.yarn/cache/stack-utils-npm-2.0.3-e255395afd-e51cf01614.zip/node_modules/stack-utils/index.js
  var require_stack_utils = __commonJS({
    "../../../.yarn/cache/stack-utils-npm-2.0.3-e255395afd-e51cf01614.zip/node_modules/stack-utils/index.js"(exports2, module2) {
      "use strict";
      var escapeStringRegexp = require_escape_string_regexp();
      var natives = [].concat(
        __require("module").builtinModules,
        "bootstrap_node",
        "node"
      ).map((n) => new RegExp(`(?:\\((?:node:)?${n}(?:\\.js)?:\\d+:\\d+\\)$|^\\s*at (?:node:)?${n}(?:\\.js)?:\\d+:\\d+$)`));
      natives.push(
        /\((?:node:)?internal\/[^:]+:\d+:\d+\)$/,
        /\s*at (?:node:)?internal\/[^:]+:\d+:\d+$/,
        /\/\.node-spawn-wrap-\w+-\w+\/node:\d+:\d+\)?$/
      );
      var StackUtils = class {
        constructor(opts) {
          opts = {
            ignoredPackages: [],
            ...opts
          };
          if ("internals" in opts === false) {
            opts.internals = StackUtils.nodeInternals();
          }
          if ("cwd" in opts === false) {
            opts.cwd = process.cwd();
          }
          this._cwd = opts.cwd.replace(/\\/g, "/");
          this._internals = [].concat(
            opts.internals,
            ignoredPackagesRegExp(opts.ignoredPackages)
          );
          this._wrapCallSite = opts.wrapCallSite || false;
        }
        static nodeInternals() {
          return [...natives];
        }
        clean(stack, indent = 0) {
          indent = " ".repeat(indent);
          if (!Array.isArray(stack)) {
            stack = stack.split("\n");
          }
          if (!/^\s*at /.test(stack[0]) && /^\s*at /.test(stack[1])) {
            stack = stack.slice(1);
          }
          let outdent = false;
          let lastNonAtLine = null;
          const result = [];
          stack.forEach((st) => {
            st = st.replace(/\\/g, "/");
            if (this._internals.some((internal) => internal.test(st))) {
              return;
            }
            const isAtLine = /^\s*at /.test(st);
            if (outdent) {
              st = st.trimEnd().replace(/^(\s+)at /, "$1");
            } else {
              st = st.trim();
              if (isAtLine) {
                st = st.slice(3);
              }
            }
            st = st.replace(`${this._cwd}/`, "");
            if (st) {
              if (isAtLine) {
                if (lastNonAtLine) {
                  result.push(lastNonAtLine);
                  lastNonAtLine = null;
                }
                result.push(st);
              } else {
                outdent = true;
                lastNonAtLine = st;
              }
            }
          });
          return result.map((line) => `${indent}${line}
`).join("");
        }
        captureString(limit, fn = this.captureString) {
          if (typeof limit === "function") {
            fn = limit;
            limit = Infinity;
          }
          const { stackTraceLimit } = Error;
          if (limit) {
            Error.stackTraceLimit = limit;
          }
          const obj = {};
          Error.captureStackTrace(obj, fn);
          const { stack } = obj;
          Error.stackTraceLimit = stackTraceLimit;
          return this.clean(stack);
        }
        capture(limit, fn = this.capture) {
          if (typeof limit === "function") {
            fn = limit;
            limit = Infinity;
          }
          const { prepareStackTrace, stackTraceLimit } = Error;
          Error.prepareStackTrace = (obj2, site) => {
            if (this._wrapCallSite) {
              return site.map(this._wrapCallSite);
            }
            return site;
          };
          if (limit) {
            Error.stackTraceLimit = limit;
          }
          const obj = {};
          Error.captureStackTrace(obj, fn);
          const { stack } = obj;
          Object.assign(Error, { prepareStackTrace, stackTraceLimit });
          return stack;
        }
        at(fn = this.at) {
          const [site] = this.capture(1, fn);
          if (!site) {
            return {};
          }
          const res = {
            line: site.getLineNumber(),
            column: site.getColumnNumber()
          };
          setFile(res, site.getFileName(), this._cwd);
          if (site.isConstructor()) {
            res.constructor = true;
          }
          if (site.isEval()) {
            res.evalOrigin = site.getEvalOrigin();
          }
          if (site.isNative()) {
            res.native = true;
          }
          let typename;
          try {
            typename = site.getTypeName();
          } catch (_) {
          }
          if (typename && typename !== "Object" && typename !== "[object Object]") {
            res.type = typename;
          }
          const fname = site.getFunctionName();
          if (fname) {
            res.function = fname;
          }
          const meth = site.getMethodName();
          if (meth && fname !== meth) {
            res.method = meth;
          }
          return res;
        }
        parseLine(line) {
          const match = line && line.match(re);
          if (!match) {
            return null;
          }
          const ctor = match[1] === "new";
          let fname = match[2];
          const evalOrigin = match[3];
          const evalFile = match[4];
          const evalLine = Number(match[5]);
          const evalCol = Number(match[6]);
          let file = match[7];
          const lnum = match[8];
          const col = match[9];
          const native = match[10] === "native";
          const closeParen = match[11] === ")";
          let method;
          const res = {};
          if (lnum) {
            res.line = Number(lnum);
          }
          if (col) {
            res.column = Number(col);
          }
          if (closeParen && file) {
            let closes = 0;
            for (let i2 = file.length - 1; i2 > 0; i2--) {
              if (file.charAt(i2) === ")") {
                closes++;
              } else if (file.charAt(i2) === "(" && file.charAt(i2 - 1) === " ") {
                closes--;
                if (closes === -1 && file.charAt(i2 - 1) === " ") {
                  const before = file.slice(0, i2 - 1);
                  const after = file.slice(i2 + 1);
                  file = after;
                  fname += ` (${before}`;
                  break;
                }
              }
            }
          }
          if (fname) {
            const methodMatch = fname.match(methodRe);
            if (methodMatch) {
              fname = methodMatch[1];
              method = methodMatch[2];
            }
          }
          setFile(res, file, this._cwd);
          if (ctor) {
            res.constructor = true;
          }
          if (evalOrigin) {
            res.evalOrigin = evalOrigin;
            res.evalLine = evalLine;
            res.evalColumn = evalCol;
            res.evalFile = evalFile && evalFile.replace(/\\/g, "/");
          }
          if (native) {
            res.native = true;
          }
          if (fname) {
            res.function = fname;
          }
          if (method && fname !== method) {
            res.method = method;
          }
          return res;
        }
      };
      function setFile(result, filename, cwd) {
        if (filename) {
          filename = filename.replace(/\\/g, "/");
          if (filename.startsWith(`${cwd}/`)) {
            filename = filename.slice(cwd.length + 1);
          }
          result.file = filename;
        }
      }
      function ignoredPackagesRegExp(ignoredPackages) {
        if (ignoredPackages.length === 0) {
          return [];
        }
        const packages = ignoredPackages.map((mod) => escapeStringRegexp(mod));
        return new RegExp(`[/\\\\]node_modules[/\\\\](?:${packages.join("|")})[/\\\\][^:]+:\\d+:\\d+`);
      }
      var re = new RegExp(
        "^(?:\\s*at )?(?:(new) )?(?:(.*?) \\()?(?:eval at ([^ ]+) \\((.+?):(\\d+):(\\d+)\\), )?(?:(.+?):(\\d+):(\\d+)|(native))(\\)?)$"
      );
      var methodRe = /^(.*?) \[as (.*?)\]$/;
      module2.exports = StackUtils;
    }
  });

  // ../../../.yarn/cache/convert-to-spaces-npm-1.0.2-2b53675e28-e73f2ae39e.zip/node_modules/convert-to-spaces/index.js
  var require_convert_to_spaces = __commonJS({
    "../../../.yarn/cache/convert-to-spaces-npm-1.0.2-2b53675e28-e73f2ae39e.zip/node_modules/convert-to-spaces/index.js"(exports2, module2) {
      "use strict";
      module2.exports = (str, spaces) => {
        return str.replace(/^\t+/gm, ($1) => " ".repeat($1.length * (spaces || 2)));
      };
    }
  });

  // ../../../.yarn/cache/code-excerpt-npm-3.0.0-b349ec709a-fa3a8ed159.zip/node_modules/code-excerpt/index.js
  var require_code_excerpt = __commonJS({
    "../../../.yarn/cache/code-excerpt-npm-3.0.0-b349ec709a-fa3a8ed159.zip/node_modules/code-excerpt/index.js"(exports2, module2) {
      "use strict";
      var tabsToSpaces = require_convert_to_spaces();
      var generateLineNumbers = (line, around) => {
        const lineNumbers = [];
        const min = line - around;
        const max = line + around;
        for (let lineNumber = min; lineNumber <= max; lineNumber++) {
          lineNumbers.push(lineNumber);
        }
        return lineNumbers;
      };
      module2.exports = (source, line, options) => {
        if (typeof source !== "string") {
          throw new TypeError("Source code is missing.");
        }
        if (!line || line < 1) {
          throw new TypeError("Line number must start from `1`.");
        }
        source = tabsToSpaces(source).split(/\r?\n/);
        if (line > source.length) {
          return;
        }
        options = {
          around: 3,
          ...options
        };
        return generateLineNumbers(line, options.around).filter((line2) => source[line2 - 1] !== void 0).map((line2) => ({ line: line2, value: source[line2 - 1] }));
      };
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/Box.js
  var require_Box = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/Box.js"(exports2) {
      "use strict";
      var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function() {
          return m[k];
        } });
      } : function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
      } : function(o, v) {
        o["default"] = v;
      });
      var __importStar = exports2 && exports2.__importStar || function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k in mod)
            if (k !== "default" && Object.hasOwnProperty.call(mod, k))
              __createBinding(result, mod, k);
        }
        __setModuleDefault(result, mod);
        return result;
      };
      var __rest = exports2 && exports2.__rest || function(s, e) {
        var t = {};
        for (var p in s)
          if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i2 = 0, p = Object.getOwnPropertySymbols(s); i2 < p.length; i2++) {
            if (e.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i2]))
              t[p[i2]] = s[p[i2]];
          }
        return t;
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = __importStar(require_react());
      var Box5 = react_1.forwardRef((_a2, ref) => {
        var { children } = _a2, style = __rest(_a2, ["children"]);
        const transformedStyle = Object.assign(Object.assign({}, style), { marginLeft: style.marginLeft || style.marginX || style.margin || 0, marginRight: style.marginRight || style.marginX || style.margin || 0, marginTop: style.marginTop || style.marginY || style.margin || 0, marginBottom: style.marginBottom || style.marginY || style.margin || 0, paddingLeft: style.paddingLeft || style.paddingX || style.padding || 0, paddingRight: style.paddingRight || style.paddingX || style.padding || 0, paddingTop: style.paddingTop || style.paddingY || style.padding || 0, paddingBottom: style.paddingBottom || style.paddingY || style.padding || 0 });
        return react_1.default.createElement("ink-box", { ref, style: transformedStyle }, children);
      });
      Box5.displayName = "Box";
      Box5.defaultProps = {
        flexDirection: "row",
        flexGrow: 0,
        flexShrink: 1
      };
      exports2.default = Box5;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/Text.js
  var require_Text = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/Text.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = __importDefault(require_react());
      var chalk_1 = __importDefault(require_source());
      var colorize_1 = __importDefault(require_colorize());
      var Text6 = ({ color, backgroundColor, dimColor, bold, italic, underline, strikethrough, inverse, wrap, children }) => {
        if (children === void 0 || children === null) {
          return null;
        }
        const transform = (children2) => {
          if (dimColor) {
            children2 = chalk_1.default.dim(children2);
          }
          if (color) {
            children2 = colorize_1.default(children2, color, "foreground");
          }
          if (backgroundColor) {
            children2 = colorize_1.default(children2, backgroundColor, "background");
          }
          if (bold) {
            children2 = chalk_1.default.bold(children2);
          }
          if (italic) {
            children2 = chalk_1.default.italic(children2);
          }
          if (underline) {
            children2 = chalk_1.default.underline(children2);
          }
          if (strikethrough) {
            children2 = chalk_1.default.strikethrough(children2);
          }
          if (inverse) {
            children2 = chalk_1.default.inverse(children2);
          }
          return children2;
        };
        return react_1.default.createElement("ink-text", { style: { flexGrow: 0, flexShrink: 1, flexDirection: "row", textWrap: wrap }, internal_transform: transform }, children);
      };
      Text6.displayName = "Text";
      Text6.defaultProps = {
        dimColor: false,
        bold: false,
        italic: false,
        underline: false,
        strikethrough: false,
        wrap: "wrap"
      };
      exports2.default = Text6;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/ErrorOverview.js
  var require_ErrorOverview = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/ErrorOverview.js"(exports2) {
      "use strict";
      var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function() {
          return m[k];
        } });
      } : function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
      } : function(o, v) {
        o["default"] = v;
      });
      var __importStar = exports2 && exports2.__importStar || function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k in mod)
            if (k !== "default" && Object.hasOwnProperty.call(mod, k))
              __createBinding(result, mod, k);
        }
        __setModuleDefault(result, mod);
        return result;
      };
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var fs = __importStar(__require("fs"));
      var react_1 = __importDefault(require_react());
      var stack_utils_1 = __importDefault(require_stack_utils());
      var code_excerpt_1 = __importDefault(require_code_excerpt());
      var Box_1 = __importDefault(require_Box());
      var Text_1 = __importDefault(require_Text());
      var stackUtils = new stack_utils_1.default({
        cwd: process.cwd(),
        internals: stack_utils_1.default.nodeInternals()
      });
      var ErrorOverview = ({ error }) => {
        const stack = error.stack ? error.stack.split("\n").slice(1) : void 0;
        const origin = stack ? stackUtils.parseLine(stack[0]) : void 0;
        let excerpt;
        let lineWidth = 0;
        if ((origin === null || origin === void 0 ? void 0 : origin.file) && (origin === null || origin === void 0 ? void 0 : origin.line) && fs.existsSync(origin.file)) {
          const sourceCode2 = fs.readFileSync(origin.file, "utf8");
          excerpt = code_excerpt_1.default(sourceCode2, origin.line);
          if (excerpt) {
            for (const { line } of excerpt) {
              lineWidth = Math.max(lineWidth, String(line).length);
            }
          }
        }
        return react_1.default.createElement(
          Box_1.default,
          { flexDirection: "column", padding: 1 },
          react_1.default.createElement(
            Box_1.default,
            null,
            react_1.default.createElement(
              Text_1.default,
              { backgroundColor: "red", color: "white" },
              " ",
              "ERROR",
              " "
            ),
            react_1.default.createElement(
              Text_1.default,
              null,
              " ",
              error.message
            )
          ),
          origin && react_1.default.createElement(
            Box_1.default,
            { marginTop: 1 },
            react_1.default.createElement(
              Text_1.default,
              { dimColor: true },
              origin.file,
              ":",
              origin.line,
              ":",
              origin.column
            )
          ),
          origin && excerpt && react_1.default.createElement(Box_1.default, { marginTop: 1, flexDirection: "column" }, excerpt.map(({ line, value }) => react_1.default.createElement(
            Box_1.default,
            { key: line },
            react_1.default.createElement(
              Box_1.default,
              { width: lineWidth + 1 },
              react_1.default.createElement(
                Text_1.default,
                { dimColor: line !== origin.line, backgroundColor: line === origin.line ? "red" : void 0, color: line === origin.line ? "white" : void 0 },
                String(line).padStart(lineWidth, " "),
                ":"
              )
            ),
            react_1.default.createElement(Text_1.default, { key: line, backgroundColor: line === origin.line ? "red" : void 0, color: line === origin.line ? "white" : void 0 }, " " + value)
          ))),
          error.stack && react_1.default.createElement(Box_1.default, { marginTop: 1, flexDirection: "column" }, error.stack.split("\n").slice(1).map((line) => {
            const parsedLine = stackUtils.parseLine(line);
            if (!parsedLine) {
              return react_1.default.createElement(
                Box_1.default,
                { key: line },
                react_1.default.createElement(Text_1.default, { dimColor: true }, "- "),
                react_1.default.createElement(Text_1.default, { dimColor: true, bold: true }, line)
              );
            }
            return react_1.default.createElement(
              Box_1.default,
              { key: line },
              react_1.default.createElement(Text_1.default, { dimColor: true }, "- "),
              react_1.default.createElement(Text_1.default, { dimColor: true, bold: true }, parsedLine.function),
              react_1.default.createElement(
                Text_1.default,
                { dimColor: true, color: "gray" },
                " ",
                "(",
                parsedLine.file,
                ":",
                parsedLine.line,
                ":",
                parsedLine.column,
                ")"
              )
            );
          }))
        );
      };
      exports2.default = ErrorOverview;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/App.js
  var require_App = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/App.js"(exports2) {
      "use strict";
      var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function() {
          return m[k];
        } });
      } : function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
      } : function(o, v) {
        o["default"] = v;
      });
      var __importStar = exports2 && exports2.__importStar || function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k in mod)
            if (k !== "default" && Object.hasOwnProperty.call(mod, k))
              __createBinding(result, mod, k);
        }
        __setModuleDefault(result, mod);
        return result;
      };
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = __importStar(require_react());
      var cli_cursor_1 = __importDefault(require_cli_cursor());
      var AppContext_1 = __importDefault(require_AppContext());
      var StdinContext_1 = __importDefault(require_StdinContext());
      var StdoutContext_1 = __importDefault(require_StdoutContext());
      var StderrContext_1 = __importDefault(require_StderrContext());
      var FocusContext_1 = __importDefault(require_FocusContext());
      var ErrorOverview_1 = __importDefault(require_ErrorOverview());
      var TAB = "	";
      var SHIFT_TAB = "\x1B[Z";
      var ESC = "\x1B";
      var App = class extends react_1.PureComponent {
        constructor() {
          super(...arguments);
          this.state = {
            isFocusEnabled: true,
            activeFocusId: void 0,
            focusables: [],
            error: void 0
          };
          this.rawModeEnabledCount = 0;
          this.handleSetRawMode = (isEnabled) => {
            const { stdin } = this.props;
            if (!this.isRawModeSupported()) {
              if (stdin === process.stdin) {
                throw new Error("Raw mode is not supported on the current process.stdin, which Ink uses as input stream by default.\nRead about how to prevent this error on https://github.com/vadimdemedes/ink/#israwmodesupported");
              } else {
                throw new Error("Raw mode is not supported on the stdin provided to Ink.\nRead about how to prevent this error on https://github.com/vadimdemedes/ink/#israwmodesupported");
              }
            }
            stdin.setEncoding("utf8");
            if (isEnabled) {
              if (this.rawModeEnabledCount === 0) {
                stdin.addListener("data", this.handleInput);
                stdin.resume();
                stdin.setRawMode(true);
              }
              this.rawModeEnabledCount++;
              return;
            }
            if (--this.rawModeEnabledCount === 0) {
              stdin.setRawMode(false);
              stdin.removeListener("data", this.handleInput);
              stdin.pause();
            }
          };
          this.handleInput = (input) => {
            if (input === "" && this.props.exitOnCtrlC) {
              this.handleExit();
            }
            if (input === ESC && this.state.activeFocusId) {
              this.setState({
                activeFocusId: void 0
              });
            }
            if (this.state.isFocusEnabled && this.state.focusables.length > 0) {
              if (input === TAB) {
                this.focusNext();
              }
              if (input === SHIFT_TAB) {
                this.focusPrevious();
              }
            }
          };
          this.handleExit = (error) => {
            if (this.isRawModeSupported()) {
              this.handleSetRawMode(false);
            }
            this.props.onExit(error);
          };
          this.enableFocus = () => {
            this.setState({
              isFocusEnabled: true
            });
          };
          this.disableFocus = () => {
            this.setState({
              isFocusEnabled: false
            });
          };
          this.focusNext = () => {
            this.setState((previousState) => {
              const firstFocusableId = previousState.focusables[0].id;
              const nextFocusableId = this.findNextFocusable(previousState);
              return {
                activeFocusId: nextFocusableId || firstFocusableId
              };
            });
          };
          this.focusPrevious = () => {
            this.setState((previousState) => {
              const lastFocusableId = previousState.focusables[previousState.focusables.length - 1].id;
              const previousFocusableId = this.findPreviousFocusable(previousState);
              return {
                activeFocusId: previousFocusableId || lastFocusableId
              };
            });
          };
          this.addFocusable = (id, { autoFocus }) => {
            this.setState((previousState) => {
              let nextFocusId = previousState.activeFocusId;
              if (!nextFocusId && autoFocus) {
                nextFocusId = id;
              }
              return {
                activeFocusId: nextFocusId,
                focusables: [
                  ...previousState.focusables,
                  {
                    id,
                    isActive: true
                  }
                ]
              };
            });
          };
          this.removeFocusable = (id) => {
            this.setState((previousState) => ({
              activeFocusId: previousState.activeFocusId === id ? void 0 : previousState.activeFocusId,
              focusables: previousState.focusables.filter((focusable) => {
                return focusable.id !== id;
              })
            }));
          };
          this.activateFocusable = (id) => {
            this.setState((previousState) => ({
              focusables: previousState.focusables.map((focusable) => {
                if (focusable.id !== id) {
                  return focusable;
                }
                return {
                  id,
                  isActive: true
                };
              })
            }));
          };
          this.deactivateFocusable = (id) => {
            this.setState((previousState) => ({
              activeFocusId: previousState.activeFocusId === id ? void 0 : previousState.activeFocusId,
              focusables: previousState.focusables.map((focusable) => {
                if (focusable.id !== id) {
                  return focusable;
                }
                return {
                  id,
                  isActive: false
                };
              })
            }));
          };
          this.findNextFocusable = (state) => {
            const activeIndex = state.focusables.findIndex((focusable) => {
              return focusable.id === state.activeFocusId;
            });
            for (let index = activeIndex + 1; index < state.focusables.length; index++) {
              if (state.focusables[index].isActive) {
                return state.focusables[index].id;
              }
            }
            return void 0;
          };
          this.findPreviousFocusable = (state) => {
            const activeIndex = state.focusables.findIndex((focusable) => {
              return focusable.id === state.activeFocusId;
            });
            for (let index = activeIndex - 1; index >= 0; index--) {
              if (state.focusables[index].isActive) {
                return state.focusables[index].id;
              }
            }
            return void 0;
          };
        }
        static getDerivedStateFromError(error) {
          return { error };
        }
        isRawModeSupported() {
          return this.props.stdin.isTTY;
        }
        render() {
          return react_1.default.createElement(
            AppContext_1.default.Provider,
            { value: {
              exit: this.handleExit
            } },
            react_1.default.createElement(
              StdinContext_1.default.Provider,
              { value: {
                stdin: this.props.stdin,
                setRawMode: this.handleSetRawMode,
                isRawModeSupported: this.isRawModeSupported(),
                internal_exitOnCtrlC: this.props.exitOnCtrlC
              } },
              react_1.default.createElement(
                StdoutContext_1.default.Provider,
                { value: {
                  stdout: this.props.stdout,
                  write: this.props.writeToStdout
                } },
                react_1.default.createElement(
                  StderrContext_1.default.Provider,
                  { value: {
                    stderr: this.props.stderr,
                    write: this.props.writeToStderr
                  } },
                  react_1.default.createElement(FocusContext_1.default.Provider, { value: {
                    activeId: this.state.activeFocusId,
                    add: this.addFocusable,
                    remove: this.removeFocusable,
                    activate: this.activateFocusable,
                    deactivate: this.deactivateFocusable,
                    enableFocus: this.enableFocus,
                    disableFocus: this.disableFocus,
                    focusNext: this.focusNext,
                    focusPrevious: this.focusPrevious
                  } }, this.state.error ? react_1.default.createElement(ErrorOverview_1.default, { error: this.state.error }) : this.props.children)
                )
              )
            )
          );
        }
        componentDidMount() {
          cli_cursor_1.default.hide(this.props.stdout);
        }
        componentWillUnmount() {
          cli_cursor_1.default.show(this.props.stdout);
          if (this.isRawModeSupported()) {
            this.handleSetRawMode(false);
          }
        }
        componentDidCatch(error) {
          this.handleExit(error);
        }
      };
      exports2.default = App;
      App.displayName = "InternalApp";
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/ink.js
  var require_ink = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/ink.js"(exports2) {
      "use strict";
      var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function() {
          return m[k];
        } });
      } : function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
      } : function(o, v) {
        o["default"] = v;
      });
      var __importStar = exports2 && exports2.__importStar || function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k in mod)
            if (k !== "default" && Object.hasOwnProperty.call(mod, k))
              __createBinding(result, mod, k);
        }
        __setModuleDefault(result, mod);
        return result;
      };
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = __importDefault(require_react());
      var lodash_1_throttle = require_throttle();
      var log_update_1 = __importDefault(require_log_update());
      var ansi_escapes_1 = __importDefault(require_ansi_escapes());
      var is_ci_1 = __importDefault(require_is_ci());
      var auto_bind_1 = __importDefault(require_auto_bind());
      var reconciler_1 = __importDefault(require_reconciler());
      var renderer_1 = __importDefault(require_renderer());
      var signal_exit_1 = __importDefault(require_signal_exit());
      var patch_console_1 = __importDefault(require_build());
      var dom = __importStar(require_dom());
      var instances_1 = __importDefault(require_instances());
      var App_1 = __importDefault(require_App());
      var isCI = process.env.CI === "false" ? false : is_ci_1.default;
      var noop = () => {
      };
      var Ink = class {
        constructor(options) {
          this.resolveExitPromise = () => {
          };
          this.rejectExitPromise = () => {
          };
          this.unsubscribeExit = () => {
          };
          this.onRender = () => {
            if (this.isUnmounted) {
              return;
            }
            const { output, outputHeight, staticOutput } = renderer_1.default(
              this.rootNode,
              this.options.stdout.columns || 80
            );
            const hasStaticOutput = staticOutput && staticOutput !== "\n";
            if (this.options.debug) {
              if (hasStaticOutput) {
                this.fullStaticOutput += staticOutput;
              }
              this.options.stdout.write(this.fullStaticOutput + output);
              return;
            }
            if (isCI) {
              if (hasStaticOutput) {
                this.options.stdout.write(staticOutput);
              }
              this.lastOutput = output;
              return;
            }
            if (hasStaticOutput) {
              this.fullStaticOutput += staticOutput;
            }
            if (outputHeight >= this.options.stdout.rows) {
              this.options.stdout.write(ansi_escapes_1.default.clearTerminal + this.fullStaticOutput + output);
              this.lastOutput = output;
              return;
            }
            if (hasStaticOutput) {
              this.log.clear();
              this.options.stdout.write(staticOutput);
              this.log(output);
            }
            if (!hasStaticOutput && output !== this.lastOutput) {
              this.throttledLog(output);
            }
            this.lastOutput = output;
          };
          auto_bind_1.default(this);
          this.options = options;
          this.rootNode = dom.createNode("ink-root");
          this.rootNode.onRender = options.debug ? this.onRender : lodash_1_throttle(this.onRender, 32, {
            leading: true,
            trailing: true
          });
          this.rootNode.onImmediateRender = this.onRender;
          this.log = log_update_1.default.create(options.stdout);
          this.throttledLog = options.debug ? this.log : lodash_1_throttle(this.log, void 0, {
            leading: true,
            trailing: true
          });
          this.isUnmounted = false;
          this.lastOutput = "";
          this.fullStaticOutput = "";
          this.container = reconciler_1.default.createContainer(this.rootNode, false, false);
          this.unsubscribeExit = signal_exit_1.default(this.unmount, { alwaysLast: false });
          if (process.env.DEV === "true") {
            reconciler_1.default.injectIntoDevTools({
              bundleType: 0,
              version: "16.13.1",
              rendererPackageName: "ink"
            });
          }
          if (options.patchConsole) {
            this.patchConsole();
          }
          if (!isCI) {
            options.stdout.on("resize", this.onRender);
            this.unsubscribeResize = () => {
              options.stdout.off("resize", this.onRender);
            };
          }
        }
        render(node) {
          const tree = react_1.default.createElement(App_1.default, { stdin: this.options.stdin, stdout: this.options.stdout, stderr: this.options.stderr, writeToStdout: this.writeToStdout, writeToStderr: this.writeToStderr, exitOnCtrlC: this.options.exitOnCtrlC, onExit: this.unmount }, node);
          reconciler_1.default.updateContainer(tree, this.container, null, noop);
        }
        writeToStdout(data) {
          if (this.isUnmounted) {
            return;
          }
          if (this.options.debug) {
            this.options.stdout.write(data + this.fullStaticOutput + this.lastOutput);
            return;
          }
          if (isCI) {
            this.options.stdout.write(data);
            return;
          }
          this.log.clear();
          this.options.stdout.write(data);
          this.log(this.lastOutput);
        }
        writeToStderr(data) {
          if (this.isUnmounted) {
            return;
          }
          if (this.options.debug) {
            this.options.stderr.write(data);
            this.options.stdout.write(this.fullStaticOutput + this.lastOutput);
            return;
          }
          if (isCI) {
            this.options.stderr.write(data);
            return;
          }
          this.log.clear();
          this.options.stderr.write(data);
          this.log(this.lastOutput);
        }
        unmount(error) {
          if (this.isUnmounted) {
            return;
          }
          this.onRender();
          this.unsubscribeExit();
          if (typeof this.restoreConsole === "function") {
            this.restoreConsole();
          }
          if (typeof this.unsubscribeResize === "function") {
            this.unsubscribeResize();
          }
          if (isCI) {
            this.options.stdout.write(this.lastOutput + "\n");
          } else if (!this.options.debug) {
            this.log.done();
          }
          this.isUnmounted = true;
          reconciler_1.default.updateContainer(null, this.container, null, noop);
          instances_1.default.delete(this.options.stdout);
          if (error instanceof Error) {
            this.rejectExitPromise(error);
          } else {
            this.resolveExitPromise();
          }
        }
        waitUntilExit() {
          if (!this.exitPromise) {
            this.exitPromise = new Promise((resolve, reject) => {
              this.resolveExitPromise = resolve;
              this.rejectExitPromise = reject;
            });
          }
          return this.exitPromise;
        }
        clear() {
          if (!isCI && !this.options.debug) {
            this.log.clear();
          }
        }
        patchConsole() {
          if (this.options.debug) {
            return;
          }
          this.restoreConsole = patch_console_1.default((stream, data) => {
            if (stream === "stdout") {
              this.writeToStdout(data);
            }
            if (stream === "stderr") {
              const isReactMessage = data.startsWith("The above error occurred");
              if (!isReactMessage) {
                this.writeToStderr(data);
              }
            }
          });
        }
      };
      exports2.default = Ink;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/render.js
  var require_render = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/render.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var ink_1 = __importDefault(require_ink());
      var instances_1 = __importDefault(require_instances());
      var stream_1 = __require("stream");
      var render2 = (node, options) => {
        const inkOptions = Object.assign({ stdout: process.stdout, stdin: process.stdin, stderr: process.stderr, debug: false, exitOnCtrlC: true, patchConsole: true }, getOptions(options));
        const instance = getInstance(inkOptions.stdout, () => new ink_1.default(inkOptions));
        instance.render(node);
        return {
          rerender: instance.render,
          unmount: () => instance.unmount(),
          waitUntilExit: instance.waitUntilExit,
          cleanup: () => instances_1.default.delete(inkOptions.stdout),
          clear: instance.clear
        };
      };
      exports2.default = render2;
      var getOptions = (stdout = {}) => {
        if (stdout instanceof stream_1.Stream) {
          return {
            stdout,
            stdin: process.stdin
          };
        }
        return stdout;
      };
      var getInstance = (stdout, createInstance) => {
        let instance;
        if (instances_1.default.has(stdout)) {
          instance = instances_1.default.get(stdout);
        } else {
          instance = createInstance();
          instances_1.default.set(stdout, instance);
        }
        return instance;
      };
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/Static.js
  var require_Static = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/Static.js"(exports2) {
      "use strict";
      var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function() {
          return m[k];
        } });
      } : function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        o[k2] = m[k];
      });
      var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
      } : function(o, v) {
        o["default"] = v;
      });
      var __importStar = exports2 && exports2.__importStar || function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k in mod)
            if (k !== "default" && Object.hasOwnProperty.call(mod, k))
              __createBinding(result, mod, k);
        }
        __setModuleDefault(result, mod);
        return result;
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = __importStar(require_react());
      var Static = (props) => {
        const { items, children: render2, style: customStyle } = props;
        const [index, setIndex] = react_1.useState(0);
        const itemsToRender = react_1.useMemo(() => {
          return items.slice(index);
        }, [items, index]);
        react_1.useLayoutEffect(() => {
          setIndex(items.length);
        }, [items.length]);
        const children = itemsToRender.map((item, itemIndex) => {
          return render2(item, index + itemIndex);
        });
        const style = react_1.useMemo(() => Object.assign({ position: "absolute", flexDirection: "column" }, customStyle), [customStyle]);
        return react_1.default.createElement("ink-box", {
          internal_static: true,
          style
        }, children);
      };
      Static.displayName = "Static";
      exports2.default = Static;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/Transform.js
  var require_Transform = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/Transform.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = __importDefault(require_react());
      var Transform = ({ children, transform }) => {
        if (children === void 0 || children === null) {
          return null;
        }
        return react_1.default.createElement("ink-text", { style: { flexGrow: 0, flexShrink: 1, flexDirection: "row" }, internal_transform: transform }, children);
      };
      Transform.displayName = "Transform";
      exports2.default = Transform;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/Newline.js
  var require_Newline = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/Newline.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = __importDefault(require_react());
      var Newline = ({ count = 1 }) => react_1.default.createElement("ink-text", null, "\n".repeat(count));
      Newline.displayName = "Newline";
      exports2.default = Newline;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/Spacer.js
  var require_Spacer = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/components/Spacer.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = __importDefault(require_react());
      var Box_1 = __importDefault(require_Box());
      var Spacer2 = () => react_1.default.createElement(Box_1.default, { flexGrow: 1 });
      Spacer2.displayName = "Spacer";
      exports2.default = Spacer2;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-stdin.js
  var require_use_stdin = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-stdin.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = require_react();
      var StdinContext_1 = __importDefault(require_StdinContext());
      var useStdin = () => react_1.useContext(StdinContext_1.default);
      exports2.default = useStdin;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-input.js
  var require_use_input = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-input.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = require_react();
      var use_stdin_1 = __importDefault(require_use_stdin());
      var useInput = (inputHandler, options = {}) => {
        const { stdin, setRawMode, internal_exitOnCtrlC } = use_stdin_1.default();
        react_1.useEffect(() => {
          if (options.isActive === false) {
            return;
          }
          setRawMode(true);
          return () => {
            setRawMode(false);
          };
        }, [options.isActive, setRawMode]);
        react_1.useEffect(() => {
          if (options.isActive === false) {
            return;
          }
          const handleData = (data) => {
            let input = String(data);
            const key2 = {
              upArrow: input === "\x1B[A",
              downArrow: input === "\x1B[B",
              leftArrow: input === "\x1B[D",
              rightArrow: input === "\x1B[C",
              pageDown: input === "\x1B[6~",
              pageUp: input === "\x1B[5~",
              return: input === "\r",
              escape: input === "\x1B",
              ctrl: false,
              shift: false,
              tab: input === "	" || input === "\x1B[Z",
              backspace: input === "\b",
              delete: input === "\x7F" || input === "\x1B[3~",
              meta: false
            };
            if (input <= "" && !key2.return) {
              input = String.fromCharCode(input.charCodeAt(0) + "a".charCodeAt(0) - 1);
              key2.ctrl = true;
            }
            if (input.startsWith("\x1B")) {
              input = input.slice(1);
              key2.meta = true;
            }
            const isLatinUppercase = input >= "A" && input <= "Z";
            const isCyrillicUppercase = input >= "\u0410" && input <= "\u042F";
            if (input.length === 1 && (isLatinUppercase || isCyrillicUppercase)) {
              key2.shift = true;
            }
            if (key2.tab && input === "[Z") {
              key2.shift = true;
            }
            if (key2.tab || key2.backspace || key2.delete) {
              input = "";
            }
            if (!(input === "c" && key2.ctrl) || !internal_exitOnCtrlC) {
              inputHandler(input, key2);
            }
          };
          stdin === null || stdin === void 0 ? void 0 : stdin.on("data", handleData);
          return () => {
            stdin === null || stdin === void 0 ? void 0 : stdin.off("data", handleData);
          };
        }, [options.isActive, stdin, internal_exitOnCtrlC, inputHandler]);
      };
      exports2.default = useInput;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-app.js
  var require_use_app = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-app.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = require_react();
      var AppContext_1 = __importDefault(require_AppContext());
      var useApp = () => react_1.useContext(AppContext_1.default);
      exports2.default = useApp;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-stdout.js
  var require_use_stdout = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-stdout.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = require_react();
      var StdoutContext_1 = __importDefault(require_StdoutContext());
      var useStdout = () => react_1.useContext(StdoutContext_1.default);
      exports2.default = useStdout;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-stderr.js
  var require_use_stderr = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-stderr.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = require_react();
      var StderrContext_1 = __importDefault(require_StderrContext());
      var useStderr = () => react_1.useContext(StderrContext_1.default);
      exports2.default = useStderr;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-focus.js
  var require_use_focus = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-focus.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = require_react();
      var FocusContext_1 = __importDefault(require_FocusContext());
      var use_stdin_1 = __importDefault(require_use_stdin());
      var useFocus = ({ isActive = true, autoFocus = false } = {}) => {
        const { isRawModeSupported, setRawMode } = use_stdin_1.default();
        const { activeId, add, remove, activate, deactivate } = react_1.useContext(FocusContext_1.default);
        const id = react_1.useMemo(() => Math.random().toString().slice(2, 7), []);
        react_1.useEffect(() => {
          add(id, { autoFocus });
          return () => {
            remove(id);
          };
        }, [id, autoFocus]);
        react_1.useEffect(() => {
          if (isActive) {
            activate(id);
          } else {
            deactivate(id);
          }
        }, [isActive, id]);
        react_1.useEffect(() => {
          if (!isRawModeSupported || !isActive) {
            return;
          }
          setRawMode(true);
          return () => {
            setRawMode(false);
          };
        }, [isActive]);
        return {
          isFocused: Boolean(id) && activeId === id
        };
      };
      exports2.default = useFocus;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-focus-manager.js
  var require_use_focus_manager = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/hooks/use-focus-manager.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      var react_1 = require_react();
      var FocusContext_1 = __importDefault(require_FocusContext());
      var useFocusManager = () => {
        const focusContext = react_1.useContext(FocusContext_1.default);
        return {
          enableFocus: focusContext.enableFocus,
          disableFocus: focusContext.disableFocus,
          focusNext: focusContext.focusNext,
          focusPrevious: focusContext.focusPrevious
        };
      };
      exports2.default = useFocusManager;
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/measure-element.js
  var require_measure_element = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/measure-element.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.default = (node) => {
        var _a2, _b, _c, _d;
        return {
          width: (_b = (_a2 = node.yogaNode) === null || _a2 === void 0 ? void 0 : _a2.getComputedWidth()) !== null && _b !== void 0 ? _b : 0,
          height: (_d = (_c = node.yogaNode) === null || _c === void 0 ? void 0 : _c.getComputedHeight()) !== null && _d !== void 0 ? _d : 0
        };
      };
    }
  });

  // ../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/index.js
  var require_build2 = __commonJS({
    "../../../.yarn/__virtual__/ink-virtual-b828dbd55f/0/cache/ink-patch-45ad7f405c-0285ba15e2.zip/node_modules/ink/build/index.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      var render_1 = require_render();
      Object.defineProperty(exports2, "render", { enumerable: true, get: function() {
        return render_1.default;
      } });
      var Box_1 = require_Box();
      Object.defineProperty(exports2, "Box", { enumerable: true, get: function() {
        return Box_1.default;
      } });
      var Text_1 = require_Text();
      Object.defineProperty(exports2, "Text", { enumerable: true, get: function() {
        return Text_1.default;
      } });
      var Static_1 = require_Static();
      Object.defineProperty(exports2, "Static", { enumerable: true, get: function() {
        return Static_1.default;
      } });
      var Transform_1 = require_Transform();
      Object.defineProperty(exports2, "Transform", { enumerable: true, get: function() {
        return Transform_1.default;
      } });
      var Newline_1 = require_Newline();
      Object.defineProperty(exports2, "Newline", { enumerable: true, get: function() {
        return Newline_1.default;
      } });
      var Spacer_1 = require_Spacer();
      Object.defineProperty(exports2, "Spacer", { enumerable: true, get: function() {
        return Spacer_1.default;
      } });
      var use_input_1 = require_use_input();
      Object.defineProperty(exports2, "useInput", { enumerable: true, get: function() {
        return use_input_1.default;
      } });
      var use_app_1 = require_use_app();
      Object.defineProperty(exports2, "useApp", { enumerable: true, get: function() {
        return use_app_1.default;
      } });
      var use_stdin_1 = require_use_stdin();
      Object.defineProperty(exports2, "useStdin", { enumerable: true, get: function() {
        return use_stdin_1.default;
      } });
      var use_stdout_1 = require_use_stdout();
      Object.defineProperty(exports2, "useStdout", { enumerable: true, get: function() {
        return use_stdout_1.default;
      } });
      var use_stderr_1 = require_use_stderr();
      Object.defineProperty(exports2, "useStderr", { enumerable: true, get: function() {
        return use_stderr_1.default;
      } });
      var use_focus_1 = require_use_focus();
      Object.defineProperty(exports2, "useFocus", { enumerable: true, get: function() {
        return use_focus_1.default;
      } });
      var use_focus_manager_1 = require_use_focus_manager();
      Object.defineProperty(exports2, "useFocusManager", { enumerable: true, get: function() {
        return use_focus_manager_1.default;
      } });
      var measure_element_1 = require_measure_element();
      Object.defineProperty(exports2, "measureElement", { enumerable: true, get: function() {
        return measure_element_1.default;
      } });
    }
  });

  // ../../../.yarn/cache/@atls-stack-trace-npm-0.0.2-b65d61ce28-68b70c6bb4.zip/node_modules/@atls/stack-trace/dist/stack-trace.js
  var require_stack_trace = __commonJS({
    "../../../.yarn/cache/@atls-stack-trace-npm-0.0.2-b65d61ce28-68b70c6bb4.zip/node_modules/@atls/stack-trace/dist/stack-trace.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.StackTrace = void 0;
      var StackTrace2 = class {
        constructor(frames) {
          this.frames = frames;
        }
        get topFrame() {
          return this.frames.find((entry) => entry.file);
        }
      };
      exports2.StackTrace = StackTrace2;
    }
  });

  // ../../../.yarn/cache/stack-utils-npm-2.0.5-e0438f409a-a6d64e5dd2.zip/node_modules/stack-utils/index.js
  var require_stack_utils2 = __commonJS({
    "../../../.yarn/cache/stack-utils-npm-2.0.5-e0438f409a-a6d64e5dd2.zip/node_modules/stack-utils/index.js"(exports2, module2) {
      "use strict";
      var escapeStringRegexp = require_escape_string_regexp();
      var cwd = typeof process === "object" && process && typeof process.cwd === "function" ? process.cwd() : ".";
      var natives = [].concat(
        __require("module").builtinModules,
        "bootstrap_node",
        "node"
      ).map((n) => new RegExp(`(?:\\((?:node:)?${n}(?:\\.js)?:\\d+:\\d+\\)$|^\\s*at (?:node:)?${n}(?:\\.js)?:\\d+:\\d+$)`));
      natives.push(
        /\((?:node:)?internal\/[^:]+:\d+:\d+\)$/,
        /\s*at (?:node:)?internal\/[^:]+:\d+:\d+$/,
        /\/\.node-spawn-wrap-\w+-\w+\/node:\d+:\d+\)?$/
      );
      var StackUtils = class {
        constructor(opts) {
          opts = {
            ignoredPackages: [],
            ...opts
          };
          if ("internals" in opts === false) {
            opts.internals = StackUtils.nodeInternals();
          }
          if ("cwd" in opts === false) {
            opts.cwd = cwd;
          }
          this._cwd = opts.cwd.replace(/\\/g, "/");
          this._internals = [].concat(
            opts.internals,
            ignoredPackagesRegExp(opts.ignoredPackages)
          );
          this._wrapCallSite = opts.wrapCallSite || false;
        }
        static nodeInternals() {
          return [...natives];
        }
        clean(stack, indent = 0) {
          indent = " ".repeat(indent);
          if (!Array.isArray(stack)) {
            stack = stack.split("\n");
          }
          if (!/^\s*at /.test(stack[0]) && /^\s*at /.test(stack[1])) {
            stack = stack.slice(1);
          }
          let outdent = false;
          let lastNonAtLine = null;
          const result = [];
          stack.forEach((st) => {
            st = st.replace(/\\/g, "/");
            if (this._internals.some((internal) => internal.test(st))) {
              return;
            }
            const isAtLine = /^\s*at /.test(st);
            if (outdent) {
              st = st.trimEnd().replace(/^(\s+)at /, "$1");
            } else {
              st = st.trim();
              if (isAtLine) {
                st = st.slice(3);
              }
            }
            st = st.replace(`${this._cwd}/`, "");
            if (st) {
              if (isAtLine) {
                if (lastNonAtLine) {
                  result.push(lastNonAtLine);
                  lastNonAtLine = null;
                }
                result.push(st);
              } else {
                outdent = true;
                lastNonAtLine = st;
              }
            }
          });
          return result.map((line) => `${indent}${line}
`).join("");
        }
        captureString(limit, fn = this.captureString) {
          if (typeof limit === "function") {
            fn = limit;
            limit = Infinity;
          }
          const { stackTraceLimit } = Error;
          if (limit) {
            Error.stackTraceLimit = limit;
          }
          const obj = {};
          Error.captureStackTrace(obj, fn);
          const { stack } = obj;
          Error.stackTraceLimit = stackTraceLimit;
          return this.clean(stack);
        }
        capture(limit, fn = this.capture) {
          if (typeof limit === "function") {
            fn = limit;
            limit = Infinity;
          }
          const { prepareStackTrace, stackTraceLimit } = Error;
          Error.prepareStackTrace = (obj2, site) => {
            if (this._wrapCallSite) {
              return site.map(this._wrapCallSite);
            }
            return site;
          };
          if (limit) {
            Error.stackTraceLimit = limit;
          }
          const obj = {};
          Error.captureStackTrace(obj, fn);
          const { stack } = obj;
          Object.assign(Error, { prepareStackTrace, stackTraceLimit });
          return stack;
        }
        at(fn = this.at) {
          const [site] = this.capture(1, fn);
          if (!site) {
            return {};
          }
          const res = {
            line: site.getLineNumber(),
            column: site.getColumnNumber()
          };
          setFile(res, site.getFileName(), this._cwd);
          if (site.isConstructor()) {
            res.constructor = true;
          }
          if (site.isEval()) {
            res.evalOrigin = site.getEvalOrigin();
          }
          if (site.isNative()) {
            res.native = true;
          }
          let typename;
          try {
            typename = site.getTypeName();
          } catch (_) {
          }
          if (typename && typename !== "Object" && typename !== "[object Object]") {
            res.type = typename;
          }
          const fname = site.getFunctionName();
          if (fname) {
            res.function = fname;
          }
          const meth = site.getMethodName();
          if (meth && fname !== meth) {
            res.method = meth;
          }
          return res;
        }
        parseLine(line) {
          const match = line && line.match(re);
          if (!match) {
            return null;
          }
          const ctor = match[1] === "new";
          let fname = match[2];
          const evalOrigin = match[3];
          const evalFile = match[4];
          const evalLine = Number(match[5]);
          const evalCol = Number(match[6]);
          let file = match[7];
          const lnum = match[8];
          const col = match[9];
          const native = match[10] === "native";
          const closeParen = match[11] === ")";
          let method;
          const res = {};
          if (lnum) {
            res.line = Number(lnum);
          }
          if (col) {
            res.column = Number(col);
          }
          if (closeParen && file) {
            let closes = 0;
            for (let i2 = file.length - 1; i2 > 0; i2--) {
              if (file.charAt(i2) === ")") {
                closes++;
              } else if (file.charAt(i2) === "(" && file.charAt(i2 - 1) === " ") {
                closes--;
                if (closes === -1 && file.charAt(i2 - 1) === " ") {
                  const before = file.slice(0, i2 - 1);
                  const after = file.slice(i2 + 1);
                  file = after;
                  fname += ` (${before}`;
                  break;
                }
              }
            }
          }
          if (fname) {
            const methodMatch = fname.match(methodRe);
            if (methodMatch) {
              fname = methodMatch[1];
              method = methodMatch[2];
            }
          }
          setFile(res, file, this._cwd);
          if (ctor) {
            res.constructor = true;
          }
          if (evalOrigin) {
            res.evalOrigin = evalOrigin;
            res.evalLine = evalLine;
            res.evalColumn = evalCol;
            res.evalFile = evalFile && evalFile.replace(/\\/g, "/");
          }
          if (native) {
            res.native = true;
          }
          if (fname) {
            res.function = fname;
          }
          if (method && fname !== method) {
            res.method = method;
          }
          return res;
        }
      };
      function setFile(result, filename, cwd2) {
        if (filename) {
          filename = filename.replace(/\\/g, "/");
          if (filename.startsWith(`${cwd2}/`)) {
            filename = filename.slice(cwd2.length + 1);
          }
          result.file = filename;
        }
      }
      function ignoredPackagesRegExp(ignoredPackages) {
        if (ignoredPackages.length === 0) {
          return [];
        }
        const packages = ignoredPackages.map((mod) => escapeStringRegexp(mod));
        return new RegExp(`[/\\\\]node_modules[/\\\\](?:${packages.join("|")})[/\\\\][^:]+:\\d+:\\d+`);
      }
      var re = new RegExp(
        "^(?:\\s*at )?(?:(new) )?(?:(.*?) \\()?(?:eval at ([^ ]+) \\((.+?):(\\d+):(\\d+)\\), )?(?:(.+?):(\\d+):(\\d+)|(native))(\\)?)$"
      );
      var methodRe = /^(.*?) \[as (.*?)\]$/;
      module2.exports = StackUtils;
    }
  });

  // ../../../.yarn/cache/@atls-webpack-source-map-npm-0.0.2-f5916cb6d1-d82a18e29e.zip/node_modules/@atls/webpack-source-map/dist/resolve.js
  var require_resolve = __commonJS({
    "../../../.yarn/cache/@atls-webpack-source-map-npm-0.0.2-f5916cb6d1-d82a18e29e.zip/node_modules/@atls/webpack-source-map/dist/resolve.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.resolve = exports2.extract = exports2.parse = exports2.load = void 0;
      var module_1 = __require("module");
      var child_process_1 = __require("child_process");
      var load = (file, target = __filename) => {
        try {
          const sourceUrl = file.replace(/\$/g, "\\$");
          return (0, child_process_1.execSync)(`grep -r "sourceURL=${sourceUrl}" ${target}`).toString();
        } catch (error) {
          process.emitWarning(`Loading webpack source error: ${error.message}`);
          return null;
        }
      };
      exports2.load = load;
      var parse2 = (source) => {
        try {
          const dataUriRegExp = new RegExp("(?<=base64,)(.*?)(?=\\\\n)");
          const [datauri] = source.match(dataUriRegExp) || [];
          if (datauri) {
            return JSON.parse(Buffer.from(datauri, "base64").toString());
          }
        } catch (error) {
          process.emitWarning(`Parse webpack source error: ${error.message}`);
        }
        return null;
      };
      exports2.parse = parse2;
      var extract = (file, target) => {
        const source = (0, exports2.load)(file, target);
        if (source) {
          const content = (0, exports2.parse)(source);
          if (content) {
            return new module_1.SourceMap(content);
          }
        }
        return null;
      };
      exports2.extract = extract;
      var resolve = (file, target) => {
        if (!file.includes("webpack-internal://")) {
          return null;
        }
        return (0, exports2.extract)(file, target);
      };
      exports2.resolve = resolve;
    }
  });

  // ../../../.yarn/cache/@atls-webpack-source-map-npm-0.0.2-f5916cb6d1-d82a18e29e.zip/node_modules/@atls/webpack-source-map/dist/index.js
  var require_dist = __commonJS({
    "../../../.yarn/cache/@atls-webpack-source-map-npm-0.0.2-f5916cb6d1-d82a18e29e.zip/node_modules/@atls/webpack-source-map/dist/index.js"(exports2) {
      "use strict";
      var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function() {
          return m[k];
        } });
      } : function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        o[k2] = m[k];
      });
      var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
        for (var p in m)
          if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p))
            __createBinding(exports3, m, p);
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      __exportStar(require_resolve(), exports2);
    }
  });

  // ../../../.yarn/cache/@atls-stack-trace-npm-0.0.2-b65d61ce28-68b70c6bb4.zip/node_modules/@atls/stack-trace/dist/constants.js
  var require_constants2 = __commonJS({
    "../../../.yarn/cache/@atls-stack-trace-npm-0.0.2-b65d61ce28-68b70c6bb4.zip/node_modules/@atls/stack-trace/dist/constants.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.isProdEnv = exports2.isWebpackEnv = void 0;
      exports2.isWebpackEnv = typeof __webpack_require__ === "function";
      exports2.isProdEnv = process.env.NODE_ENV === "production";
    }
  });

  // ../../../.yarn/cache/@atls-stack-trace-npm-0.0.2-b65d61ce28-68b70c6bb4.zip/node_modules/@atls/stack-trace/dist/parse.js
  var require_parse = __commonJS({
    "../../../.yarn/cache/@atls-stack-trace-npm-0.0.2-b65d61ce28-68b70c6bb4.zip/node_modules/@atls/stack-trace/dist/parse.js"(exports2) {
      "use strict";
      var __importDefault = exports2 && exports2.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.parse = void 0;
      var stack_utils_1 = __importDefault(require_stack_utils2());
      var webpack_source_map_1 = require_dist();
      var stack_trace_1 = require_stack_trace();
      var constants_1 = require_constants2();
      var constants_2 = require_constants2();
      var parse2 = (stack) => {
        const lines = stack.split("\n");
        const cwd = process.cwd();
        const stackUtils = new stack_utils_1.default({ cwd });
        const frames = lines.reduce((result, line) => {
          const frame = stackUtils.parseLine(line.trim());
          if (frame) {
            if (frame.file && constants_1.isWebpackEnv && !constants_2.isProdEnv) {
              const sourceMap = (0, webpack_source_map_1.resolve)(frame.file, __filename);
              if (sourceMap) {
                frame.sourceMap = sourceMap;
                frame.file = sourceMap.payload.file.replace(".ts.js", ".ts").replace(".tsx.js", ".tsx").replace(".js.js", ".js");
                if (frame.line && frame.column) {
                  const entry = sourceMap.findEntry(frame.line, frame.column);
                  if (entry) {
                    frame.line = entry.originalLine;
                    frame.column = entry.originalColumn;
                  }
                }
              }
            }
            result.push(frame);
          }
          return result;
        }, []);
        return new stack_trace_1.StackTrace(frames);
      };
      exports2.parse = parse2;
    }
  });

  // ../../../.yarn/cache/@atls-stack-trace-npm-0.0.2-b65d61ce28-68b70c6bb4.zip/node_modules/@atls/stack-trace/dist/index.js
  var require_dist2 = __commonJS({
    "../../../.yarn/cache/@atls-stack-trace-npm-0.0.2-b65d61ce28-68b70c6bb4.zip/node_modules/@atls/stack-trace/dist/index.js"(exports2) {
      "use strict";
      var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function() {
          return m[k];
        } });
      } : function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        o[k2] = m[k];
      });
      var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
        for (var p in m)
          if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p))
            __createBinding(exports3, m, p);
      };
      Object.defineProperty(exports2, "__esModule", { value: true });
      __exportStar(require_stack_trace(), exports2);
      __exportStar(require_parse(), exports2);
    }
  });

  // ../../../.yarn/cache/js-tokens-npm-4.0.0-0ac852e9e2-af37d0d913.zip/node_modules/js-tokens/index.js
  var require_js_tokens = __commonJS({
    "../../../.yarn/cache/js-tokens-npm-4.0.0-0ac852e9e2-af37d0d913.zip/node_modules/js-tokens/index.js"(exports2) {
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.default = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g;
      exports2.matchToToken = function(match) {
        var token = { type: "invalid", value: match[0], closed: void 0 };
        if (match[1])
          token.type = "string", token.closed = !!(match[3] || match[4]);
        else if (match[5])
          token.type = "comment";
        else if (match[6])
          token.type = "comment", token.closed = !!match[7];
        else if (match[8])
          token.type = "regex";
        else if (match[9])
          token.type = "number";
        else if (match[10])
          token.type = "name";
        else if (match[11])
          token.type = "punctuator";
        else if (match[12])
          token.type = "whitespace";
        return token;
      };
    }
  });

  // ../../../.yarn/cache/@babel-helper-validator-identifier-npm-7.22.20-18305bb306-df882d2675.zip/node_modules/@babel/helper-validator-identifier/lib/identifier.js
  var require_identifier = __commonJS({
    "../../../.yarn/cache/@babel-helper-validator-identifier-npm-7.22.20-18305bb306-df882d2675.zip/node_modules/@babel/helper-validator-identifier/lib/identifier.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.isIdentifierChar = isIdentifierChar;
      exports2.isIdentifierName = isIdentifierName;
      exports2.isIdentifierStart = isIdentifierStart;
      var nonASCIIidentifierStartChars = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC";
      var nonASCIIidentifierChars = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0CF3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECE\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u200C\u200D\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\u30FB\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F\uFF65";
      var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
      var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");
      nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;
      var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];
      var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];
      function isInAstralSet(code, set) {
        let pos = 65536;
        for (let i2 = 0, length = set.length; i2 < length; i2 += 2) {
          pos += set[i2];
          if (pos > code)
            return false;
          pos += set[i2 + 1];
          if (pos >= code)
            return true;
        }
        return false;
      }
      function isIdentifierStart(code) {
        if (code < 65)
          return code === 36;
        if (code <= 90)
          return true;
        if (code < 97)
          return code === 95;
        if (code <= 122)
          return true;
        if (code <= 65535) {
          return code >= 170 && nonASCIIidentifierStart.test(String.fromCharCode(code));
        }
        return isInAstralSet(code, astralIdentifierStartCodes);
      }
      function isIdentifierChar(code) {
        if (code < 48)
          return code === 36;
        if (code < 58)
          return true;
        if (code < 65)
          return false;
        if (code <= 90)
          return true;
        if (code < 97)
          return code === 95;
        if (code <= 122)
          return true;
        if (code <= 65535) {
          return code >= 170 && nonASCIIidentifier.test(String.fromCharCode(code));
        }
        return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);
      }
      function isIdentifierName(name) {
        let isFirst = true;
        for (let i2 = 0; i2 < name.length; i2++) {
          let cp = name.charCodeAt(i2);
          if ((cp & 64512) === 55296 && i2 + 1 < name.length) {
            const trail = name.charCodeAt(++i2);
            if ((trail & 64512) === 56320) {
              cp = 65536 + ((cp & 1023) << 10) + (trail & 1023);
            }
          }
          if (isFirst) {
            isFirst = false;
            if (!isIdentifierStart(cp)) {
              return false;
            }
          } else if (!isIdentifierChar(cp)) {
            return false;
          }
        }
        return !isFirst;
      }
    }
  });

  // ../../../.yarn/cache/@babel-helper-validator-identifier-npm-7.22.20-18305bb306-df882d2675.zip/node_modules/@babel/helper-validator-identifier/lib/keyword.js
  var require_keyword = __commonJS({
    "../../../.yarn/cache/@babel-helper-validator-identifier-npm-7.22.20-18305bb306-df882d2675.zip/node_modules/@babel/helper-validator-identifier/lib/keyword.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.isKeyword = isKeyword;
      exports2.isReservedWord = isReservedWord;
      exports2.isStrictBindOnlyReservedWord = isStrictBindOnlyReservedWord;
      exports2.isStrictBindReservedWord = isStrictBindReservedWord;
      exports2.isStrictReservedWord = isStrictReservedWord;
      var reservedWords = {
        keyword: ["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function", "if", "return", "switch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import", "null", "true", "false", "in", "instanceof", "typeof", "void", "delete"],
        strict: ["implements", "interface", "let", "package", "private", "protected", "public", "static", "yield"],
        strictBind: ["eval", "arguments"]
      };
      var keywords = new Set(reservedWords.keyword);
      var reservedWordsStrictSet = new Set(reservedWords.strict);
      var reservedWordsStrictBindSet = new Set(reservedWords.strictBind);
      function isReservedWord(word, inModule) {
        return inModule && word === "await" || word === "enum";
      }
      function isStrictReservedWord(word, inModule) {
        return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);
      }
      function isStrictBindOnlyReservedWord(word) {
        return reservedWordsStrictBindSet.has(word);
      }
      function isStrictBindReservedWord(word, inModule) {
        return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);
      }
      function isKeyword(word) {
        return keywords.has(word);
      }
    }
  });

  // ../../../.yarn/cache/@babel-helper-validator-identifier-npm-7.22.20-18305bb306-df882d2675.zip/node_modules/@babel/helper-validator-identifier/lib/index.js
  var require_lib = __commonJS({
    "../../../.yarn/cache/@babel-helper-validator-identifier-npm-7.22.20-18305bb306-df882d2675.zip/node_modules/@babel/helper-validator-identifier/lib/index.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      Object.defineProperty(exports2, "isIdentifierChar", {
        enumerable: true,
        get: function() {
          return _identifier.isIdentifierChar;
        }
      });
      Object.defineProperty(exports2, "isIdentifierName", {
        enumerable: true,
        get: function() {
          return _identifier.isIdentifierName;
        }
      });
      Object.defineProperty(exports2, "isIdentifierStart", {
        enumerable: true,
        get: function() {
          return _identifier.isIdentifierStart;
        }
      });
      Object.defineProperty(exports2, "isKeyword", {
        enumerable: true,
        get: function() {
          return _keyword.isKeyword;
        }
      });
      Object.defineProperty(exports2, "isReservedWord", {
        enumerable: true,
        get: function() {
          return _keyword.isReservedWord;
        }
      });
      Object.defineProperty(exports2, "isStrictBindOnlyReservedWord", {
        enumerable: true,
        get: function() {
          return _keyword.isStrictBindOnlyReservedWord;
        }
      });
      Object.defineProperty(exports2, "isStrictBindReservedWord", {
        enumerable: true,
        get: function() {
          return _keyword.isStrictBindReservedWord;
        }
      });
      Object.defineProperty(exports2, "isStrictReservedWord", {
        enumerable: true,
        get: function() {
          return _keyword.isStrictReservedWord;
        }
      });
      var _identifier = require_identifier();
      var _keyword = require_keyword();
    }
  });

  // ../../../.yarn/cache/escape-string-regexp-npm-1.0.5-3284de402f-6092fda75c.zip/node_modules/escape-string-regexp/index.js
  var require_escape_string_regexp2 = __commonJS({
    "../../../.yarn/cache/escape-string-regexp-npm-1.0.5-3284de402f-6092fda75c.zip/node_modules/escape-string-regexp/index.js"(exports2, module2) {
      "use strict";
      var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;
      module2.exports = function(str) {
        if (typeof str !== "string") {
          throw new TypeError("Expected a string");
        }
        return str.replace(matchOperatorsRe, "\\$&");
      };
    }
  });

  // ../../../.yarn/cache/color-name-npm-1.1.3-728b7b5d39-09c5d3e33d.zip/node_modules/color-name/index.js
  var require_color_name2 = __commonJS({
    "../../../.yarn/cache/color-name-npm-1.1.3-728b7b5d39-09c5d3e33d.zip/node_modules/color-name/index.js"(exports2, module2) {
      "use strict";
      module2.exports = {
        "aliceblue": [240, 248, 255],
        "antiquewhite": [250, 235, 215],
        "aqua": [0, 255, 255],
        "aquamarine": [127, 255, 212],
        "azure": [240, 255, 255],
        "beige": [245, 245, 220],
        "bisque": [255, 228, 196],
        "black": [0, 0, 0],
        "blanchedalmond": [255, 235, 205],
        "blue": [0, 0, 255],
        "blueviolet": [138, 43, 226],
        "brown": [165, 42, 42],
        "burlywood": [222, 184, 135],
        "cadetblue": [95, 158, 160],
        "chartreuse": [127, 255, 0],
        "chocolate": [210, 105, 30],
        "coral": [255, 127, 80],
        "cornflowerblue": [100, 149, 237],
        "cornsilk": [255, 248, 220],
        "crimson": [220, 20, 60],
        "cyan": [0, 255, 255],
        "darkblue": [0, 0, 139],
        "darkcyan": [0, 139, 139],
        "darkgoldenrod": [184, 134, 11],
        "darkgray": [169, 169, 169],
        "darkgreen": [0, 100, 0],
        "darkgrey": [169, 169, 169],
        "darkkhaki": [189, 183, 107],
        "darkmagenta": [139, 0, 139],
        "darkolivegreen": [85, 107, 47],
        "darkorange": [255, 140, 0],
        "darkorchid": [153, 50, 204],
        "darkred": [139, 0, 0],
        "darksalmon": [233, 150, 122],
        "darkseagreen": [143, 188, 143],
        "darkslateblue": [72, 61, 139],
        "darkslategray": [47, 79, 79],
        "darkslategrey": [47, 79, 79],
        "darkturquoise": [0, 206, 209],
        "darkviolet": [148, 0, 211],
        "deeppink": [255, 20, 147],
        "deepskyblue": [0, 191, 255],
        "dimgray": [105, 105, 105],
        "dimgrey": [105, 105, 105],
        "dodgerblue": [30, 144, 255],
        "firebrick": [178, 34, 34],
        "floralwhite": [255, 250, 240],
        "forestgreen": [34, 139, 34],
        "fuchsia": [255, 0, 255],
        "gainsboro": [220, 220, 220],
        "ghostwhite": [248, 248, 255],
        "gold": [255, 215, 0],
        "goldenrod": [218, 165, 32],
        "gray": [128, 128, 128],
        "green": [0, 128, 0],
        "greenyellow": [173, 255, 47],
        "grey": [128, 128, 128],
        "honeydew": [240, 255, 240],
        "hotpink": [255, 105, 180],
        "indianred": [205, 92, 92],
        "indigo": [75, 0, 130],
        "ivory": [255, 255, 240],
        "khaki": [240, 230, 140],
        "lavender": [230, 230, 250],
        "lavenderblush": [255, 240, 245],
        "lawngreen": [124, 252, 0],
        "lemonchiffon": [255, 250, 205],
        "lightblue": [173, 216, 230],
        "lightcoral": [240, 128, 128],
        "lightcyan": [224, 255, 255],
        "lightgoldenrodyellow": [250, 250, 210],
        "lightgray": [211, 211, 211],
        "lightgreen": [144, 238, 144],
        "lightgrey": [211, 211, 211],
        "lightpink": [255, 182, 193],
        "lightsalmon": [255, 160, 122],
        "lightseagreen": [32, 178, 170],
        "lightskyblue": [135, 206, 250],
        "lightslategray": [119, 136, 153],
        "lightslategrey": [119, 136, 153],
        "lightsteelblue": [176, 196, 222],
        "lightyellow": [255, 255, 224],
        "lime": [0, 255, 0],
        "limegreen": [50, 205, 50],
        "linen": [250, 240, 230],
        "magenta": [255, 0, 255],
        "maroon": [128, 0, 0],
        "mediumaquamarine": [102, 205, 170],
        "mediumblue": [0, 0, 205],
        "mediumorchid": [186, 85, 211],
        "mediumpurple": [147, 112, 219],
        "mediumseagreen": [60, 179, 113],
        "mediumslateblue": [123, 104, 238],
        "mediumspringgreen": [0, 250, 154],
        "mediumturquoise": [72, 209, 204],
        "mediumvioletred": [199, 21, 133],
        "midnightblue": [25, 25, 112],
        "mintcream": [245, 255, 250],
        "mistyrose": [255, 228, 225],
        "moccasin": [255, 228, 181],
        "navajowhite": [255, 222, 173],
        "navy": [0, 0, 128],
        "oldlace": [253, 245, 230],
        "olive": [128, 128, 0],
        "olivedrab": [107, 142, 35],
        "orange": [255, 165, 0],
        "orangered": [255, 69, 0],
        "orchid": [218, 112, 214],
        "palegoldenrod": [238, 232, 170],
        "palegreen": [152, 251, 152],
        "paleturquoise": [175, 238, 238],
        "palevioletred": [219, 112, 147],
        "papayawhip": [255, 239, 213],
        "peachpuff": [255, 218, 185],
        "peru": [205, 133, 63],
        "pink": [255, 192, 203],
        "plum": [221, 160, 221],
        "powderblue": [176, 224, 230],
        "purple": [128, 0, 128],
        "rebeccapurple": [102, 51, 153],
        "red": [255, 0, 0],
        "rosybrown": [188, 143, 143],
        "royalblue": [65, 105, 225],
        "saddlebrown": [139, 69, 19],
        "salmon": [250, 128, 114],
        "sandybrown": [244, 164, 96],
        "seagreen": [46, 139, 87],
        "seashell": [255, 245, 238],
        "sienna": [160, 82, 45],
        "silver": [192, 192, 192],
        "skyblue": [135, 206, 235],
        "slateblue": [106, 90, 205],
        "slategray": [112, 128, 144],
        "slategrey": [112, 128, 144],
        "snow": [255, 250, 250],
        "springgreen": [0, 255, 127],
        "steelblue": [70, 130, 180],
        "tan": [210, 180, 140],
        "teal": [0, 128, 128],
        "thistle": [216, 191, 216],
        "tomato": [255, 99, 71],
        "turquoise": [64, 224, 208],
        "violet": [238, 130, 238],
        "wheat": [245, 222, 179],
        "white": [255, 255, 255],
        "whitesmoke": [245, 245, 245],
        "yellow": [255, 255, 0],
        "yellowgreen": [154, 205, 50]
      };
    }
  });

  // ../../../.yarn/cache/color-convert-npm-1.9.3-1fe690075e-ffa3190250.zip/node_modules/color-convert/conversions.js
  var require_conversions2 = __commonJS({
    "../../../.yarn/cache/color-convert-npm-1.9.3-1fe690075e-ffa3190250.zip/node_modules/color-convert/conversions.js"(exports2, module2) {
      var cssKeywords = require_color_name2();
      var reverseKeywords = {};
      for (key2 in cssKeywords) {
        if (cssKeywords.hasOwnProperty(key2)) {
          reverseKeywords[cssKeywords[key2]] = key2;
        }
      }
      var key2;
      var convert = module2.exports = {
        rgb: { channels: 3, labels: "rgb" },
        hsl: { channels: 3, labels: "hsl" },
        hsv: { channels: 3, labels: "hsv" },
        hwb: { channels: 3, labels: "hwb" },
        cmyk: { channels: 4, labels: "cmyk" },
        xyz: { channels: 3, labels: "xyz" },
        lab: { channels: 3, labels: "lab" },
        lch: { channels: 3, labels: "lch" },
        hex: { channels: 1, labels: ["hex"] },
        keyword: { channels: 1, labels: ["keyword"] },
        ansi16: { channels: 1, labels: ["ansi16"] },
        ansi256: { channels: 1, labels: ["ansi256"] },
        hcg: { channels: 3, labels: ["h", "c", "g"] },
        apple: { channels: 3, labels: ["r16", "g16", "b16"] },
        gray: { channels: 1, labels: ["gray"] }
      };
      for (model in convert) {
        if (convert.hasOwnProperty(model)) {
          if (!("channels" in convert[model])) {
            throw new Error("missing channels property: " + model);
          }
          if (!("labels" in convert[model])) {
            throw new Error("missing channel labels property: " + model);
          }
          if (convert[model].labels.length !== convert[model].channels) {
            throw new Error("channel and label counts mismatch: " + model);
          }
          channels = convert[model].channels;
          labels = convert[model].labels;
          delete convert[model].channels;
          delete convert[model].labels;
          Object.defineProperty(convert[model], "channels", { value: channels });
          Object.defineProperty(convert[model], "labels", { value: labels });
        }
      }
      var channels;
      var labels;
      var model;
      convert.rgb.hsl = function(rgb) {
        var r = rgb[0] / 255;
        var g = rgb[1] / 255;
        var b = rgb[2] / 255;
        var min = Math.min(r, g, b);
        var max = Math.max(r, g, b);
        var delta = max - min;
        var h;
        var s;
        var l;
        if (max === min) {
          h = 0;
        } else if (r === max) {
          h = (g - b) / delta;
        } else if (g === max) {
          h = 2 + (b - r) / delta;
        } else if (b === max) {
          h = 4 + (r - g) / delta;
        }
        h = Math.min(h * 60, 360);
        if (h < 0) {
          h += 360;
        }
        l = (min + max) / 2;
        if (max === min) {
          s = 0;
        } else if (l <= 0.5) {
          s = delta / (max + min);
        } else {
          s = delta / (2 - max - min);
        }
        return [h, s * 100, l * 100];
      };
      convert.rgb.hsv = function(rgb) {
        var rdif;
        var gdif;
        var bdif;
        var h;
        var s;
        var r = rgb[0] / 255;
        var g = rgb[1] / 255;
        var b = rgb[2] / 255;
        var v = Math.max(r, g, b);
        var diff = v - Math.min(r, g, b);
        var diffc = function(c) {
          return (v - c) / 6 / diff + 1 / 2;
        };
        if (diff === 0) {
          h = s = 0;
        } else {
          s = diff / v;
          rdif = diffc(r);
          gdif = diffc(g);
          bdif = diffc(b);
          if (r === v) {
            h = bdif - gdif;
          } else if (g === v) {
            h = 1 / 3 + rdif - bdif;
          } else if (b === v) {
            h = 2 / 3 + gdif - rdif;
          }
          if (h < 0) {
            h += 1;
          } else if (h > 1) {
            h -= 1;
          }
        }
        return [
          h * 360,
          s * 100,
          v * 100
        ];
      };
      convert.rgb.hwb = function(rgb) {
        var r = rgb[0];
        var g = rgb[1];
        var b = rgb[2];
        var h = convert.rgb.hsl(rgb)[0];
        var w = 1 / 255 * Math.min(r, Math.min(g, b));
        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
        return [h, w * 100, b * 100];
      };
      convert.rgb.cmyk = function(rgb) {
        var r = rgb[0] / 255;
        var g = rgb[1] / 255;
        var b = rgb[2] / 255;
        var c;
        var m;
        var y;
        var k;
        k = Math.min(1 - r, 1 - g, 1 - b);
        c = (1 - r - k) / (1 - k) || 0;
        m = (1 - g - k) / (1 - k) || 0;
        y = (1 - b - k) / (1 - k) || 0;
        return [c * 100, m * 100, y * 100, k * 100];
      };
      function comparativeDistance(x, y) {
        return Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2) + Math.pow(x[2] - y[2], 2);
      }
      convert.rgb.keyword = function(rgb) {
        var reversed = reverseKeywords[rgb];
        if (reversed) {
          return reversed;
        }
        var currentClosestDistance = Infinity;
        var currentClosestKeyword;
        for (var keyword in cssKeywords) {
          if (cssKeywords.hasOwnProperty(keyword)) {
            var value = cssKeywords[keyword];
            var distance = comparativeDistance(rgb, value);
            if (distance < currentClosestDistance) {
              currentClosestDistance = distance;
              currentClosestKeyword = keyword;
            }
          }
        }
        return currentClosestKeyword;
      };
      convert.keyword.rgb = function(keyword) {
        return cssKeywords[keyword];
      };
      convert.rgb.xyz = function(rgb) {
        var r = rgb[0] / 255;
        var g = rgb[1] / 255;
        var b = rgb[2] / 255;
        r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;
        g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;
        b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;
        var x = r * 0.4124 + g * 0.3576 + b * 0.1805;
        var y = r * 0.2126 + g * 0.7152 + b * 0.0722;
        var z = r * 0.0193 + g * 0.1192 + b * 0.9505;
        return [x * 100, y * 100, z * 100];
      };
      convert.rgb.lab = function(rgb) {
        var xyz = convert.rgb.xyz(rgb);
        var x = xyz[0];
        var y = xyz[1];
        var z = xyz[2];
        var l;
        var a;
        var b;
        x /= 95.047;
        y /= 100;
        z /= 108.883;
        x = x > 8856e-6 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
        y = y > 8856e-6 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
        z = z > 8856e-6 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
        l = 116 * y - 16;
        a = 500 * (x - y);
        b = 200 * (y - z);
        return [l, a, b];
      };
      convert.hsl.rgb = function(hsl) {
        var h = hsl[0] / 360;
        var s = hsl[1] / 100;
        var l = hsl[2] / 100;
        var t1;
        var t2;
        var t3;
        var rgb;
        var val;
        if (s === 0) {
          val = l * 255;
          return [val, val, val];
        }
        if (l < 0.5) {
          t2 = l * (1 + s);
        } else {
          t2 = l + s - l * s;
        }
        t1 = 2 * l - t2;
        rgb = [0, 0, 0];
        for (var i2 = 0; i2 < 3; i2++) {
          t3 = h + 1 / 3 * -(i2 - 1);
          if (t3 < 0) {
            t3++;
          }
          if (t3 > 1) {
            t3--;
          }
          if (6 * t3 < 1) {
            val = t1 + (t2 - t1) * 6 * t3;
          } else if (2 * t3 < 1) {
            val = t2;
          } else if (3 * t3 < 2) {
            val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
          } else {
            val = t1;
          }
          rgb[i2] = val * 255;
        }
        return rgb;
      };
      convert.hsl.hsv = function(hsl) {
        var h = hsl[0];
        var s = hsl[1] / 100;
        var l = hsl[2] / 100;
        var smin = s;
        var lmin = Math.max(l, 0.01);
        var sv;
        var v;
        l *= 2;
        s *= l <= 1 ? l : 2 - l;
        smin *= lmin <= 1 ? lmin : 2 - lmin;
        v = (l + s) / 2;
        sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);
        return [h, sv * 100, v * 100];
      };
      convert.hsv.rgb = function(hsv) {
        var h = hsv[0] / 60;
        var s = hsv[1] / 100;
        var v = hsv[2] / 100;
        var hi = Math.floor(h) % 6;
        var f = h - Math.floor(h);
        var p = 255 * v * (1 - s);
        var q = 255 * v * (1 - s * f);
        var t = 255 * v * (1 - s * (1 - f));
        v *= 255;
        switch (hi) {
          case 0:
            return [v, t, p];
          case 1:
            return [q, v, p];
          case 2:
            return [p, v, t];
          case 3:
            return [p, q, v];
          case 4:
            return [t, p, v];
          case 5:
            return [v, p, q];
        }
      };
      convert.hsv.hsl = function(hsv) {
        var h = hsv[0];
        var s = hsv[1] / 100;
        var v = hsv[2] / 100;
        var vmin = Math.max(v, 0.01);
        var lmin;
        var sl;
        var l;
        l = (2 - s) * v;
        lmin = (2 - s) * vmin;
        sl = s * vmin;
        sl /= lmin <= 1 ? lmin : 2 - lmin;
        sl = sl || 0;
        l /= 2;
        return [h, sl * 100, l * 100];
      };
      convert.hwb.rgb = function(hwb) {
        var h = hwb[0] / 360;
        var wh = hwb[1] / 100;
        var bl = hwb[2] / 100;
        var ratio = wh + bl;
        var i2;
        var v;
        var f;
        var n;
        if (ratio > 1) {
          wh /= ratio;
          bl /= ratio;
        }
        i2 = Math.floor(6 * h);
        v = 1 - bl;
        f = 6 * h - i2;
        if ((i2 & 1) !== 0) {
          f = 1 - f;
        }
        n = wh + f * (v - wh);
        var r;
        var g;
        var b;
        switch (i2) {
          default:
          case 6:
          case 0:
            r = v;
            g = n;
            b = wh;
            break;
          case 1:
            r = n;
            g = v;
            b = wh;
            break;
          case 2:
            r = wh;
            g = v;
            b = n;
            break;
          case 3:
            r = wh;
            g = n;
            b = v;
            break;
          case 4:
            r = n;
            g = wh;
            b = v;
            break;
          case 5:
            r = v;
            g = wh;
            b = n;
            break;
        }
        return [r * 255, g * 255, b * 255];
      };
      convert.cmyk.rgb = function(cmyk) {
        var c = cmyk[0] / 100;
        var m = cmyk[1] / 100;
        var y = cmyk[2] / 100;
        var k = cmyk[3] / 100;
        var r;
        var g;
        var b;
        r = 1 - Math.min(1, c * (1 - k) + k);
        g = 1 - Math.min(1, m * (1 - k) + k);
        b = 1 - Math.min(1, y * (1 - k) + k);
        return [r * 255, g * 255, b * 255];
      };
      convert.xyz.rgb = function(xyz) {
        var x = xyz[0] / 100;
        var y = xyz[1] / 100;
        var z = xyz[2] / 100;
        var r;
        var g;
        var b;
        r = x * 3.2406 + y * -1.5372 + z * -0.4986;
        g = x * -0.9689 + y * 1.8758 + z * 0.0415;
        b = x * 0.0557 + y * -0.204 + z * 1.057;
        r = r > 31308e-7 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92;
        g = g > 31308e-7 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g * 12.92;
        b = b > 31308e-7 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : b * 12.92;
        r = Math.min(Math.max(0, r), 1);
        g = Math.min(Math.max(0, g), 1);
        b = Math.min(Math.max(0, b), 1);
        return [r * 255, g * 255, b * 255];
      };
      convert.xyz.lab = function(xyz) {
        var x = xyz[0];
        var y = xyz[1];
        var z = xyz[2];
        var l;
        var a;
        var b;
        x /= 95.047;
        y /= 100;
        z /= 108.883;
        x = x > 8856e-6 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
        y = y > 8856e-6 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
        z = z > 8856e-6 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
        l = 116 * y - 16;
        a = 500 * (x - y);
        b = 200 * (y - z);
        return [l, a, b];
      };
      convert.lab.xyz = function(lab) {
        var l = lab[0];
        var a = lab[1];
        var b = lab[2];
        var x;
        var y;
        var z;
        y = (l + 16) / 116;
        x = a / 500 + y;
        z = y - b / 200;
        var y2 = Math.pow(y, 3);
        var x2 = Math.pow(x, 3);
        var z2 = Math.pow(z, 3);
        y = y2 > 8856e-6 ? y2 : (y - 16 / 116) / 7.787;
        x = x2 > 8856e-6 ? x2 : (x - 16 / 116) / 7.787;
        z = z2 > 8856e-6 ? z2 : (z - 16 / 116) / 7.787;
        x *= 95.047;
        y *= 100;
        z *= 108.883;
        return [x, y, z];
      };
      convert.lab.lch = function(lab) {
        var l = lab[0];
        var a = lab[1];
        var b = lab[2];
        var hr;
        var h;
        var c;
        hr = Math.atan2(b, a);
        h = hr * 360 / 2 / Math.PI;
        if (h < 0) {
          h += 360;
        }
        c = Math.sqrt(a * a + b * b);
        return [l, c, h];
      };
      convert.lch.lab = function(lch) {
        var l = lch[0];
        var c = lch[1];
        var h = lch[2];
        var a;
        var b;
        var hr;
        hr = h / 360 * 2 * Math.PI;
        a = c * Math.cos(hr);
        b = c * Math.sin(hr);
        return [l, a, b];
      };
      convert.rgb.ansi16 = function(args) {
        var r = args[0];
        var g = args[1];
        var b = args[2];
        var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2];
        value = Math.round(value / 50);
        if (value === 0) {
          return 30;
        }
        var ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));
        if (value === 2) {
          ansi += 60;
        }
        return ansi;
      };
      convert.hsv.ansi16 = function(args) {
        return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
      };
      convert.rgb.ansi256 = function(args) {
        var r = args[0];
        var g = args[1];
        var b = args[2];
        if (r === g && g === b) {
          if (r < 8) {
            return 16;
          }
          if (r > 248) {
            return 231;
          }
          return Math.round((r - 8) / 247 * 24) + 232;
        }
        var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);
        return ansi;
      };
      convert.ansi16.rgb = function(args) {
        var color = args % 10;
        if (color === 0 || color === 7) {
          if (args > 50) {
            color += 3.5;
          }
          color = color / 10.5 * 255;
          return [color, color, color];
        }
        var mult = (~~(args > 50) + 1) * 0.5;
        var r = (color & 1) * mult * 255;
        var g = (color >> 1 & 1) * mult * 255;
        var b = (color >> 2 & 1) * mult * 255;
        return [r, g, b];
      };
      convert.ansi256.rgb = function(args) {
        if (args >= 232) {
          var c = (args - 232) * 10 + 8;
          return [c, c, c];
        }
        args -= 16;
        var rem;
        var r = Math.floor(args / 36) / 5 * 255;
        var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
        var b = rem % 6 / 5 * 255;
        return [r, g, b];
      };
      convert.rgb.hex = function(args) {
        var integer = ((Math.round(args[0]) & 255) << 16) + ((Math.round(args[1]) & 255) << 8) + (Math.round(args[2]) & 255);
        var string = integer.toString(16).toUpperCase();
        return "000000".substring(string.length) + string;
      };
      convert.hex.rgb = function(args) {
        var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
        if (!match) {
          return [0, 0, 0];
        }
        var colorString = match[0];
        if (match[0].length === 3) {
          colorString = colorString.split("").map(function(char) {
            return char + char;
          }).join("");
        }
        var integer = parseInt(colorString, 16);
        var r = integer >> 16 & 255;
        var g = integer >> 8 & 255;
        var b = integer & 255;
        return [r, g, b];
      };
      convert.rgb.hcg = function(rgb) {
        var r = rgb[0] / 255;
        var g = rgb[1] / 255;
        var b = rgb[2] / 255;
        var max = Math.max(Math.max(r, g), b);
        var min = Math.min(Math.min(r, g), b);
        var chroma = max - min;
        var grayscale;
        var hue;
        if (chroma < 1) {
          grayscale = min / (1 - chroma);
        } else {
          grayscale = 0;
        }
        if (chroma <= 0) {
          hue = 0;
        } else if (max === r) {
          hue = (g - b) / chroma % 6;
        } else if (max === g) {
          hue = 2 + (b - r) / chroma;
        } else {
          hue = 4 + (r - g) / chroma + 4;
        }
        hue /= 6;
        hue %= 1;
        return [hue * 360, chroma * 100, grayscale * 100];
      };
      convert.hsl.hcg = function(hsl) {
        var s = hsl[1] / 100;
        var l = hsl[2] / 100;
        var c = 1;
        var f = 0;
        if (l < 0.5) {
          c = 2 * s * l;
        } else {
          c = 2 * s * (1 - l);
        }
        if (c < 1) {
          f = (l - 0.5 * c) / (1 - c);
        }
        return [hsl[0], c * 100, f * 100];
      };
      convert.hsv.hcg = function(hsv) {
        var s = hsv[1] / 100;
        var v = hsv[2] / 100;
        var c = s * v;
        var f = 0;
        if (c < 1) {
          f = (v - c) / (1 - c);
        }
        return [hsv[0], c * 100, f * 100];
      };
      convert.hcg.rgb = function(hcg) {
        var h = hcg[0] / 360;
        var c = hcg[1] / 100;
        var g = hcg[2] / 100;
        if (c === 0) {
          return [g * 255, g * 255, g * 255];
        }
        var pure = [0, 0, 0];
        var hi = h % 1 * 6;
        var v = hi % 1;
        var w = 1 - v;
        var mg = 0;
        switch (Math.floor(hi)) {
          case 0:
            pure[0] = 1;
            pure[1] = v;
            pure[2] = 0;
            break;
          case 1:
            pure[0] = w;
            pure[1] = 1;
            pure[2] = 0;
            break;
          case 2:
            pure[0] = 0;
            pure[1] = 1;
            pure[2] = v;
            break;
          case 3:
            pure[0] = 0;
            pure[1] = w;
            pure[2] = 1;
            break;
          case 4:
            pure[0] = v;
            pure[1] = 0;
            pure[2] = 1;
            break;
          default:
            pure[0] = 1;
            pure[1] = 0;
            pure[2] = w;
        }
        mg = (1 - c) * g;
        return [
          (c * pure[0] + mg) * 255,
          (c * pure[1] + mg) * 255,
          (c * pure[2] + mg) * 255
        ];
      };
      convert.hcg.hsv = function(hcg) {
        var c = hcg[1] / 100;
        var g = hcg[2] / 100;
        var v = c + g * (1 - c);
        var f = 0;
        if (v > 0) {
          f = c / v;
        }
        return [hcg[0], f * 100, v * 100];
      };
      convert.hcg.hsl = function(hcg) {
        var c = hcg[1] / 100;
        var g = hcg[2] / 100;
        var l = g * (1 - c) + 0.5 * c;
        var s = 0;
        if (l > 0 && l < 0.5) {
          s = c / (2 * l);
        } else if (l >= 0.5 && l < 1) {
          s = c / (2 * (1 - l));
        }
        return [hcg[0], s * 100, l * 100];
      };
      convert.hcg.hwb = function(hcg) {
        var c = hcg[1] / 100;
        var g = hcg[2] / 100;
        var v = c + g * (1 - c);
        return [hcg[0], (v - c) * 100, (1 - v) * 100];
      };
      convert.hwb.hcg = function(hwb) {
        var w = hwb[1] / 100;
        var b = hwb[2] / 100;
        var v = 1 - b;
        var c = v - w;
        var g = 0;
        if (c < 1) {
          g = (v - c) / (1 - c);
        }
        return [hwb[0], c * 100, g * 100];
      };
      convert.apple.rgb = function(apple) {
        return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];
      };
      convert.rgb.apple = function(rgb) {
        return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];
      };
      convert.gray.rgb = function(args) {
        return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
      };
      convert.gray.hsl = convert.gray.hsv = function(args) {
        return [0, 0, args[0]];
      };
      convert.gray.hwb = function(gray) {
        return [0, 100, gray[0]];
      };
      convert.gray.cmyk = function(gray) {
        return [0, 0, 0, gray[0]];
      };
      convert.gray.lab = function(gray) {
        return [gray[0], 0, 0];
      };
      convert.gray.hex = function(gray) {
        var val = Math.round(gray[0] / 100 * 255) & 255;
        var integer = (val << 16) + (val << 8) + val;
        var string = integer.toString(16).toUpperCase();
        return "000000".substring(string.length) + string;
      };
      convert.rgb.gray = function(rgb) {
        var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
        return [val / 255 * 100];
      };
    }
  });

  // ../../../.yarn/cache/color-convert-npm-1.9.3-1fe690075e-ffa3190250.zip/node_modules/color-convert/route.js
  var require_route2 = __commonJS({
    "../../../.yarn/cache/color-convert-npm-1.9.3-1fe690075e-ffa3190250.zip/node_modules/color-convert/route.js"(exports2, module2) {
      var conversions = require_conversions2();
      function buildGraph() {
        var graph = {};
        var models = Object.keys(conversions);
        for (var len = models.length, i2 = 0; i2 < len; i2++) {
          graph[models[i2]] = {
            distance: -1,
            parent: null
          };
        }
        return graph;
      }
      function deriveBFS(fromModel) {
        var graph = buildGraph();
        var queue = [fromModel];
        graph[fromModel].distance = 0;
        while (queue.length) {
          var current = queue.pop();
          var adjacents = Object.keys(conversions[current]);
          for (var len = adjacents.length, i2 = 0; i2 < len; i2++) {
            var adjacent = adjacents[i2];
            var node = graph[adjacent];
            if (node.distance === -1) {
              node.distance = graph[current].distance + 1;
              node.parent = current;
              queue.unshift(adjacent);
            }
          }
        }
        return graph;
      }
      function link(from, to) {
        return function(args) {
          return to(from(args));
        };
      }
      function wrapConversion(toModel, graph) {
        var path = [graph[toModel].parent, toModel];
        var fn = conversions[graph[toModel].parent][toModel];
        var cur = graph[toModel].parent;
        while (graph[cur].parent) {
          path.unshift(graph[cur].parent);
          fn = link(conversions[graph[cur].parent][cur], fn);
          cur = graph[cur].parent;
        }
        fn.conversion = path;
        return fn;
      }
      module2.exports = function(fromModel) {
        var graph = deriveBFS(fromModel);
        var conversion = {};
        var models = Object.keys(graph);
        for (var len = models.length, i2 = 0; i2 < len; i2++) {
          var toModel = models[i2];
          var node = graph[toModel];
          if (node.parent === null) {
            continue;
          }
          conversion[toModel] = wrapConversion(toModel, graph);
        }
        return conversion;
      };
    }
  });

  // ../../../.yarn/cache/color-convert-npm-1.9.3-1fe690075e-ffa3190250.zip/node_modules/color-convert/index.js
  var require_color_convert2 = __commonJS({
    "../../../.yarn/cache/color-convert-npm-1.9.3-1fe690075e-ffa3190250.zip/node_modules/color-convert/index.js"(exports2, module2) {
      var conversions = require_conversions2();
      var route = require_route2();
      var convert = {};
      var models = Object.keys(conversions);
      function wrapRaw(fn) {
        var wrappedFn = function(args) {
          if (args === void 0 || args === null) {
            return args;
          }
          if (arguments.length > 1) {
            args = Array.prototype.slice.call(arguments);
          }
          return fn(args);
        };
        if ("conversion" in fn) {
          wrappedFn.conversion = fn.conversion;
        }
        return wrappedFn;
      }
      function wrapRounded(fn) {
        var wrappedFn = function(args) {
          if (args === void 0 || args === null) {
            return args;
          }
          if (arguments.length > 1) {
            args = Array.prototype.slice.call(arguments);
          }
          var result = fn(args);
          if (typeof result === "object") {
            for (var len = result.length, i2 = 0; i2 < len; i2++) {
              result[i2] = Math.round(result[i2]);
            }
          }
          return result;
        };
        if ("conversion" in fn) {
          wrappedFn.conversion = fn.conversion;
        }
        return wrappedFn;
      }
      models.forEach(function(fromModel) {
        convert[fromModel] = {};
        Object.defineProperty(convert[fromModel], "channels", { value: conversions[fromModel].channels });
        Object.defineProperty(convert[fromModel], "labels", { value: conversions[fromModel].labels });
        var routes = route(fromModel);
        var routeModels = Object.keys(routes);
        routeModels.forEach(function(toModel) {
          var fn = routes[toModel];
          convert[fromModel][toModel] = wrapRounded(fn);
          convert[fromModel][toModel].raw = wrapRaw(fn);
        });
      });
      module2.exports = convert;
    }
  });

  // ../../../.yarn/cache/ansi-styles-npm-3.2.1-8cb8107983-d85ade01c1.zip/node_modules/ansi-styles/index.js
  var require_ansi_styles2 = __commonJS({
    "../../../.yarn/cache/ansi-styles-npm-3.2.1-8cb8107983-d85ade01c1.zip/node_modules/ansi-styles/index.js"(exports2, module2) {
      "use strict";
      var colorConvert = require_color_convert2();
      var wrapAnsi16 = (fn, offset) => function() {
        const code = fn.apply(colorConvert, arguments);
        return `\x1B[${code + offset}m`;
      };
      var wrapAnsi256 = (fn, offset) => function() {
        const code = fn.apply(colorConvert, arguments);
        return `\x1B[${38 + offset};5;${code}m`;
      };
      var wrapAnsi16m = (fn, offset) => function() {
        const rgb = fn.apply(colorConvert, arguments);
        return `\x1B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;
      };
      function assembleStyles() {
        const codes = /* @__PURE__ */ new Map();
        const styles = {
          modifier: {
            reset: [0, 0],
            bold: [1, 22],
            dim: [2, 22],
            italic: [3, 23],
            underline: [4, 24],
            inverse: [7, 27],
            hidden: [8, 28],
            strikethrough: [9, 29]
          },
          color: {
            black: [30, 39],
            red: [31, 39],
            green: [32, 39],
            yellow: [33, 39],
            blue: [34, 39],
            magenta: [35, 39],
            cyan: [36, 39],
            white: [37, 39],
            gray: [90, 39],
            redBright: [91, 39],
            greenBright: [92, 39],
            yellowBright: [93, 39],
            blueBright: [94, 39],
            magentaBright: [95, 39],
            cyanBright: [96, 39],
            whiteBright: [97, 39]
          },
          bgColor: {
            bgBlack: [40, 49],
            bgRed: [41, 49],
            bgGreen: [42, 49],
            bgYellow: [43, 49],
            bgBlue: [44, 49],
            bgMagenta: [45, 49],
            bgCyan: [46, 49],
            bgWhite: [47, 49],
            bgBlackBright: [100, 49],
            bgRedBright: [101, 49],
            bgGreenBright: [102, 49],
            bgYellowBright: [103, 49],
            bgBlueBright: [104, 49],
            bgMagentaBright: [105, 49],
            bgCyanBright: [106, 49],
            bgWhiteBright: [107, 49]
          }
        };
        styles.color.grey = styles.color.gray;
        for (const groupName of Object.keys(styles)) {
          const group = styles[groupName];
          for (const styleName of Object.keys(group)) {
            const style = group[styleName];
            styles[styleName] = {
              open: `\x1B[${style[0]}m`,
              close: `\x1B[${style[1]}m`
            };
            group[styleName] = styles[styleName];
            codes.set(style[0], style[1]);
          }
          Object.defineProperty(styles, groupName, {
            value: group,
            enumerable: false
          });
          Object.defineProperty(styles, "codes", {
            value: codes,
            enumerable: false
          });
        }
        const ansi2ansi = (n) => n;
        const rgb2rgb = (r, g, b) => [r, g, b];
        styles.color.close = "\x1B[39m";
        styles.bgColor.close = "\x1B[49m";
        styles.color.ansi = {
          ansi: wrapAnsi16(ansi2ansi, 0)
        };
        styles.color.ansi256 = {
          ansi256: wrapAnsi256(ansi2ansi, 0)
        };
        styles.color.ansi16m = {
          rgb: wrapAnsi16m(rgb2rgb, 0)
        };
        styles.bgColor.ansi = {
          ansi: wrapAnsi16(ansi2ansi, 10)
        };
        styles.bgColor.ansi256 = {
          ansi256: wrapAnsi256(ansi2ansi, 10)
        };
        styles.bgColor.ansi16m = {
          rgb: wrapAnsi16m(rgb2rgb, 10)
        };
        for (let key2 of Object.keys(colorConvert)) {
          if (typeof colorConvert[key2] !== "object") {
            continue;
          }
          const suite = colorConvert[key2];
          if (key2 === "ansi16") {
            key2 = "ansi";
          }
          if ("ansi16" in suite) {
            styles.color.ansi[key2] = wrapAnsi16(suite.ansi16, 0);
            styles.bgColor.ansi[key2] = wrapAnsi16(suite.ansi16, 10);
          }
          if ("ansi256" in suite) {
            styles.color.ansi256[key2] = wrapAnsi256(suite.ansi256, 0);
            styles.bgColor.ansi256[key2] = wrapAnsi256(suite.ansi256, 10);
          }
          if ("rgb" in suite) {
            styles.color.ansi16m[key2] = wrapAnsi16m(suite.rgb, 0);
            styles.bgColor.ansi16m[key2] = wrapAnsi16m(suite.rgb, 10);
          }
        }
        return styles;
      }
      Object.defineProperty(module2, "exports", {
        enumerable: true,
        get: assembleStyles
      });
    }
  });

  // ../../../.yarn/cache/has-flag-npm-3.0.0-16ac11fe05-4a15638b45.zip/node_modules/has-flag/index.js
  var require_has_flag2 = __commonJS({
    "../../../.yarn/cache/has-flag-npm-3.0.0-16ac11fe05-4a15638b45.zip/node_modules/has-flag/index.js"(exports2, module2) {
      "use strict";
      module2.exports = (flag, argv) => {
        argv = argv || process.argv;
        const prefix2 = flag.startsWith("-") ? "" : flag.length === 1 ? "-" : "--";
        const pos = argv.indexOf(prefix2 + flag);
        const terminatorPos = argv.indexOf("--");
        return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
      };
    }
  });

  // ../../../.yarn/cache/supports-color-npm-5.5.0-183ac537bc-5f505c6fa3.zip/node_modules/supports-color/index.js
  var require_supports_color2 = __commonJS({
    "../../../.yarn/cache/supports-color-npm-5.5.0-183ac537bc-5f505c6fa3.zip/node_modules/supports-color/index.js"(exports2, module2) {
      "use strict";
      var os = __require("os");
      var hasFlag = require_has_flag2();
      var env = process.env;
      var forceColor2;
      if (hasFlag("no-color") || hasFlag("no-colors") || hasFlag("color=false")) {
        forceColor2 = false;
      } else if (hasFlag("color") || hasFlag("colors") || hasFlag("color=true") || hasFlag("color=always")) {
        forceColor2 = true;
      }
      if ("FORCE_COLOR" in env) {
        forceColor2 = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;
      }
      function translateLevel(level2) {
        if (level2 === 0) {
          return false;
        }
        return {
          level: level2,
          hasBasic: true,
          has256: level2 >= 2,
          has16m: level2 >= 3
        };
      }
      function supportsColor2(stream) {
        if (forceColor2 === false) {
          return 0;
        }
        if (hasFlag("color=16m") || hasFlag("color=full") || hasFlag("color=truecolor")) {
          return 3;
        }
        if (hasFlag("color=256")) {
          return 2;
        }
        if (stream && !stream.isTTY && forceColor2 !== true) {
          return 0;
        }
        const min = forceColor2 ? 1 : 0;
        if (process.platform === "win32") {
          const osRelease = os.release().split(".");
          if (Number(process.versions.node.split(".")[0]) >= 8 && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
            return Number(osRelease[2]) >= 14931 ? 3 : 2;
          }
          return 1;
        }
        if ("CI" in env) {
          if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI"].some((sign) => sign in env) || env.CI_NAME === "codeship") {
            return 1;
          }
          return min;
        }
        if ("TEAMCITY_VERSION" in env) {
          return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
        }
        if (env.COLORTERM === "truecolor") {
          return 3;
        }
        if ("TERM_PROGRAM" in env) {
          const version = parseInt((env.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
          switch (env.TERM_PROGRAM) {
            case "iTerm.app":
              return version >= 3 ? 3 : 2;
            case "Apple_Terminal":
              return 2;
          }
        }
        if (/-256(color)?$/i.test(env.TERM)) {
          return 2;
        }
        if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
          return 1;
        }
        if ("COLORTERM" in env) {
          return 1;
        }
        if (env.TERM === "dumb") {
          return min;
        }
        return min;
      }
      function getSupportLevel(stream) {
        const level2 = supportsColor2(stream);
        return translateLevel(level2);
      }
      module2.exports = {
        supportsColor: getSupportLevel,
        stdout: getSupportLevel(process.stdout),
        stderr: getSupportLevel(process.stderr)
      };
    }
  });

  // ../../../.yarn/cache/chalk-npm-2.4.2-3ea16dd91e-3d1d103433.zip/node_modules/chalk/templates.js
  var require_templates2 = __commonJS({
    "../../../.yarn/cache/chalk-npm-2.4.2-3ea16dd91e-3d1d103433.zip/node_modules/chalk/templates.js"(exports2, module2) {
      "use strict";
      var TEMPLATE_REGEX = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi;
      var STYLE_REGEX = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g;
      var STRING_REGEX = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/;
      var ESCAPE_REGEX = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi;
      var ESCAPES = /* @__PURE__ */ new Map([
        ["n", "\n"],
        ["r", "\r"],
        ["t", "	"],
        ["b", "\b"],
        ["f", "\f"],
        ["v", "\v"],
        ["0", "\0"],
        ["\\", "\\"],
        ["e", "\x1B"],
        ["a", "\x07"]
      ]);
      function unescape(c) {
        if (c[0] === "u" && c.length === 5 || c[0] === "x" && c.length === 3) {
          return String.fromCharCode(parseInt(c.slice(1), 16));
        }
        return ESCAPES.get(c) || c;
      }
      function parseArguments(name, args) {
        const results = [];
        const chunks = args.trim().split(/\s*,\s*/g);
        let matches;
        for (const chunk of chunks) {
          if (!isNaN(chunk)) {
            results.push(Number(chunk));
          } else if (matches = chunk.match(STRING_REGEX)) {
            results.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));
          } else {
            throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);
          }
        }
        return results;
      }
      function parseStyle(style) {
        STYLE_REGEX.lastIndex = 0;
        const results = [];
        let matches;
        while ((matches = STYLE_REGEX.exec(style)) !== null) {
          const name = matches[1];
          if (matches[2]) {
            const args = parseArguments(name, matches[2]);
            results.push([name].concat(args));
          } else {
            results.push([name]);
          }
        }
        return results;
      }
      function buildStyle(chalk, styles) {
        const enabled = {};
        for (const layer of styles) {
          for (const style of layer.styles) {
            enabled[style[0]] = layer.inverse ? null : style.slice(1);
          }
        }
        let current = chalk;
        for (const styleName of Object.keys(enabled)) {
          if (Array.isArray(enabled[styleName])) {
            if (!(styleName in current)) {
              throw new Error(`Unknown Chalk style: ${styleName}`);
            }
            if (enabled[styleName].length > 0) {
              current = current[styleName].apply(current, enabled[styleName]);
            } else {
              current = current[styleName];
            }
          }
        }
        return current;
      }
      module2.exports = (chalk, tmp) => {
        const styles = [];
        const chunks = [];
        let chunk = [];
        tmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {
          if (escapeChar) {
            chunk.push(unescape(escapeChar));
          } else if (style) {
            const str = chunk.join("");
            chunk = [];
            chunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));
            styles.push({ inverse, styles: parseStyle(style) });
          } else if (close) {
            if (styles.length === 0) {
              throw new Error("Found extraneous } in Chalk template literal");
            }
            chunks.push(buildStyle(chalk, styles)(chunk.join("")));
            chunk = [];
            styles.pop();
          } else {
            chunk.push(chr);
          }
        });
        chunks.push(chunk.join(""));
        if (styles.length > 0) {
          const errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? "" : "s"} (\`}\`)`;
          throw new Error(errMsg);
        }
        return chunks.join("");
      };
    }
  });

  // ../../../.yarn/cache/chalk-npm-2.4.2-3ea16dd91e-3d1d103433.zip/node_modules/chalk/index.js
  var require_chalk = __commonJS({
    "../../../.yarn/cache/chalk-npm-2.4.2-3ea16dd91e-3d1d103433.zip/node_modules/chalk/index.js"(exports2, module2) {
      "use strict";
      var escapeStringRegexp = require_escape_string_regexp2();
      var ansiStyles = require_ansi_styles2();
      var stdoutColor = require_supports_color2().stdout;
      var template = require_templates2();
      var isSimpleWindowsTerm = process.platform === "win32" && !(process.env.TERM || "").toLowerCase().startsWith("xterm");
      var levelMapping = ["ansi", "ansi", "ansi256", "ansi16m"];
      var skipModels = /* @__PURE__ */ new Set(["gray"]);
      var styles = /* @__PURE__ */ Object.create(null);
      function applyOptions(obj, options) {
        options = options || {};
        const scLevel = stdoutColor ? stdoutColor.level : 0;
        obj.level = options.level === void 0 ? scLevel : options.level;
        obj.enabled = "enabled" in options ? options.enabled : obj.level > 0;
      }
      function Chalk(options) {
        if (!this || !(this instanceof Chalk) || this.template) {
          const chalk = {};
          applyOptions(chalk, options);
          chalk.template = function() {
            const args = [].slice.call(arguments);
            return chalkTag.apply(null, [chalk.template].concat(args));
          };
          Object.setPrototypeOf(chalk, Chalk.prototype);
          Object.setPrototypeOf(chalk.template, chalk);
          chalk.template.constructor = Chalk;
          return chalk.template;
        }
        applyOptions(this, options);
      }
      if (isSimpleWindowsTerm) {
        ansiStyles.blue.open = "\x1B[94m";
      }
      for (const key2 of Object.keys(ansiStyles)) {
        ansiStyles[key2].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key2].close), "g");
        styles[key2] = {
          get() {
            const codes = ansiStyles[key2];
            return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key2);
          }
        };
      }
      styles.visible = {
        get() {
          return build.call(this, this._styles || [], true, "visible");
        }
      };
      ansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), "g");
      for (const model of Object.keys(ansiStyles.color.ansi)) {
        if (skipModels.has(model)) {
          continue;
        }
        styles[model] = {
          get() {
            const level2 = this.level;
            return function() {
              const open = ansiStyles.color[levelMapping[level2]][model].apply(null, arguments);
              const codes = {
                open,
                close: ansiStyles.color.close,
                closeRe: ansiStyles.color.closeRe
              };
              return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
            };
          }
        };
      }
      ansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), "g");
      for (const model of Object.keys(ansiStyles.bgColor.ansi)) {
        if (skipModels.has(model)) {
          continue;
        }
        const bgModel = "bg" + model[0].toUpperCase() + model.slice(1);
        styles[bgModel] = {
          get() {
            const level2 = this.level;
            return function() {
              const open = ansiStyles.bgColor[levelMapping[level2]][model].apply(null, arguments);
              const codes = {
                open,
                close: ansiStyles.bgColor.close,
                closeRe: ansiStyles.bgColor.closeRe
              };
              return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
            };
          }
        };
      }
      var proto = Object.defineProperties(() => {
      }, styles);
      function build(_styles, _empty, key2) {
        const builder = function() {
          return applyStyle.apply(builder, arguments);
        };
        builder._styles = _styles;
        builder._empty = _empty;
        const self2 = this;
        Object.defineProperty(builder, "level", {
          enumerable: true,
          get() {
            return self2.level;
          },
          set(level2) {
            self2.level = level2;
          }
        });
        Object.defineProperty(builder, "enabled", {
          enumerable: true,
          get() {
            return self2.enabled;
          },
          set(enabled) {
            self2.enabled = enabled;
          }
        });
        builder.hasGrey = this.hasGrey || key2 === "gray" || key2 === "grey";
        builder.__proto__ = proto;
        return builder;
      }
      function applyStyle() {
        const args = arguments;
        const argsLen = args.length;
        let str = String(arguments[0]);
        if (argsLen === 0) {
          return "";
        }
        if (argsLen > 1) {
          for (let a = 1; a < argsLen; a++) {
            str += " " + args[a];
          }
        }
        if (!this.enabled || this.level <= 0 || !str) {
          return this._empty ? "" : str;
        }
        const originalDim = ansiStyles.dim.open;
        if (isSimpleWindowsTerm && this.hasGrey) {
          ansiStyles.dim.open = "";
        }
        for (const code of this._styles.slice().reverse()) {
          str = code.open + str.replace(code.closeRe, code.open) + code.close;
          str = str.replace(/\r?\n/g, `${code.close}$&${code.open}`);
        }
        ansiStyles.dim.open = originalDim;
        return str;
      }
      function chalkTag(chalk, strings) {
        if (!Array.isArray(strings)) {
          return [].slice.call(arguments, 1).join(" ");
        }
        const args = [].slice.call(arguments, 2);
        const parts = [strings.raw[0]];
        for (let i2 = 1; i2 < strings.length; i2++) {
          parts.push(String(args[i2 - 1]).replace(/[{}\\]/g, "\\$&"));
          parts.push(String(strings.raw[i2]));
        }
        return template(chalk, parts.join(""));
      }
      Object.defineProperties(Chalk.prototype, styles);
      module2.exports = Chalk();
      module2.exports.supportsColor = stdoutColor;
      module2.exports.default = module2.exports;
    }
  });

  // ../../../.yarn/cache/@babel-highlight-npm-7.23.4-2a9f2d2538-62fef9b5bc.zip/node_modules/@babel/highlight/lib/index.js
  var require_lib2 = __commonJS({
    "../../../.yarn/cache/@babel-highlight-npm-7.23.4-2a9f2d2538-62fef9b5bc.zip/node_modules/@babel/highlight/lib/index.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.default = highlight;
      exports2.shouldHighlight = shouldHighlight;
      var _jsTokens = require_js_tokens();
      var _helperValidatorIdentifier = require_lib();
      var _chalk = _interopRequireWildcard(require_chalk(), true);
      function _getRequireWildcardCache(e) {
        if ("function" != typeof WeakMap)
          return null;
        var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(e2) {
          return e2 ? t : r;
        })(e);
      }
      function _interopRequireWildcard(e, r) {
        if (!r && e && e.__esModule)
          return e;
        if (null === e || "object" != typeof e && "function" != typeof e)
          return { default: e };
        var t = _getRequireWildcardCache(r);
        if (t && t.has(e))
          return t.get(e);
        var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var u in e)
          if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
            var i2 = a ? Object.getOwnPropertyDescriptor(e, u) : null;
            i2 && (i2.get || i2.set) ? Object.defineProperty(n, u, i2) : n[u] = e[u];
          }
        return n.default = e, t && t.set(e, n), n;
      }
      var sometimesKeywords = /* @__PURE__ */ new Set(["as", "async", "from", "get", "of", "set"]);
      function getDefs(chalk) {
        return {
          keyword: chalk.cyan,
          capitalized: chalk.yellow,
          jsxIdentifier: chalk.yellow,
          punctuator: chalk.yellow,
          number: chalk.magenta,
          string: chalk.green,
          regex: chalk.magenta,
          comment: chalk.grey,
          invalid: chalk.white.bgRed.bold
        };
      }
      var NEWLINE = /\r\n|[\n\r\u2028\u2029]/;
      var BRACKET = /^[()[\]{}]$/;
      var tokenize;
      {
        const JSX_TAG = /^[a-z][\w-]*$/i;
        const getTokenType = function(token, offset, text) {
          if (token.type === "name") {
            if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {
              return "keyword";
            }
            if (JSX_TAG.test(token.value) && (text[offset - 1] === "<" || text.slice(offset - 2, offset) == "</")) {
              return "jsxIdentifier";
            }
            if (token.value[0] !== token.value[0].toLowerCase()) {
              return "capitalized";
            }
          }
          if (token.type === "punctuator" && BRACKET.test(token.value)) {
            return "bracket";
          }
          if (token.type === "invalid" && (token.value === "@" || token.value === "#")) {
            return "punctuator";
          }
          return token.type;
        };
        tokenize = function* (text) {
          let match;
          while (match = _jsTokens.default.exec(text)) {
            const token = _jsTokens.matchToToken(match);
            yield {
              type: getTokenType(token, match.index, text),
              value: token.value
            };
          }
        };
      }
      function highlightTokens(defs, text) {
        let highlighted = "";
        for (const {
          type: type2,
          value
        } of tokenize(text)) {
          const colorize = defs[type2];
          if (colorize) {
            highlighted += value.split(NEWLINE).map((str) => colorize(str)).join("\n");
          } else {
            highlighted += value;
          }
        }
        return highlighted;
      }
      function shouldHighlight(options) {
        return _chalk.default.level > 0 || options.forceColor;
      }
      var chalkWithForcedColor = void 0;
      function getChalk(forceColor2) {
        if (forceColor2) {
          var _chalkWithForcedColor;
          (_chalkWithForcedColor = chalkWithForcedColor) != null ? _chalkWithForcedColor : chalkWithForcedColor = new _chalk.default.constructor({
            enabled: true,
            level: 1
          });
          return chalkWithForcedColor;
        }
        return _chalk.default;
      }
      {
        exports2.getChalk = (options) => getChalk(options.forceColor);
      }
      function highlight(code, options = {}) {
        if (code !== "" && shouldHighlight(options)) {
          const defs = getDefs(getChalk(options.forceColor));
          return highlightTokens(defs, code);
        } else {
          return code;
        }
      }
    }
  });

  // ../../../.yarn/cache/@babel-code-frame-npm-7.23.5-cb10d08de6-44e58529c9.zip/node_modules/@babel/code-frame/lib/index.js
  var require_lib3 = __commonJS({
    "../../../.yarn/cache/@babel-code-frame-npm-7.23.5-cb10d08de6-44e58529c9.zip/node_modules/@babel/code-frame/lib/index.js"(exports2) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.codeFrameColumns = codeFrameColumns2;
      exports2.default = _default;
      var _highlight = require_lib2();
      var _chalk = _interopRequireWildcard(require_chalk(), true);
      function _getRequireWildcardCache(e) {
        if ("function" != typeof WeakMap)
          return null;
        var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
        return (_getRequireWildcardCache = function(e2) {
          return e2 ? t : r;
        })(e);
      }
      function _interopRequireWildcard(e, r) {
        if (!r && e && e.__esModule)
          return e;
        if (null === e || "object" != typeof e && "function" != typeof e)
          return { default: e };
        var t = _getRequireWildcardCache(r);
        if (t && t.has(e))
          return t.get(e);
        var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var u in e)
          if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
            var i2 = a ? Object.getOwnPropertyDescriptor(e, u) : null;
            i2 && (i2.get || i2.set) ? Object.defineProperty(n, u, i2) : n[u] = e[u];
          }
        return n.default = e, t && t.set(e, n), n;
      }
      var chalkWithForcedColor = void 0;
      function getChalk(forceColor2) {
        if (forceColor2) {
          var _chalkWithForcedColor;
          (_chalkWithForcedColor = chalkWithForcedColor) != null ? _chalkWithForcedColor : chalkWithForcedColor = new _chalk.default.constructor({
            enabled: true,
            level: 1
          });
          return chalkWithForcedColor;
        }
        return _chalk.default;
      }
      var deprecationWarningShown = false;
      function getDefs(chalk) {
        return {
          gutter: chalk.grey,
          marker: chalk.red.bold,
          message: chalk.red.bold
        };
      }
      var NEWLINE = /\r\n|[\n\r\u2028\u2029]/;
      function getMarkerLines(loc, source, opts) {
        const startLoc = Object.assign({
          column: 0,
          line: -1
        }, loc.start);
        const endLoc = Object.assign({}, startLoc, loc.end);
        const {
          linesAbove = 2,
          linesBelow = 3
        } = opts || {};
        const startLine = startLoc.line;
        const startColumn = startLoc.column;
        const endLine = endLoc.line;
        const endColumn = endLoc.column;
        let start = Math.max(startLine - (linesAbove + 1), 0);
        let end = Math.min(source.length, endLine + linesBelow);
        if (startLine === -1) {
          start = 0;
        }
        if (endLine === -1) {
          end = source.length;
        }
        const lineDiff = endLine - startLine;
        const markerLines = {};
        if (lineDiff) {
          for (let i2 = 0; i2 <= lineDiff; i2++) {
            const lineNumber = i2 + startLine;
            if (!startColumn) {
              markerLines[lineNumber] = true;
            } else if (i2 === 0) {
              const sourceLength = source[lineNumber - 1].length;
              markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];
            } else if (i2 === lineDiff) {
              markerLines[lineNumber] = [0, endColumn];
            } else {
              const sourceLength = source[lineNumber - i2].length;
              markerLines[lineNumber] = [0, sourceLength];
            }
          }
        } else {
          if (startColumn === endColumn) {
            if (startColumn) {
              markerLines[startLine] = [startColumn, 0];
            } else {
              markerLines[startLine] = true;
            }
          } else {
            markerLines[startLine] = [startColumn, endColumn - startColumn];
          }
        }
        return {
          start,
          end,
          markerLines
        };
      }
      function codeFrameColumns2(rawLines, loc, opts = {}) {
        const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);
        const chalk = getChalk(opts.forceColor);
        const defs = getDefs(chalk);
        const maybeHighlight = (chalkFn, string) => {
          return highlighted ? chalkFn(string) : string;
        };
        const lines = rawLines.split(NEWLINE);
        const {
          start,
          end,
          markerLines
        } = getMarkerLines(loc, lines, opts);
        const hasColumns = loc.start && typeof loc.start.column === "number";
        const numberMaxWidth = String(end).length;
        const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;
        let frame = highlightedLines.split(NEWLINE, end).slice(start, end).map((line, index) => {
          const number = start + 1 + index;
          const paddedNumber = ` ${number}`.slice(-numberMaxWidth);
          const gutter = ` ${paddedNumber} |`;
          const hasMarker = markerLines[number];
          const lastMarkerLine = !markerLines[number + 1];
          if (hasMarker) {
            let markerLine = "";
            if (Array.isArray(hasMarker)) {
              const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\t]/g, " ");
              const numberOfMarkers = hasMarker[1] || 1;
              markerLine = ["\n ", maybeHighlight(defs.gutter, gutter.replace(/\d/g, " ")), " ", markerSpacing, maybeHighlight(defs.marker, "^").repeat(numberOfMarkers)].join("");
              if (lastMarkerLine && opts.message) {
                markerLine += " " + maybeHighlight(defs.message, opts.message);
              }
            }
            return [maybeHighlight(defs.marker, ">"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : "", markerLine].join("");
          } else {
            return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : ""}`;
          }
        }).join("\n");
        if (opts.message && !hasColumns) {
          frame = `${" ".repeat(numberMaxWidth + 1)}${opts.message}
${frame}`;
        }
        if (highlighted) {
          return chalk.reset(frame);
        } else {
          return frame;
        }
      }
      function _default(rawLines, lineNumber, colNumber, opts = {}) {
        if (!deprecationWarningShown) {
          deprecationWarningShown = true;
          const message = "Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";
          if (process.emitWarning) {
            process.emitWarning(message, "DeprecationWarning");
          } else {
            const deprecationError = new Error(message);
            deprecationError.name = "DeprecationWarning";
            console.warn(new Error(message));
          }
        }
        colNumber = Math.max(colNumber, 0);
        const location = {
          start: {
            column: colNumber,
            line: lineNumber
          }
        };
        return codeFrameColumns2(rawLines, location, opts);
      }
    }
  });

  // ../../../.yarn/cache/supports-color-npm-8.1.1-289e937149-157b534df8.zip/node_modules/supports-color/index.js
  var require_supports_color3 = __commonJS({
    "../../../.yarn/cache/supports-color-npm-8.1.1-289e937149-157b534df8.zip/node_modules/supports-color/index.js"(exports2, module2) {
      "use strict";
      var os = __require("os");
      var tty = __require("tty");
      var hasFlag = require_has_flag();
      var { env } = process;
      var flagForceColor;
      if (hasFlag("no-color") || hasFlag("no-colors") || hasFlag("color=false") || hasFlag("color=never")) {
        flagForceColor = 0;
      } else if (hasFlag("color") || hasFlag("colors") || hasFlag("color=true") || hasFlag("color=always")) {
        flagForceColor = 1;
      }
      function envForceColor() {
        if ("FORCE_COLOR" in env) {
          if (env.FORCE_COLOR === "true") {
            return 1;
          }
          if (env.FORCE_COLOR === "false") {
            return 0;
          }
          return env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);
        }
      }
      function translateLevel(level2) {
        if (level2 === 0) {
          return false;
        }
        return {
          level: level2,
          hasBasic: true,
          has256: level2 >= 2,
          has16m: level2 >= 3
        };
      }
      function supportsColor2(haveStream, { streamIsTTY, sniffFlags = true } = {}) {
        const noFlagForceColor = envForceColor();
        if (noFlagForceColor !== void 0) {
          flagForceColor = noFlagForceColor;
        }
        const forceColor2 = sniffFlags ? flagForceColor : noFlagForceColor;
        if (forceColor2 === 0) {
          return 0;
        }
        if (sniffFlags) {
          if (hasFlag("color=16m") || hasFlag("color=full") || hasFlag("color=truecolor")) {
            return 3;
          }
          if (hasFlag("color=256")) {
            return 2;
          }
        }
        if (haveStream && !streamIsTTY && forceColor2 === void 0) {
          return 0;
        }
        const min = forceColor2 || 0;
        if (env.TERM === "dumb") {
          return min;
        }
        if (process.platform === "win32") {
          const osRelease = os.release().split(".");
          if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
            return Number(osRelease[2]) >= 14931 ? 3 : 2;
          }
          return 1;
        }
        if ("CI" in env) {
          if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "GITHUB_ACTIONS", "BUILDKITE", "DRONE"].some((sign) => sign in env) || env.CI_NAME === "codeship") {
            return 1;
          }
          return min;
        }
        if ("TEAMCITY_VERSION" in env) {
          return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
        }
        if (env.COLORTERM === "truecolor") {
          return 3;
        }
        if ("TERM_PROGRAM" in env) {
          const version = Number.parseInt((env.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
          switch (env.TERM_PROGRAM) {
            case "iTerm.app":
              return version >= 3 ? 3 : 2;
            case "Apple_Terminal":
              return 2;
          }
        }
        if (/-256(color)?$/i.test(env.TERM)) {
          return 2;
        }
        if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
          return 1;
        }
        if ("COLORTERM" in env) {
          return 1;
        }
        return min;
      }
      function getSupportLevel(stream, options = {}) {
        const level2 = supportsColor2(stream, {
          streamIsTTY: stream && stream.isTTY,
          ...options
        });
        return translateLevel(level2);
      }
      module2.exports = {
        supportsColor: getSupportLevel,
        stdout: getSupportLevel({ isTTY: tty.isatty(1) }),
        stderr: getSupportLevel({ isTTY: tty.isatty(2) })
      };
    }
  });

  // ../../../code-new/code-service-worker/src/service.worker.content.js
  var require_service_worker_content = __commonJS({
    "../../../code-new/code-service-worker/src/service.worker.content.js"(exports2, module2) {
      "use strict";
      var hook;
      module2.exports.getContent = () => {
        if (typeof hook === `undefined`)
          hook = __require("zlib").brotliDecompressSync(Buffer.from("", "base64")).toString();
        return hook;
      };
    }
  });

  // src/index.ts
  var src_exports = {};
  __export(src_exports, {
    ServiceBuildCommand: () => ServiceBuildCommand,
    ServiceDevCommand: () => ServiceDevCommand,
    default: () => plugin
  });

  // src/service-build.command.tsx
  var import_cli = __require("@yarnpkg/cli");
  var import_core3 = __require("@yarnpkg/core");
  var import_core4 = __require("@yarnpkg/core");
  var import_core5 = __require("@yarnpkg/core");
  var import_core6 = __require("@yarnpkg/core");
  var import_react9 = __toESM(require_react());
  var import_clipanion = __require("clipanion");

  // ../../../.yarn/__virtual__/@atls-cli-ui-error-info-component-new-virtual-385173703d/1/cli-new/cli-ui-error-info-component/src/error-info.component.tsx
  var import_react4 = __toESM(require_react());
  var import_ink5 = __toESM(require_build2());
  var import_ink6 = __toESM(require_build2());

  // ../../../.yarn/__virtual__/@atls-cli-ui-stack-trace-component-new-virtual-17dc7948f2/1/cli-new/cli-ui-stack-trace-component/src/stack-trace.component.tsx
  var import_stack_trace = __toESM(require_dist2());
  var import_react2 = __toESM(require_react());
  var import_ink2 = __toESM(require_build2());
  var import_ink3 = __toESM(require_build2());
  var import_ink4 = __toESM(require_build2());
  var import_react3 = __toESM(require_react());

  // ../../../.yarn/__virtual__/@atls-cli-ui-source-component-new-virtual-64a83b4463/1/cli-new/cli-ui-source-component/src/source-preview.component.tsx
  var import_react = __toESM(require_react());
  var import_ink = __toESM(require_build2());

  // ../../../.yarn/__virtual__/@atls-cli-ui-source-component-new-virtual-64a83b4463/1/cli-new/cli-ui-source-component/src/utils.ts
  var import_code_frame = __toESM(require_lib3());
  var import_supports_color = __toESM(require_supports_color3());
  var { level } = (0, import_supports_color.supportsColor)({ isTTY: true });
  var forceColor = level >= 1;
  var codeFrameSource = (source, line, column) => (0, import_code_frame.codeFrameColumns)(source, { start: { column, line } }, { highlightCode: forceColor, forceColor });

  // ../../../.yarn/__virtual__/@atls-cli-ui-source-component-new-virtual-64a83b4463/1/cli-new/cli-ui-source-component/src/source-preview.component.tsx
  var SourcePreview = ({ children, line, column }) => /* @__PURE__ */ import_react.default.createElement(import_ink.Text, null, codeFrameSource(children, line, column));

  // ../../../.yarn/__virtual__/@atls-cli-ui-stack-trace-component-new-virtual-17dc7948f2/1/cli-new/cli-ui-stack-trace-component/src/utils.ts
  var import_fs = __require("fs");
  var getFrameSource = (frame) => {
    if (frame.sourceMap) {
      return frame.sourceMap.payload.sourcesContent[0];
    }
    if (frame.file) {
      try {
        return (0, import_fs.readFileSync)(frame.file, "utf-8");
      } catch (error) {
      }
    }
    return null;
  };

  // ../../../.yarn/__virtual__/@atls-cli-ui-stack-trace-component-new-virtual-17dc7948f2/1/cli-new/cli-ui-stack-trace-component/src/stack-trace.component.tsx
  var StackTrace = ({ children }) => {
    const stack = (0, import_react3.useMemo)(() => (0, import_stack_trace.parse)(children), [children]);
    const source = (0, import_react3.useMemo)(() => stack?.topFrame ? getFrameSource(stack.topFrame) : null, [stack]);
    if (!stack) {
      return null;
    }
    return /* @__PURE__ */ import_react2.default.createElement(import_ink3.Box, { flexDirection: "column", flexGrow: 1 }, source && stack?.topFrame?.line && /* @__PURE__ */ import_react2.default.createElement(import_ink3.Box, null, /* @__PURE__ */ import_react2.default.createElement(SourcePreview, { line: stack?.topFrame?.line, column: stack?.topFrame?.column }, source)), stack.frames.map((frame, index) => /* @__PURE__ */ import_react2.default.createElement(import_ink3.Box, { key: `${frame.file}-${frame.line}-${frame.column}-${index}`, justifyContent: "flex-end" }, /* @__PURE__ */ import_react2.default.createElement(import_ink2.Text, null, frame.function), /* @__PURE__ */ import_react2.default.createElement(import_ink4.Spacer, null), /* @__PURE__ */ import_react2.default.createElement(import_ink2.Text, { color: "gray" }, frame.file), frame.line && /* @__PURE__ */ import_react2.default.createElement(import_ink2.Text, { color: "gray" }, ":", frame.line), frame.column && /* @__PURE__ */ import_react2.default.createElement(import_ink2.Text, { color: "gray" }, ":", frame.column))));
  };

  // ../../../.yarn/__virtual__/@atls-cli-ui-error-info-component-new-virtual-385173703d/1/cli-new/cli-ui-error-info-component/src/error-info.component.tsx
  var ErrorMessage = ({ children }) => {
    if (!children) {
      return null;
    }
    return /* @__PURE__ */ import_react4.default.createElement(import_ink5.Box, { marginBottom: 1 }, /* @__PURE__ */ import_react4.default.createElement(import_ink6.Text, { color: "red", bold: true }, children));
  };
  var ErrorInfo = ({ error }) => /* @__PURE__ */ import_react4.default.createElement(import_ink5.Box, { flexDirection: "column" }, /* @__PURE__ */ import_react4.default.createElement(ErrorMessage, null, error.message), error.stack && /* @__PURE__ */ import_react4.default.createElement(import_ink5.Box, null, /* @__PURE__ */ import_react4.default.createElement(StackTrace, null, error.stack)));

  // ../../../.yarn/__virtual__/@atls-cli-ui-log-record-component-new-virtual-7ae6da56d1/1/cli-new/cli-ui-log-record-component/src/log-message.component.tsx
  var import_react5 = __toESM(require_react());
  var import_ink7 = __toESM(require_build2());
  var getMessage = (body) => {
    if (typeof body === "string") {
      return body;
    }
    if (typeof body.message === "string") {
      return body.message;
    }
    if (body.stack) {
      return "";
    }
    return JSON.stringify(body);
  };
  var LogMessage = ({ children }) => /* @__PURE__ */ import_react5.default.createElement(import_ink7.Text, null, getMessage(children));

  // ../../../.yarn/__virtual__/@atls-cli-ui-log-record-component-new-virtual-7ae6da56d1/1/cli-new/cli-ui-log-record-component/src/log-namespace.component.tsx
  var import_react6 = __toESM(require_react());
  var import_ink8 = __toESM(require_build2());
  var LogNamespace = ({ children }) => /* @__PURE__ */ import_react6.default.createElement(import_ink8.Text, { color: "#d75f00" }, children);

  // ../../../.yarn/__virtual__/@atls-cli-ui-log-record-component-new-virtual-7ae6da56d1/1/cli-new/cli-ui-log-record-component/src/log-record.component.tsx
  var import_react8 = __toESM(require_react());
  var import_ink10 = __toESM(require_build2());

  // ../../../.yarn/__virtual__/@atls-cli-ui-log-record-component-new-virtual-7ae6da56d1/1/cli-new/cli-ui-log-record-component/src/log-body.component.tsx
  var import_react7 = __toESM(require_react());
  var import_ink9 = __toESM(require_build2());
  var LogBody = ({ children }) => {
    if (typeof children === "string") {
      return null;
    }
    if (children.stack) {
      return /* @__PURE__ */ import_react7.default.createElement(import_ink9.Box, { paddingBottom: 1 }, /* @__PURE__ */ import_react7.default.createElement(StackTrace, null, children.stack));
    }
    return null;
  };

  // ../../../.yarn/__virtual__/@atls-cli-ui-log-record-component-new-virtual-7ae6da56d1/1/cli-new/cli-ui-log-record-component/src/log-record.component.tsx
  var LogRecord = ({ severityText = "TRACE", name, body }) => /* @__PURE__ */ import_react8.default.createElement(import_ink10.Box, { flexDirection: "column" }, /* @__PURE__ */ import_react8.default.createElement(import_ink10.Box, { flexDirection: "row" }, /* @__PURE__ */ import_react8.default.createElement(import_ink10.Box, { flexGrow: 1 }, /* @__PURE__ */ import_react8.default.createElement(import_ink10.Box, { paddingRight: 1 }, name && /* @__PURE__ */ import_react8.default.createElement(LogNamespace, null, name)), /* @__PURE__ */ import_react8.default.createElement(import_ink10.Box, null, /* @__PURE__ */ import_react8.default.createElement(LogMessage, null, body)))), /* @__PURE__ */ import_react8.default.createElement(LogBody, null, body));

  // ../../../code-new/code-worker-utils/src/eval.worker.ts
  var import_node_path = __require("node:path");
  var import_node_worker_threads = __require("node:worker_threads");
  var EvalWorker = class {
    static async run(content, workerData) {
      return new Promise((resolve, reject) => {
        const pnpPath = process.versions.pnp ? __require("module").findPnpApi(__filename).resolveRequest("pnpapi", null) : (0, import_node_path.join)(process.cwd(), ".pnp.cjs");
        const worker = new import_node_worker_threads.Worker(content, {
          eval: true,
          execArgv: ["--require", pnpPath, ...process.execArgv],
          workerData
        });
        const exitHandler = (code) => {
          if (code !== 0)
            reject(new Error(`Worker stopped with exit code ${code}`));
        };
        worker.once("message", (result) => {
          worker.off("error", reject);
          worker.off("exit", exitHandler);
          resolve(result);
        });
        worker.once("error", reject);
        worker.once("exit", exitHandler);
      });
    }
    static async watch(content, workerData, onMessage) {
      return new Promise((resolve, reject) => {
        const pnpPath = process.versions.pnp ? __require("module").findPnpApi(__filename).resolveRequest("pnpapi", null) : (0, import_node_path.join)(process.cwd(), ".pnp.cjs");
        const worker = new import_node_worker_threads.Worker(content, {
          eval: true,
          execArgv: ["--require", pnpPath, ...process.execArgv],
          workerData
        });
        const exitHandler = (code) => {
          if (code !== 0) {
            reject(new Error(`Worker stopped with exit code ${code}`));
          } else {
            resolve(null);
          }
        };
        worker.on("message", onMessage);
        worker.once("error", reject);
        worker.once("exit", exitHandler);
      });
    }
  };

  // ../../../code-new/code-service-worker/src/service.worker.ts
  var import_service_worker = __toESM(require_service_worker_content());
  var ServiceWorker = class {
    constructor(cwd, rootCwd) {
      this.cwd = cwd;
      this.rootCwd = rootCwd;
    }
    async run() {
      process.chdir(this.rootCwd);
      return EvalWorker.run((0, import_service_worker.getContent)(), {
        cwd: this.cwd,
        environment: "production"
      });
    }
    async watch(onMessage) {
      process.chdir(this.rootCwd);
      return EvalWorker.watch(
        (0, import_service_worker.getContent)(),
        {
          environment: "development",
          cwd: this.cwd
        },
        onMessage
      );
    }
  };

  // ../run-utils-new/src/spinner.progress.ts
  var import_core = __require("@yarnpkg/core");
  var import_core2 = __require("@yarnpkg/core");
  var _SpinnerProgress = class {
    constructor(stdout, configuration) {
      this.stdout = stdout;
      this.configuration = configuration;
      this.running = false;
      this.position = 0;
    }
    start() {
      if (this.stdout.isTTY) {
        this.running = true;
        this.write();
        this.tick();
      }
    }
    end() {
      if (this.stdout.isTTY && this.running) {
        this.running = false;
        this.clear(true);
      }
    }
    tick() {
      setTimeout(() => {
        if (this.running) {
          this.clear();
          this.write();
          this.position = this.position === _SpinnerProgress.PROGRESS_FRAMES.length - 1 ? 0 : this.position + 1;
          this.tick();
        }
      }, _SpinnerProgress.PROGRESS_INTERVAL);
    }
    write() {
      const spinner = _SpinnerProgress.PROGRESS_FRAMES[this.position];
      const name = import_core2.formatUtils.pretty(
        this.configuration,
        `YN${import_core.MessageName.UNNAMED.toString(10).padStart(4, "0")}`,
        "gray"
      );
      this.stdout.write(
        `${import_core2.formatUtils.pretty(this.configuration, "\u27A4", "blueBright")} ${name}: \u2502 ${spinner}
`
      );
    }
    clear(complete = false) {
      this.stdout.write(`\x1B[${0}A`);
      if (complete) {
        this.stdout.write("\x1B[0J");
      }
    }
  };
  var SpinnerProgress = _SpinnerProgress;
  SpinnerProgress.PROGRESS_FRAMES = ["\u280B", "\u2819", "\u2839", "\u2838", "\u283C", "\u2834", "\u2826", "\u2827", "\u2807", "\u280F"];
  SpinnerProgress.PROGRESS_INTERVAL = 90;

  // ../../../cli-new/cli-ui-renderer/src/renderer.ts
  var import_reconciler = __toESM(require_reconciler());
  var import_renderer = __toESM(require_renderer());
  var import_dom = __toESM(require_dom());
  var renderStatic = (target, terminalWidth = process.stdout.columns || 80) => {
    const rootNode = (0, import_dom.createNode)("ink-root");
    const container = import_reconciler.default.createContainer(rootNode, false, false);
    import_reconciler.default.updateContainer(target, container, null);
    const { output } = (0, import_renderer.default)(rootNode, terminalWidth);
    return output;
  };

  // src/service-build.command.tsx
  var ServiceBuildCommand = class extends import_cli.BaseCommand {
    constructor() {
      super(...arguments);
      this.showWarnings = import_clipanion.Option.Boolean("-w,--show-warnings", false);
    }
    async execute() {
      const configuration = await import_core3.Configuration.find(this.context.cwd, this.context.plugins);
      const { project } = await import_core6.Project.find(configuration, this.context.cwd);
      const commandReport = await import_core4.StreamReport.start(
        {
          stdout: this.context.stdout,
          configuration
        },
        async (report) => {
          await report.startTimerPromise("Service build", async () => {
            const progress = new SpinnerProgress(this.context.stdout, configuration);
            try {
              progress.start();
              const { errors, warnings } = await new ServiceWorker(
                this.context.cwd,
                project.cwd
              ).run();
              progress.end();
              if (this.showWarnings) {
                warnings.forEach((warning) => {
                  renderStatic(
                    /* @__PURE__ */ import_react9.default.createElement(LogRecord, { name: "webpack", body: warning }),
                    process.stdout.columns - 12
                  ).split("\n").forEach((line) => {
                    report.reportWarning(import_core5.MessageName.UNNAMED, line);
                  });
                });
              }
              errors.forEach((error) => {
                renderStatic(/* @__PURE__ */ import_react9.default.createElement(LogRecord, { name: "webpack", body: error }), process.stdout.columns - 12).split("\n").forEach((line) => {
                  report.reportError(import_core5.MessageName.UNNAMED, line);
                });
              });
            } catch (error) {
              progress.end();
              renderStatic(/* @__PURE__ */ import_react9.default.createElement(ErrorInfo, { error }), process.stdout.columns - 12).split("\n").forEach((line) => {
                report.reportError(import_core5.MessageName.UNNAMED, line);
              });
            }
          });
        }
      );
      return commandReport.exitCode();
    }
  };
  ServiceBuildCommand.paths = [["service", "build"]];

  // src/service-dev.command.tsx
  var import_cli2 = __require("@yarnpkg/cli");
  var import_core7 = __require("@yarnpkg/core");
  var import_core8 = __require("@yarnpkg/core");
  var import_core9 = __require("@yarnpkg/core");
  var import_core10 = __require("@yarnpkg/core");
  var import_react10 = __toESM(require_react());
  var import_clipanion2 = __require("clipanion");
  var ServiceDevCommand = class extends import_cli2.BaseCommand {
    constructor() {
      super(...arguments);
      this.showWarnings = import_clipanion2.Option.Boolean("-w,--show-warnings", false);
    }
    async execute() {
      const configuration = await import_core7.Configuration.find(this.context.cwd, this.context.plugins);
      const { project } = await import_core10.Project.find(configuration, this.context.cwd);
      const commandReport = await import_core8.StreamReport.start(
        {
          stdout: this.context.stdout,
          configuration
        },
        async (report) => {
          await report.startTimerPromise("Service Development", async () => {
            const progress = new SpinnerProgress(this.context.stdout, configuration);
            progress.start();
            try {
              await new ServiceWorker(this.context.cwd, project.cwd).watch((logRecord) => {
                progress.end();
                renderStatic(/* @__PURE__ */ import_react10.default.createElement(LogRecord, { name: "webpack", ...logRecord }), process.stdout.columns - 12).split("\n").forEach((line) => {
                  if (logRecord.severityText === "ERROR") {
                    report.reportError(import_core9.MessageName.UNNAMED, line);
                  } else if (logRecord.severityText === "WARN") {
                    if (this.showWarnings) {
                      report.reportWarning(import_core9.MessageName.UNNAMED, line);
                    }
                  } else {
                    report.reportInfo(import_core9.MessageName.UNNAMED, line);
                  }
                });
              });
            } catch (error) {
              progress.end();
              renderStatic(/* @__PURE__ */ import_react10.default.createElement(ErrorInfo, { error }), process.stdout.columns - 12).split("\n").forEach((line) => {
                report.reportError(import_core9.MessageName.UNNAMED, line);
              });
            }
          });
        }
      );
      return commandReport.exitCode();
    }
  };
  ServiceDevCommand.paths = [["service", "dev"]];

  // src/service.plugin.ts
  var plugin = {
    commands: [ServiceBuildCommand, ServiceDevCommand]
  };
  return __toCommonJS(src_exports);
})();
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/**
 * @license React
 * react-debug-tools.production.min.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v0.18.0
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v0.18.0
 * scheduler-tracing.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v0.18.0
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v0.18.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v0.24.0
 * react-reconciler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v0.24.0
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v16.14.0
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v16.14.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
return plugin;
}
};
